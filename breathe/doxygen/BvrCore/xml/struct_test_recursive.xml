<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="struct_test_recursive" kind="struct" language="C++" prot="public">
    <compoundname>TestRecursive</compoundname>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_test_recursive_1a7370127244dd4ca766417554e9cdf874" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int TestRecursive::a</definition>
        <argsstring></argsstring>
        <name>a</name>
        <qualifiedname>TestRecursive::a</qualifiedname>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/Tests/MetaTests/CommonTests.hpp" line="25" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/Tests/MetaTests/CommonTests.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_test_recursive_1adb389d9a7b599cef408078432bdbe6c4" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int TestRecursive::b</definition>
        <argsstring></argsstring>
        <name>b</name>
        <qualifiedname>TestRecursive::b</qualifiedname>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/Tests/MetaTests/CommonTests.hpp" line="26" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/Tests/MetaTests/CommonTests.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_test_recursive_1a9e6968599194296ea428b4eed84bbb0d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TestRecursive::operator==</definition>
        <argsstring>(const TestRecursive &amp;rhs) const</argsstring>
        <name>operator==</name>
        <qualifiedname>TestRecursive::operator==</qualifiedname>
        <param>
          <type>const <ref refid="struct_test_recursive" kindref="compound">TestRecursive</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/Tests/MetaTests/CommonTests.hpp" line="28" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/Tests/MetaTests/CommonTests.hpp" bodystart="28" bodyend="30"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/Tests/MetaTests/CommonTests.hpp" line="24" column="1" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/Tests/MetaTests/CommonTests.hpp" bodystart="24" bodyend="31"/>
    <listofallmembers>
      <member refid="struct_test_recursive_1a7370127244dd4ca766417554e9cdf874" prot="public" virt="non-virtual"><scope>TestRecursive</scope><name>a</name></member>
      <member refid="struct_test_recursive_1adb389d9a7b599cef408078432bdbe6c4" prot="public" virt="non-virtual"><scope>TestRecursive</scope><name>b</name></member>
      <member refid="struct_test_recursive_1a9e6968599194296ea428b4eed84bbb0d" prot="public" virt="non-virtual"><scope>TestRecursive</scope><name>operator==</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

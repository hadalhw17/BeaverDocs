<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_bvr_1_1_c_world" kind="class" language="C++" prot="public">
    <compoundname>Bvr::CWorld</compoundname>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_bvr_1_1_c_world_1a6f16557b24ece1954ec48911cedf6632" prot="public" static="no">
        <type><ref refid="class_bvr_1_1_e_c_s_1_1_t_query" kindref="compound">Bvr::Query</ref>&lt; <ref refid="struct_bvr_1_1_e_c_s_1_1_with" kindref="compound">With</ref>&lt; <ref refid="struct_bvr_1_1_uuid_component" kindref="compound">UuidComponent</ref> &gt;, <ref refid="struct_bvr_1_1_e_c_s_1_1_with_out" kindref="compound">WithOut</ref>&lt; <ref refid="struct_bvr_1_1_s_hierarchy_component" kindref="compound">SHierarchyComponent</ref> &gt; &gt;</type>
        <definition>using Bvr::CWorld::TRootsQuery =  Bvr::Query&lt;With&lt;UuidComponent&gt;, WithOut&lt;SHierarchyComponent&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>TRootsQuery</name>
        <qualifiedname>Bvr::CWorld::TRootsQuery</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="163" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="164" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_c_world_1a1375957ce574761c064831a665b3e051" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Bvr::CWorld::InPlaceRelease</definition>
        <argsstring></argsstring>
        <name>InPlaceRelease</name>
        <qualifiedname>Bvr::CWorld::InPlaceRelease</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="27" column="27" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_c_world_1a145746c80844b4ad630bc44bb1783a5a" prot="private" static="no" mutable="no">
        <type><ref refid="struct_bvr_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> &gt;</type>
        <definition>Handle&lt;CWorld&gt; Bvr::CWorld::m_hSelf</definition>
        <argsstring></argsstring>
        <name>m_hSelf</name>
        <qualifiedname>Bvr::CWorld::m_hSelf</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="261" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="261" bodyend="261"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_c_world_1aa0d0e59bb416c492409a52b88dea6689" prot="private" static="no" mutable="no">
        <type><ref refid="class_bvr_1_1_c_resource_map" kindref="compound">CResourceMap</ref></type>
        <definition>CResourceMap Bvr::CWorld::m_resources</definition>
        <argsstring></argsstring>
        <name>m_resources</name>
        <qualifiedname>Bvr::CWorld::m_resources</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="262" column="29" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="262" bodyend="262"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_c_world_1ac13f77de934a21652a0819b4ada81d3f" prot="private" static="no" mutable="no">
        <type><ref refid="class_bvr_1_1_e_c_s_1_1_reg" kindref="compound">Reg</ref></type>
        <definition>Reg Bvr::CWorld::m_reg</definition>
        <argsstring></argsstring>
        <name>m_reg</name>
        <qualifiedname>Bvr::CWorld::m_reg</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="263" column="29" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_c_world_1a880ea9825296fd8c6820dbc6985a048a" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Bvr::CWorld::m_currentLevelPath</definition>
        <argsstring></argsstring>
        <name>m_currentLevelPath</name>
        <qualifiedname>Bvr::CWorld::m_currentLevelPath</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="265" column="29" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="265" bodyend="265"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_c_world_1a5722cfe7e5af368b3f6d87a57cfe6694" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Bvr::CWorld::m_bSimulating</definition>
        <argsstring></argsstring>
        <name>m_bSimulating</name>
        <qualifiedname>Bvr::CWorld::m_bSimulating</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="268" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_c_world_1a2c148d0e70adca2bd7a01101cd5d7ec4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Bvr::CWorld::m_isPaused</definition>
        <argsstring></argsstring>
        <name>m_isPaused</name>
        <qualifiedname>Bvr::CWorld::m_isPaused</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="270" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="270" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a61468e62ebac166003fb836a561b459f" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::CWorld::CWorld</definition>
        <argsstring>(const bool isPaused=true, const bool attachSignals=true) noexcept</argsstring>
        <name>CWorld</name>
        <qualifiedname>Bvr::CWorld::CWorld</qualifiedname>
        <param>
          <type>const bool</type>
          <declname>isPaused</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>attachSignals</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct the world with state <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>isPaused</parametername>
</parameternamelist>
<parameterdescription>
<para>indicates weather the world should be paused </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="31" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a36d0b1a3d4eb6ea4e33567b7026b0141" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::CWorld::~CWorld</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>~CWorld</name>
        <qualifiedname>Bvr::CWorld::~CWorld</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="34" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1ab1ee0453411d182a28811af94058490e" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::CWorld::CWorld</definition>
        <argsstring>(const CWorld &amp;rhs) noexcept</argsstring>
        <name>CWorld</name>
        <qualifiedname>Bvr::CWorld::CWorld</qualifiedname>
        <param>
          <type>const <ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="36" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a86eddc6406a22a47f1b050dc60ed1abe" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::CWorld::CWorld</definition>
        <argsstring>(CWorld &amp;&amp;rhs) noexcept</argsstring>
        <name>CWorld</name>
        <qualifiedname>Bvr::CWorld::CWorld</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="37" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1aa7c3115eb1e1fcba24cb314cf7d70919" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> &amp;</type>
        <definition>CWorld &amp; Bvr::CWorld::operator=</definition>
        <argsstring>(const CWorld &amp;rhs) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>Bvr::CWorld::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="38" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a585b86a5bf379b7c2441aa065aed6ae0" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> &amp;</type>
        <definition>CWorld &amp; Bvr::CWorld::operator=</definition>
        <argsstring>(CWorld &amp;&amp;rhs) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>Bvr::CWorld::operator=</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="39" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1aa5be4fe3f0c00be613c87d591892faa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> &amp;</type>
        <definition>CWorld &amp; Bvr::CWorld::SetPath</definition>
        <argsstring>(const std::string_view path)</argsstring>
        <name>SetPath</name>
        <qualifiedname>Bvr::CWorld::SetPath</qualifiedname>
        <param>
          <type>const std::string_view</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="41" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a6250ec183c5f5499fdd256ec3245980a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * Bvr::CWorld::GetPath</definition>
        <argsstring>() const</argsstring>
        <name>GetPath</name>
        <qualifiedname>Bvr::CWorld::GetPath</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="42" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a8c8e203ec72f10eed9a6252c9a8498e6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_bvr_1_1_e_c_s_1_1_reg" kindref="compound">Reg</ref> &amp;</type>
        <definition>const Reg &amp; Bvr::CWorld::GetRegistry</definition>
        <argsstring>() const</argsstring>
        <name>GetRegistry</name>
        <qualifiedname>Bvr::CWorld::GetRegistry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="44" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1ae7159803d980a6390580a4fd59614156" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_e_c_s_1_1_reg" kindref="compound">Reg</ref> &amp;</type>
        <definition>Reg &amp; Bvr::CWorld::GetRegistry</definition>
        <argsstring>()</argsstring>
        <name>GetRegistry</name>
        <qualifiedname>Bvr::CWorld::GetRegistry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="45" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1ae06622898e7a2c2f9aa7b3390df02f9e" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CompT</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Bvr::CWorld::Has</definition>
        <argsstring>(const TEntity hEnt) const noexcept</argsstring>
        <name>Has</name>
        <qualifiedname>Bvr::CWorld::Has</qualifiedname>
        <param>
          <type>const <ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks weather an entity has a component of type CompT <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hEnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Entity handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if entity has a component of type CompT </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="50" column="22" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1ac11a23aa33b31bedb5d40234e012631d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CompT</type>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) Bvr::CWorld::GetComponent</definition>
        <argsstring>(const TEntity hEnt) const noexcept</argsstring>
        <name>GetComponent</name>
        <qualifiedname>Bvr::CWorld::GetComponent</qualifiedname>
        <param>
          <type>const <ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets component of type CompT from entity. <bold>Note that this function doesn&apos;t check for presense of a component, this needs to be done manually.</bold> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hEnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Entity handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Component reference of type CompT </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="60" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="60" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a59213f160c03994202d0eb6807e06583" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CompT</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) Bvr::CWorld::AddComponent</definition>
        <argsstring>(const TEntity hEnt, Args &amp;&amp;... args) const noexcept</argsstring>
        <name>AddComponent</name>
        <qualifiedname>Bvr::CWorld::AddComponent</qualifiedname>
        <param>
          <type>const <ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a component of type CompT to entity. <bold>Note that component of the same type cannot be added multiple times to the same entity.</bold> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hEnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Entity handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>Arguments to be forwarded to CompT constructor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>created component reference of type CompT </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="73" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="73" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a7db8c477e169f41147cf1576dff8693a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CompT</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) Bvr::CWorld::AddOrReplace</definition>
        <argsstring>(const TEntity hEnt, Args &amp;&amp;... args) const noexcept</argsstring>
        <name>AddOrReplace</name>
        <qualifiedname>Bvr::CWorld::AddOrReplace</qualifiedname>
        <param>
          <type>const <ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a component of type CompT to entity if component of type CompT wasn&apos;t added before, otherwise replaces it. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hEnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Entity handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>Arguments to be forwarded to CompT constructor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>created component reference of type CompT </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="87" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="87" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1ad686429e8aafaba69cebe93cab861d1a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CompT</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Bvr::CWorld::RemoveComponent</definition>
        <argsstring>(const TEntity hEnt) const noexcept</argsstring>
        <name>RemoveComponent</name>
        <qualifiedname>Bvr::CWorld::RemoveComponent</qualifiedname>
        <param>
          <type>const <ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove component of type CompT from entity. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hEnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Entity handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if component was removed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="97" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="97" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a7895f34293c6385caa41f073c724c2a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::CWorld::SetSelf</definition>
        <argsstring>(const Handle&lt; CWorld &gt; &amp;hWorld)</argsstring>
        <name>SetSelf</name>
        <qualifiedname>Bvr::CWorld::SetSelf</qualifiedname>
        <param>
          <type>const <ref refid="struct_bvr_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> &gt; &amp;</type>
          <declname>hWorld</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets a handle to self. The function ensures that the handle is weak to avoid circular dependencies </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="106" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a362a4db92310b244564ffa53d9d7772e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> &gt;</type>
        <definition>Handle&lt; CWorld &gt; Bvr::CWorld::GetSelf</definition>
        <argsstring>() const</argsstring>
        <name>GetSelf</name>
        <qualifiedname>Bvr::CWorld::GetSelf</qualifiedname>
        <briefdescription>
<para>Returs a <bold>weak</bold> handle to self. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="109" column="12" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="109" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a83208a43489f0df592ad1e9cc2e97056" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::CWorld::AddChild</definition>
        <argsstring>(TEntity hTo, TEntity hChild) const</argsstring>
        <name>AddChild</name>
        <qualifiedname>Bvr::CWorld::AddChild</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hTo</declname>
        </param>
        <param>
          <type><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hChild</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parent one entity to another. Configures SHierarcyComponent and <ref refid="struct_bvr_1_1_s_parent_component" kindref="compound">SParentComponent</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hTo</parametername>
</parameternamelist>
<parameterdescription>
<para>Parent entity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hChild</parametername>
</parameternamelist>
<parameterdescription>
<para>Entity to be attached as to hTo </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="115" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1ac0f19d4fab1d39924ba0e6febce1dc9d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
        <definition>TEntity Bvr::CWorld::CreateChild</definition>
        <argsstring>(const TEntity hTo, std::string_view name={}, const Utils::uuid &amp;uuid={}) const</argsstring>
        <name>CreateChild</name>
        <qualifiedname>Bvr::CWorld::CreateChild</qualifiedname>
        <param>
          <type>const <ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hTo</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_util_1_1uuid" kindref="compound">Utils::uuid</ref> &amp;</type>
          <declname>uuid</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a child for entity Configures SHierarcyComponent and <ref refid="struct_bvr_1_1_s_parent_component" kindref="compound">SParentComponent</ref> If name is not provided, then entity will be named as *&lt;parent_name&gt;_child* <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hTo</parametername>
</parameternamelist>
<parameterdescription>
<para>Parent entity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>optional name of an entity </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Created entity handle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="124" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a31fb94749e3aa890185d4f70cbb037ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::CWorld::RemoveChild</definition>
        <argsstring>(const TEntity hFrom, const TEntity hChild)</argsstring>
        <name>RemoveChild</name>
        <qualifiedname>Bvr::CWorld::RemoveChild</qualifiedname>
        <param>
          <type>const <ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hFrom</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hChild</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Detaches entity from parent. Note that detached entity is not removed from the world. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hFrom</parametername>
</parameternamelist>
<parameterdescription>
<para>Parent entity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hChild</parametername>
</parameternamelist>
<parameterdescription>
<para>Child to be detached </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="131" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a2ff190748f63efcb41274283a40cd3bd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
        <definition>TEntity Bvr::CWorld::CreateEntity</definition>
        <argsstring>(TEntity parent) const</argsstring>
        <name>CreateEntity</name>
        <qualifiedname>Bvr::CWorld::CreateEntity</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a child for entity if parent is a valid entity <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hTo</parametername>
</parameternamelist>
<parameterdescription>
<para>Parent entity </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Created entity handle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="136" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a797dda45d5fbe7f45bdda1f2696a6162" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
        <definition>TEntity Bvr::CWorld::CreateEntity</definition>
        <argsstring>(std::string_view name, const Utils::uuid &amp;uuid={}) const</argsstring>
        <name>CreateEntity</name>
        <qualifiedname>Bvr::CWorld::CreateEntity</qualifiedname>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_util_1_1uuid" kindref="compound">Utils::uuid</ref> &amp;</type>
          <declname>uuid</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create entity with name. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of entity to be created </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Created entity handle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="141" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a1a97e61dd08d3a0e4ceb9a09c06c85f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::CWorld::RemoveEntity</definition>
        <argsstring>(const TEntity hEnt)</argsstring>
        <name>RemoveEntity</name>
        <qualifiedname>Bvr::CWorld::RemoveEntity</qualifiedname>
        <param>
          <type>const <ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete entity from the world <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hEnt</parametername>
</parameternamelist>
<parameterdescription>
<para>entity to be deleted </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="146" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a291a037d6ae88d2131feeaded4487fb8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CompT</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>ExtraT</declname>
            <defname>ExtraT</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>ExcludeT</declname>
            <defname>ExcludeT</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Bvr::CWorld::Query</definition>
        <argsstring>(WithOut&lt; ExcludeT... &gt; exclude={}) const</argsstring>
        <name>Query</name>
        <qualifiedname>Bvr::CWorld::Query</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_e_c_s_1_1_with_out" kindref="compound">WithOut</ref>&lt; ExcludeT... &gt;</type>
          <declname>exclude</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="149" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="149" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1af9416507d9e33c54abbd415af1f2dac5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CompT</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>ExtraT</declname>
            <defname>ExtraT</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>ExcludeT</declname>
            <defname>ExcludeT</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Bvr::CWorld::Query</definition>
        <argsstring>(WithOut&lt; ExcludeT... &gt; exclude={})</argsstring>
        <name>Query</name>
        <qualifiedname>Bvr::CWorld::Query</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_e_c_s_1_1_with_out" kindref="compound">WithOut</ref>&lt; ExcludeT... &gt;</type>
          <declname>exclude</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="153" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="153" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a59bb057f82c7b95e3885bd1df13b340d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::CWorld::SetSimulationEnabled</definition>
        <argsstring>(const bool bEnabled)</argsstring>
        <name>SetSimulationEnabled</name>
        <qualifiedname>Bvr::CWorld::SetSimulationEnabled</qualifiedname>
        <param>
          <type>const bool</type>
          <declname>bEnabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="157" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="157" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a5e38520e93cee4025d746c97bbcc525c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::CWorld::GetSimulationEnabled</definition>
        <argsstring>() const</argsstring>
        <name>GetSimulationEnabled</name>
        <qualifiedname>Bvr::CWorld::GetSimulationEnabled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="158" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="158" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a4649cc7bd67d4b8322159984a89421a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::CWorld::SetIsPaused</definition>
        <argsstring>(const bool isPaused)</argsstring>
        <name>SetIsPaused</name>
        <qualifiedname>Bvr::CWorld::SetIsPaused</qualifiedname>
        <param>
          <type>const bool</type>
          <declname>isPaused</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="160" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="160" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a292271db2b86fa9929d24c3b1b63794d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::CWorld::IsPaused</definition>
        <argsstring>() const</argsstring>
        <name>IsPaused</name>
        <qualifiedname>Bvr::CWorld::IsPaused</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="161" column="23" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="161" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a49fc9a98672fa2ea5cf2b7ea2048223b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Bvr::CWorld::PublishUpdate</definition>
        <argsstring>(const TEntity hEnt)</argsstring>
        <name>PublishUpdate</name>
        <qualifiedname>Bvr::CWorld::PublishUpdate</qualifiedname>
        <param>
          <type>const <ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send update singal for component of type &lt;T&gt; <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hEnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Entity owning component &lt;T&gt; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="178" column="22" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="178" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a7a4f8bfb876f52c55e80b9bb9abe305a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_bvr_1_1_e_c_s_1_1_t_basic_sparse_set" kindref="compound">TComponentStorage</ref> &amp;</type>
        <definition>TComponentStorage &amp; Bvr::CWorld::GetComponentStorage</definition>
        <argsstring>()</argsstring>
        <name>GetComponentStorage</name>
        <qualifiedname>Bvr::CWorld::GetComponentStorage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get underlying sparse set for componet &lt;T&gt; <simplesect kind="return"><para>Component storage </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="185" column="35" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="185" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a92776e79bdf30492fc9f8939e21df1bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T * Bvr::CWorld::GetResource</definition>
        <argsstring>()</argsstring>
        <name>GetResource</name>
        <qualifiedname>Bvr::CWorld::GetResource</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="190" column="19" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="190" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a1653c42e1bf08159ebfc2f3ef4fcd140" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Bvr::CWorld::Insert</definition>
        <argsstring>(U &amp;&amp;resource)</argsstring>
        <name>Insert</name>
        <qualifiedname>Bvr::CWorld::Insert</qualifiedname>
        <param>
          <type>U &amp;&amp;</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inserts the resource of type T Inserts previously constructed instance of the resource without claiming its ownership Does nothing if resource of type T already exists </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="197" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="197" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1ab1fe4767c5ea4647a4ff092d96cd212b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) Bvr::CWorld::CreateResource</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>CreateResource</name>
        <qualifiedname>Bvr::CWorld::CreateResource</qualifiedname>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs the resource of type T with specified arguments instance. Does nothing if resource of type T already exists <simplesect kind="return"><para>reference to the resource that was created or that already existed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="205" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="205" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a5d9288d331bed33ea599393f09e7b6f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Bvr::CWorld::RemoveResource</definition>
        <argsstring>()</argsstring>
        <name>RemoveResource</name>
        <qualifiedname>Bvr::CWorld::RemoveResource</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove the resource Does nothing if resource wasn&apos;t created </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="211" column="22" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="211" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1ad2149f719e13fb80fd6eb07559c07c3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::CWorld::ClearResources</definition>
        <argsstring>()</argsstring>
        <name>ClearResources</name>
        <qualifiedname>Bvr::CWorld::ClearResources</qualifiedname>
        <briefdescription>
<para>Release all resources. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="216" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="216" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a15f04da99c629ce1f59a887fd0c88215" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref></type>
        <definition>CWorld Bvr::CWorld::Clone</definition>
        <argsstring>() const</argsstring>
        <name>Clone</name>
        <qualifiedname>Bvr::CWorld::Clone</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="219" column="17"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_bvr_1_1_c_world_1aff185f0bce2bf1d4f5c74ff3046f97f4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Fn</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void Bvr::CWorld::TraverseScene</definition>
        <argsstring>(const Fn &amp;fn, const TRootsQuery &amp;roots, const Bvr::Query&lt; With&lt; SHierarchyComponent &gt; &gt; &amp;hierarchies, const Bvr::Query&lt; With&lt; SParentComponent &gt; &gt; &amp;parents)</argsstring>
        <name>TraverseScene</name>
        <qualifiedname>Bvr::CWorld::TraverseScene</qualifiedname>
        <param>
          <type>const Fn &amp;</type>
          <declname>fn</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_e_c_s_1_1_t_query" kindref="compound">TRootsQuery</ref> &amp;</type>
          <declname>roots</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_e_c_s_1_1_t_query" kindref="compound">Bvr::Query</ref>&lt; <ref refid="struct_bvr_1_1_e_c_s_1_1_with" kindref="compound">With</ref>&lt; <ref refid="struct_bvr_1_1_s_hierarchy_component" kindref="compound">SHierarchyComponent</ref> &gt; &gt; &amp;</type>
          <declname>hierarchies</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_e_c_s_1_1_t_query" kindref="compound">Bvr::Query</ref>&lt; <ref refid="struct_bvr_1_1_e_c_s_1_1_with" kindref="compound">With</ref>&lt; <ref refid="struct_bvr_1_1_s_parent_component" kindref="compound">SParentComponent</ref> &gt; &gt; &amp;</type>
          <declname>parents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="167" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="167" bodyend="174"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a16eb0b04369dbf55e297243ef5ff078d" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Fn</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void Bvr::CWorld::TraverseSceneImpl</definition>
        <argsstring>(TEntity parent, TEntity &amp;ent, const Fn &amp;fn, const Bvr::Query&lt; With&lt; SHierarchyComponent &gt; &gt; &amp;hierarchies, const Bvr::Query&lt; With&lt; SParentComponent &gt; &gt; &amp;parents)</argsstring>
        <name>TraverseSceneImpl</name>
        <qualifiedname>Bvr::CWorld::TraverseSceneImpl</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref> &amp;</type>
          <declname>ent</declname>
        </param>
        <param>
          <type>const Fn &amp;</type>
          <declname>fn</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_e_c_s_1_1_t_query" kindref="compound">Bvr::Query</ref>&lt; <ref refid="struct_bvr_1_1_e_c_s_1_1_with" kindref="compound">With</ref>&lt; <ref refid="struct_bvr_1_1_s_hierarchy_component" kindref="compound">SHierarchyComponent</ref> &gt; &gt; &amp;</type>
          <declname>hierarchies</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_e_c_s_1_1_t_query" kindref="compound">Bvr::Query</ref>&lt; <ref refid="struct_bvr_1_1_e_c_s_1_1_with" kindref="compound">With</ref>&lt; <ref refid="struct_bvr_1_1_s_parent_component" kindref="compound">SParentComponent</ref> &gt; &gt; &amp;</type>
          <declname>parents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="222" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="222" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1ab84132fa34ef98f56724e491936bb068" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Bvr::CWorld::CloneFrom</definition>
        <argsstring>(const CWorld &amp;from, CWorld &amp;to)</argsstring>
        <name>CloneFrom</name>
        <qualifiedname>Bvr::CWorld::CloneFrom</qualifiedname>
        <param>
          <type>const <ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="258" column="17"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a25c8a43c216f4734d8a48cf1895d4568" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::CWorld::Init</definition>
        <argsstring>(bool attachSignals)</argsstring>
        <name>Init</name>
        <qualifiedname>Bvr::CWorld::Init</qualifiedname>
        <param>
          <type>bool</type>
          <declname>attachSignals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="257" column="17"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="25" column="1" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="25" bodyend="271"/>
    <listofallmembers>
      <member refid="class_bvr_1_1_c_world_1a83208a43489f0df592ad1e9cc2e97056" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>AddChild</name></member>
      <member refid="class_bvr_1_1_c_world_1a59213f160c03994202d0eb6807e06583" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>AddComponent</name></member>
      <member refid="class_bvr_1_1_c_world_1a7db8c477e169f41147cf1576dff8693a" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>AddOrReplace</name></member>
      <member refid="class_bvr_1_1_c_world_1ad2149f719e13fb80fd6eb07559c07c3b" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>ClearResources</name></member>
      <member refid="class_bvr_1_1_c_world_1a15f04da99c629ce1f59a887fd0c88215" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>Clone</name></member>
      <member refid="class_bvr_1_1_c_world_1ab84132fa34ef98f56724e491936bb068" prot="private" virt="non-virtual"><scope>Bvr::CWorld</scope><name>CloneFrom</name></member>
      <member refid="class_bvr_1_1_c_world_1ac0f19d4fab1d39924ba0e6febce1dc9d" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>CreateChild</name></member>
      <member refid="class_bvr_1_1_c_world_1a2ff190748f63efcb41274283a40cd3bd" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>CreateEntity</name></member>
      <member refid="class_bvr_1_1_c_world_1a797dda45d5fbe7f45bdda1f2696a6162" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>CreateEntity</name></member>
      <member refid="class_bvr_1_1_c_world_1ab1fe4767c5ea4647a4ff092d96cd212b" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>CreateResource</name></member>
      <member refid="class_bvr_1_1_c_world_1a61468e62ebac166003fb836a561b459f" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>CWorld</name></member>
      <member refid="class_bvr_1_1_c_world_1ab1ee0453411d182a28811af94058490e" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>CWorld</name></member>
      <member refid="class_bvr_1_1_c_world_1a86eddc6406a22a47f1b050dc60ed1abe" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>CWorld</name></member>
      <member refid="class_bvr_1_1_c_world_1ac11a23aa33b31bedb5d40234e012631d" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>GetComponent</name></member>
      <member refid="class_bvr_1_1_c_world_1a7a4f8bfb876f52c55e80b9bb9abe305a" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>GetComponentStorage</name></member>
      <member refid="class_bvr_1_1_c_world_1a6250ec183c5f5499fdd256ec3245980a" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>GetPath</name></member>
      <member refid="class_bvr_1_1_c_world_1a8c8e203ec72f10eed9a6252c9a8498e6" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>GetRegistry</name></member>
      <member refid="class_bvr_1_1_c_world_1ae7159803d980a6390580a4fd59614156" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>GetRegistry</name></member>
      <member refid="class_bvr_1_1_c_world_1a92776e79bdf30492fc9f8939e21df1bc" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>GetResource</name></member>
      <member refid="class_bvr_1_1_c_world_1a362a4db92310b244564ffa53d9d7772e" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>GetSelf</name></member>
      <member refid="class_bvr_1_1_c_world_1a5e38520e93cee4025d746c97bbcc525c" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>GetSimulationEnabled</name></member>
      <member refid="class_bvr_1_1_c_world_1ae06622898e7a2c2f9aa7b3390df02f9e" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>Has</name></member>
      <member refid="class_bvr_1_1_c_world_1a25c8a43c216f4734d8a48cf1895d4568" prot="private" virt="non-virtual"><scope>Bvr::CWorld</scope><name>Init</name></member>
      <member refid="class_bvr_1_1_c_world_1a1375957ce574761c064831a665b3e051" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>InPlaceRelease</name></member>
      <member refid="class_bvr_1_1_c_world_1a1653c42e1bf08159ebfc2f3ef4fcd140" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>Insert</name></member>
      <member refid="class_bvr_1_1_c_world_1a292271db2b86fa9929d24c3b1b63794d" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>IsPaused</name></member>
      <member refid="class_bvr_1_1_c_world_1a5722cfe7e5af368b3f6d87a57cfe6694" prot="private" virt="non-virtual"><scope>Bvr::CWorld</scope><name>m_bSimulating</name></member>
      <member refid="class_bvr_1_1_c_world_1a880ea9825296fd8c6820dbc6985a048a" prot="private" virt="non-virtual"><scope>Bvr::CWorld</scope><name>m_currentLevelPath</name></member>
      <member refid="class_bvr_1_1_c_world_1a145746c80844b4ad630bc44bb1783a5a" prot="private" virt="non-virtual"><scope>Bvr::CWorld</scope><name>m_hSelf</name></member>
      <member refid="class_bvr_1_1_c_world_1a2c148d0e70adca2bd7a01101cd5d7ec4" prot="private" virt="non-virtual"><scope>Bvr::CWorld</scope><name>m_isPaused</name></member>
      <member refid="class_bvr_1_1_c_world_1ac13f77de934a21652a0819b4ada81d3f" prot="private" virt="non-virtual"><scope>Bvr::CWorld</scope><name>m_reg</name></member>
      <member refid="class_bvr_1_1_c_world_1aa0d0e59bb416c492409a52b88dea6689" prot="private" virt="non-virtual"><scope>Bvr::CWorld</scope><name>m_resources</name></member>
      <member refid="class_bvr_1_1_c_world_1aa7c3115eb1e1fcba24cb314cf7d70919" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>operator=</name></member>
      <member refid="class_bvr_1_1_c_world_1a585b86a5bf379b7c2441aa065aed6ae0" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>operator=</name></member>
      <member refid="class_bvr_1_1_c_world_1a49fc9a98672fa2ea5cf2b7ea2048223b" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>PublishUpdate</name></member>
      <member refid="class_bvr_1_1_c_world_1a291a037d6ae88d2131feeaded4487fb8" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>Query</name></member>
      <member refid="class_bvr_1_1_c_world_1af9416507d9e33c54abbd415af1f2dac5" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>Query</name></member>
      <member refid="class_bvr_1_1_c_world_1a31fb94749e3aa890185d4f70cbb037ec" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>RemoveChild</name></member>
      <member refid="class_bvr_1_1_c_world_1ad686429e8aafaba69cebe93cab861d1a" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>RemoveComponent</name></member>
      <member refid="class_bvr_1_1_c_world_1a1a97e61dd08d3a0e4ceb9a09c06c85f3" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>RemoveEntity</name></member>
      <member refid="class_bvr_1_1_c_world_1a5d9288d331bed33ea599393f09e7b6f2" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>RemoveResource</name></member>
      <member refid="class_bvr_1_1_c_world_1a4649cc7bd67d4b8322159984a89421a0" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>SetIsPaused</name></member>
      <member refid="class_bvr_1_1_c_world_1aa5be4fe3f0c00be613c87d591892faa2" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>SetPath</name></member>
      <member refid="class_bvr_1_1_c_world_1a7895f34293c6385caa41f073c724c2a3" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>SetSelf</name></member>
      <member refid="class_bvr_1_1_c_world_1a59bb057f82c7b95e3885bd1df13b340d" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>SetSimulationEnabled</name></member>
      <member refid="class_bvr_1_1_c_world_1aff185f0bce2bf1d4f5c74ff3046f97f4" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>TraverseScene</name></member>
      <member refid="class_bvr_1_1_c_world_1a16eb0b04369dbf55e297243ef5ff078d" prot="private" virt="non-virtual"><scope>Bvr::CWorld</scope><name>TraverseSceneImpl</name></member>
      <member refid="class_bvr_1_1_c_world_1a6f16557b24ece1954ec48911cedf6632" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>TRootsQuery</name></member>
      <member refid="class_bvr_1_1_c_world_1a36d0b1a3d4eb6ea4e33567b7026b0141" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>~CWorld</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

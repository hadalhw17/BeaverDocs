<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_bvr_1_1_util_1_1_t_span" kind="class" language="C++" prot="public">
    <compoundname>Bvr::Util::TSpan</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_bvr_1_1_util_1_1_t_span_1ab85f798a70e4b427651f049ac7cecbf7" prot="public" static="no">
        <type>T</type>
        <definition>using Bvr::Util::TSpan&lt; T &gt;::element_type =  T</definition>
        <argsstring></argsstring>
        <name>element_type</name>
        <qualifiedname>Bvr::Util::TSpan::element_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="145" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_util_1_1_t_span_1ac1206bb0cf6999a337b550ac98d0fb9d" prot="public" static="no">
        <type>std::remove_cv_t&lt; T &gt;</type>
        <definition>using Bvr::Util::TSpan&lt; T &gt;::value_type =  std::remove_cv_t&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>Bvr::Util::TSpan::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="146" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_util_1_1_t_span_1a2159c013a6d30acff9232c57a941d123" prot="public" static="no">
        <type>std::size_t</type>
        <definition>using Bvr::Util::TSpan&lt; T &gt;::size_type =  std::size_t</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <qualifiedname>Bvr::Util::TSpan::size_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="147" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_util_1_1_t_span_1a235a7811e5f2c9996e31901d0961e6f8" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using Bvr::Util::TSpan&lt; T &gt;::difference_type =  std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <qualifiedname>Bvr::Util::TSpan::difference_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="148" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_util_1_1_t_span_1a7ec95993636eee04c213a8e60ac03adf" prot="public" static="no">
        <type>T *</type>
        <definition>using Bvr::Util::TSpan&lt; T &gt;::pointer =  T*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <qualifiedname>Bvr::Util::TSpan::pointer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="149" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_util_1_1_t_span_1a98bd64c7f8d1d6b8cdfe817395c225a9" prot="public" static="no">
        <type>const T *</type>
        <definition>using Bvr::Util::TSpan&lt; T &gt;::const_pointer =  const T*</definition>
        <argsstring></argsstring>
        <name>const_pointer</name>
        <qualifiedname>Bvr::Util::TSpan::const_pointer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="150" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_util_1_1_t_span_1a120e9f7b2e69ed59beb51602c4a1e11d" prot="public" static="no">
        <type>T &amp;</type>
        <definition>using Bvr::Util::TSpan&lt; T &gt;::reference =  T&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <qualifiedname>Bvr::Util::TSpan::reference</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="151" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_util_1_1_t_span_1a6ba47dc98d6372931076f5517fe7bcb1" prot="public" static="no">
        <type>const T &amp;</type>
        <definition>using Bvr::Util::TSpan&lt; T &gt;::const_reference =  const T&amp;</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <qualifiedname>Bvr::Util::TSpan::const_reference</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="152" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_util_1_1_t_span_1ac6d17281b40f01f82bb9ae83c53f9f67" prot="public" static="no">
        <type><ref refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator" kindref="compound">Detail::TSpanIterator</ref>&lt; T &gt;</type>
        <definition>using Bvr::Util::TSpan&lt; T &gt;::iterator =  Detail::TSpanIterator&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <qualifiedname>Bvr::Util::TSpan::iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="153" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_util_1_1_t_span_1ae96caea7ac51e7a7b8c057444e837dcf" prot="public" static="no">
        <type>std::reverse_iterator&lt; <ref refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator" kindref="compound">iterator</ref> &gt;</type>
        <definition>using Bvr::Util::TSpan&lt; T &gt;::reverse_iterator =  std::reverse_iterator&lt;iterator&gt;</definition>
        <argsstring></argsstring>
        <name>reverse_iterator</name>
        <qualifiedname>Bvr::Util::TSpan::reverse_iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="154" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="154" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_util_1_1_t_span_1aec7028b7a816eee316321c89fa6e768e" prot="private" static="no" mutable="no">
        <type>pointer</type>
        <definition>pointer Bvr::Util::TSpan&lt; T &gt;::m_pData</definition>
        <argsstring></argsstring>
        <name>m_pData</name>
        <qualifiedname>Bvr::Util::TSpan::m_pData</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="263" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_util_1_1_t_span_1a168f27702fd531abbe3350b0a4b07890" prot="private" static="no" mutable="no">
        <type>size_type</type>
        <definition>size_type Bvr::Util::TSpan&lt; T &gt;::m_size</definition>
        <argsstring></argsstring>
        <name>m_size</name>
        <qualifiedname>Bvr::Util::TSpan::m_size</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="264" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="264" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_t_span_1a76a803630dee71509406db0004d9d8d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::Util::TSpan&lt; T &gt;::TSpan</definition>
        <argsstring>()=default</argsstring>
        <name>TSpan</name>
        <qualifiedname>Bvr::Util::TSpan::TSpan</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="156" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_t_span_1a6619d93b87aef93a10d205adf0596bd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::Util::TSpan&lt; T &gt;::~TSpan</definition>
        <argsstring>()=default</argsstring>
        <name>~TSpan</name>
        <qualifiedname>Bvr::Util::TSpan::~TSpan</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="157" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_t_span_1a8c6b49adf7d49b21ea55d5cbcf88b2e9" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr Bvr::Util::TSpan&lt; T &gt;::TSpan</definition>
        <argsstring>(const TSpan &amp;) noexcept=default</argsstring>
        <name>TSpan</name>
        <qualifiedname>Bvr::Util::TSpan::TSpan</qualifiedname>
        <param>
          <type>const <ref refid="class_bvr_1_1_util_1_1_t_span" kindref="compound">TSpan</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="159" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_t_span_1af741de18975bc96ba3435e9c1550b379" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="class_bvr_1_1_util_1_1_t_span" kindref="compound">TSpan</ref> &amp;</type>
        <definition>constexpr TSpan &amp; Bvr::Util::TSpan&lt; T &gt;::operator=</definition>
        <argsstring>(const TSpan &amp;) noexcept=default</argsstring>
        <name>operator=</name>
        <qualifiedname>Bvr::Util::TSpan::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_bvr_1_1_util_1_1_t_span" kindref="compound">TSpan</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="160" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_t_span_1abcb481660979bb7e45057ce047270127" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr Bvr::Util::TSpan&lt; T &gt;::TSpan</definition>
        <argsstring>(TSpan &amp;&amp;) noexcept=default</argsstring>
        <name>TSpan</name>
        <qualifiedname>Bvr::Util::TSpan::TSpan</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_util_1_1_t_span" kindref="compound">TSpan</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="162" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_t_span_1affd17e3d185109d7173f895d01a2363b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="class_bvr_1_1_util_1_1_t_span" kindref="compound">TSpan</ref> &amp;</type>
        <definition>constexpr TSpan &amp; Bvr::Util::TSpan&lt; T &gt;::operator=</definition>
        <argsstring>(TSpan &amp;&amp;) noexcept=default</argsstring>
        <name>operator=</name>
        <qualifiedname>Bvr::Util::TSpan::operator=</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_util_1_1_t_span" kindref="compound">TSpan</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="163" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_t_span_1ac5f0dad7af6c0d88507eac006dde64bf" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr Bvr::Util::TSpan&lt; T &gt;::TSpan</definition>
        <argsstring>(pointer ptr, size_type size)</argsstring>
        <name>TSpan</name>
        <qualifiedname>Bvr::Util::TSpan::TSpan</qualifiedname>
        <param>
          <type>pointer</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_type</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="165" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="165" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_t_span_1a6300e55ecac2bcfa026cfc79ff0f39d7" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr Bvr::Util::TSpan&lt; T &gt;::TSpan</definition>
        <argsstring>(pointer first, pointer last)</argsstring>
        <name>TSpan</name>
        <qualifiedname>Bvr::Util::TSpan::TSpan</qualifiedname>
        <param>
          <type>pointer</type>
          <declname>first</declname>
        </param>
        <param>
          <type>pointer</type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="167" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="167" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_t_span_1aef490435c60f7dec58dee3c87c5c0447" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr Bvr::Util::TSpan&lt; T &gt;::TSpan</definition>
        <argsstring>(element_type(&amp;arr)[N]) noexcept</argsstring>
        <name>TSpan</name>
        <qualifiedname>Bvr::Util::TSpan::TSpan</qualifiedname>
        <param>
          <type>element_type(&amp;)</type>
          <declname>arr</declname>
          <array>[N]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="174" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="174" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_t_span_1a0885eb85431fdcceb4ea5378450f7608" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>Detail::IsSeqContainer</type>
            <declname>Container</declname>
            <defname>Container</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr Bvr::Util::TSpan&lt; T &gt;::TSpan</definition>
        <argsstring>(Container &amp;&amp;cont)</argsstring>
        <name>TSpan</name>
        <qualifiedname>Bvr::Util::TSpan::TSpan</qualifiedname>
        <param>
          <type>Container &amp;&amp;</type>
          <declname>cont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="178" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="178" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_t_span_1a0885eb85431fdcceb4ea5378450f7608" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>Detail::IsItContainer</type>
            <declname>Container</declname>
            <defname>Container</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr Bvr::Util::TSpan&lt; T &gt;::TSpan</definition>
        <argsstring>(Container &amp;&amp;cont)</argsstring>
        <name>TSpan</name>
        <qualifiedname>Bvr::Util::TSpan::TSpan</qualifiedname>
        <param>
          <type>Container &amp;&amp;</type>
          <declname>cont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="182" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="182" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_t_span_1ab1adf0dd7cc31d322deff7f3a43dc90a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename It</type>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr Bvr::Util::TSpan&lt; T &gt;::TSpan</definition>
        <argsstring>(It first, It last)</argsstring>
        <name>TSpan</name>
        <qualifiedname>Bvr::Util::TSpan::TSpan</qualifiedname>
        <param>
          <type>It</type>
          <declname>first</declname>
        </param>
        <param>
          <type>It</type>
          <declname>last</declname>
        </param>
    <requiresclause>std::contiguous_iterator&lt;It&gt; &amp;&amp; std::convertible_to&lt; typename std::iterator_traits&lt;It&gt;::value_type(*)[], element_type&gt;    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="186" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="186" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_t_span_1a5aea8899ea9f2bf8f6e1f909f697a4a0" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator" kindref="compound">iterator</ref></type>
        <definition>constexpr iterator Bvr::Util::TSpan&lt; T &gt;::begin</definition>
        <argsstring>() const noexcept</argsstring>
        <name>begin</name>
        <qualifiedname>Bvr::Util::TSpan::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="198" column="31" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="198" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_t_span_1a05ac797ebd66cb3565c52340e2025d14" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator" kindref="compound">iterator</ref></type>
        <definition>constexpr iterator Bvr::Util::TSpan&lt; T &gt;::end</definition>
        <argsstring>() const noexcept</argsstring>
        <name>end</name>
        <qualifiedname>Bvr::Util::TSpan::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="202" column="31" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="202" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_t_span_1ae9fc22e2a819ba33f593b271aa75ee71" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr reverse_iterator</type>
        <definition>constexpr reverse_iterator Bvr::Util::TSpan&lt; T &gt;::rbegin</definition>
        <argsstring>() const noexcept</argsstring>
        <name>rbegin</name>
        <qualifiedname>Bvr::Util::TSpan::rbegin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="206" column="39" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="206" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_t_span_1a3631d1c18107bce8df8a4596f9a29803" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr reverse_iterator</type>
        <definition>constexpr reverse_iterator Bvr::Util::TSpan&lt; T &gt;::rend</definition>
        <argsstring>() const noexcept</argsstring>
        <name>rend</name>
        <qualifiedname>Bvr::Util::TSpan::rend</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="210" column="39" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="210" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_t_span_1a8a60c60f061f9b495b718ae96a72d472" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr reference</type>
        <definition>constexpr reference Bvr::Util::TSpan&lt; T &gt;::operator[]</definition>
        <argsstring>(size_type idx) const noexcept</argsstring>
        <name>operator[]</name>
        <qualifiedname>Bvr::Util::TSpan::operator[]</qualifiedname>
        <param>
          <type>size_type</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="215" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="215" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_t_span_1a597890366d07a84ad0a0eca81b769dcc" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr pointer</type>
        <definition>constexpr pointer Bvr::Util::TSpan&lt; T &gt;::data</definition>
        <argsstring>() const noexcept</argsstring>
        <name>data</name>
        <qualifiedname>Bvr::Util::TSpan::data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="220" column="31" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="220" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_t_span_1a3471aed41868c5cf5b07ac143e23a80e" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr reference</type>
        <definition>constexpr reference Bvr::Util::TSpan&lt; T &gt;::front</definition>
        <argsstring>() const noexcept</argsstring>
        <name>front</name>
        <qualifiedname>Bvr::Util::TSpan::front</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="224" column="33" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="224" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_t_span_1a5b558ea1819c7c36cb42ab9443a95067" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr reference</type>
        <definition>constexpr reference Bvr::Util::TSpan&lt; T &gt;::back</definition>
        <argsstring>() const noexcept</argsstring>
        <name>back</name>
        <qualifiedname>Bvr::Util::TSpan::back</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="229" column="33" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="229" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_t_span_1a3922d992f9b52537132130c63bb3824b" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr size_type</type>
        <definition>constexpr size_type Bvr::Util::TSpan&lt; T &gt;::size</definition>
        <argsstring>() const noexcept</argsstring>
        <name>size</name>
        <qualifiedname>Bvr::Util::TSpan::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="234" column="33" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="234" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_t_span_1a624b497ad02128eaa50f5dd654b9b75f" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool Bvr::Util::TSpan&lt; T &gt;::empty</definition>
        <argsstring>() const noexcept</argsstring>
        <name>empty</name>
        <qualifiedname>Bvr::Util::TSpan::empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="238" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="238" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_t_span_1a05763b68dc00bc3245c9d1965afe00e5" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr size_type</type>
        <definition>constexpr size_type Bvr::Util::TSpan&lt; T &gt;::size_bytes</definition>
        <argsstring>() const noexcept</argsstring>
        <name>size_bytes</name>
        <qualifiedname>Bvr::Util::TSpan::size_bytes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="242" column="33" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="242" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_t_span_1a7229ff1b8f5ea2b5e34695ab42a13f00" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="class_bvr_1_1_util_1_1_t_span" kindref="compound">TSpan</ref></type>
        <definition>constexpr TSpan Bvr::Util::TSpan&lt; T &gt;::first</definition>
        <argsstring>(size_type count) const noexcept</argsstring>
        <name>first</name>
        <qualifiedname>Bvr::Util::TSpan::first</qualifiedname>
        <param>
          <type>size_type</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="246" column="29" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="246" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_t_span_1af319fd09197809d37f10ac3e760b47eb" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="class_bvr_1_1_util_1_1_t_span" kindref="compound">TSpan</ref></type>
        <definition>constexpr TSpan Bvr::Util::TSpan&lt; T &gt;::last</definition>
        <argsstring>(size_type count) const noexcept</argsstring>
        <name>last</name>
        <qualifiedname>Bvr::Util::TSpan::last</qualifiedname>
        <param>
          <type>size_type</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="251" column="29" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="251" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_t_span_1a19e53977dc55551af905b9a892391ea8" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="class_bvr_1_1_util_1_1_t_span" kindref="compound">TSpan</ref></type>
        <definition>constexpr TSpan Bvr::Util::TSpan&lt; T &gt;::subspan</definition>
        <argsstring>(size_type offset, size_type count) const noexcept</argsstring>
        <name>subspan</name>
        <qualifiedname>Bvr::Util::TSpan::subspan</qualifiedname>
        <param>
          <type>size_type</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>size_type</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="257" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="257" bodyend="260"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="143" column="12" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="143" bodyend="265"/>
    <listofallmembers>
      <member refid="class_bvr_1_1_util_1_1_t_span_1a5b558ea1819c7c36cb42ab9443a95067" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>back</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1a5aea8899ea9f2bf8f6e1f909f697a4a0" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>begin</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1a98bd64c7f8d1d6b8cdfe817395c225a9" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>const_pointer</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1a6ba47dc98d6372931076f5517fe7bcb1" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>const_reference</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1a597890366d07a84ad0a0eca81b769dcc" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>data</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1a235a7811e5f2c9996e31901d0961e6f8" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>difference_type</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1ab85f798a70e4b427651f049ac7cecbf7" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>element_type</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1a624b497ad02128eaa50f5dd654b9b75f" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>empty</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1a05ac797ebd66cb3565c52340e2025d14" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>end</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1a7229ff1b8f5ea2b5e34695ab42a13f00" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>first</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1a3471aed41868c5cf5b07ac143e23a80e" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>front</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1ac6d17281b40f01f82bb9ae83c53f9f67" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>iterator</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1af319fd09197809d37f10ac3e760b47eb" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>last</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1aec7028b7a816eee316321c89fa6e768e" prot="private" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>m_pData</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1a168f27702fd531abbe3350b0a4b07890" prot="private" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>m_size</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1af741de18975bc96ba3435e9c1550b379" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>operator=</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1affd17e3d185109d7173f895d01a2363b" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>operator=</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1a8a60c60f061f9b495b718ae96a72d472" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>operator[]</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1a7ec95993636eee04c213a8e60ac03adf" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>pointer</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1ae9fc22e2a819ba33f593b271aa75ee71" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>rbegin</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1a120e9f7b2e69ed59beb51602c4a1e11d" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>reference</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1a3631d1c18107bce8df8a4596f9a29803" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>rend</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1ae96caea7ac51e7a7b8c057444e837dcf" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>reverse_iterator</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1a3922d992f9b52537132130c63bb3824b" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>size</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1a05763b68dc00bc3245c9d1965afe00e5" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>size_bytes</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1a2159c013a6d30acff9232c57a941d123" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>size_type</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1a19e53977dc55551af905b9a892391ea8" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>subspan</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1a76a803630dee71509406db0004d9d8d2" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>TSpan</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1a8c6b49adf7d49b21ea55d5cbcf88b2e9" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>TSpan</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1abcb481660979bb7e45057ce047270127" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>TSpan</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1ac5f0dad7af6c0d88507eac006dde64bf" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>TSpan</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1a6300e55ecac2bcfa026cfc79ff0f39d7" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>TSpan</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1aef490435c60f7dec58dee3c87c5c0447" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>TSpan</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1a0885eb85431fdcceb4ea5378450f7608" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>TSpan</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1a0885eb85431fdcceb4ea5378450f7608" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>TSpan</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1ab1adf0dd7cc31d322deff7f3a43dc90a" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>TSpan</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1ac1206bb0cf6999a337b550ac98d0fb9d" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>value_type</name></member>
      <member refid="class_bvr_1_1_util_1_1_t_span_1a6619d93b87aef93a10d205adf0596bd3" prot="public" virt="non-virtual"><scope>Bvr::Util::TSpan</scope><name>~TSpan</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_bvr_1_1_t_handle_pool" kind="class" language="C++" prot="public">
    <compoundname>Bvr::THandlePool</compoundname>
    <innerclass refid="struct_bvr_1_1_t_handle_pool_1_1iterator" prot="public">Bvr::THandlePool::iterator</innerclass>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename TagT</type>
        <defval>T</defval>
      </param>
    </templateparamlist>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_bvr_1_1_t_handle_pool_1a783d53f5a48fd161ed79ef3e9a3caa8d" prot="private" static="no">
        <type>T</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::ResourceT =  T</definition>
        <argsstring></argsstring>
        <name>ResourceT</name>
        <qualifiedname>Bvr::THandlePool::ResourceT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="8" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_t_handle_pool_1aa64b3f29a646a80b4c88f021dbb81d23" prot="private" static="no">
        <type>ResourceT *</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::MemoryT =  ResourceT*</definition>
        <argsstring></argsstring>
        <name>MemoryT</name>
        <qualifiedname>Bvr::THandlePool::MemoryT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="9" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_t_handle_pool_1adc345823178a7b5814d22a2a5d374d4d" prot="private" static="no">
        <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">THandle</ref>&lt; TagT &gt;</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::HandleT =  THandle&lt;TagT&gt;</definition>
        <argsstring></argsstring>
        <name>HandleT</name>
        <qualifiedname>Bvr::THandlePool::HandleT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="10" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_t_handle_pool_1a88b30fb3c288cc9f1359443437768aa0" prot="private" static="no">
        <type><ref refid="class_bvr_1_1_e_c_s_1_1_t_sparse_set_traits" kindref="compound">ECS::TSparseSetTraits</ref>&lt; <ref refid="struct_bvr_1_1_t_handle" kindref="compound">HandleT</ref> &gt;</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::THandleTraits =  ECS::TSparseSetTraits&lt;HandleT&gt;</definition>
        <argsstring></argsstring>
        <name>THandleTraits</name>
        <qualifiedname>Bvr::THandlePool::THandleTraits</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="11" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_t_handle_pool_1ad2ce4748cc7ce7ceba4bf3093bafa2c8" prot="private" static="no">
        <type>typename HandleT::IdT</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::IdT =  typename HandleT::IdT</definition>
        <argsstring></argsstring>
        <name>IdT</name>
        <qualifiedname>Bvr::THandlePool::IdT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="12" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_t_handle_pool_1a783d5a1b25f661d24bdde64af7534f5a" prot="private" static="no">
        <type>std::allocator&lt; ResourceT &gt;</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::TAlloc =  std::allocator&lt;ResourceT&gt;</definition>
        <argsstring></argsstring>
        <name>TAlloc</name>
        <qualifiedname>Bvr::THandlePool::TAlloc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="14" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_t_handle_pool_1a6fbb77250e096487d11b763461247217" prot="private" static="no">
        <type>std::allocator_traits&lt; TAlloc &gt;</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::TAllocTraits =  std::allocator_traits&lt;TAlloc&gt;</definition>
        <argsstring></argsstring>
        <name>TAllocTraits</name>
        <qualifiedname>Bvr::THandlePool::TAllocTraits</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="15" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_t_handle_pool_1ac447c65a3436982253b798e1af5feb1a" prot="private" static="no">
        <type>typename TAllocTraits::template rebind_alloc&lt; <ref refid="struct_bvr_1_1_t_handle" kindref="compound">HandleT</ref> &gt;</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::THandleAlloc =  typename TAllocTraits::template rebind_alloc&lt;HandleT&gt;</definition>
        <argsstring></argsstring>
        <name>THandleAlloc</name>
        <qualifiedname>Bvr::THandlePool::THandleAlloc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="16" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_t_handle_pool_1a54b1e528bfb2db26f2d21f9ae9cb2808" prot="private" static="no">
        <type>typename TAllocTraits::template rebind_traits&lt; <ref refid="struct_bvr_1_1_t_handle" kindref="compound">HandleT</ref> &gt;</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::THandleAllocTraits =  typename TAllocTraits::template rebind_traits&lt;HandleT&gt;</definition>
        <argsstring></argsstring>
        <name>THandleAllocTraits</name>
        <qualifiedname>Bvr::THandlePool::THandleAllocTraits</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="17" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_t_handle_pool_1a78508ba4c8eda8791f5313657a18ae53" prot="private" static="no">
        <type>std::vector&lt; <ref refid="struct_bvr_1_1_t_handle" kindref="compound">HandleT</ref>, THandleAlloc &gt;</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::THandleStorage =  std::vector&lt;HandleT, THandleAlloc&gt;</definition>
        <argsstring></argsstring>
        <name>THandleStorage</name>
        <qualifiedname>Bvr::THandlePool::THandleStorage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="20" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_t_handle_pool_1a50367f188937487b08b5a87f2692c7b1" prot="private" static="no">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>typename std::enable_if&lt; std::is_same_v&lt; U, ResourceT &gt;||std::is_same_v&lt; U, TagT &gt;, T * &gt;::type</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::GetT =  typename std::enable_if&lt; std::is_same_v&lt;U, ResourceT&gt; || std::is_same_v&lt;U, TagT&gt;, T*&gt;::type</definition>
        <argsstring></argsstring>
        <name>GetT</name>
        <qualifiedname>Bvr::THandlePool::GetT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="23" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_bvr_1_1_t_handle_pool_1a79945fa2e21ce6e345459b531509f175" prot="public" static="no">
        <type>typename THandleAllocTraits::size_type</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::size_type =  typename THandleAllocTraits::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <qualifiedname>Bvr::THandlePool::size_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="29" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_t_handle_pool_1a729499d31a78c3ba006d462be0e48eda" prot="public" static="no">
        <type>typename THandleAllocTraits::difference_type</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::difference_type =  typename THandleAllocTraits::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <qualifiedname>Bvr::THandlePool::difference_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="30" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_t_handle_pool_1af6934be27fd1988134d04afebe533b96" prot="public" static="no">
        <type><ref refid="struct_bvr_1_1_t_handle_pool_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::const_iterator =  iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <qualifiedname>Bvr::THandlePool::const_iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="88" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_t_handle_pool_1a764212cf95b52f805c2cb05b972b6343" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto Bvr::THandlePool&lt; T, TagT &gt;::Null</definition>
        <argsstring></argsstring>
        <name>Null</name>
        <qualifiedname>Bvr::THandlePool::Null</qualifiedname>
        <initializer>= ECS::Null</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="26" column="27" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_t_handle_pool_1a88d3a403e054346b23f51de1fe98aadd" prot="private" static="no" mutable="no">
        <type>THandleStorage</type>
        <definition>THandleStorage Bvr::THandlePool&lt; T, TagT &gt;::m_entities</definition>
        <argsstring></argsstring>
        <name>m_entities</name>
        <qualifiedname>Bvr::THandlePool::m_entities</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="234" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_t_handle_pool_1a36bd91e350a08daaa16c21a8b24de765" prot="private" static="no" mutable="no">
        <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">HandleT</ref></type>
        <definition>HandleT Bvr::THandlePool&lt; T, TagT &gt;::m_freeList</definition>
        <argsstring></argsstring>
        <name>m_freeList</name>
        <qualifiedname>Bvr::THandlePool::m_freeList</qualifiedname>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="235" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="235" bodyend="235"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_t_handle_pool_1a48853c764ab80eb7cb55af94a7795101" prot="private" static="no" mutable="no">
        <type>difference_type</type>
        <definition>difference_type Bvr::THandlePool&lt; T, TagT &gt;::m_aliveCount</definition>
        <argsstring></argsstring>
        <name>m_aliveCount</name>
        <qualifiedname>Bvr::THandlePool::m_aliveCount</qualifiedname>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="236" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="236" bodyend="236"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_t_handle_pool_1a0ede9884768a35369f5fefd6771ee52a" prot="private" static="no" mutable="no">
        <type>TAlloc</type>
        <definition>TAlloc Bvr::THandlePool&lt; T, TagT &gt;::m_allocator</definition>
        <argsstring></argsstring>
        <name>m_allocator</name>
        <qualifiedname>Bvr::THandlePool::m_allocator</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="237" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="237" bodyend="237"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_t_handle_pool_1aca9cf4288fc89af0efb65a46f96e4ae1" prot="private" static="no" mutable="no">
        <type>MemoryT</type>
        <definition>MemoryT Bvr::THandlePool&lt; T, TagT &gt;::m_pData</definition>
        <argsstring></argsstring>
        <name>m_pData</name>
        <qualifiedname>Bvr::THandlePool::m_pData</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="238" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="238" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1a80fcd8a2018a4ee164f7ad90809d3c94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::THandlePool&lt; T, TagT &gt;::THandlePool</definition>
        <argsstring>()=default</argsstring>
        <name>THandlePool</name>
        <qualifiedname>Bvr::THandlePool::THandlePool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="90" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1a97b95822345b5748f9afa993534aedb1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::THandlePool&lt; T, TagT &gt;::~THandlePool</definition>
        <argsstring>()</argsstring>
        <name>~THandlePool</name>
        <qualifiedname>Bvr::THandlePool::~THandlePool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="91" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1af5597ef0cc9d729336e9cb537b755ade" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">HandleT</ref></type>
        <definition>HandleT Bvr::THandlePool&lt; T, TagT &gt;::emplace</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>emplace</name>
        <qualifiedname>Bvr::THandlePool::emplace</qualifiedname>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="93" column="26" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="93" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1aa23baf5a2ad22a509579d87348b4456d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::THandlePool&lt; T, TagT &gt;::IsValid</definition>
        <argsstring>(HandleT handle) const noexcept</argsstring>
        <name>IsValid</name>
        <qualifiedname>Bvr::THandlePool::IsValid</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">HandleT</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="110" column="18" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="110" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1a63c18d20e46b608d4e901002e45470ce" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::THandlePool&lt; T, TagT &gt;::empty</definition>
        <argsstring>() const noexcept</argsstring>
        <name>empty</name>
        <qualifiedname>Bvr::THandlePool::empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="117" column="18" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1a39ab3ef52dd35e54b44d64b296483818" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type Bvr::THandlePool&lt; T, TagT &gt;::size</definition>
        <argsstring>() const noexcept</argsstring>
        <name>size</name>
        <qualifiedname>Bvr::THandlePool::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="118" column="23" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="118" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1a7adbe52b3bb7185ab4595ac36db3e0d6" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type Bvr::THandlePool&lt; T, TagT &gt;::capacity</definition>
        <argsstring>() const noexcept</argsstring>
        <name>capacity</name>
        <qualifiedname>Bvr::THandlePool::capacity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="121" column="23" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="121" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1ab6e69fb06af8fcc9249bb37b3013e619" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>GetT&lt; U &gt;</type>
        <definition>GetT&lt; U &gt; Bvr::THandlePool&lt; T, TagT &gt;::assure</definition>
        <argsstring>(THandle&lt; U &gt; handle) noexcept</argsstring>
        <name>assure</name>
        <qualifiedname>Bvr::THandlePool::assure</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">THandle</ref>&lt; U &gt;</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="127" column="18" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="127" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1adb7260232f544c015a36defdca0831d8" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>const GetT&lt; U &gt;</type>
        <definition>const GetT&lt; U &gt; Bvr::THandlePool&lt; T, TagT &gt;::assure</definition>
        <argsstring>(THandle&lt; U &gt; handle) const noexcept</argsstring>
        <name>assure</name>
        <qualifiedname>Bvr::THandlePool::assure</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">THandle</ref>&lt; U &gt;</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="132" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="132" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1a6209bd87542483d8d217a54ac153ce2d" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>GetT&lt; U &gt;</type>
        <definition>GetT&lt; U &gt; Bvr::THandlePool&lt; T, TagT &gt;::get</definition>
        <argsstring>(THandle&lt; U &gt; handle) noexcept</argsstring>
        <name>get</name>
        <qualifiedname>Bvr::THandlePool::get</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">THandle</ref>&lt; U &gt;</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="137" column="18" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="137" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1a39e757181af0e8773e72527d75fe9603" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>const GetT&lt; U &gt;</type>
        <definition>const GetT&lt; U &gt; Bvr::THandlePool&lt; T, TagT &gt;::get</definition>
        <argsstring>(THandle&lt; U &gt; handle) const noexcept</argsstring>
        <name>get</name>
        <qualifiedname>Bvr::THandlePool::get</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">THandle</ref>&lt; U &gt;</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="141" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="141" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1aad8a1ccc7ed81241fd8f76e09a6ae082" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::THandlePool&lt; T, TagT &gt;::release</definition>
        <argsstring>(HandleT handle) noexcept</argsstring>
        <name>release</name>
        <qualifiedname>Bvr::THandlePool::release</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">HandleT</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="145" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="145" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1af1fb1dbe1aeec7b6d3c0e187e8908e1d" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::THandlePool&lt; T, TagT &gt;::clear</definition>
        <argsstring>() noexcept</argsstring>
        <name>clear</name>
        <qualifiedname>Bvr::THandlePool::clear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="160" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="160" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1ad8fb56932ec31db8f8c6645c40710d9a" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_t_handle_pool_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>iterator Bvr::THandlePool&lt; T, TagT &gt;::begin</definition>
        <argsstring>() noexcept</argsstring>
        <name>begin</name>
        <qualifiedname>Bvr::THandlePool::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="178" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="178" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1a7d8d534fab7a7eedc8f1c75700312de7" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_t_handle_pool_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>iterator Bvr::THandlePool&lt; T, TagT &gt;::end</definition>
        <argsstring>() noexcept</argsstring>
        <name>end</name>
        <qualifiedname>Bvr::THandlePool::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="185" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="185" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1acd800067c0eece1d19ced3cda02df122" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_t_handle_pool_1_1iterator" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator Bvr::THandlePool&lt; T, TagT &gt;::begin</definition>
        <argsstring>() const noexcept</argsstring>
        <name>begin</name>
        <qualifiedname>Bvr::THandlePool::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="187" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="187" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1a29da568244a737441a113c7cecd337d2" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_t_handle_pool_1_1iterator" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator Bvr::THandlePool&lt; T, TagT &gt;::end</definition>
        <argsstring>() const noexcept</argsstring>
        <name>end</name>
        <qualifiedname>Bvr::THandlePool::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="194" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="194" bodyend="196"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1a233833b7e2c9e2c68b4ea9061f42d0c1" prot="private" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::THandlePool&lt; T, TagT &gt;::grow</definition>
        <argsstring>() noexcept</argsstring>
        <name>grow</name>
        <qualifiedname>Bvr::THandlePool::grow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="199" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="199" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1aa4143151fec3234679b10b5ec169fbae" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ResourceT *</type>
        <definition>ResourceT * Bvr::THandlePool&lt; T, TagT &gt;::GetElem</definition>
        <argsstring>(IdT idx) const</argsstring>
        <name>GetElem</name>
        <qualifiedname>Bvr::THandlePool::GetElem</qualifiedname>
        <param>
          <type>IdT</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="229" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="229" bodyend="231"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="7" column="16" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="7" bodyend="239"/>
    <listofallmembers>
      <member refid="class_bvr_1_1_t_handle_pool_1ab6e69fb06af8fcc9249bb37b3013e619" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>assure</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1adb7260232f544c015a36defdca0831d8" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>assure</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1ad8fb56932ec31db8f8c6645c40710d9a" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>begin</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1acd800067c0eece1d19ced3cda02df122" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>begin</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a7adbe52b3bb7185ab4595ac36db3e0d6" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>capacity</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1af1fb1dbe1aeec7b6d3c0e187e8908e1d" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>clear</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1af6934be27fd1988134d04afebe533b96" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>const_iterator</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a729499d31a78c3ba006d462be0e48eda" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>difference_type</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1af5597ef0cc9d729336e9cb537b755ade" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>emplace</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a63c18d20e46b608d4e901002e45470ce" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>empty</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a7d8d534fab7a7eedc8f1c75700312de7" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>end</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a29da568244a737441a113c7cecd337d2" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>end</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a6209bd87542483d8d217a54ac153ce2d" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>get</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a39e757181af0e8773e72527d75fe9603" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>get</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1aa4143151fec3234679b10b5ec169fbae" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>GetElem</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a50367f188937487b08b5a87f2692c7b1" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>GetT</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a233833b7e2c9e2c68b4ea9061f42d0c1" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>grow</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1adc345823178a7b5814d22a2a5d374d4d" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>HandleT</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1ad2ce4748cc7ce7ceba4bf3093bafa2c8" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>IdT</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1aa23baf5a2ad22a509579d87348b4456d" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>IsValid</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a48853c764ab80eb7cb55af94a7795101" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>m_aliveCount</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a0ede9884768a35369f5fefd6771ee52a" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>m_allocator</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a88d3a403e054346b23f51de1fe98aadd" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>m_entities</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a36bd91e350a08daaa16c21a8b24de765" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>m_freeList</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1aca9cf4288fc89af0efb65a46f96e4ae1" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>m_pData</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1aa64b3f29a646a80b4c88f021dbb81d23" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>MemoryT</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a764212cf95b52f805c2cb05b972b6343" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>Null</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1aad8a1ccc7ed81241fd8f76e09a6ae082" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>release</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a783d53f5a48fd161ed79ef3e9a3caa8d" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>ResourceT</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a39ab3ef52dd35e54b44d64b296483818" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>size</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a79945fa2e21ce6e345459b531509f175" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>size_type</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a783d5a1b25f661d24bdde64af7534f5a" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>TAlloc</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a6fbb77250e096487d11b763461247217" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>TAllocTraits</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1ac447c65a3436982253b798e1af5feb1a" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>THandleAlloc</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a54b1e528bfb2db26f2d21f9ae9cb2808" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>THandleAllocTraits</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a80fcd8a2018a4ee164f7ad90809d3c94" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>THandlePool</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a78508ba4c8eda8791f5313657a18ae53" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>THandleStorage</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a88b30fb3c288cc9f1359443437768aa0" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>THandleTraits</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a97b95822345b5748f9afa993534aedb1" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>~THandlePool</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

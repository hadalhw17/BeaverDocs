<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4" kind="class" language="C++" prot="public">
    <compoundname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename...</type>
        <declname>Inc</declname>
        <defname>Inc</defname>
      </param>
      <param>
        <type>typename...</type>
        <declname>Filter</declname>
        <defname>Filter</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a52b0025d3780abefa8e3452eae4fc042" prot="private" static="no">
        <type>std::tuple&lt; <ref refid="class_bvr_1_1_e_c_s_1_1_t_pool" kindref="compound">TPool</ref>&lt; T &gt; *, <ref refid="class_bvr_1_1_e_c_s_1_1_t_pool" kindref="compound">TPool</ref>&lt; Inc &gt; *..., <ref refid="class_bvr_1_1_e_c_s_1_1_t_pool" kindref="compound">TPool</ref>&lt; Filter &gt; *... &gt;</type>
        <definition>using Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::TStorage =  std::tuple&lt;TPool&lt;T&gt;*, TPool&lt;Inc&gt;*..., TPool&lt;Filter&gt;*...&gt;</definition>
        <argsstring></argsstring>
        <name>TStorage</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::TStorage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="281" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="281" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1ae56ab8e8bad973bf983b5f3d18bf8285" prot="public" static="no">
        <type>T</type>
        <definition>using Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::TBaseComp =  T</definition>
        <argsstring></argsstring>
        <name>TBaseComp</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::TBaseComp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="283" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a9b93db0aa68b782a06387166cbcd2b90" prot="public" static="no">
        <type><ref refid="class_bvr_1_1_e_c_s_1_1_t_pool" kindref="compound">TPool</ref>&lt; TBaseComp &gt;</type>
        <definition>using Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::TBasePool =  TPool&lt;TBaseComp&gt;</definition>
        <argsstring></argsstring>
        <name>TBasePool</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::TBasePool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="284" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a6581e0a42bc80562f61e91b09d6974fc" prot="public" static="no">
        <type><ref refid="class_bvr_1_1_e_c_s_1_1_query_iterator" kindref="compound">QueryIterator</ref>&lt; <ref refid="class_bvr_1_1_e_c_s_1_1_t_query" kindref="compound">TQuery</ref> &gt;</type>
        <definition>using Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::iterator =  QueryIterator&lt;TQuery&gt;</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="285" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a0e02540c19118ec1b9051b0e50f2f2b0" prot="public" static="no">
        <type><ref refid="class_bvr_1_1_e_c_s_1_1_query_iterator" kindref="compound">QueryIterator</ref>&lt; <ref refid="class_bvr_1_1_e_c_s_1_1_t_query" kindref="compound">TQuery</ref> &gt;</type>
        <definition>using Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::const_iterator =  QueryIterator&lt;TQuery&gt;</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::const_iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="286" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a3f86b679ae96bf276aa265631164d6c2" prot="public" static="no">
        <type>typename TBasePool::EntityT</type>
        <definition>using Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::EntityT =  typename TBasePool::EntityT</definition>
        <argsstring></argsstring>
        <name>EntityT</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::EntityT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="287" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a822224ffd645b54721e93438081f7e08" prot="public" static="no">
        <type>typename TBasePool::size_type</type>
        <definition>using Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::size_type =  typename TBasePool::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::size_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="288" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="288" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a703acc2b7350b69a14e458644291fa62" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::TotalCount</definition>
        <argsstring></argsstring>
        <name>TotalCount</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::TotalCount</qualifiedname>
        <initializer>= sizeof...(Inc) + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="279" column="27" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="279" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a2e6dce791596a50eced82ac694e22b22" prot="private" static="no" mutable="no">
        <type>TStorage</type>
        <definition>TStorage Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::m_pools</definition>
        <argsstring></argsstring>
        <name>m_pools</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::m_pools</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="447" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="447" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1aaaada85bfc677eed305389df256e66e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::TQuery</definition>
        <argsstring>()=default</argsstring>
        <name>TQuery</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::TQuery</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="290" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1ae6362fb66fd33d9a430dda2029b66aa7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::TQuery</definition>
        <argsstring>(TStorage &amp;&amp;pools)</argsstring>
        <name>TQuery</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::TQuery</qualifiedname>
        <param>
          <type>TStorage &amp;&amp;</type>
          <declname>pools</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="291" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="291" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a5745a9c70a1c0af81ae965c640f244f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::~TQuery</definition>
        <argsstring>()=default</argsstring>
        <name>~TQuery</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::~TQuery</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="292" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1abc81d54a51ccece4435c1de10f6fd8b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>decltype(auto)</type>
        <definition>decltype(auto) Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::GetSingle</definition>
        <argsstring>()</argsstring>
        <name>GetSingle</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::GetSingle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="294" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="294" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a8bb047e0d1c7d6b8d8f317a846661bed" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>decltype(auto)</type>
        <definition>decltype(auto) Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::GetSingle</definition>
        <argsstring>() const</argsstring>
        <name>GetSingle</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::GetSingle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="300" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="300" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1ab3c67b17ca0f3ca81ce0dd2c830e93e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>decltype(auto)</type>
        <definition>decltype(auto) Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::GetTpl</definition>
        <argsstring>(const EntityT ent)</argsstring>
        <name>GetTpl</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::GetTpl</qualifiedname>
        <param>
          <type>const EntityT</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="306" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="306" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1ad0aab6f8cc9e7dd9746dfc866de4c7fe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>decltype(auto)</type>
        <definition>decltype(auto) Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::GetTpl</definition>
        <argsstring>(const EntityT ent) const</argsstring>
        <name>GetTpl</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::GetTpl</qualifiedname>
        <param>
          <type>const EntityT</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="315" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="315" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a1e6f92b195b4176c17d1072b85e89cfc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Comp</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Ex</declname>
            <defname>Ex</defname>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::Get</definition>
        <argsstring>(const EntityT ent)</argsstring>
        <name>Get</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::Get</qualifiedname>
        <param>
          <type>const EntityT</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="325" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="325" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1ab49907d4cc8100b3e2498f4ee0d7a66d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Comp</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Ex</declname>
            <defname>Ex</defname>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::Get</definition>
        <argsstring>(const EntityT ent) const</argsstring>
        <name>Get</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::Get</qualifiedname>
        <param>
          <type>const EntityT</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="338" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="338" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a6b52846cd2f2219db90f4709dba9a4b0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::Size</definition>
        <argsstring>() const</argsstring>
        <name>Size</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::Size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="350" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="350" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1ae0cd22e6b825a0c8f2e361d56a56ddb0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::Empty</definition>
        <argsstring>() const</argsstring>
        <name>Empty</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::Empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="360" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="360" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a05c4d2f6532fad92ae78d83793867d1e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::operator bool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="361" column="12" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="361" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1abdc5a4fc570fc43d46584da5902b7f07" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::IsValid</definition>
        <argsstring>() const</argsstring>
        <name>IsValid</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::IsValid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="362" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="362" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a18dabc017fc61b50b830b025f592446e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::Contains</definition>
        <argsstring>(const EntityT ent) const</argsstring>
        <name>Contains</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::Contains</qualifiedname>
        <param>
          <type>const EntityT</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="364" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="364" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a65112a01f074ab22c97792816bd8ce48" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Comp</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Ex</declname>
            <defname>Ex</defname>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::get</definition>
        <argsstring>(const EntityT ent)</argsstring>
        <name>get</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::get</qualifiedname>
        <param>
          <type>const EntityT</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="372" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="372" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1aee4e1073123aa322242236950f5c91c0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Comp</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Ex</declname>
            <defname>Ex</defname>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::get</definition>
        <argsstring>(const EntityT ent) const</argsstring>
        <name>get</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::get</qualifiedname>
        <param>
          <type>const EntityT</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="376" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="376" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1ab245c372212a6c98bac7d492de2e142f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::contains</definition>
        <argsstring>(const EntityT ent) const</argsstring>
        <name>contains</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::contains</qualifiedname>
        <param>
          <type>const EntityT</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="379" column="20" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="379" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a9062ac068859a057c707ca99daec086a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_e_c_s_1_1_query_iterator" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="381" column="20" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="381" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a8b58e2951188dfaf080d0ff80fa565ce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_e_c_s_1_1_query_iterator" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="384" column="20" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="384" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a4581d8858dba7fea6e135077cd9f2571" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="388" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="388" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a78ced52dffe69462d1bab5a5cebe43df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_e_c_s_1_1_t_pool" kindref="compound">TPool</ref>&lt; TBaseComp &gt; &amp;</type>
        <definition>TPool&lt; TBaseComp &gt; &amp; Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::GetPool</definition>
        <argsstring>()</argsstring>
        <name>GetPool</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::GetPool</qualifiedname>
    <requiresclause>(sizeof...(Inc) == 0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="390" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="390" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a6a0c537a6ee4f18b9bd9593b9cf494ed" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_bvr_1_1_e_c_s_1_1_t_pool" kindref="compound">TPool</ref>&lt; TBaseComp &gt; &amp;</type>
        <definition>const TPool&lt; TBaseComp &gt; &amp; Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::GetPool</definition>
        <argsstring>() const</argsstring>
        <name>GetPool</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::GetPool</qualifiedname>
    <requiresclause>(sizeof...(Inc) == 0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="395" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="395" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a714afc39ddfd49326a0b54bf6674ec96" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Comp</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_bvr_1_1_e_c_s_1_1_t_pool" kindref="compound">TPool</ref>&lt; Comp &gt; &amp;</type>
        <definition>TPool&lt; Comp &gt; &amp; Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::GetPool</definition>
        <argsstring>()</argsstring>
        <name>GetPool</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::GetPool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="401" column="23" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="401" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a7f888456719abd25087f4f7bdd44d7eb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Comp</type>
          </param>
        </templateparamlist>
        <type>const <ref refid="class_bvr_1_1_e_c_s_1_1_t_pool" kindref="compound">TPool</ref>&lt; Comp &gt; &amp;</type>
        <definition>const TPool&lt; Comp &gt; &amp; Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::GetPool</definition>
        <argsstring>() const</argsstring>
        <name>GetPool</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::GetPool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="404" column="29" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="404" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a8c4a52c9038043b0025ed9aaff4f6b33" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="concept_bvr_1_1_detail_1_1_invokable" kindref="compound">Bvr::Detail::Invokable</ref></type>
            <declname>TFn</declname>
            <defname>TFn</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::each</definition>
        <argsstring>(const TFn &amp;fn)</argsstring>
        <name>each</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::each</qualifiedname>
        <param>
          <type>const TFn &amp;</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="408" column="22" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="408" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1ac85a3119244ff7813070e6a557d4b825" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="concept_bvr_1_1_detail_1_1_invokable" kindref="compound">Bvr::Detail::Invokable</ref></type>
            <declname>TFn</declname>
            <defname>TFn</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::each</definition>
        <argsstring>(const TFn &amp;fn) const</argsstring>
        <name>each</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::each</qualifiedname>
        <param>
          <type>const TFn &amp;</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="415" column="22" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="415" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1ac8caea655ff014fa9460115e405ea9e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TComponent</type>
          </param>
          <param>
            <type>typename TFn</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::patch</definition>
        <argsstring>(const EntityT ent, TFn &amp;&amp;fn)</argsstring>
        <name>patch</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::patch</qualifiedname>
        <param>
          <type>const EntityT</type>
          <declname>ent</declname>
        </param>
        <param>
          <type>TFn &amp;&amp;</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="423" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="423" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a37cfd12c45b866068cd878cd5f567e6b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>EntityT</type>
        <definition>EntityT Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::front</definition>
        <argsstring>() const</argsstring>
        <name>front</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::front</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="427" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="427" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a1ce817c01ed401e20de8be331aac2747" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>EntityT</type>
        <definition>EntityT Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::back</definition>
        <argsstring>() const</argsstring>
        <name>back</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::back</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="428" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="428" bodyend="428"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1aeceb57e821bbcd5922fc43ed1247e0dc" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const TBasePool::TSparse *</type>
        <definition>const TBasePool::TSparse * Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::GetBasePool</definition>
        <argsstring>() const</argsstring>
        <name>GetBasePool</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::GetBasePool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="430" column="39" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="430" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a0da4d772dd2ac331971b312a234853d0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TFn</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::Invoke</definition>
        <argsstring>(const TFn &amp;fn, const EntityT ent, Meta::TypeList&lt; Args... &gt;)</argsstring>
        <name>Invoke</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::Invoke</qualifiedname>
        <param>
          <type>const TFn &amp;</type>
          <declname>fn</declname>
        </param>
        <param>
          <type>const EntityT</type>
          <declname>ent</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_meta_1_1_type_list" kindref="compound">Meta::TypeList</ref>&lt; Args... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="435" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="435" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a3e43897e52b12f751321b57cd7e82308" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TFn</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::Invoke</definition>
        <argsstring>(const TFn &amp;fn, const EntityT ent, Meta::TypeList&lt; Args... &gt;) const</argsstring>
        <name>Invoke</name>
        <qualifiedname>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;::Invoke</qualifiedname>
        <param>
          <type>const TFn &amp;</type>
          <declname>fn</declname>
        </param>
        <param>
          <type>const EntityT</type>
          <declname>ent</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_meta_1_1_type_list" kindref="compound">Meta::TypeList</ref>&lt; Args... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="441" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="441" bodyend="444"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="278" column="1" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="278" bodyend="448"/>
    <listofallmembers>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a1ce817c01ed401e20de8be331aac2747" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>back</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a9062ac068859a057c707ca99daec086a" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>begin</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a0e02540c19118ec1b9051b0e50f2f2b0" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>const_iterator</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a18dabc017fc61b50b830b025f592446e" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>Contains</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1ab245c372212a6c98bac7d492de2e142f" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>contains</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a8c4a52c9038043b0025ed9aaff4f6b33" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>each</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1ac85a3119244ff7813070e6a557d4b825" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>each</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1ae0cd22e6b825a0c8f2e361d56a56ddb0" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>Empty</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a4581d8858dba7fea6e135077cd9f2571" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>empty</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a8b58e2951188dfaf080d0ff80fa565ce" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>end</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a3f86b679ae96bf276aa265631164d6c2" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>EntityT</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a37cfd12c45b866068cd878cd5f567e6b" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>front</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a1e6f92b195b4176c17d1072b85e89cfc" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>Get</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1ab49907d4cc8100b3e2498f4ee0d7a66d" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>Get</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a65112a01f074ab22c97792816bd8ce48" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>get</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1aee4e1073123aa322242236950f5c91c0" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>get</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1aeceb57e821bbcd5922fc43ed1247e0dc" prot="private" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>GetBasePool</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a78ced52dffe69462d1bab5a5cebe43df" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>GetPool</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a6a0c537a6ee4f18b9bd9593b9cf494ed" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>GetPool</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a714afc39ddfd49326a0b54bf6674ec96" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>GetPool</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a7f888456719abd25087f4f7bdd44d7eb" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>GetPool</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1abc81d54a51ccece4435c1de10f6fd8b2" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>GetSingle</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a8bb047e0d1c7d6b8d8f317a846661bed" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>GetSingle</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1ab3c67b17ca0f3ca81ce0dd2c830e93e0" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>GetTpl</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1ad0aab6f8cc9e7dd9746dfc866de4c7fe" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>GetTpl</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a0da4d772dd2ac331971b312a234853d0" prot="private" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>Invoke</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a3e43897e52b12f751321b57cd7e82308" prot="private" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>Invoke</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1abdc5a4fc570fc43d46584da5902b7f07" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>IsValid</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a6581e0a42bc80562f61e91b09d6974fc" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>iterator</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a2e6dce791596a50eced82ac694e22b22" prot="private" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>m_pools</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a05c4d2f6532fad92ae78d83793867d1e" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>operator bool</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1ac8caea655ff014fa9460115e405ea9e2" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>patch</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a6b52846cd2f2219db90f4709dba9a4b0" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>Size</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a822224ffd645b54721e93438081f7e08" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>size_type</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1ae56ab8e8bad973bf983b5f3d18bf8285" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>TBaseComp</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a9b93db0aa68b782a06387166cbcd2b90" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>TBasePool</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a703acc2b7350b69a14e458644291fa62" prot="private" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>TotalCount</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1aaaada85bfc677eed305389df256e66e6" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>TQuery</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1ae6362fb66fd33d9a430dda2029b66aa7" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>TQuery</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a52b0025d3780abefa8e3452eae4fc042" prot="private" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>TStorage</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_t_query_3_01_with_3_01_t_00_01_inc_8_8_8_01_4_00_01_with_out_3_01_filter_8_8_8_01_4_01_4_1a5745a9c70a1c0af81ae965c640f244f3" prot="public" virt="non-virtual"><scope>Bvr::ECS::TQuery&lt; With&lt; T, Inc... &gt;, WithOut&lt; Filter... &gt; &gt;</scope><name>~TQuery</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

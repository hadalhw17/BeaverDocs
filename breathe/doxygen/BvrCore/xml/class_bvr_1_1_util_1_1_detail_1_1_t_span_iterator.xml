<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator" kind="class" language="C++" prot="public">
    <compoundname>Bvr::Util::Detail::TSpanIterator</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1ac3fdb09b821dc624cb65456307e0feb9" prot="public" static="no">
        <type>std::contiguous_iterator_tag</type>
        <definition>using Bvr::Util::Detail::TSpanIterator&lt; T &gt;::iterator_category =  std::contiguous_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <qualifiedname>Bvr::Util::Detail::TSpanIterator::iterator_category</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="12" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a051baada2872fc8d009b18cbc0e6d3e0" prot="public" static="no">
        <type>std::remove_cv_t&lt; T &gt;</type>
        <definition>using Bvr::Util::Detail::TSpanIterator&lt; T &gt;::value_type =  std::remove_cv_t&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>Bvr::Util::Detail::TSpanIterator::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="13" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a66fc9e457764a0c97218d01df5ea4638" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using Bvr::Util::Detail::TSpanIterator&lt; T &gt;::difference_type =  std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <qualifiedname>Bvr::Util::Detail::TSpanIterator::difference_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="14" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a6545080a62dd1119aff3b128fdaa1ea1" prot="public" static="no">
        <type>T *</type>
        <definition>using Bvr::Util::Detail::TSpanIterator&lt; T &gt;::pointer =  T*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <qualifiedname>Bvr::Util::Detail::TSpanIterator::pointer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="15" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a2dda977b081a52ea78faf43ef96b3cff" prot="public" static="no">
        <type>T &amp;</type>
        <definition>using Bvr::Util::Detail::TSpanIterator&lt; T &gt;::reference =  T&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <qualifiedname>Bvr::Util::Detail::TSpanIterator::reference</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="16" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a127332b60969b5926d6cec9d5c182f52" prot="private" static="no" mutable="no">
        <type>pointer</type>
        <definition>pointer Bvr::Util::Detail::TSpanIterator&lt; T &gt;::m_ptr</definition>
        <argsstring></argsstring>
        <name>m_ptr</name>
        <qualifiedname>Bvr::Util::Detail::TSpanIterator::m_ptr</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="126" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a3aacf95bd46432e0045d6f34f18326d2" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr Bvr::Util::Detail::TSpanIterator&lt; T &gt;::TSpanIterator</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>TSpanIterator</name>
        <qualifiedname>Bvr::Util::Detail::TSpanIterator::TSpanIterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="19" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a4dff1a771e23290941115e28e1454f5e" prot="public" static="no" constexpr="yes" const="no" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr Bvr::Util::Detail::TSpanIterator&lt; T &gt;::TSpanIterator</definition>
        <argsstring>(pointer ptr) noexcept</argsstring>
        <name>TSpanIterator</name>
        <qualifiedname>Bvr::Util::Detail::TSpanIterator::TSpanIterator</qualifiedname>
        <param>
          <type>pointer</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="20" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="20" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1aadc341654482c7e0b57fbca066a85f9a" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr reference</type>
        <definition>constexpr reference Bvr::Util::Detail::TSpanIterator&lt; T &gt;::operator*</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator*</name>
        <qualifiedname>Bvr::Util::Detail::TSpanIterator::operator*</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="23" column="36" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="23" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a8fe45c0e27e046d8cc056544387235a6" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr pointer</type>
        <definition>constexpr pointer Bvr::Util::Detail::TSpanIterator&lt; T &gt;::operator-&gt;</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator-&gt;</name>
        <qualifiedname>Bvr::Util::Detail::TSpanIterator::operator-&gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="28" column="34" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a5896cea82ff77d1dccb0c3906fb46a21" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr reference</type>
        <definition>constexpr reference Bvr::Util::Detail::TSpanIterator&lt; T &gt;::operator[]</definition>
        <argsstring>(difference_type n) const noexcept</argsstring>
        <name>operator[]</name>
        <qualifiedname>Bvr::Util::Detail::TSpanIterator::operator[]</qualifiedname>
        <param>
          <type>difference_type</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="33" column="36" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a3d5614700cab6d4014e6321b8b289b72" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator" kindref="compound">TSpanIterator</ref> &amp;</type>
        <definition>constexpr TSpanIterator &amp; Bvr::Util::Detail::TSpanIterator&lt; T &gt;::operator++</definition>
        <argsstring>() noexcept</argsstring>
        <name>operator++</name>
        <qualifiedname>Bvr::Util::Detail::TSpanIterator::operator++</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="39" column="40" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="39" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a0f19a45fd1380cee9405de6012f09666" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator" kindref="compound">TSpanIterator</ref></type>
        <definition>constexpr TSpanIterator Bvr::Util::Detail::TSpanIterator&lt; T &gt;::operator++</definition>
        <argsstring>(int) noexcept</argsstring>
        <name>operator++</name>
        <qualifiedname>Bvr::Util::Detail::TSpanIterator::operator++</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="45" column="40" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="45" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1ac1d65b2b6c5de543c66be7eb4f0f90b9" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator" kindref="compound">TSpanIterator</ref> &amp;</type>
        <definition>constexpr TSpanIterator &amp; Bvr::Util::Detail::TSpanIterator&lt; T &gt;::operator--</definition>
        <argsstring>() noexcept</argsstring>
        <name>operator--</name>
        <qualifiedname>Bvr::Util::Detail::TSpanIterator::operator--</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="52" column="40" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="52" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a2525d82a18fe5608bf5b0d18d132086a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator" kindref="compound">TSpanIterator</ref></type>
        <definition>constexpr TSpanIterator Bvr::Util::Detail::TSpanIterator&lt; T &gt;::operator--</definition>
        <argsstring>(int) noexcept</argsstring>
        <name>operator--</name>
        <qualifiedname>Bvr::Util::Detail::TSpanIterator::operator--</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="58" column="40" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="58" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a76764d6dc5c79f2c868eb57a99a37a8d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator" kindref="compound">TSpanIterator</ref> &amp;</type>
        <definition>constexpr TSpanIterator &amp; Bvr::Util::Detail::TSpanIterator&lt; T &gt;::operator+=</definition>
        <argsstring>(difference_type n) noexcept</argsstring>
        <name>operator+=</name>
        <qualifiedname>Bvr::Util::Detail::TSpanIterator::operator+=</qualifiedname>
        <param>
          <type>difference_type</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="66" column="40" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="66" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a6eb248655fbf1de75e6681f02e591aa5" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator" kindref="compound">TSpanIterator</ref> &amp;</type>
        <definition>constexpr TSpanIterator &amp; Bvr::Util::Detail::TSpanIterator&lt; T &gt;::operator-=</definition>
        <argsstring>(difference_type n) noexcept</argsstring>
        <name>operator-=</name>
        <qualifiedname>Bvr::Util::Detail::TSpanIterator::operator-=</qualifiedname>
        <param>
          <type>difference_type</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="72" column="40" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="72" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1abc07d8db112fdf11e806c81b1492eebe" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator" kindref="compound">TSpanIterator</ref></type>
        <definition>constexpr TSpanIterator Bvr::Util::Detail::TSpanIterator&lt; T &gt;::operator+</definition>
        <argsstring>(difference_type n) const noexcept</argsstring>
        <name>operator+</name>
        <qualifiedname>Bvr::Util::Detail::TSpanIterator::operator+</qualifiedname>
        <param>
          <type>difference_type</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="78" column="40" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1ac32fdc144213bee1e5032df4fe8e8b1d" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator" kindref="compound">TSpanIterator</ref></type>
        <definition>constexpr TSpanIterator Bvr::Util::Detail::TSpanIterator&lt; T &gt;::operator-</definition>
        <argsstring>(difference_type n) const noexcept</argsstring>
        <name>operator-</name>
        <qualifiedname>Bvr::Util::Detail::TSpanIterator::operator-</qualifiedname>
        <param>
          <type>difference_type</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="83" column="40" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1ae1d94fc0657c5d3bb601e6c60ec46fb4" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr difference_type</type>
        <definition>constexpr difference_type Bvr::Util::Detail::TSpanIterator&lt; T &gt;::operator-</definition>
        <argsstring>(const TSpanIterator &amp;rhs) const noexcept</argsstring>
        <name>operator-</name>
        <qualifiedname>Bvr::Util::Detail::TSpanIterator::operator-</qualifiedname>
        <param>
          <type>const <ref refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator" kindref="compound">TSpanIterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="89" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1ac14350c42c8898029f47dae830396148" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool Bvr::Util::Detail::TSpanIterator&lt; T &gt;::operator==</definition>
        <argsstring>(const TSpanIterator &amp;rhs) const noexcept</argsstring>
        <name>operator==</name>
        <qualifiedname>Bvr::Util::Detail::TSpanIterator::operator==</qualifiedname>
        <param>
          <type>const <ref refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator" kindref="compound">TSpanIterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="94" column="31" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1ad0bfe7b9cbe18cee26b9f23a223cd8fd" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool Bvr::Util::Detail::TSpanIterator&lt; T &gt;::operator!=</definition>
        <argsstring>(const TSpanIterator &amp;rhs) const noexcept</argsstring>
        <name>operator!=</name>
        <qualifiedname>Bvr::Util::Detail::TSpanIterator::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator" kindref="compound">TSpanIterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="98" column="31" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="98" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a2f89e9a8853bfd866f6eb7807f65e0a9" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool Bvr::Util::Detail::TSpanIterator&lt; T &gt;::operator&lt;</definition>
        <argsstring>(const TSpanIterator &amp;rhs) const noexcept</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>Bvr::Util::Detail::TSpanIterator::operator&lt;</qualifiedname>
        <param>
          <type>const <ref refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator" kindref="compound">TSpanIterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="102" column="26" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="102" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1af4cfee0fbe539b6f8b5d28c8273917f2" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool Bvr::Util::Detail::TSpanIterator&lt; T &gt;::operator&lt;=</definition>
        <argsstring>(const TSpanIterator &amp;rhs) const noexcept</argsstring>
        <name>operator&lt;=</name>
        <qualifiedname>Bvr::Util::Detail::TSpanIterator::operator&lt;=</qualifiedname>
        <param>
          <type>const <ref refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator" kindref="compound">TSpanIterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="106" column="26" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a345af52ccc84e1be0310c5307295df6b" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool Bvr::Util::Detail::TSpanIterator&lt; T &gt;::operator&gt;</definition>
        <argsstring>(const TSpanIterator &amp;rhs) const noexcept</argsstring>
        <name>operator&gt;</name>
        <qualifiedname>Bvr::Util::Detail::TSpanIterator::operator&gt;</qualifiedname>
        <param>
          <type>const <ref refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator" kindref="compound">TSpanIterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="110" column="31" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="110" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a4f36c996fd764d1a2e13090467cb0601" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool Bvr::Util::Detail::TSpanIterator&lt; T &gt;::operator&gt;=</definition>
        <argsstring>(const TSpanIterator &amp;rhs) const noexcept</argsstring>
        <name>operator&gt;=</name>
        <qualifiedname>Bvr::Util::Detail::TSpanIterator::operator&gt;=</qualifiedname>
        <param>
          <type>const <ref refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator" kindref="compound">TSpanIterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="114" column="31" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="114" bodyend="116"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1ac8519c07546a695c05e499ed68b04663" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator" kindref="compound">TSpanIterator</ref></type>
        <definition>constexpr TSpanIterator operator+</definition>
        <argsstring>(difference_type n, const TSpanIterator &amp;it) noexcept</argsstring>
        <name>operator+</name>
        <qualifiedname>Bvr::Util::Detail::TSpanIterator::operator+</qualifiedname>
        <param>
          <type>difference_type</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator" kindref="compound">TSpanIterator</ref> &amp;</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="120" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="120" bodyend="123"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" line="10" column="16" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Span.hpp" bodystart="10" bodyend="127"/>
    <listofallmembers>
      <member refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a66fc9e457764a0c97218d01df5ea4638" prot="public" virt="non-virtual"><scope>Bvr::Util::Detail::TSpanIterator</scope><name>difference_type</name></member>
      <member refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1ac3fdb09b821dc624cb65456307e0feb9" prot="public" virt="non-virtual"><scope>Bvr::Util::Detail::TSpanIterator</scope><name>iterator_category</name></member>
      <member refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a127332b60969b5926d6cec9d5c182f52" prot="private" virt="non-virtual"><scope>Bvr::Util::Detail::TSpanIterator</scope><name>m_ptr</name></member>
      <member refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1ad0bfe7b9cbe18cee26b9f23a223cd8fd" prot="public" virt="non-virtual"><scope>Bvr::Util::Detail::TSpanIterator</scope><name>operator!=</name></member>
      <member refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1aadc341654482c7e0b57fbca066a85f9a" prot="public" virt="non-virtual"><scope>Bvr::Util::Detail::TSpanIterator</scope><name>operator*</name></member>
      <member refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1abc07d8db112fdf11e806c81b1492eebe" prot="public" virt="non-virtual"><scope>Bvr::Util::Detail::TSpanIterator</scope><name>operator+</name></member>
      <member refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1ac8519c07546a695c05e499ed68b04663" prot="public" virt="non-virtual"><scope>Bvr::Util::Detail::TSpanIterator</scope><name>operator+</name></member>
      <member refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a3d5614700cab6d4014e6321b8b289b72" prot="public" virt="non-virtual"><scope>Bvr::Util::Detail::TSpanIterator</scope><name>operator++</name></member>
      <member refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a0f19a45fd1380cee9405de6012f09666" prot="public" virt="non-virtual"><scope>Bvr::Util::Detail::TSpanIterator</scope><name>operator++</name></member>
      <member refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a76764d6dc5c79f2c868eb57a99a37a8d" prot="public" virt="non-virtual"><scope>Bvr::Util::Detail::TSpanIterator</scope><name>operator+=</name></member>
      <member refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1ac32fdc144213bee1e5032df4fe8e8b1d" prot="public" virt="non-virtual"><scope>Bvr::Util::Detail::TSpanIterator</scope><name>operator-</name></member>
      <member refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1ae1d94fc0657c5d3bb601e6c60ec46fb4" prot="public" virt="non-virtual"><scope>Bvr::Util::Detail::TSpanIterator</scope><name>operator-</name></member>
      <member refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1ac1d65b2b6c5de543c66be7eb4f0f90b9" prot="public" virt="non-virtual"><scope>Bvr::Util::Detail::TSpanIterator</scope><name>operator--</name></member>
      <member refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a2525d82a18fe5608bf5b0d18d132086a" prot="public" virt="non-virtual"><scope>Bvr::Util::Detail::TSpanIterator</scope><name>operator--</name></member>
      <member refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a6eb248655fbf1de75e6681f02e591aa5" prot="public" virt="non-virtual"><scope>Bvr::Util::Detail::TSpanIterator</scope><name>operator-=</name></member>
      <member refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a8fe45c0e27e046d8cc056544387235a6" prot="public" virt="non-virtual"><scope>Bvr::Util::Detail::TSpanIterator</scope><name>operator-&gt;</name></member>
      <member refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a2f89e9a8853bfd866f6eb7807f65e0a9" prot="public" virt="non-virtual"><scope>Bvr::Util::Detail::TSpanIterator</scope><name>operator&lt;</name></member>
      <member refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1af4cfee0fbe539b6f8b5d28c8273917f2" prot="public" virt="non-virtual"><scope>Bvr::Util::Detail::TSpanIterator</scope><name>operator&lt;=</name></member>
      <member refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1ac14350c42c8898029f47dae830396148" prot="public" virt="non-virtual"><scope>Bvr::Util::Detail::TSpanIterator</scope><name>operator==</name></member>
      <member refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a345af52ccc84e1be0310c5307295df6b" prot="public" virt="non-virtual"><scope>Bvr::Util::Detail::TSpanIterator</scope><name>operator&gt;</name></member>
      <member refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a4f36c996fd764d1a2e13090467cb0601" prot="public" virt="non-virtual"><scope>Bvr::Util::Detail::TSpanIterator</scope><name>operator&gt;=</name></member>
      <member refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a5896cea82ff77d1dccb0c3906fb46a21" prot="public" virt="non-virtual"><scope>Bvr::Util::Detail::TSpanIterator</scope><name>operator[]</name></member>
      <member refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a6545080a62dd1119aff3b128fdaa1ea1" prot="public" virt="non-virtual"><scope>Bvr::Util::Detail::TSpanIterator</scope><name>pointer</name></member>
      <member refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a2dda977b081a52ea78faf43ef96b3cff" prot="public" virt="non-virtual"><scope>Bvr::Util::Detail::TSpanIterator</scope><name>reference</name></member>
      <member refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a3aacf95bd46432e0045d6f34f18326d2" prot="public" virt="non-virtual"><scope>Bvr::Util::Detail::TSpanIterator</scope><name>TSpanIterator</name></member>
      <member refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a4dff1a771e23290941115e28e1454f5e" prot="public" virt="non-virtual"><scope>Bvr::Util::Detail::TSpanIterator</scope><name>TSpanIterator</name></member>
      <member refid="class_bvr_1_1_util_1_1_detail_1_1_t_span_iterator_1a051baada2872fc8d009b18cbc0e6d3e0" prot="public" virt="non-virtual"><scope>Bvr::Util::Detail::TSpanIterator</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_bvr_1_1_c_world_saver" kind="class" language="C++" prot="public">
    <compoundname>Bvr::CWorldSaver</compoundname>
    <basecompoundref refid="struct_bvr_1_1_i_asset_saver" prot="public" virt="non-virtual">Bvr::IAssetSaver</basecompoundref>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_bvr_1_1_c_world_saver_1ab54a2f37ec2917e2f8ad50a7211bbb44" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Bvr::CWorldSaver::GetSupportedFormats</definition>
        <argsstring>(std::vector&lt; std::string_view &gt; &amp;out) final</argsstring>
        <name>GetSupportedFormats</name>
        <qualifiedname>Bvr::CWorldSaver::GetSupportedFormats</qualifiedname>
        <reimplements refid="struct_bvr_1_1_i_asset_saver_1afb9d2b64a47fe88908c4daaf9a387ca9">GetSupportedFormats</reimplements>
        <param>
          <type>std::vector&lt; std::string_view &gt; &amp;</type>
          <declname>dstFormats</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get list of all formats that this saver supports <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dstFormats</parametername>
</parameternamelist>
<parameterdescription>
<para>formats supported by this loader </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldLoader.hpp" line="38" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_saver_1ac37a0b1b5ed3c0941f6b54e20634d307" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool Bvr::CWorldSaver::Save</definition>
        <argsstring>(App &amp;app, const HandleUntyped &amp;hResource, std::string_view dstPath) final</argsstring>
        <name>Save</name>
        <qualifiedname>Bvr::CWorldSaver::Save</qualifiedname>
        <reimplements refid="struct_bvr_1_1_i_asset_saver_1a6627035a3feff9f7661ef02f54849f71">Save</reimplements>
        <param>
          <type><ref refid="struct_bvr_1_1_app" kindref="compound">App</ref> &amp;</type>
          <declname>app</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_handle_untyped" kindref="compound">HandleUntyped</ref> &amp;</type>
          <declname>hResource</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>dstPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Save specified resource to filesystem <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>app</parametername>
</parameternamelist>
<parameterdescription>
<para>application instance in which resource was created </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hResource</parametername>
</parameternamelist>
<parameterdescription>
<para>resource to save </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dstPath</parametername>
</parameternamelist>
<parameterdescription>
<para>destination path of the resource </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if resource was saved successfully </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldLoader.hpp" line="39" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_bvr_1_1_c_world_saver_1a4f0b16924c31008c9de1d11fe3ece3d5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string Bvr::CWorldSaver::SaveToMemory</definition>
        <argsstring>(App &amp;app, const CWorld &amp;world, std::vector&lt; TEntity &gt; &amp;ents, bool forceAddParents, bool forceAddChildren, std::unordered_map&lt; uint64, HandleUntyped &gt; *pHandleRemap=nullptr, CArchiveBase *pSaver=nullptr)</argsstring>
        <name>SaveToMemory</name>
        <qualifiedname>Bvr::CWorldSaver::SaveToMemory</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_app" kindref="compound">App</ref> &amp;</type>
          <declname>app</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> &amp;</type>
          <declname>world</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref> &gt; &amp;</type>
          <declname>ents</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forceAddParents</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forceAddChildren</declname>
        </param>
        <param>
          <type>std::unordered_map&lt; uint64, <ref refid="struct_bvr_1_1_handle_untyped" kindref="compound">HandleUntyped</ref> &gt; *</type>
          <declname>pHandleRemap</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type><ref refid="class_bvr_1_1_c_archive_base" kindref="compound">CArchiveBase</ref> *</type>
          <declname>pSaver</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldLoader.hpp" line="41" column="24"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_saver_1a77cc3d4e5a525da9070fa4a3a1c876cd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_bvr_1_1_c_archive_base" kindref="compound">CArchiveBase</ref> &gt;</type>
        <definition>static std::shared_ptr&lt; CArchiveBase &gt; Bvr::CWorldSaver::MakeArchive</definition>
        <argsstring>(CWorld *pWorld)</argsstring>
        <name>MakeArchive</name>
        <qualifiedname>Bvr::CWorldSaver::MakeArchive</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> *</type>
          <declname>pWorld</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldLoader.hpp" line="48" column="5"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Bvr::CWorldSaver</label>
        <link refid="class_bvr_1_1_c_world_saver"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Bvr::IAssetSaver</label>
        <link refid="struct_bvr_1_1_i_asset_saver"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Bvr::CWorldSaver</label>
        <link refid="class_bvr_1_1_c_world_saver"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Bvr::IAssetSaver</label>
        <link refid="struct_bvr_1_1_i_asset_saver"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldLoader.hpp" line="36" column="1" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldLoader.hpp" bodystart="36" bodyend="49"/>
    <listofallmembers>
      <member refid="class_bvr_1_1_c_world_saver_1ab54a2f37ec2917e2f8ad50a7211bbb44" prot="public" virt="virtual"><scope>Bvr::CWorldSaver</scope><name>GetSupportedFormats</name></member>
      <member refid="class_bvr_1_1_c_world_saver_1a77cc3d4e5a525da9070fa4a3a1c876cd" prot="public" virt="non-virtual"><scope>Bvr::CWorldSaver</scope><name>MakeArchive</name></member>
      <member refid="class_bvr_1_1_c_world_saver_1ac37a0b1b5ed3c0941f6b54e20634d307" prot="public" virt="virtual"><scope>Bvr::CWorldSaver</scope><name>Save</name></member>
      <member refid="class_bvr_1_1_c_world_saver_1a4f0b16924c31008c9de1d11fe3ece3d5" prot="public" virt="non-virtual"><scope>Bvr::CWorldSaver</scope><name>SaveToMemory</name></member>
      <member refid="struct_bvr_1_1_i_asset_saver_1ac895eddba6582b4a40e469ebffb0fb32" prot="public" virt="virtual"><scope>Bvr::CWorldSaver</scope><name>~IAssetSaver</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

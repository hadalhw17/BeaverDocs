<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_bvr_1_1_mem_1_1_t_thread_safe_object_pool" kind="class" language="C++" prot="public">
    <compoundname>Bvr::Mem::TThreadSafeObjectPool</compoundname>
    <basecompoundref refid="class_bvr_1_1_mem_1_1_t_object_pool" prot="private" virt="non-virtual">Bvr::Mem::TObjectPool&lt; T &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_bvr_1_1_mem_1_1_t_thread_safe_object_pool_1a0b89a672614c7d9a68df25ea18ce008b" prot="private" static="no">
        <type><ref refid="class_bvr_1_1_mem_1_1_t_object_pool" kindref="compound">TObjectPool</ref>&lt; T &gt;</type>
        <definition>using Bvr::Mem::TThreadSafeObjectPool&lt; T &gt;::TBase =  TObjectPool&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>TBase</name>
        <qualifiedname>Bvr::Mem::TThreadSafeObjectPool::TBase</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Memory/ObjectPool.hpp" line="105" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Memory/ObjectPool.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_mem_1_1_t_thread_safe_object_pool_1a1d6e92985d01e693d18329200fb07572" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex Bvr::Mem::TThreadSafeObjectPool&lt; T &gt;::lock</definition>
        <argsstring></argsstring>
        <name>lock</name>
        <qualifiedname>Bvr::Mem::TThreadSafeObjectPool::lock</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Memory/ObjectPool.hpp" line="124" column="16" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Memory/ObjectPool.hpp" bodystart="124" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_bvr_1_1_mem_1_1_t_thread_safe_object_pool_1ab431b7e101b4198ab2b128f82d6aab45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>P</declname>
            <defname>P</defname>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T * Bvr::Mem::TThreadSafeObjectPool&lt; T &gt;::allocate</definition>
        <argsstring>(P &amp;&amp;... p)</argsstring>
        <name>allocate</name>
        <qualifiedname>Bvr::Mem::TThreadSafeObjectPool::allocate</qualifiedname>
        <param>
          <type>P &amp;&amp;...</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Memory/ObjectPool.hpp" line="108" column="19" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Memory/ObjectPool.hpp" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_mem_1_1_t_thread_safe_object_pool_1a49509eee50b72429ceb2b583b46ffbf9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::Mem::TThreadSafeObjectPool&lt; T &gt;::free</definition>
        <argsstring>(T *ptr)</argsstring>
        <name>free</name>
        <qualifiedname>Bvr::Mem::TThreadSafeObjectPool::free</qualifiedname>
        <param>
          <type>T *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Memory/ObjectPool.hpp" line="113" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Memory/ObjectPool.hpp" bodystart="113" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_mem_1_1_t_thread_safe_object_pool_1a0bc5a8a1380b9ea2672440dbcd50f567" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::Mem::TThreadSafeObjectPool&lt; T &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>Bvr::Mem::TThreadSafeObjectPool::clear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Memory/ObjectPool.hpp" line="118" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Memory/ObjectPool.hpp" bodystart="118" bodyend="121"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Bvr::Mem::TObjectPool&lt; T, IsDebug &gt;</label>
        <link refid="class_bvr_1_1_mem_1_1_t_object_pool"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Bvr::Mem::TThreadSafeObjectPool&lt; T &gt;</label>
        <link refid="class_bvr_1_1_mem_1_1_t_thread_safe_object_pool"/>
        <childnode refid="2" relation="private-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Bvr::NoCopy</label>
        <link refid="struct_bvr_1_1_no_copy"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Bvr::Mem::TObjectPool&lt; T, IsDebug &gt;</label>
        <link refid="class_bvr_1_1_mem_1_1_t_object_pool"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Bvr::Mem::TThreadSafeObjectPool&lt; T &gt;</label>
        <link refid="class_bvr_1_1_mem_1_1_t_thread_safe_object_pool"/>
        <childnode refid="2" relation="private-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Bvr::NoCopy</label>
        <link refid="struct_bvr_1_1_no_copy"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Memory/ObjectPool.hpp" line="104" column="12" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Memory/ObjectPool.hpp" bodystart="104" bodyend="125"/>
    <listofallmembers>
      <member refid="class_bvr_1_1_mem_1_1_t_thread_safe_object_pool_1ab431b7e101b4198ab2b128f82d6aab45" prot="public" virt="non-virtual"><scope>Bvr::Mem::TThreadSafeObjectPool</scope><name>allocate</name></member>
      <member refid="class_bvr_1_1_mem_1_1_t_object_pool_1a079fc1141ed93c6e12036e3f471c6049" prot="private" virt="non-virtual" ambiguityscope="Bvr::Mem::TObjectPool::"><scope>Bvr::Mem::TThreadSafeObjectPool</scope><name>allocate</name></member>
      <member refid="class_bvr_1_1_mem_1_1_t_thread_safe_object_pool_1a0bc5a8a1380b9ea2672440dbcd50f567" prot="public" virt="non-virtual"><scope>Bvr::Mem::TThreadSafeObjectPool</scope><name>clear</name></member>
      <member refid="class_bvr_1_1_mem_1_1_t_thread_safe_object_pool_1a49509eee50b72429ceb2b583b46ffbf9" prot="public" virt="non-virtual"><scope>Bvr::Mem::TThreadSafeObjectPool</scope><name>free</name></member>
      <member refid="class_bvr_1_1_mem_1_1_t_thread_safe_object_pool_1a1d6e92985d01e693d18329200fb07572" prot="private" virt="non-virtual"><scope>Bvr::Mem::TThreadSafeObjectPool</scope><name>lock</name></member>
      <member refid="class_bvr_1_1_mem_1_1_t_thread_safe_object_pool_1a0b89a672614c7d9a68df25ea18ce008b" prot="private" virt="non-virtual"><scope>Bvr::Mem::TThreadSafeObjectPool</scope><name>TBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

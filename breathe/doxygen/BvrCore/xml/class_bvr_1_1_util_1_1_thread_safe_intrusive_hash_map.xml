<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map" kind="class" language="C++" prot="public">
    <compoundname>Bvr::Util::ThreadSafeIntrusiveHashMap</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map_1a77506eae077f2d664ee9beb0ef3c0a15" prot="private" static="no" mutable="no">
        <type><ref refid="class_bvr_1_1_util_1_1_intrusive_hash_map" kindref="compound">IntrusiveHashMap</ref>&lt; T &gt;</type>
        <definition>IntrusiveHashMap&lt;T&gt; Bvr::Util::ThreadSafeIntrusiveHashMap&lt; T &gt;::hashmap</definition>
        <argsstring></argsstring>
        <name>hashmap</name>
        <qualifiedname>Bvr::Util::ThreadSafeIntrusiveHashMap::hashmap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="403" column="33" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map_1a7ed6824465e6f287240da581d6d330bf" prot="private" static="no" mutable="yes">
        <type><ref refid="class_bvr_1_1_m_t_1_1_c_r_w_spin_lock" kindref="compound">Bvr::MT::CRWSpinLock</ref></type>
        <definition>Bvr::MT::CRWSpinLock Bvr::Util::ThreadSafeIntrusiveHashMap&lt; T &gt;::lock</definition>
        <argsstring></argsstring>
        <name>lock</name>
        <qualifiedname>Bvr::Util::ThreadSafeIntrusiveHashMap::lock</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="404" column="34" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="404" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map_1ada15329863ca3bc9a6187b10e90df007" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T * Bvr::Util::ThreadSafeIntrusiveHashMap&lt; T &gt;::find</definition>
        <argsstring>(Hash hash) const</argsstring>
        <name>find</name>
        <qualifiedname>Bvr::Util::ThreadSafeIntrusiveHashMap::find</qualifiedname>
        <param>
          <type>Hash</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="313" column="7" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="313" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map_1afd70182736e78b75417b263ca4f52d20" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Bvr::Util::ThreadSafeIntrusiveHashMap&lt; T &gt;::find_and_consume_pod</definition>
        <argsstring>(Hash hash, P &amp;p) const</argsstring>
        <name>find_and_consume_pod</name>
        <qualifiedname>Bvr::Util::ThreadSafeIntrusiveHashMap::find_and_consume_pod</qualifiedname>
        <param>
          <type>Hash</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>P &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="324" column="22" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="324" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map_1ac9467e185a58bfb56360aa45530899f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::Util::ThreadSafeIntrusiveHashMap&lt; T &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>Bvr::Util::ThreadSafeIntrusiveHashMap::clear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="331" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="331" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map_1aa86f52f2083624266f38697f64f831bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::Util::ThreadSafeIntrusiveHashMap&lt; T &gt;::erase</definition>
        <argsstring>(T *value)</argsstring>
        <name>erase</name>
        <qualifiedname>Bvr::Util::ThreadSafeIntrusiveHashMap::erase</qualifiedname>
        <param>
          <type>T *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="339" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="339" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map_1a86c20a2985df9322e4d3dd7ce2ed302c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::Util::ThreadSafeIntrusiveHashMap&lt; T &gt;::erase</definition>
        <argsstring>(Hash hash)</argsstring>
        <name>erase</name>
        <qualifiedname>Bvr::Util::ThreadSafeIntrusiveHashMap::erase</qualifiedname>
        <param>
          <type>Hash</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="345" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="345" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map_1a11eba3be46a5e50a077c440b0c7751e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>P</declname>
            <defname>P</defname>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T * Bvr::Util::ThreadSafeIntrusiveHashMap&lt; T &gt;::allocate</definition>
        <argsstring>(P &amp;&amp;... p)</argsstring>
        <name>allocate</name>
        <qualifiedname>Bvr::Util::ThreadSafeIntrusiveHashMap::allocate</qualifiedname>
        <param>
          <type>P &amp;&amp;...</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="351" column="19" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="351" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map_1ab52c728d87189b41329d60960c7ef7b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::Util::ThreadSafeIntrusiveHashMap&lt; T &gt;::free</definition>
        <argsstring>(T *value)</argsstring>
        <name>free</name>
        <qualifiedname>Bvr::Util::ThreadSafeIntrusiveHashMap::free</qualifiedname>
        <param>
          <type>T *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="358" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="358" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map_1ab4d8813d915037a398c1c5467260dae7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T * Bvr::Util::ThreadSafeIntrusiveHashMap&lt; T &gt;::insert_replace</definition>
        <argsstring>(Hash hash, T *value)</argsstring>
        <name>insert_replace</name>
        <qualifiedname>Bvr::Util::ThreadSafeIntrusiveHashMap::insert_replace</qualifiedname>
        <param>
          <type>Hash</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="364" column="7" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="364" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map_1aceec22b84f634d083099836cddda2dea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T * Bvr::Util::ThreadSafeIntrusiveHashMap&lt; T &gt;::insert_yield</definition>
        <argsstring>(Hash hash, T *value)</argsstring>
        <name>insert_yield</name>
        <qualifiedname>Bvr::Util::ThreadSafeIntrusiveHashMap::insert_yield</qualifiedname>
        <param>
          <type>Hash</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="371" column="7" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="371" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map_1a54ccb91180cbefcb1dab7d290c535ab9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>P</declname>
            <defname>P</defname>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T * Bvr::Util::ThreadSafeIntrusiveHashMap&lt; T &gt;::emplace_replace</definition>
        <argsstring>(Hash hash, P &amp;&amp;... p)</argsstring>
        <name>emplace_replace</name>
        <qualifiedname>Bvr::Util::ThreadSafeIntrusiveHashMap::emplace_replace</qualifiedname>
        <param>
          <type>Hash</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>P &amp;&amp;...</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="380" column="19" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="380" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map_1afd83415d7bc8bda31992af3102a86cac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>P</declname>
            <defname>P</defname>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T * Bvr::Util::ThreadSafeIntrusiveHashMap&lt; T &gt;::emplace_yield</definition>
        <argsstring>(Hash hash, P &amp;&amp;... p)</argsstring>
        <name>emplace_yield</name>
        <qualifiedname>Bvr::Util::ThreadSafeIntrusiveHashMap::emplace_yield</qualifiedname>
        <param>
          <type>Hash</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>P &amp;&amp;...</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="387" column="19" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="387" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map_1a82c2bfc13d0553d1726da2b9052f2068" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_util_1_1_intrusive_list" kindref="compound">IntrusiveList</ref>&lt; T &gt;::Iterator</type>
        <definition>IntrusiveList&lt; T &gt;::Iterator Bvr::Util::ThreadSafeIntrusiveHashMap&lt; T &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <qualifiedname>Bvr::Util::ThreadSafeIntrusiveHashMap::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="396" column="39" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="396" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map_1a66bf3f2983f0a5668214ccd34eb17c27" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_util_1_1_intrusive_list" kindref="compound">IntrusiveList</ref>&lt; T &gt;::Iterator</type>
        <definition>IntrusiveList&lt; T &gt;::Iterator Bvr::Util::ThreadSafeIntrusiveHashMap&lt; T &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <qualifiedname>Bvr::Util::ThreadSafeIntrusiveHashMap::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="398" column="39" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="398" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map_1a6aa4f885158519746fd263f37cf7e597" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_util_1_1_intrusive_hash_map" kindref="compound">IntrusiveHashMap</ref>&lt; T &gt; &amp;</type>
        <definition>IntrusiveHashMap&lt; T &gt; &amp; Bvr::Util::ThreadSafeIntrusiveHashMap&lt; T &gt;::get_thread_unsafe</definition>
        <argsstring>()</argsstring>
        <name>get_thread_unsafe</name>
        <qualifiedname>Bvr::Util::ThreadSafeIntrusiveHashMap::get_thread_unsafe</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="400" column="37" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="400" bodyend="400"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="311" column="12" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="311" bodyend="405"/>
    <listofallmembers>
      <member refid="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map_1a11eba3be46a5e50a077c440b0c7751e4" prot="public" virt="non-virtual"><scope>Bvr::Util::ThreadSafeIntrusiveHashMap</scope><name>allocate</name></member>
      <member refid="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map_1a82c2bfc13d0553d1726da2b9052f2068" prot="public" virt="non-virtual"><scope>Bvr::Util::ThreadSafeIntrusiveHashMap</scope><name>begin</name></member>
      <member refid="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map_1ac9467e185a58bfb56360aa45530899f1" prot="public" virt="non-virtual"><scope>Bvr::Util::ThreadSafeIntrusiveHashMap</scope><name>clear</name></member>
      <member refid="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map_1a54ccb91180cbefcb1dab7d290c535ab9" prot="public" virt="non-virtual"><scope>Bvr::Util::ThreadSafeIntrusiveHashMap</scope><name>emplace_replace</name></member>
      <member refid="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map_1afd83415d7bc8bda31992af3102a86cac" prot="public" virt="non-virtual"><scope>Bvr::Util::ThreadSafeIntrusiveHashMap</scope><name>emplace_yield</name></member>
      <member refid="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map_1a66bf3f2983f0a5668214ccd34eb17c27" prot="public" virt="non-virtual"><scope>Bvr::Util::ThreadSafeIntrusiveHashMap</scope><name>end</name></member>
      <member refid="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map_1aa86f52f2083624266f38697f64f831bd" prot="public" virt="non-virtual"><scope>Bvr::Util::ThreadSafeIntrusiveHashMap</scope><name>erase</name></member>
      <member refid="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map_1a86c20a2985df9322e4d3dd7ce2ed302c" prot="public" virt="non-virtual"><scope>Bvr::Util::ThreadSafeIntrusiveHashMap</scope><name>erase</name></member>
      <member refid="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map_1ada15329863ca3bc9a6187b10e90df007" prot="public" virt="non-virtual"><scope>Bvr::Util::ThreadSafeIntrusiveHashMap</scope><name>find</name></member>
      <member refid="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map_1afd70182736e78b75417b263ca4f52d20" prot="public" virt="non-virtual"><scope>Bvr::Util::ThreadSafeIntrusiveHashMap</scope><name>find_and_consume_pod</name></member>
      <member refid="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map_1ab52c728d87189b41329d60960c7ef7b9" prot="public" virt="non-virtual"><scope>Bvr::Util::ThreadSafeIntrusiveHashMap</scope><name>free</name></member>
      <member refid="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map_1a6aa4f885158519746fd263f37cf7e597" prot="public" virt="non-virtual"><scope>Bvr::Util::ThreadSafeIntrusiveHashMap</scope><name>get_thread_unsafe</name></member>
      <member refid="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map_1a77506eae077f2d664ee9beb0ef3c0a15" prot="private" virt="non-virtual"><scope>Bvr::Util::ThreadSafeIntrusiveHashMap</scope><name>hashmap</name></member>
      <member refid="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map_1ab4d8813d915037a398c1c5467260dae7" prot="public" virt="non-virtual"><scope>Bvr::Util::ThreadSafeIntrusiveHashMap</scope><name>insert_replace</name></member>
      <member refid="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map_1aceec22b84f634d083099836cddda2dea" prot="public" virt="non-virtual"><scope>Bvr::Util::ThreadSafeIntrusiveHashMap</scope><name>insert_yield</name></member>
      <member refid="class_bvr_1_1_util_1_1_thread_safe_intrusive_hash_map_1a7ed6824465e6f287240da581d6d330bf" prot="private" virt="non-virtual"><scope>Bvr::Util::ThreadSafeIntrusiveHashMap</scope><name>lock</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

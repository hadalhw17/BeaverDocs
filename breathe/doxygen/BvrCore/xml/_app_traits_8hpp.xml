<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_app_traits_8hpp" kind="file" language="C++">
    <compoundname>AppTraits.hpp</compoundname>
    <includes refid="_world_defs_8hpp" local="no">BvrWorld/WorldDefs.hpp</includes>
    <includes refid="_function_traits_8hpp" local="no">Utils/FunctionTraits.hpp</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp</label>
        <link refid="_app_traits_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>BaseTypes.hpp</label>
        <link refid="_base_types_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Meta/PropertyTraits.hpp</label>
        <link refid="_property_traits_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>Platform/CompilerSettings.hpp</label>
        <link refid="_compiler_settings_8hpp_source"/>
      </node>
      <node id="5">
        <label>Utils/EntityHandle.hpp</label>
        <link refid="_entity_handle_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Utils/FunctionTraits.hpp</label>
        <link refid="_function_traits_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>BvrWorld/WorldDefs.hpp</label>
        <link refid="_world_defs_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>std</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_bvr_1_1_detail_1_1_copy_decorators" prot="public">Bvr::Detail::CopyDecorators</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_copy_decorators_3_01_src_01_6_00_01_dst_01_4" prot="public">Bvr::Detail::CopyDecorators&lt; Src &amp;, Dst &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_copy_decorators_3_01_src_01_5_00_01_dst_01_4" prot="public">Bvr::Detail::CopyDecorators&lt; Src *, Dst &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_copy_decorators_3_01const_01_src_00_01_dst_01_4" prot="public">Bvr::Detail::CopyDecorators&lt; const Src, Dst &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_extracted_type" prot="public">Bvr::Detail::TExtractedType</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_extracted_type_3_01_t_01_4" prot="public">Bvr::Detail::TExtractedType&lt; T &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_system_arg_traits" prot="public">Bvr::Detail::TSystemArgTraits</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_system_arg_traits_3_01_t_01_4" prot="public">Bvr::Detail::TSystemArgTraits&lt; T &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_is_valid_resource" prot="public">Bvr::Detail::TIsValidResource</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_is_valid_resource_3_01_t_01_4" prot="public">Bvr::Detail::TIsValidResource&lt; T &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_arg_idx" prot="public">Bvr::Detail::TArgIdx</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_arg_idx_3_01_t_00_01_type_list_3_4_01_4" prot="public">Bvr::Detail::TArgIdx&lt; T, TypeList&lt;&gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_arg_idx_3_01_t_00_01_type_list_3_01_u_00_01_ts_8_8_8_01_4_01_4" prot="public">Bvr::Detail::TArgIdx&lt; T, TypeList&lt; U, Ts... &gt; &gt;</innerclass>
    <innerclass refid="class_bvr_1_1_detail_1_1_t_arg_group" prot="public">Bvr::Detail::TArgGroup</innerclass>
    <innerclass refid="class_bvr_1_1_detail_1_1_t_arg_group_3_4" prot="public">Bvr::Detail::TArgGroup&lt;&gt;</innerclass>
    <innerclass refid="class_bvr_1_1_detail_1_1_t_arg_group_3_01_t_00_01_rest_8_8_8_01_4" prot="public">Bvr::Detail::TArgGroup&lt; T, Rest... &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_get_args_group" prot="public">Bvr::Detail::TGetArgsGroup</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_get_args_group_3_01_type_list_3_01_ts_8_8_8_01_4_01_4" prot="public">Bvr::Detail::TGetArgsGroup&lt; TypeList&lt; Ts... &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_system_arg_traits_3_01_t_sys_stack_3_01_t_8_8_8_01_4_01_4" prot="public">Bvr::Detail::TSystemArgTraits&lt; TSysStack&lt; T... &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_system_arg_traits_3_01_t_sys_stack_3_01_t_8_8_8_01_4_01_6_01_4" prot="public">Bvr::Detail::TSystemArgTraits&lt; TSysStack&lt; T... &gt; &amp; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_system_arg_traits_3_01const_01_t_sys_stack_3_01_t_8_8_8_01_4_01_6_01_4" prot="public">Bvr::Detail::TSystemArgTraits&lt; const TSysStack&lt; T... &gt; &amp; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_system_arg_traits_3_01_type_list_3_01_t_8_8_8_01_4_01_4" prot="public">Bvr::Detail::TSystemArgTraits&lt; TypeList&lt; T... &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_checked_helper_3_01_t_sys_stack_3_01_args_8_8_8_01_4_01_4" prot="public">Bvr::Detail::TCheckedHelper&lt; TSysStack&lt; Args... &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_checked_helper_3_01_type_list_3_01_args_8_8_8_01_4_01_4" prot="public">Bvr::Detail::TCheckedHelper&lt; TypeList&lt; Args... &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_system_traits_t" prot="public">Bvr::Detail::SystemTraitsT</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_is_arg_arrgegate" prot="public">Bvr::Detail::IsArgArrgegate</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_is_arg_arrgegate_3_01_t_sys_stack_3_01_t_8_8_8_01_4_01_4" prot="public">Bvr::Detail::IsArgArrgegate&lt; TSysStack&lt; T... &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_is_arg_arrgegate_3_01_q_01_4" prot="public">Bvr::Detail::IsArgArrgegate&lt; Q &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_args_count" prot="public">Bvr::Detail::TArgsCount</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_args_count_3_4" prot="public">Bvr::Detail::TArgsCount&lt;&gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_args_count_3_01_t_01_4" prot="public">Bvr::Detail::TArgsCount&lt; T &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_args_count_3_01_q_01_4" prot="public">Bvr::Detail::TArgsCount&lt; Q &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_args_count_3_01_type_list_3_01_ts_8_8_8_01_4_01_4" prot="public">Bvr::Detail::TArgsCount&lt; TypeList&lt; Ts... &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_args_count_3_01_fn_01_4" prot="public">Bvr::Detail::TArgsCount&lt; Fn &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_unpack_to_list" prot="public">Bvr::Detail::UnpackToList</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_unpack_to_list_3_01_q_01_4" prot="public">Bvr::Detail::UnpackToList&lt; Q &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_unpack_to_list_3_01const_01_q_01_4" prot="public">Bvr::Detail::UnpackToList&lt; const Q &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_unpack_to_list_3_01_type_list_3_01_ts_8_8_8_01_4_01_4" prot="public">Bvr::Detail::UnpackToList&lt; TypeList&lt; Ts... &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_unpack_to_list_3_01const_01_type_list_3_01_ts_8_8_8_01_4_01_4" prot="public">Bvr::Detail::UnpackToList&lt; const TypeList&lt; Ts... &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_has_type_3_01_t_00_01_type_list_3_01_us_8_8_8_01_4_01_4" prot="public">Bvr::Detail::THasType&lt; T, TypeList&lt; Us... &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_unique" prot="public">Bvr::Detail::TUnique</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_unique_3_01_type_list_3_01_ts_8_8_8_01_4_00_01_u_00_01_us_8_8_8_01_4" prot="public">Bvr::Detail::TUnique&lt; TypeList&lt; Ts... &gt;, U, Us... &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_unique_type_list_3_01_type_list_3_01_t_8_8_8_01_4_01_4" prot="public">Bvr::Detail::TUniqueTypeList&lt; TypeList&lt; T... &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_remove_duplicate_constants_3_01_type_list_3_01_ts_8_8_8_01_4_01_4" prot="public">Bvr::Detail::TRemoveDuplicateConstants&lt; TypeList&lt; Ts... &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_is_world_resource" prot="public">Bvr::Detail::IsWorldResource</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_is_world_resource_3_01_q_01_4" prot="public">Bvr::Detail::IsWorldResource&lt; Q &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_is_from_res_map" prot="public">Bvr::Detail::IsFromResMap</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_are_tuple_args_world_3_01_t_sys_stack_3_01_t_8_8_8_01_4_01_4" prot="public">Bvr::Detail::TAreTupleArgsWorld&lt; TSysStack&lt; T... &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_are_tuple_args_world_3_01_type_list_3_01_t_8_8_8_01_4_01_4" prot="public">Bvr::Detail::TAreTupleArgsWorld&lt; TypeList&lt; T... &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_are_tuple_args_world_3_01_t_checked_helper_3_01_list_01_4_01_4" prot="public">Bvr::Detail::TAreTupleArgsWorld&lt; TCheckedHelper&lt; List &gt; &gt;</innerclass>
    <innernamespace refid="namespace_bvr">Bvr</innernamespace>
    <innernamespace refid="namespace_bvr_1_1_detail">Bvr::Detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>&lt;BvrWorld/WorldDefs.hpp&gt;;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>&lt;Utils/FunctionTraits.hpp&gt;;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Bvr::Detail<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Meta::AsTypeListT;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Meta::TypeList;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="struct_bvr_1_1_detail_1_1_copy_decorators" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Src,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Dst&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_copy_decorators" kindref="compound">CopyDecorators</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Type<sp/>=<sp/>Dst;</highlight></codeline>
<codeline lineno="13"><highlight class="normal">};</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="struct_bvr_1_1_detail_1_1_copy_decorators_3_01_src_01_6_00_01_dst_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Src,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Dst&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_copy_decorators" kindref="compound">CopyDecorators</ref>&lt;Src&amp;,<sp/>Dst&gt;<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Type<sp/>=</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_detail_1_1_copy_decorators" kindref="compound">CopyDecorators&lt;std::remove_reference_t&lt;Src&gt;</ref>,<sp/>Dst&gt;::Type&amp;;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="struct_bvr_1_1_detail_1_1_copy_decorators_3_01_src_01_5_00_01_dst_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Src,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Dst&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_copy_decorators" kindref="compound">CopyDecorators</ref>&lt;Src*,<sp/>Dst&gt;<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Type<sp/>=</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_detail_1_1_copy_decorators" kindref="compound">CopyDecorators&lt;std::remove_pointer_t&lt;Src&gt;</ref>,<sp/>Dst&gt;::Type*;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="struct_bvr_1_1_detail_1_1_copy_decorators_3_01const_01_src_00_01_dst_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Src,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Dst&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_copy_decorators" kindref="compound">CopyDecorators</ref>&lt;const<sp/>Src,<sp/>Dst&gt;<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Type<sp/>=</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_detail_1_1_copy_decorators" kindref="compound">CopyDecorators&lt;std::remove_const_t&lt;Src&gt;</ref>,<sp/>Dst&gt;::Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Src,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Dst&gt;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">CopyDecoratorsT<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CopyDecorators&lt;Src,<sp/>Dst&gt;::Type;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">SysArgDecayT<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::remove_pointer_t&lt;std::remove_reference_t&lt;T&gt;&gt;;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="struct_bvr_1_1_detail_1_1_t_extracted_type" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_extracted_type" kindref="compound">TExtractedType</ref><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Type<sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">TAppResource<sp/>=</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>CopyDecoratorsT&lt;T,<sp/>typename<sp/>Detail::SysArgDecayT&lt;T&gt;::TAppResource&gt;;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_convertible_v&lt;typename<sp/>SysArgDecayT&lt;T&gt;::TAppResource,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;)</highlight></codeline>
<codeline lineno="47" refid="struct_bvr_1_1_detail_1_1_t_extracted_type_3_01_t_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_detail_1_1_t_extracted_type" kindref="compound">TExtractedType&lt;T&gt;</ref><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_detail_1_1_t_extracted_type" kindref="compound">TExtractedType&lt;TAppResource&lt;T&gt;</ref>&gt;::Type;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">TDecayedExtractedArg<sp/>=<sp/>SysArgDecayT&lt;typename<sp/>TExtractedType&lt;T&gt;::Type&gt;;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="struct_bvr_1_1_detail_1_1_t_system_arg_traits" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_system_arg_traits" kindref="compound">TSystemArgTraits</ref><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">CheckedT<sp/>=<sp/>TDecayedExtractedArg&lt;T&gt;*;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="struct_bvr_1_1_detail_1_1_t_system_arg_traits_3_01_t_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;IsWorldQuery<sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_system_arg_traits" kindref="compound">TSystemArgTraits</ref>&lt;T&gt;<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">CheckedT<sp/>=<sp/>std::remove_const_t&lt;TDecayedExtractedArg&lt;T&gt;&gt;;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="struct_bvr_1_1_detail_1_1_t_is_valid_resource" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_is_valid_resource" kindref="compound">TIsValidResource</ref><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal">};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">[[nodiscard]]<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsValid(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>item)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_bvr_1_1_detail_1_1_t_is_valid_resource" kindref="compound">TIsValidResource&lt;T&gt;</ref><sp/>isValid{};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isValid(item);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/>std::is_pointer_v&lt;T&gt;</highlight></codeline>
<codeline lineno="74" refid="struct_bvr_1_1_detail_1_1_t_is_valid_resource_3_01_t_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_is_valid_resource" kindref="compound">TIsValidResource</ref>&lt;T&gt;<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>item)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>IsValid(*item);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal">};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;IsWorldQuery<sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_is_valid_resource" kindref="compound">TIsValidResource</ref>&lt;T&gt;<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>item)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isValid<sp/>=<sp/>!!item;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">requires</highlight><highlight class="normal">(T<sp/>a)<sp/>{<sp/>a.empty();<sp/>})<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isValid<sp/>=<sp/>isValid<sp/>&amp;&amp;<sp/>!item.empty();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">requires</highlight><highlight class="normal">(T<sp/>a)<sp/>{<sp/>a.size();<sp/>})<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isValid<sp/>=<sp/>isValid<sp/>&amp;&amp;<sp/>item.size()<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">requires</highlight><highlight class="normal">(T<sp/>a)<sp/>{<sp/>a.size_hint();<sp/>})<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isValid<sp/>=<sp/>isValid<sp/>&amp;&amp;<sp/>item.size_hint()<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isValid;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal">};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="struct_bvr_1_1_detail_1_1_t_arg_idx" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>List&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_arg_idx" kindref="compound">TArgIdx</ref><sp/>{};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="96" refid="struct_bvr_1_1_detail_1_1_t_arg_idx_3_01_t_00_01_type_list_3_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_arg_idx" kindref="compound">TArgIdx</ref>&lt;T,<sp/><ref refid="struct_bvr_1_1_meta_1_1_type_list" kindref="compound">TypeList</ref>&lt;&gt;&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::integral_constant&lt;size_t,<sp/>0&gt;<sp/>{};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="99" refid="struct_bvr_1_1_detail_1_1_t_arg_idx_3_01_t_00_01_type_list_3_01_u_00_01_ts_8_8_8_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_arg_idx" kindref="compound">TArgIdx</ref>&lt;T,<sp/><ref refid="struct_bvr_1_1_meta_1_1_type_list" kindref="compound">TypeList</ref>&lt;U,<sp/>Ts...&gt;&gt;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::integral_constant&lt;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_t,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same_v&lt;T,<sp/>U&gt;<sp/>?<sp/>0<sp/>:<sp/>1<sp/>+<sp/>TArgIdx&lt;T,<sp/>TypeList&lt;Ts...&gt;&gt;::value&gt;<sp/>{};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="class_bvr_1_1_detail_1_1_t_arg_group" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_bvr_1_1_detail_1_1_t_arg_group" kindref="compound">TArgGroup</ref><sp/>{};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="class_bvr_1_1_detail_1_1_t_arg_group_3_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_bvr_1_1_detail_1_1_t_arg_group" kindref="compound">TArgGroup</ref>&lt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">TypeList<sp/>=<sp/>TypeList&lt;&gt;;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Size()<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Idx&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Get()<sp/>{}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Get()<sp/>{}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Idx,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Set(U&amp;&amp;<sp/>value)<sp/>{}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Idx,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Set(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U&amp;<sp/>value)<sp/>{}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Set(T&amp;&amp;<sp/>value)<sp/>{}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Set(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>value)<sp/>{}</highlight></codeline>
<codeline lineno="117"><highlight class="normal">};</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Rest&gt;</highlight></codeline>
<codeline lineno="120" refid="class_bvr_1_1_detail_1_1_t_arg_group_3_01_t_00_01_rest_8_8_8_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_bvr_1_1_detail_1_1_t_arg_group" kindref="compound">TArgGroup</ref>&lt;T,<sp/>Rest...&gt;<sp/>:<sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_bvr_1_1_detail_1_1_t_arg_group" kindref="compound">TArgGroup</ref>&lt;Rest...&gt;<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">TypeList<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TypeList&lt;T,<sp/>Rest...&gt;;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_bvr_1_1_detail_1_1_t_arg_group" kindref="compound">~TArgGroup</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Size()<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TypeList::size;<sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Idx&gt;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Meta::TypeListElementT&lt;Idx,<sp/>TypeList&gt;&amp;<sp/>Get()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">TRet<sp/>=<sp/>Meta::TypeListElementT&lt;Idx,<sp/>TypeList&gt;;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>ptr<sp/><sp/>=<sp/>GetN&lt;Idx&gt;();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">TRet*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ptr);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U&amp;<sp/>Get()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Idx<sp/>=<sp/><ref refid="struct_bvr_1_1_detail_1_1_t_arg_idx" kindref="compound">TArgIdx&lt;U, TypeList&gt;::value</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Get&lt;Idx&gt;();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Idx&gt;<sp/>Meta::TypeListElementT&lt;Idx,<sp/>TypeList&gt;&amp;<sp/>Get()<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">TRet<sp/>=<sp/>Meta::TypeListElementT&lt;Idx,<sp/>TypeList&gt;;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>ptr<sp/><sp/>=<sp/>GetN&lt;Idx&gt;();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">TRet*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ptr);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;<sp/>U&amp;<sp/>Get()<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Idx<sp/>=<sp/><ref refid="struct_bvr_1_1_detail_1_1_t_arg_idx" kindref="compound">TArgIdx&lt;U, TypeList&gt;::value</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Get&lt;Idx&gt;();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Idx,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Set(U&amp;&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Get&lt;Idx&gt;()<sp/>=<sp/>std::move(value);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Idx,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Set(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Get&lt;Idx&gt;()<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Set(U&amp;&amp;<sp/>value)<sp/>{<sp/>Get&lt;U&gt;()<sp/>=<sp/>std::move(value);<sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Set(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U&amp;<sp/>value)<sp/>{<sp/>Get&lt;U&gt;()<sp/>=<sp/>value;<sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>I&gt;<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>GetN()<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(I<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;this-&gt;Arg;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_bvr_1_1_detail_1_1_t_arg_group" kindref="compound">TArgGroup</ref>&lt;Rest...&gt;::template<sp/>GetN&lt;I<sp/>-<sp/>1&gt;();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>I&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>GetN()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(I<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;this-&gt;Arg;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_bvr_1_1_detail_1_1_t_arg_group" kindref="compound">TArgGroup</ref>&lt;Rest...&gt;::template<sp/>GetN&lt;I<sp/>-<sp/>1&gt;();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>Arg{};</highlight></codeline>
<codeline lineno="178"><highlight class="normal">};</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;<sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_bvr_1_1_detail_1_1_t_arg_group" kindref="compound">TSysStack</ref><sp/>=<sp/><ref refid="class_bvr_1_1_detail_1_1_t_arg_group" kindref="compound">TArgGroup</ref>&lt;Ts...&gt;;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="struct_bvr_1_1_detail_1_1_t_get_args_group" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_get_args_group" kindref="compound">TGetArgsGroup</ref><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_bvr_1_1_detail_1_1_t_arg_group" kindref="compound">Type</ref><sp/>=<sp/><ref refid="class_bvr_1_1_detail_1_1_t_arg_group" kindref="compound">TSysStack</ref>&lt;Ts...&gt;;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">};</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="struct_bvr_1_1_detail_1_1_t_get_args_group_3_01_type_list_3_01_ts_8_8_8_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_get_args_group" kindref="compound">TGetArgsGroup</ref>&lt;<ref refid="struct_bvr_1_1_meta_1_1_type_list" kindref="compound">TypeList</ref>&lt;Ts...&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_bvr_1_1_detail_1_1_t_arg_group" kindref="compound">Type</ref><sp/>=<sp/><ref refid="class_bvr_1_1_detail_1_1_t_arg_group" kindref="compound">TSysStack</ref>&lt;Ts...&gt;;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">};</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;<sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_bvr_1_1_detail_1_1_t_arg_group" kindref="compound">TArgGroupFor</ref><sp/>=<sp/><ref refid="struct_bvr_1_1_detail_1_1_t_get_args_group" kindref="compound">TGetArgsGroup</ref>&lt;T...&gt;::Type;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="struct_bvr_1_1_detail_1_1_t_system_arg_traits_3_01_t_sys_stack_3_01_t_8_8_8_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_system_arg_traits" kindref="compound">TSystemArgTraits</ref>&lt;<ref refid="class_bvr_1_1_detail_1_1_t_arg_group" kindref="compound">TSysStack</ref>&lt;T...&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">CheckedT<sp/>=<sp/>TDecayedExtractedArg&lt;<ref refid="class_bvr_1_1_detail_1_1_t_arg_group" kindref="compound">TSysStack</ref>&lt;T...&gt;&gt;;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">};</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="197" refid="struct_bvr_1_1_detail_1_1_t_system_arg_traits_3_01_t_sys_stack_3_01_t_8_8_8_01_4_01_6_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_system_arg_traits" kindref="compound">TSystemArgTraits</ref>&lt;<ref refid="class_bvr_1_1_detail_1_1_t_arg_group" kindref="compound">TSysStack</ref>&lt;T...&gt;&amp;&gt;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_detail_1_1_t_system_arg_traits" kindref="compound">TSystemArgTraits</ref>&lt;<ref refid="class_bvr_1_1_detail_1_1_t_arg_group" kindref="compound">TSysStack</ref>&lt;T...&gt;&gt;<sp/>{};</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="201" refid="struct_bvr_1_1_detail_1_1_t_system_arg_traits_3_01const_01_t_sys_stack_3_01_t_8_8_8_01_4_01_6_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_system_arg_traits" kindref="compound">TSystemArgTraits</ref>&lt;const<sp/><ref refid="class_bvr_1_1_detail_1_1_t_arg_group" kindref="compound">TSysStack</ref>&lt;T...&gt;&amp;&gt;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_detail_1_1_t_system_arg_traits" kindref="compound">TSystemArgTraits</ref>&lt;<ref refid="class_bvr_1_1_detail_1_1_t_arg_group" kindref="compound">TSysStack</ref>&lt;T...&gt;&gt;<sp/>{};</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="205" refid="struct_bvr_1_1_detail_1_1_t_system_arg_traits_3_01_type_list_3_01_t_8_8_8_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_system_arg_traits" kindref="compound">TSystemArgTraits</ref>&lt;<ref refid="struct_bvr_1_1_meta_1_1_type_list" kindref="compound">TypeList</ref>&lt;T...&gt;&gt;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_detail_1_1_t_system_arg_traits" kindref="compound">TSystemArgTraits</ref>&lt;TSysStack&lt;T...&gt;&gt;<sp/>{};</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="struct_bvr_1_1_detail_1_1_t_checked_helper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_checked_helper" kindref="compound">TCheckedHelper</ref>;</highlight></codeline>
<codeline lineno="209" refid="struct_bvr_1_1_detail_1_1_t_checked_helper_3_01_t_sys_stack_3_01_args_8_8_8_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_checked_helper" kindref="compound">TCheckedHelper</ref>&lt;<ref refid="class_bvr_1_1_detail_1_1_t_arg_group" kindref="compound">TSysStack</ref>&lt;Args...&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_bvr_1_1_detail_1_1_t_arg_group" kindref="compound">Stack</ref><sp/>=<sp/><ref refid="class_bvr_1_1_detail_1_1_t_arg_group" kindref="compound">TSysStack&lt;typename TSystemArgTraits&lt;std::remove_reference_t&lt;Args&gt;</ref>&gt;::CheckedT...&gt;;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Type<sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stack::TypeList;</highlight></codeline>
<codeline lineno="212"><highlight class="normal">};</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="214" refid="struct_bvr_1_1_detail_1_1_t_checked_helper_3_01_type_list_3_01_args_8_8_8_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_checked_helper" kindref="compound">TCheckedHelper</ref>&lt;<ref refid="struct_bvr_1_1_meta_1_1_type_list" kindref="compound">TypeList</ref>&lt;Args...&gt;&gt;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_detail_1_1_t_checked_helper" kindref="compound">TCheckedHelper</ref>&lt;TSysStack&lt;std::remove_reference_t&lt;Args&gt;...&gt;&gt;<sp/>{};</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="struct_bvr_1_1_detail_1_1_system_traits_t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;Invokable<sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_system_traits_t" kindref="compound">SystemTraitsT</ref><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_function_traits" kindref="compound">FunctionTraitsT</ref><sp/>=<sp/><ref refid="struct_bvr_1_1_detail_1_1_t_function_traits" kindref="compound">TFunctionTraits&lt;T&gt;</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">CheckT<sp/>=</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_detail_1_1_t_checked_helper" kindref="compound">TCheckedHelper&lt;typename FunctionTraitsT::TArgs&gt;::Stack</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">};</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="struct_bvr_1_1_detail_1_1_is_arg_arrgegate" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_is_arg_arrgegate" kindref="compound">IsArgArrgegate</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::false_type<sp/>{};</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="225" refid="struct_bvr_1_1_detail_1_1_is_arg_arrgegate_3_01_t_sys_stack_3_01_t_8_8_8_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_is_arg_arrgegate" kindref="compound">IsArgArrgegate</ref>&lt;<ref refid="class_bvr_1_1_detail_1_1_t_arg_group" kindref="compound">TSysStack</ref>&lt;T...&gt;&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::true_type<sp/>{};</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="struct_bvr_1_1_detail_1_1_is_arg_arrgegate_3_01_q_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;IsWorldQuery<sp/>Q&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_is_arg_arrgegate" kindref="compound">IsArgArrgegate</ref>&lt;Q&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::true_type<sp/>{};</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="230" refid="concept_bvr_1_1_detail_1_1_aggregate_arg" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">concept<sp/></highlight><highlight class="normal"><ref refid="concept_bvr_1_1_detail_1_1_aggregate_arg" kindref="compound">AggregateArg</ref><sp/>=<sp/>IsArgArrgegate&lt;T&gt;::value;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">TAreAnyArgAggregate<sp/>=<sp/>std::disjunction&lt;IsArgArrgegate&lt;T&gt;...&gt;;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="236" refid="struct_bvr_1_1_detail_1_1_t_args_count" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_args_count" kindref="compound">TArgsCount</ref></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::integral_constant&lt;size_t,<sp/>(TArgsCount&lt;T&gt;()<sp/>+<sp/>...)&gt;<sp/>{};</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="struct_bvr_1_1_detail_1_1_t_args_count_3_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_args_count" kindref="compound">TArgsCount</ref>&lt;&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::integral_constant&lt;size_t,<sp/>0&gt;<sp/>{};</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="242" refid="struct_bvr_1_1_detail_1_1_t_args_count_3_01_t_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_args_count" kindref="compound">TArgsCount</ref>&lt;T&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::integral_constant&lt;size_t,<sp/>1&gt;<sp/>{};</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;AggregateArg<sp/>Q&gt;</highlight></codeline>
<codeline lineno="245" refid="struct_bvr_1_1_detail_1_1_t_args_count_3_01_q_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_args_count" kindref="compound">TArgsCount</ref>&lt;Q&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_detail_1_1_t_args_count" kindref="compound">TArgsCount</ref>&lt;AsTypeListT&lt;Q&gt;&gt;<sp/>{};</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="248" refid="struct_bvr_1_1_detail_1_1_t_args_count_3_01_type_list_3_01_ts_8_8_8_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_args_count" kindref="compound">TArgsCount</ref>&lt;<ref refid="struct_bvr_1_1_meta_1_1_type_list" kindref="compound">TypeList</ref>&lt;Ts...&gt;&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_detail_1_1_t_args_count" kindref="compound">TArgsCount</ref>&lt;Ts...&gt;<sp/>{};</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;Detail::Invokable<sp/>Fn&gt;</highlight></codeline>
<codeline lineno="251" refid="struct_bvr_1_1_detail_1_1_t_args_count_3_01_fn_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_args_count" kindref="compound">TArgsCount</ref>&lt;Fn&gt;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_detail_1_1_t_args_count" kindref="compound">TArgsCount</ref>&lt;typename<sp/>Detail::TFunctionTraits&lt;Fn&gt;::TArgs&gt;<sp/>{};</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Components&gt;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ArgsListCatT<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_meta_1_1_type_list_cat" kindref="compound">Meta::TypeListCat</ref>&lt;Components...&gt;::Type;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="struct_bvr_1_1_detail_1_1_unpack_to_list" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_unpack_to_list" kindref="compound">UnpackToList</ref><sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_meta_1_1_type_list" kindref="compound">Type</ref><sp/>=<sp/><ref refid="struct_bvr_1_1_meta_1_1_type_list" kindref="compound">TypeList</ref>&lt;T...&gt;;</highlight></codeline>
<codeline lineno="259"><highlight class="normal">};</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">TUnpacked<sp/>=<sp/>ArgsListCatT&lt;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_detail_1_1_unpack_to_list" kindref="compound">UnpackToList&lt;typename std::remove_reference_t&lt;Ts&gt;</ref>&gt;::Type...&gt;;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;AggregateArg<sp/>Q&gt;</highlight></codeline>
<codeline lineno="266" refid="struct_bvr_1_1_detail_1_1_unpack_to_list_3_01_q_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_unpack_to_list" kindref="compound">UnpackToList</ref>&lt;Q&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_detail_1_1_unpack_to_list" kindref="compound">UnpackToList</ref>&lt;AsTypeListT&lt;Q&gt;&gt;<sp/>{};</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;AggregateArg<sp/>Q&gt;</highlight></codeline>
<codeline lineno="269" refid="struct_bvr_1_1_detail_1_1_unpack_to_list_3_01const_01_q_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_unpack_to_list" kindref="compound">UnpackToList</ref>&lt;const<sp/>Q&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_detail_1_1_unpack_to_list" kindref="compound">UnpackToList</ref>&lt;const<sp/>AsTypeListT&lt;Q&gt;&gt;<sp/>{};</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="struct_bvr_1_1_detail_1_1_unpack_to_list_3_01_type_list_3_01_ts_8_8_8_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_unpack_to_list" kindref="compound">UnpackToList</ref>&lt;<ref refid="struct_bvr_1_1_meta_1_1_type_list" kindref="compound">TypeList</ref>&lt;Ts...&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Type<sp/>=<sp/>std::conditional_t&lt;TAreAnyArgAggregate&lt;Ts...&gt;::value,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TUnpacked&lt;Ts...&gt;,<sp/><ref refid="struct_bvr_1_1_meta_1_1_type_list" kindref="compound">TypeList</ref>&lt;Ts...&gt;&gt;;</highlight></codeline>
<codeline lineno="274"><highlight class="normal">};</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="277" refid="struct_bvr_1_1_detail_1_1_unpack_to_list_3_01const_01_type_list_3_01_ts_8_8_8_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_unpack_to_list" kindref="compound">UnpackToList</ref>&lt;const<sp/><ref refid="struct_bvr_1_1_meta_1_1_type_list" kindref="compound">TypeList</ref>&lt;Ts...&gt;&gt;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_detail_1_1_unpack_to_list" kindref="compound">UnpackToList</ref>&lt;TypeList&lt;const<sp/>Ts...&gt;&gt;<sp/>{};</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;<sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">TArgConcat<sp/>=<sp/>ArgsListCatT&lt;TUnpacked&lt;T...&gt;&gt;;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="struct_bvr_1_1_detail_1_1_t_has_type" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tuple&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_has_type" kindref="compound">THasType</ref>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Us&gt;</highlight></codeline>
<codeline lineno="284" refid="struct_bvr_1_1_detail_1_1_t_has_type_3_01_t_00_01_type_list_3_01_us_8_8_8_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_has_type" kindref="compound">THasType</ref>&lt;T,<sp/><ref refid="struct_bvr_1_1_meta_1_1_type_list" kindref="compound">TypeList</ref>&lt;Us...&gt;&gt;<sp/>:<sp/>std::disjunction&lt;std::is_same&lt;T,<sp/>Us&gt;...&gt;<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal">};</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="struct_bvr_1_1_detail_1_1_t_unique" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_unique" kindref="compound">TUnique</ref><sp/>:<sp/>std::type_identity&lt;T&gt;<sp/>{};</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Us&gt;</highlight></codeline>
<codeline lineno="289" refid="struct_bvr_1_1_detail_1_1_t_unique_3_01_type_list_3_01_ts_8_8_8_01_4_00_01_u_00_01_us_8_8_8_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_unique" kindref="compound">TUnique</ref>&lt;<ref refid="struct_bvr_1_1_meta_1_1_type_list" kindref="compound">TypeList</ref>&lt;Ts...&gt;,<sp/>U,<sp/>Us...&gt;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>std::conditional_t&lt;Detail::THasType&lt;U,<sp/>TypeList&lt;Ts...&gt;&gt;::value,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TUnique&lt;TypeList&lt;Ts...&gt;,<sp/>Us...&gt;,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TUnique&lt;TypeList&lt;Ts...,<sp/>U&gt;,<sp/>Us...&gt;&gt;<sp/>{};</highlight></codeline>
<codeline lineno="293" refid="struct_bvr_1_1_detail_1_1_t_unique_type_list" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_unique_type_list" kindref="compound">TUniqueTypeList</ref>;</highlight></codeline>
<codeline lineno="294" refid="struct_bvr_1_1_detail_1_1_t_unique_type_list_3_01_type_list_3_01_t_8_8_8_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_unique_type_list" kindref="compound">TUniqueTypeList</ref>&lt;<ref refid="struct_bvr_1_1_meta_1_1_type_list" kindref="compound">TypeList</ref>&lt;T...&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_detail_1_1_t_unique" kindref="compound">TUnique&lt;TypeList&lt;&gt;</ref>,<sp/>T...&gt;::type;</highlight></codeline>
<codeline lineno="296"><highlight class="normal">};</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="struct_bvr_1_1_detail_1_1_t_remove_duplicate_constants" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tuple&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_remove_duplicate_constants" kindref="compound">TRemoveDuplicateConstants</ref>;</highlight></codeline>
<codeline lineno="299" refid="struct_bvr_1_1_detail_1_1_t_remove_duplicate_constants_3_01_type_list_3_01_ts_8_8_8_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_remove_duplicate_constants" kindref="compound">TRemoveDuplicateConstants</ref>&lt;<ref refid="struct_bvr_1_1_meta_1_1_type_list" kindref="compound">TypeList</ref>&lt;Ts...&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>E&gt;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">TFilterImpl<sp/>=<sp/>std::conditional_t&lt;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::conjunction_v&lt;std::is_const&lt;E&gt;,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_bvr_1_1_detail_1_1_t_has_type" kindref="compound">THasType&lt;std::remove_const_t&lt;E&gt;</ref>,<sp/><ref refid="struct_bvr_1_1_meta_1_1_type_list" kindref="compound">TypeList</ref>&lt;Ts...&gt;&gt;&gt;,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_bvr_1_1_meta_1_1_type_list" kindref="compound">TypeList&lt;&gt;</ref>,<sp/><ref refid="struct_bvr_1_1_meta_1_1_type_list" kindref="compound">TypeList&lt;E&gt;</ref>&gt;;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_detail_1_1_t_unique_type_list" kindref="compound">TUniqueTypeList</ref>&lt;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Meta::TypeListCatT&lt;TFilterImpl&lt;Ts&gt;...&gt;&gt;::Type;</highlight></codeline>
<codeline lineno="308"><highlight class="normal">};</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="struct_bvr_1_1_detail_1_1_is_world_resource" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_is_world_resource" kindref="compound">IsWorldResource</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::false_type<sp/>{};</highlight></codeline>
<codeline lineno="311" refid="struct_bvr_1_1_detail_1_1_is_world_resource_3_01_q_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;IsWorldQuery<sp/>Q&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_is_world_resource" kindref="compound">IsWorldResource</ref>&lt;Q&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::true_type<sp/>{};</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Ty<sp/>=<sp/>Detail::SysArgDecayT&lt;T&gt;&gt;</highlight></codeline>
<codeline lineno="314" refid="concept_bvr_1_1_detail_1_1_is_world_argument" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">concept<sp/></highlight><highlight class="normal"><ref refid="concept_bvr_1_1_detail_1_1_is_world_argument" kindref="compound">IsWorldArgument</ref><sp/>=<sp/>IsWorldResource&lt;Ty&gt;::value;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="struct_bvr_1_1_detail_1_1_is_from_res_map" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_is_from_res_map" kindref="compound">IsFromResMap</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::false_type<sp/>{};</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">AreWorldArguments<sp/>=</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>std::disjunction&lt;IsWorldResource&lt;Detail::SysArgDecayT&lt;T&gt;&gt;...&gt;;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="struct_bvr_1_1_detail_1_1_t_are_tuple_args_world" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_are_tuple_args_world" kindref="compound">TAreTupleArgsWorld</ref>;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="325" refid="struct_bvr_1_1_detail_1_1_t_are_tuple_args_world_3_01_t_sys_stack_3_01_t_8_8_8_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_are_tuple_args_world" kindref="compound">TAreTupleArgsWorld</ref>&lt;<ref refid="class_bvr_1_1_detail_1_1_t_arg_group" kindref="compound">TSysStack</ref>&lt;T...&gt;&gt;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_detail_1_1_t_are_tuple_args_world" kindref="compound">TAreTupleArgsWorld</ref>&lt;TypeList&lt;T...&gt;&gt;<sp/>{};</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="329" refid="struct_bvr_1_1_detail_1_1_t_are_tuple_args_world_3_01_type_list_3_01_t_8_8_8_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_are_tuple_args_world" kindref="compound">TAreTupleArgsWorld</ref>&lt;<ref refid="struct_bvr_1_1_meta_1_1_type_list" kindref="compound">TypeList</ref>&lt;T...&gt;&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>AreWorldArguments&lt;T...&gt;<sp/>{};</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>List&gt;</highlight></codeline>
<codeline lineno="332" refid="struct_bvr_1_1_detail_1_1_t_are_tuple_args_world_3_01_t_checked_helper_3_01_list_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_are_tuple_args_world" kindref="compound">TAreTupleArgsWorld</ref>&lt;<ref refid="struct_bvr_1_1_detail_1_1_t_checked_helper" kindref="compound">TCheckedHelper</ref>&lt;List&gt;&gt;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_detail_1_1_t_are_tuple_args_world" kindref="compound">TAreTupleArgsWorld</ref>&lt;AsTypeListT&lt;List&gt;&gt;<sp/>{};</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SysTraitsT<sp/>=<sp/>Detail::SystemTraitsT&lt;T&gt;&gt;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_detail_1_1_t_are_tuple_args_world" kindref="compound">TIsWorldSystem</ref><sp/>=<sp/><ref refid="struct_bvr_1_1_detail_1_1_t_are_tuple_args_world" kindref="compound">TAreTupleArgsWorld&lt;typename SysTraitsT::CheckT&gt;</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="339" refid="concept_bvr_1_1_detail_1_1_is_world_system" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">concept<sp/></highlight><highlight class="normal"><ref refid="concept_bvr_1_1_detail_1_1_is_world_system" kindref="compound">IsWorldSystem</ref><sp/>=<sp/>TIsWorldSystem&lt;T&gt;::value;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">...<sp/>I,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stack&gt;</highlight></codeline>
<codeline lineno="342"><highlight class="normal">[[nodiscard]]<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal">IsValid(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Stack&amp;<sp/>args,<sp/>std::index_sequence&lt;I...&gt;)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(IsValid(args.template<sp/>Get&lt;I&gt;())<sp/>&amp;&amp;<sp/>...);</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="348"><highlight class="normal">[[nodiscard]]<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal">IsValid(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_bvr_1_1_detail_1_1_t_arg_group" kindref="compound">TSysStack&lt;T...&gt;</ref>&amp;<sp/>args)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IsValid(args,<sp/>std::make_index_sequence&lt;</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(T)&gt;());</highlight></codeline>
<codeline lineno="351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Bvr::Detail</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp"/>
  </compounddef>
</doxygen>

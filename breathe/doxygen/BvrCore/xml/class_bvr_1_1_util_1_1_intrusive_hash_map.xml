<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_bvr_1_1_util_1_1_intrusive_hash_map" kind="class" language="C++" prot="public">
    <compoundname>Bvr::Util::IntrusiveHashMap</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_util_1_1_intrusive_hash_map_1a05fe12d3a9cd096d03003cffe3da5a43" prot="private" static="no" mutable="no">
        <type><ref refid="class_bvr_1_1_util_1_1_intrusive_hash_map_holder" kindref="compound">IntrusiveHashMapHolder</ref>&lt; T &gt;</type>
        <definition>IntrusiveHashMapHolder&lt;T&gt; Bvr::Util::IntrusiveHashMap&lt; T &gt;::hashmap</definition>
        <argsstring></argsstring>
        <name>hashmap</name>
        <qualifiedname>Bvr::Util::IntrusiveHashMap::hashmap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="304" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_util_1_1_intrusive_hash_map_1a636e083db49ac9aff6f7c9a0a7046ea2" prot="private" static="no" mutable="no">
        <type><ref refid="class_bvr_1_1_mem_1_1_t_object_pool" kindref="compound">Mem::TObjectPool</ref>&lt; T &gt;</type>
        <definition>Mem::TObjectPool&lt;T&gt; Bvr::Util::IntrusiveHashMap&lt; T &gt;::pool</definition>
        <argsstring></argsstring>
        <name>pool</name>
        <qualifiedname>Bvr::Util::IntrusiveHashMap::pool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="305" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="305" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_intrusive_hash_map_1ac29b16297e26b60aacc980920caebd16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::Util::IntrusiveHashMap&lt; T &gt;::IntrusiveHashMap</definition>
        <argsstring>()=default</argsstring>
        <name>IntrusiveHashMap</name>
        <qualifiedname>Bvr::Util::IntrusiveHashMap::IntrusiveHashMap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="215" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_intrusive_hash_map_1a616031328f4e3549ade77d28f6d7a38f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::Util::IntrusiveHashMap&lt; T &gt;::IntrusiveHashMap</definition>
        <argsstring>(const IntrusiveHashMap &amp;)=delete</argsstring>
        <name>IntrusiveHashMap</name>
        <qualifiedname>Bvr::Util::IntrusiveHashMap::IntrusiveHashMap</qualifiedname>
        <param>
          <type>const <ref refid="class_bvr_1_1_util_1_1_intrusive_hash_map" kindref="compound">IntrusiveHashMap</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="216" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_intrusive_hash_map_1ad6272392a7c22f3689cc26d49863fdc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::Util::IntrusiveHashMap&lt; T &gt;::operator=</definition>
        <argsstring>(const IntrusiveHashMap &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>Bvr::Util::IntrusiveHashMap::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_bvr_1_1_util_1_1_intrusive_hash_map" kindref="compound">IntrusiveHashMap</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="217" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_intrusive_hash_map_1a2551cc6b1fee8b192bae9ceee349a607" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::Util::IntrusiveHashMap&lt; T &gt;::IntrusiveHashMap</definition>
        <argsstring>(IntrusiveHashMap &amp;&amp;other)</argsstring>
        <name>IntrusiveHashMap</name>
        <qualifiedname>Bvr::Util::IntrusiveHashMap::IntrusiveHashMap</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_util_1_1_intrusive_hash_map" kindref="compound">IntrusiveHashMap</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="219" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="219" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_intrusive_hash_map_1a2432975a563437cb47e47cf2e45417d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_util_1_1_intrusive_hash_map" kindref="compound">IntrusiveHashMap</ref> &amp;</type>
        <definition>IntrusiveHashMap &amp; Bvr::Util::IntrusiveHashMap&lt; T &gt;::operator=</definition>
        <argsstring>(IntrusiveHashMap &amp;&amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>Bvr::Util::IntrusiveHashMap::operator=</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_util_1_1_intrusive_hash_map" kindref="compound">IntrusiveHashMap</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="222" column="22" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="222" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_intrusive_hash_map_1ae126d1fb892c3157a601dd618f0aedf4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::Util::IntrusiveHashMap&lt; T &gt;::~IntrusiveHashMap</definition>
        <argsstring>()</argsstring>
        <name>~IntrusiveHashMap</name>
        <qualifiedname>Bvr::Util::IntrusiveHashMap::~IntrusiveHashMap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="227" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="227" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_intrusive_hash_map_1a23b9960ee9c9857a8a5b61eb9a675073" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::Util::IntrusiveHashMap&lt; T &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>Bvr::Util::IntrusiveHashMap::clear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="229" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="229" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_intrusive_hash_map_1a7583b3db8c309bc7902d6e14cb846667" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T * Bvr::Util::IntrusiveHashMap&lt; T &gt;::find</definition>
        <argsstring>(Hash hash) const</argsstring>
        <name>find</name>
        <qualifiedname>Bvr::Util::IntrusiveHashMap::find</qualifiedname>
        <param>
          <type>Hash</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="241" column="7" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="241" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_intrusive_hash_map_1a164b44bc4501de2c8658175901866679" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T &amp; Bvr::Util::IntrusiveHashMap&lt; T &gt;::operator[]</definition>
        <argsstring>(Hash hash)</argsstring>
        <name>operator[]</name>
        <qualifiedname>Bvr::Util::IntrusiveHashMap::operator[]</qualifiedname>
        <param>
          <type>Hash</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="243" column="7" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="243" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_intrusive_hash_map_1a5aab9262364c581acd408abea29c1e58" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Bvr::Util::IntrusiveHashMap&lt; T &gt;::find_and_consume_pod</definition>
        <argsstring>(Hash hash, P &amp;p) const</argsstring>
        <name>find_and_consume_pod</name>
        <qualifiedname>Bvr::Util::IntrusiveHashMap::find_and_consume_pod</qualifiedname>
        <param>
          <type>Hash</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>P &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="250" column="22" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="250" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_intrusive_hash_map_1a6f97cd7004d9cd73d78bfead80a42134" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::Util::IntrusiveHashMap&lt; T &gt;::erase</definition>
        <argsstring>(T *value)</argsstring>
        <name>erase</name>
        <qualifiedname>Bvr::Util::IntrusiveHashMap::erase</qualifiedname>
        <param>
          <type>T *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="254" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="254" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_intrusive_hash_map_1aa11177aa20b8671e5c4cc5ca5ddc63a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::Util::IntrusiveHashMap&lt; T &gt;::erase</definition>
        <argsstring>(Hash hash)</argsstring>
        <name>erase</name>
        <qualifiedname>Bvr::Util::IntrusiveHashMap::erase</qualifiedname>
        <param>
          <type>Hash</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="259" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="259" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_intrusive_hash_map_1a73eb197aa7640cd76c7cf17fab376398" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>P</declname>
            <defname>P</defname>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T * Bvr::Util::IntrusiveHashMap&lt; T &gt;::emplace_replace</definition>
        <argsstring>(Hash hash, P &amp;&amp;... p)</argsstring>
        <name>emplace_replace</name>
        <qualifiedname>Bvr::Util::IntrusiveHashMap::emplace_replace</qualifiedname>
        <param>
          <type>Hash</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>P &amp;&amp;...</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="265" column="19" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="265" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_intrusive_hash_map_1aea8bf8d7c07b8a21232cc506032ae992" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>P</declname>
            <defname>P</defname>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T * Bvr::Util::IntrusiveHashMap&lt; T &gt;::emplace_yield</definition>
        <argsstring>(Hash hash, P &amp;&amp;... p)</argsstring>
        <name>emplace_yield</name>
        <qualifiedname>Bvr::Util::IntrusiveHashMap::emplace_yield</qualifiedname>
        <param>
          <type>Hash</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>P &amp;&amp;...</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="270" column="19" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="270" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_intrusive_hash_map_1a8e4418da14150e129ecd7fd34e40138a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>P</declname>
            <defname>P</defname>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T * Bvr::Util::IntrusiveHashMap&lt; T &gt;::allocate</definition>
        <argsstring>(P &amp;&amp;... p)</argsstring>
        <name>allocate</name>
        <qualifiedname>Bvr::Util::IntrusiveHashMap::allocate</qualifiedname>
        <param>
          <type>P &amp;&amp;...</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="275" column="19" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="275" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_intrusive_hash_map_1ad371fdb27e0fd1c4e8e68b9ca03b07cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::Util::IntrusiveHashMap&lt; T &gt;::free</definition>
        <argsstring>(T *value)</argsstring>
        <name>free</name>
        <qualifiedname>Bvr::Util::IntrusiveHashMap::free</qualifiedname>
        <param>
          <type>T *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="279" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="279" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_intrusive_hash_map_1a7b6ca413cd736317247ddd33496e9e0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T * Bvr::Util::IntrusiveHashMap&lt; T &gt;::insert_replace</definition>
        <argsstring>(Hash hash, T *value)</argsstring>
        <name>insert_replace</name>
        <qualifiedname>Bvr::Util::IntrusiveHashMap::insert_replace</qualifiedname>
        <param>
          <type>Hash</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="281" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="281" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_intrusive_hash_map_1a83dd77fcd24b64bf8ccb956ab775f9df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T * Bvr::Util::IntrusiveHashMap&lt; T &gt;::insert_yield</definition>
        <argsstring>(Hash hash, T *value)</argsstring>
        <name>insert_yield</name>
        <qualifiedname>Bvr::Util::IntrusiveHashMap::insert_yield</qualifiedname>
        <param>
          <type>Hash</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="289" column="7" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="289" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_intrusive_hash_map_1affcc657a904f406df6b58f1e30a1309d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_util_1_1_intrusive_list" kindref="compound">IntrusiveList</ref>&lt; T &gt;::Iterator</type>
        <definition>IntrusiveList&lt; T &gt;::Iterator Bvr::Util::IntrusiveHashMap&lt; T &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <qualifiedname>Bvr::Util::IntrusiveHashMap::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="297" column="39" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="297" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_intrusive_hash_map_1ace1e4ad0ac8617c24f9599a55f0ec0e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_util_1_1_intrusive_list" kindref="compound">IntrusiveList</ref>&lt; T &gt;::Iterator</type>
        <definition>IntrusiveList&lt; T &gt;::Iterator Bvr::Util::IntrusiveHashMap&lt; T &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <qualifiedname>Bvr::Util::IntrusiveHashMap::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="299" column="39" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="299" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_util_1_1_intrusive_hash_map_1ad2bcaf2571700958781003031134d3bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_util_1_1_intrusive_hash_map" kindref="compound">IntrusiveHashMap</ref> &amp;</type>
        <definition>IntrusiveHashMap &amp; Bvr::Util::IntrusiveHashMap&lt; T &gt;::get_thread_unsafe</definition>
        <argsstring>()</argsstring>
        <name>get_thread_unsafe</name>
        <qualifiedname>Bvr::Util::IntrusiveHashMap::get_thread_unsafe</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="301" column="40" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="301" bodyend="301"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" line="213" column="12" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Containers/IntrusiveHashMap.hpp" bodystart="213" bodyend="306"/>
    <listofallmembers>
      <member refid="class_bvr_1_1_util_1_1_intrusive_hash_map_1a8e4418da14150e129ecd7fd34e40138a" prot="public" virt="non-virtual"><scope>Bvr::Util::IntrusiveHashMap</scope><name>allocate</name></member>
      <member refid="class_bvr_1_1_util_1_1_intrusive_hash_map_1affcc657a904f406df6b58f1e30a1309d" prot="public" virt="non-virtual"><scope>Bvr::Util::IntrusiveHashMap</scope><name>begin</name></member>
      <member refid="class_bvr_1_1_util_1_1_intrusive_hash_map_1a23b9960ee9c9857a8a5b61eb9a675073" prot="public" virt="non-virtual"><scope>Bvr::Util::IntrusiveHashMap</scope><name>clear</name></member>
      <member refid="class_bvr_1_1_util_1_1_intrusive_hash_map_1a73eb197aa7640cd76c7cf17fab376398" prot="public" virt="non-virtual"><scope>Bvr::Util::IntrusiveHashMap</scope><name>emplace_replace</name></member>
      <member refid="class_bvr_1_1_util_1_1_intrusive_hash_map_1aea8bf8d7c07b8a21232cc506032ae992" prot="public" virt="non-virtual"><scope>Bvr::Util::IntrusiveHashMap</scope><name>emplace_yield</name></member>
      <member refid="class_bvr_1_1_util_1_1_intrusive_hash_map_1ace1e4ad0ac8617c24f9599a55f0ec0e6" prot="public" virt="non-virtual"><scope>Bvr::Util::IntrusiveHashMap</scope><name>end</name></member>
      <member refid="class_bvr_1_1_util_1_1_intrusive_hash_map_1a6f97cd7004d9cd73d78bfead80a42134" prot="public" virt="non-virtual"><scope>Bvr::Util::IntrusiveHashMap</scope><name>erase</name></member>
      <member refid="class_bvr_1_1_util_1_1_intrusive_hash_map_1aa11177aa20b8671e5c4cc5ca5ddc63a9" prot="public" virt="non-virtual"><scope>Bvr::Util::IntrusiveHashMap</scope><name>erase</name></member>
      <member refid="class_bvr_1_1_util_1_1_intrusive_hash_map_1a7583b3db8c309bc7902d6e14cb846667" prot="public" virt="non-virtual"><scope>Bvr::Util::IntrusiveHashMap</scope><name>find</name></member>
      <member refid="class_bvr_1_1_util_1_1_intrusive_hash_map_1a5aab9262364c581acd408abea29c1e58" prot="public" virt="non-virtual"><scope>Bvr::Util::IntrusiveHashMap</scope><name>find_and_consume_pod</name></member>
      <member refid="class_bvr_1_1_util_1_1_intrusive_hash_map_1ad371fdb27e0fd1c4e8e68b9ca03b07cf" prot="public" virt="non-virtual"><scope>Bvr::Util::IntrusiveHashMap</scope><name>free</name></member>
      <member refid="class_bvr_1_1_util_1_1_intrusive_hash_map_1ad2bcaf2571700958781003031134d3bf" prot="public" virt="non-virtual"><scope>Bvr::Util::IntrusiveHashMap</scope><name>get_thread_unsafe</name></member>
      <member refid="class_bvr_1_1_util_1_1_intrusive_hash_map_1a05fe12d3a9cd096d03003cffe3da5a43" prot="private" virt="non-virtual"><scope>Bvr::Util::IntrusiveHashMap</scope><name>hashmap</name></member>
      <member refid="class_bvr_1_1_util_1_1_intrusive_hash_map_1a7b6ca413cd736317247ddd33496e9e0e" prot="public" virt="non-virtual"><scope>Bvr::Util::IntrusiveHashMap</scope><name>insert_replace</name></member>
      <member refid="class_bvr_1_1_util_1_1_intrusive_hash_map_1a83dd77fcd24b64bf8ccb956ab775f9df" prot="public" virt="non-virtual"><scope>Bvr::Util::IntrusiveHashMap</scope><name>insert_yield</name></member>
      <member refid="class_bvr_1_1_util_1_1_intrusive_hash_map_1ac29b16297e26b60aacc980920caebd16" prot="public" virt="non-virtual"><scope>Bvr::Util::IntrusiveHashMap</scope><name>IntrusiveHashMap</name></member>
      <member refid="class_bvr_1_1_util_1_1_intrusive_hash_map_1a616031328f4e3549ade77d28f6d7a38f" prot="public" virt="non-virtual"><scope>Bvr::Util::IntrusiveHashMap</scope><name>IntrusiveHashMap</name></member>
      <member refid="class_bvr_1_1_util_1_1_intrusive_hash_map_1a2551cc6b1fee8b192bae9ceee349a607" prot="public" virt="non-virtual"><scope>Bvr::Util::IntrusiveHashMap</scope><name>IntrusiveHashMap</name></member>
      <member refid="class_bvr_1_1_util_1_1_intrusive_hash_map_1ad6272392a7c22f3689cc26d49863fdc6" prot="public" virt="non-virtual"><scope>Bvr::Util::IntrusiveHashMap</scope><name>operator=</name></member>
      <member refid="class_bvr_1_1_util_1_1_intrusive_hash_map_1a2432975a563437cb47e47cf2e45417d6" prot="public" virt="non-virtual"><scope>Bvr::Util::IntrusiveHashMap</scope><name>operator=</name></member>
      <member refid="class_bvr_1_1_util_1_1_intrusive_hash_map_1a164b44bc4501de2c8658175901866679" prot="public" virt="non-virtual"><scope>Bvr::Util::IntrusiveHashMap</scope><name>operator[]</name></member>
      <member refid="class_bvr_1_1_util_1_1_intrusive_hash_map_1a636e083db49ac9aff6f7c9a0a7046ea2" prot="private" virt="non-virtual"><scope>Bvr::Util::IntrusiveHashMap</scope><name>pool</name></member>
      <member refid="class_bvr_1_1_util_1_1_intrusive_hash_map_1ae126d1fb892c3157a601dd618f0aedf4" prot="public" virt="non-virtual"><scope>Bvr::Util::IntrusiveHashMap</scope><name>~IntrusiveHashMap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_bvr_1_1_c_image_loader" kind="class" language="C++" prot="public">
    <compoundname>Bvr::CImageLoader</compoundname>
    <basecompoundref refid="struct_bvr_1_1_i_asset_loader" prot="public" virt="non-virtual">Bvr::IAssetLoader</basecompoundref>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_bvr_1_1_c_image_loader_1ad3df34731c8cf26c37fdb058bbb04874" prot="public" static="no">
        <type><ref refid="class_bvr_1_1_c_image" kindref="compound">CImage</ref></type>
        <definition>using Bvr::CImageLoader::AssetT =  CImage</definition>
        <argsstring></argsstring>
        <name>AssetT</name>
        <qualifiedname>Bvr::CImageLoader::AssetT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/ImageIO.hpp" line="19" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/ImageIO.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_bvr_1_1_c_image_loader_1aadaa1a6b9b2eddb61d19dd6afaddf253" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type><ref refid="struct_bvr_1_1_i_asset_loader_1a633f0d522205cc50e67935a49ea4e2a5" kindref="member">IAssetLoader::Result</ref></type>
        <definition>IAssetLoader::Result Bvr::CImageLoader::Load</definition>
        <argsstring>(App &amp;app, IAssetLoader::Context &amp;ctx) final</argsstring>
        <name>Load</name>
        <qualifiedname>Bvr::CImageLoader::Load</qualifiedname>
        <reimplements refid="struct_bvr_1_1_i_asset_loader_1ab795074eee1d82d933fb66fc0564a0f4">Load</reimplements>
        <param>
          <type><ref refid="struct_bvr_1_1_app" kindref="compound">App</ref> &amp;</type>
          <declname>app</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_i_asset_loader_1_1_context" kindref="compound">IAssetLoader::Context</ref> &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Process file data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/ImageIO.hpp" line="20" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_image_loader_1ae4a53ff2513c9b3695b893a77dc75110" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Bvr::CImageLoader::GetSupportedFormats</definition>
        <argsstring>(std::vector&lt; std::string_view &gt; &amp;out) const final</argsstring>
        <name>GetSupportedFormats</name>
        <qualifiedname>Bvr::CImageLoader::GetSupportedFormats</qualifiedname>
        <reimplements refid="struct_bvr_1_1_i_asset_loader_1ab9eb9793947d65293edb7382d18f4bf1">GetSupportedFormats</reimplements>
        <param>
          <type>std::vector&lt; std::string_view &gt; &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Collect a list of all supported file formats. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/ImageIO.hpp" line="21" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_image_loader_1a18cd4b7e949dd58f7a62a40ed57f1e66" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Bvr::CImageLoader::GetImportSettings</definition>
        <argsstring>(Meta::Variant &amp;options, const std::string &amp;resourcePath) const final</argsstring>
        <name>GetImportSettings</name>
        <qualifiedname>Bvr::CImageLoader::GetImportSettings</qualifiedname>
        <reimplements refid="struct_bvr_1_1_i_asset_loader_1a20292de16722622b3040f67b67945981">GetImportSettings</reimplements>
        <param>
          <type><ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Meta::Variant</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>resourcePath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/ImageIO.hpp" line="32" column="35"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_image_loader_1a9993be06106e37d31fad6723f8e4cf2d" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool Bvr::CImageLoader::Import</definition>
        <argsstring>(App &amp;app, ImportContext &amp;ctx) const final</argsstring>
        <name>Import</name>
        <qualifiedname>Bvr::CImageLoader::Import</qualifiedname>
        <reimplements refid="struct_bvr_1_1_i_asset_loader_1aa2ddabf5f5482fff45efa43eccd377c4">Import</reimplements>
        <param>
          <type><ref refid="struct_bvr_1_1_app" kindref="compound">App</ref> &amp;</type>
          <declname>app</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_i_asset_loader_1_1_import_context" kindref="compound">ImportContext</ref> &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/ImageIO.hpp" line="35" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_bvr_1_1_c_image_loader_1a5b0adc361bf2eedbac29fc4128fdd7ad" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_t_loading_result" kindref="compound">TLoadingResult</ref>&lt; <ref refid="struct_bvr_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_bvr_1_1_c_image" kindref="compound">CImage</ref> &gt; &gt;</type>
        <definition>static TLoadingResult&lt; Handle&lt; CImage &gt; &gt; Bvr::CImageLoader::FromMemory</definition>
        <argsstring>(App &amp;app, std::string_view name, std::string_view extension, Span&lt; uint8 const &gt; data, bool bSRGB)</argsstring>
        <name>FromMemory</name>
        <qualifiedname>Bvr::CImageLoader::FromMemory</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_app" kindref="compound">App</ref> &amp;</type>
          <declname>app</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>extension</declname>
        </param>
        <param>
          <type><ref refid="class_bvr_1_1_util_1_1_t_span" kindref="compound">Span</ref>&lt; uint8 const &gt;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bSRGB</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/ImageIO.hpp" line="24" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_image_loader_1a587e6464fb24df1b994647dd4b3d3c12" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_t_loading_result" kindref="compound">TLoadingResult</ref>&lt; <ref refid="class_bvr_1_1_c_image" kindref="compound">CImage</ref> &gt;</type>
        <definition>static TLoadingResult&lt; CImage &gt; Bvr::CImageLoader::FromMemory</definition>
        <argsstring>(std::string_view name, std::string_view extension, Span&lt; uint8 const &gt; data, bool bSRGB)</argsstring>
        <name>FromMemory</name>
        <qualifiedname>Bvr::CImageLoader::FromMemory</qualifiedname>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>extension</declname>
        </param>
        <param>
          <type><ref refid="class_bvr_1_1_util_1_1_t_span" kindref="compound">Span</ref>&lt; uint8 const &gt;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bSRGB</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/ImageIO.hpp" line="27" column="27"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Bvr::CImageLoader</label>
        <link refid="class_bvr_1_1_c_image_loader"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Bvr::IAssetLoader</label>
        <link refid="struct_bvr_1_1_i_asset_loader"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Bvr::CImageLoader</label>
        <link refid="class_bvr_1_1_c_image_loader"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Bvr::IAssetLoader</label>
        <link refid="struct_bvr_1_1_i_asset_loader"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/ImageIO.hpp" line="17" column="1" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/ImageIO.hpp" bodystart="17" bodyend="36"/>
    <listofallmembers>
      <member refid="class_bvr_1_1_c_image_loader_1ad3df34731c8cf26c37fdb058bbb04874" prot="public" virt="non-virtual"><scope>Bvr::CImageLoader</scope><name>AssetT</name></member>
      <member refid="class_bvr_1_1_c_image_loader_1a5b0adc361bf2eedbac29fc4128fdd7ad" prot="public" virt="non-virtual"><scope>Bvr::CImageLoader</scope><name>FromMemory</name></member>
      <member refid="class_bvr_1_1_c_image_loader_1a587e6464fb24df1b994647dd4b3d3c12" prot="public" virt="non-virtual"><scope>Bvr::CImageLoader</scope><name>FromMemory</name></member>
      <member refid="class_bvr_1_1_c_image_loader_1a18cd4b7e949dd58f7a62a40ed57f1e66" prot="public" virt="virtual"><scope>Bvr::CImageLoader</scope><name>GetImportSettings</name></member>
      <member refid="class_bvr_1_1_c_image_loader_1ae4a53ff2513c9b3695b893a77dc75110" prot="public" virt="virtual"><scope>Bvr::CImageLoader</scope><name>GetSupportedFormats</name></member>
      <member refid="class_bvr_1_1_c_image_loader_1a9993be06106e37d31fad6723f8e4cf2d" prot="public" virt="virtual"><scope>Bvr::CImageLoader</scope><name>Import</name></member>
      <member refid="struct_bvr_1_1_i_asset_loader_1afcdba1e73f6004c7877573cf440fe0fc" prot="public" virt="non-virtual"><scope>Bvr::CImageLoader</scope><name>ImportSettingT</name></member>
      <member refid="class_bvr_1_1_c_image_loader_1aadaa1a6b9b2eddb61d19dd6afaddf253" prot="public" virt="virtual"><scope>Bvr::CImageLoader</scope><name>Load</name></member>
      <member refid="struct_bvr_1_1_i_asset_loader_1a633f0d522205cc50e67935a49ea4e2a5" prot="public" virt="non-virtual"><scope>Bvr::CImageLoader</scope><name>Result</name></member>
      <member refid="struct_bvr_1_1_i_asset_loader_1ac6908f1d580790dd0fdbbe3cbadc4ad8" prot="public" virt="virtual"><scope>Bvr::CImageLoader</scope><name>~IAssetLoader</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

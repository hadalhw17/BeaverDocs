<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_bvr_1_1_renderer_1_1_c_f_g_node" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Bvr::Renderer::CFGNode</compoundname>
    <derivedcompoundref refid="class_bvr_1_1_renderer_1_1_c_frame_graph" prot="public" virt="non-virtual">Bvr::Renderer::CFrameGraph</derivedcompoundref>
    <derivedcompoundref refid="class_bvr_1_1_renderer_1_1_t_f_g_lambda_node" prot="public" virt="non-virtual">Bvr::Renderer::TFGLambdaNode&lt; FnT &gt;</derivedcompoundref>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a51f0267e7056df34c5b1280555cb8ef3" prot="public" static="no" strong="no">
        <type>uint32</type>
        <name>EFlags</name>
        <qualifiedname>Bvr::Renderer::CFGNode::EFlags</qualifiedname>
        <enumvalue id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a51f0267e7056df34c5b1280555cb8ef3afefac7b1749dd393d7f72747d0701aed" prot="public">
          <name>None</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a51f0267e7056df34c5b1280555cb8ef3abe693f0d6fe5931b9c2031f74d644ba0" prot="public">
          <name>Graphics</name>
          <initializer>= Bit32(0)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a51f0267e7056df34c5b1280555cb8ef3a14245722d709bcab98fc8c43a4b6c1fe" prot="public">
          <name>Compute</name>
          <initializer>= Bit32(1)</initializer>
          <briefdescription>
<para>&lt;Rasterisation pipeline </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a51f0267e7056df34c5b1280555cb8ef3a0a63e5179ad6402bf5c9e490aa7a323c" prot="public">
          <name>RayTracing</name>
          <initializer>= Bit32(2)</initializer>
          <briefdescription>
<para>&lt;Compute pipeline </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a51f0267e7056df34c5b1280555cb8ef3ac5657dc3694b5dea2a3726da8772d8b9" prot="public">
          <name>Transfer</name>
          <initializer>= Bit32(3)</initializer>
          <briefdescription>
<para>&lt;<ref refid="struct_bvr_1_1_ray" kindref="compound">Ray</ref> tracing pipeline </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a51f0267e7056df34c5b1280555cb8ef3af0f5c52ec6c5896e50f289983e01bcf6" prot="public">
          <name>Overlay</name>
          <initializer>= Bit32(4)</initializer>
          <briefdescription>
<para>&lt;Misc commands (copy, etc...) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a51f0267e7056df34c5b1280555cb8ef3a904018fafd37c5192de9a130a5971365" prot="public">
          <name>ForceClear</name>
          <initializer>= Bit32(5)</initializer>
          <briefdescription>
<para>&lt;Don&apos;t clear the with render pass </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a51f0267e7056df34c5b1280555cb8ef3aa47ffc0173839f3bfa83d978bb76c7a2" prot="public">
          <name>UsesBindless</name>
          <initializer>= Bit32(6)</initializer>
          <briefdescription>
<para>&lt;Force clear with the render pass </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="276" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="276" bodyend="285"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a1501818f0cdbf46819f37debfddb7a76" prot="private" static="no" mutable="no">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_frame_graph" kindref="compound">CFrameGraph</ref> *</type>
        <definition>CFrameGraph* Bvr::Renderer::CFGNode::m_frameGraph</definition>
        <argsstring></argsstring>
        <name>m_frameGraph</name>
        <qualifiedname>Bvr::Renderer::CFGNode::m_frameGraph</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="492" column="42" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="492" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a4315fa767d4c481f3eb5727f86d029f1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_bvr_1_1_renderer_1_1_s_accessed_texture_resource" kindref="compound">SAccessedTextureResource</ref> &gt;</type>
        <definition>std::vector&lt;SAccessedTextureResource&gt; Bvr::Renderer::CFGNode::m_inputImages</definition>
        <argsstring></argsstring>
        <name>m_inputImages</name>
        <qualifiedname>Bvr::Renderer::CFGNode::m_inputImages</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="493" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="493" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a0fce1ec4691f8f9385fb772807eb9156" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_bvr_1_1_renderer_1_1_s_accessed_texture_resource" kindref="compound">SAccessedTextureResource</ref> &gt;</type>
        <definition>std::vector&lt;SAccessedTextureResource&gt; Bvr::Renderer::CFGNode::m_outputStorageImages</definition>
        <argsstring></argsstring>
        <name>m_outputStorageImages</name>
        <qualifiedname>Bvr::Renderer::CFGNode::m_outputStorageImages</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="494" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="494" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1aa5800f4570c5da93d3f245eecdf181fa" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_bvr_1_1_renderer_1_1_s_accessed_texture_resource" kindref="compound">SAccessedTextureResource</ref> &gt;</type>
        <definition>std::vector&lt;SAccessedTextureResource&gt; Bvr::Renderer::CFGNode::m_outputImages</definition>
        <argsstring></argsstring>
        <name>m_outputImages</name>
        <qualifiedname>Bvr::Renderer::CFGNode::m_outputImages</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="495" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="495" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a65f1dc5ab6107e91bf16696aa47ca0c2" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_bvr_1_1_renderer_1_1_s_accessed_texture_resource" kindref="compound">SAccessedTextureResource</ref> &gt;</type>
        <definition>std::vector&lt;SAccessedTextureResource&gt; Bvr::Renderer::CFGNode::m_allAccessedImages</definition>
        <argsstring></argsstring>
        <name>m_allAccessedImages</name>
        <qualifiedname>Bvr::Renderer::CFGNode::m_allAccessedImages</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="496" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="496" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1ace1d1e7223f4896241801fe5869aba18" prot="private" static="no" mutable="no">
        <type><ref refid="struct_bvr_1_1_renderer_1_1_s_accessed_texture_resource" kindref="compound">SAccessedTextureResource</ref></type>
        <definition>SAccessedTextureResource Bvr::Renderer::CFGNode::m_depthStencilOutput</definition>
        <argsstring></argsstring>
        <name>m_depthStencilOutput</name>
        <qualifiedname>Bvr::Renderer::CFGNode::m_depthStencilOutput</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="497" column="43" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="497" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a6560f72f3b0be167ca80e531298f1baa" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_bvr_1_1_renderer_1_1_s_accessed_buffer_resource" kindref="compound">SAccessedBufferResource</ref> &gt;</type>
        <definition>std::vector&lt;SAccessedBufferResource&gt; Bvr::Renderer::CFGNode::m_constantBuffers</definition>
        <argsstring></argsstring>
        <name>m_constantBuffers</name>
        <qualifiedname>Bvr::Renderer::CFGNode::m_constantBuffers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="499" column="18" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="499" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1ad98ab9109f9330f8beced007ccaa767c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_bvr_1_1_renderer_1_1_s_accessed_buffer_resource" kindref="compound">SAccessedBufferResource</ref> &gt;</type>
        <definition>std::vector&lt;SAccessedBufferResource&gt; Bvr::Renderer::CFGNode::m_inputStorageBuffers</definition>
        <argsstring></argsstring>
        <name>m_inputStorageBuffers</name>
        <qualifiedname>Bvr::Renderer::CFGNode::m_inputStorageBuffers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="500" column="18" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="500" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a0c5fe7845983dc837db2b7e3411ea87b" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_bvr_1_1_renderer_1_1_s_accessed_buffer_resource" kindref="compound">SAccessedBufferResource</ref> &gt;</type>
        <definition>std::vector&lt;SAccessedBufferResource&gt; Bvr::Renderer::CFGNode::m_outputBuffers</definition>
        <argsstring></argsstring>
        <name>m_outputBuffers</name>
        <qualifiedname>Bvr::Renderer::CFGNode::m_outputBuffers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="501" column="18" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="501" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1abb60a93b71fcf8dd895c161c44a80b50" prot="private" static="no" mutable="no">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_frame_graph_buffer" kindref="compound">CFrameGraphBuffer</ref> *</type>
        <definition>CFrameGraphBuffer* Bvr::Renderer::CFGNode::m_pIndirectCommandBuffer</definition>
        <argsstring></argsstring>
        <name>m_pIndirectCommandBuffer</name>
        <qualifiedname>Bvr::Renderer::CFGNode::m_pIndirectCommandBuffer</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="502" column="42" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="502" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a23b1c4f1cb98ffafb93feebb77d9db56" prot="private" static="no" mutable="no">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_frame_graph_buffer" kindref="compound">CFrameGraphBuffer</ref> *</type>
        <definition>CFrameGraphBuffer* Bvr::Renderer::CFGNode::m_pIndirectCounterBuffer</definition>
        <argsstring></argsstring>
        <name>m_pIndirectCounterBuffer</name>
        <qualifiedname>Bvr::Renderer::CFGNode::m_pIndirectCounterBuffer</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="503" column="42" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="503" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1ab78b15767536ef1d4bf147c54cc1a053" prot="private" static="no" mutable="no">
        <type><ref refid="class_bvr_1_1_t_basic_hashed_string" kindref="compound">HashedString</ref></type>
        <definition>HashedString Bvr::Renderer::CFGNode::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <qualifiedname>Bvr::Renderer::CFGNode::m_name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="505" column="29" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="505" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a123f918b3da24eecb428f92e44dbb239" prot="private" static="no" mutable="no">
        <type><ref refid="class_bvr_1_1_renderer_1_1_t_f_g_handle" kindref="compound">HFGNode</ref></type>
        <definition>HFGNode Bvr::Renderer::CFGNode::m_hSelf</definition>
        <argsstring></argsstring>
        <name>m_hSelf</name>
        <qualifiedname>Bvr::Renderer::CFGNode::m_hSelf</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="506" column="29" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="506" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1af2f4b18199a0798eb3f7263ceecf2f2c" prot="private" static="no" mutable="no">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a51f0267e7056df34c5b1280555cb8ef3" kindref="member">EFlags</ref></type>
        <definition>EFlags Bvr::Renderer::CFGNode::m_flags</definition>
        <argsstring></argsstring>
        <name>m_flags</name>
        <qualifiedname>Bvr::Renderer::CFGNode::m_flags</qualifiedname>
        <initializer>= EFlags::None</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="507" column="29" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="507" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a5a1ceb1caca043476fdb5b1659231f87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::Renderer::CFGNode::CFGNode</definition>
        <argsstring>(CFrameGraph &amp;graph, const std::string_view name, const EFlags flags)</argsstring>
        <name>CFGNode</name>
        <qualifiedname>Bvr::Renderer::CFGNode::CFGNode</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_renderer_1_1_c_frame_graph" kindref="compound">CFrameGraph</ref> &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>const std::string_view</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a51f0267e7056df34c5b1280555cb8ef3" kindref="member">EFlags</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="287" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1ae14a1bb6a8453d96b8ce3d862fbf67de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::Renderer::CFGNode::CFGNode</definition>
        <argsstring>(CFrameGraph &amp;graph, const HashedString name, const EFlags flags)</argsstring>
        <name>CFGNode</name>
        <qualifiedname>Bvr::Renderer::CFGNode::CFGNode</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_renderer_1_1_c_frame_graph" kindref="compound">CFrameGraph</ref> &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_t_basic_hashed_string" kindref="compound">HashedString</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a51f0267e7056df34c5b1280555cb8ef3" kindref="member">EFlags</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="289" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a79b1acef83e1590fb19a079d63d72125" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Bvr::Renderer::CFGNode::~CFGNode</definition>
        <argsstring>()=default</argsstring>
        <name>~CFGNode</name>
        <qualifiedname>Bvr::Renderer::CFGNode::~CFGNode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="290" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1ab7dcff24a3c47912c7bbf05a2601a811" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_frame_graph" kindref="compound">CFrameGraph</ref> &amp;</type>
        <definition>CFrameGraph &amp; Bvr::Renderer::CFGNode::ParentGraph</definition>
        <argsstring>() const noexcept</argsstring>
        <name>ParentGraph</name>
        <qualifiedname>Bvr::Renderer::CFGNode::ParentGraph</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="292" column="25" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="292" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1ac535ed8644b3962106ea1f8f9530c74d" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_frame_graph_buffer" kindref="compound">CFrameGraphBuffer</ref> *</type>
        <definition>CFrameGraphBuffer * Bvr::Renderer::CFGNode::GetIndirectCommandBuffer</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetIndirectCommandBuffer</name>
        <qualifiedname>Bvr::Renderer::CFGNode::GetIndirectCommandBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="295" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="295" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a3c3b50cdf7460510520746ed62d0397d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="class_bvr_1_1_renderer_1_1_c_frame_graph_buffer" kindref="compound">CFrameGraphBuffer</ref> *</type>
        <definition>const CFrameGraphBuffer * Bvr::Renderer::CFGNode::GetIndirectCommandBuffer</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetIndirectCommandBuffer</name>
        <qualifiedname>Bvr::Renderer::CFGNode::GetIndirectCommandBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="299" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="299" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a433b1fac4e18f632631ccec0f6fe5793" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="class_bvr_1_1_renderer_1_1_c_frame_graph_buffer" kindref="compound">CFrameGraphBuffer</ref> *</type>
        <definition>const CFrameGraphBuffer * Bvr::Renderer::CFGNode::GetIndirectCounterBuffer</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetIndirectCounterBuffer</name>
        <qualifiedname>Bvr::Renderer::CFGNode::GetIndirectCounterBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="303" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="303" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a313d7a1d31cc020bd32f0281d87b7742" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="class_bvr_1_1_renderer_1_1_c_frame_graph_buffer" kindref="compound">CFrameGraphBuffer</ref> *</type>
        <definition>const CFrameGraphBuffer * Bvr::Renderer::CFGNode::GetIndirectCounterBuffer</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetIndirectCounterBuffer</name>
        <qualifiedname>Bvr::Renderer::CFGNode::GetIndirectCounterBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="306" column="30" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="306" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1aaa8f691b8d4f5b785e05ff07652c009a" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="struct_bvr_1_1_renderer_1_1_s_accessed_buffer_resource" kindref="compound">SAccessedBufferResource</ref> &gt; &amp;</type>
        <definition>std::vector&lt; SAccessedBufferResource &gt; &amp; Bvr::Renderer::CFGNode::GetOutputBuffers</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetOutputBuffers</name>
        <qualifiedname>Bvr::Renderer::CFGNode::GetOutputBuffers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="310" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="310" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a5d87bb09d79b73a4a0ebccc2915c70fa" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="struct_bvr_1_1_renderer_1_1_s_accessed_buffer_resource" kindref="compound">SAccessedBufferResource</ref> &gt; &amp;</type>
        <definition>std::vector&lt; SAccessedBufferResource &gt; &amp; Bvr::Renderer::CFGNode::GetInputStorageBuffers</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetInputStorageBuffers</name>
        <qualifiedname>Bvr::Renderer::CFGNode::GetInputStorageBuffers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="314" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="314" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a94d4290827cab8a0374baae08b4f71b5" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="struct_bvr_1_1_renderer_1_1_s_accessed_buffer_resource" kindref="compound">SAccessedBufferResource</ref> &gt; &amp;</type>
        <definition>std::vector&lt; SAccessedBufferResource &gt; &amp; Bvr::Renderer::CFGNode::GetConstantBuffers</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetConstantBuffers</name>
        <qualifiedname>Bvr::Renderer::CFGNode::GetConstantBuffers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="318" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="318" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a1573e59f34fd032ed876819092b0b57a" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="struct_bvr_1_1_renderer_1_1_s_accessed_texture_resource" kindref="compound">SAccessedTextureResource</ref> &gt; &amp;</type>
        <definition>std::vector&lt; SAccessedTextureResource &gt; &amp; Bvr::Renderer::CFGNode::GetInputImages</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetInputImages</name>
        <qualifiedname>Bvr::Renderer::CFGNode::GetInputImages</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="322" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="322" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a8ad8ea0001bc7921414a725afdf5ab99" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="struct_bvr_1_1_renderer_1_1_s_accessed_texture_resource" kindref="compound">SAccessedTextureResource</ref> &gt; &amp;</type>
        <definition>std::vector&lt; SAccessedTextureResource &gt; &amp; Bvr::Renderer::CFGNode::GetOutputStorageImages</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetOutputStorageImages</name>
        <qualifiedname>Bvr::Renderer::CFGNode::GetOutputStorageImages</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="326" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="326" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1abec08c27503275d8de1f2aec68957f72" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="struct_bvr_1_1_renderer_1_1_s_accessed_texture_resource" kindref="compound">SAccessedTextureResource</ref> &gt; &amp;</type>
        <definition>std::vector&lt; SAccessedTextureResource &gt; &amp; Bvr::Renderer::CFGNode::GetOutputImages</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetOutputImages</name>
        <qualifiedname>Bvr::Renderer::CFGNode::GetOutputImages</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="330" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="330" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1acd2daf0a9f792eaac7d6be71eb658cf3" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_renderer_1_1_s_accessed_texture_resource" kindref="compound">SAccessedTextureResource</ref> &amp;</type>
        <definition>SAccessedTextureResource &amp; Bvr::Renderer::CFGNode::GetDepthStencilOutput</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetDepthStencilOutput</name>
        <qualifiedname>Bvr::Renderer::CFGNode::GetDepthStencilOutput</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="333" column="31" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="333" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a58d2946cc1c1786817e951ea8b8e17f6" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="struct_bvr_1_1_renderer_1_1_s_accessed_buffer_resource" kindref="compound">SAccessedBufferResource</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; SAccessedBufferResource &gt; &amp; Bvr::Renderer::CFGNode::GetOutputBuffers</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetOutputBuffers</name>
        <qualifiedname>Bvr::Renderer::CFGNode::GetOutputBuffers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="338" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="338" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1addf83bb7af353cbc9bf0eb21390c80b1" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="struct_bvr_1_1_renderer_1_1_s_accessed_buffer_resource" kindref="compound">SAccessedBufferResource</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; SAccessedBufferResource &gt; &amp; Bvr::Renderer::CFGNode::GetInputStorageBuffers</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetInputStorageBuffers</name>
        <qualifiedname>Bvr::Renderer::CFGNode::GetInputStorageBuffers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="342" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="342" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1aaf5f719873696b87eda356345f6fd012" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="struct_bvr_1_1_renderer_1_1_s_accessed_buffer_resource" kindref="compound">SAccessedBufferResource</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; SAccessedBufferResource &gt; &amp; Bvr::Renderer::CFGNode::GetConstantBuffers</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetConstantBuffers</name>
        <qualifiedname>Bvr::Renderer::CFGNode::GetConstantBuffers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="346" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="346" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1aca014294b8277eca5a2c01ff2d649ef5" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="struct_bvr_1_1_renderer_1_1_s_accessed_texture_resource" kindref="compound">SAccessedTextureResource</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; SAccessedTextureResource &gt; &amp; Bvr::Renderer::CFGNode::GetInputImages</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetInputImages</name>
        <qualifiedname>Bvr::Renderer::CFGNode::GetInputImages</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="350" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="350" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a422a136d890f30135adc79f8a2d0bf3f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="struct_bvr_1_1_renderer_1_1_s_accessed_texture_resource" kindref="compound">SAccessedTextureResource</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; SAccessedTextureResource &gt; &amp; Bvr::Renderer::CFGNode::GetOutputStorageImages</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetOutputStorageImages</name>
        <qualifiedname>Bvr::Renderer::CFGNode::GetOutputStorageImages</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="354" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="354" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a32cf683d4fdd74643b19c0af5e551ca5" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="struct_bvr_1_1_renderer_1_1_s_accessed_texture_resource" kindref="compound">SAccessedTextureResource</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; SAccessedTextureResource &gt; &amp; Bvr::Renderer::CFGNode::GetOutputImages</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetOutputImages</name>
        <qualifiedname>Bvr::Renderer::CFGNode::GetOutputImages</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="358" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="358" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1af5db13e2b4793cc5e583cc313f82e46e" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="struct_bvr_1_1_renderer_1_1_s_accessed_texture_resource" kindref="compound">SAccessedTextureResource</ref> &amp;</type>
        <definition>const SAccessedTextureResource &amp; Bvr::Renderer::CFGNode::GetDepthStencilOutput</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetDepthStencilOutput</name>
        <qualifiedname>Bvr::Renderer::CFGNode::GetDepthStencilOutput</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="362" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="362" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1aec5efd0f1715d0183e74cd14dddc4e8f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_util_1_1_t_span" kindref="compound">Span</ref>&lt; <ref refid="struct_bvr_1_1_renderer_1_1_s_accessed_texture_resource" kindref="compound">SAccessedTextureResource</ref> const &gt;</type>
        <definition>Span&lt; SAccessedTextureResource const  &gt; Bvr::Renderer::CFGNode::GetAllAccessedImages</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetAllAccessedImages</name>
        <qualifiedname>Bvr::Renderer::CFGNode::GetAllAccessedImages</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="366" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="366" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a7f4d6c45b9ab6baf784de6f8d1d6c8e9" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode &amp; Bvr::Renderer::CFGNode::SetDepthStencilOutput</definition>
        <argsstring>(const std::string_view name, const SImageDescription &amp;desc={}, const bool cond=true) noexcept</argsstring>
        <name>SetDepthStencilOutput</name>
        <qualifiedname>Bvr::Renderer::CFGNode::SetDepthStencilOutput</qualifiedname>
        <param>
          <type>const std::string_view</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_renderer_1_1_s_image_description" kindref="compound">SImageDescription</ref> &amp;</type>
          <declname>desc</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>cond</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="371" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1ad280ab9c4d58e1c2892b642ae45ced1b" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode &amp; Bvr::Renderer::CFGNode::AddOutput</definition>
        <argsstring>(const std::string_view name, const SImageDescription &amp;desc={}, const bool cond=true) noexcept</argsstring>
        <name>AddOutput</name>
        <qualifiedname>Bvr::Renderer::CFGNode::AddOutput</qualifiedname>
        <param>
          <type>const std::string_view</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_renderer_1_1_s_image_description" kindref="compound">SImageDescription</ref> &amp;</type>
          <declname>desc</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>cond</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="377" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a344281210faf7f2aac371e2c861d64a6" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode &amp; Bvr::Renderer::CFGNode::AddOutput</definition>
        <argsstring>(UFGImage hImage, const STextureAccess &amp;access={}) noexcept</argsstring>
        <name>AddOutput</name>
        <qualifiedname>Bvr::Renderer::CFGNode::AddOutput</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_renderer_1_1_t_u_f_g_resource" kindref="compound">UFGImage</ref></type>
          <declname>hImage</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_renderer_1_1_s_texture_access" kindref="compound">STextureAccess</ref> &amp;</type>
          <declname>access</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="380" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1ac06c3d09c51c2862cded195071479744" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode &amp; Bvr::Renderer::CFGNode::SetIndirectCommandBuffer</definition>
        <argsstring>(const std::string_view name) noexcept</argsstring>
        <name>SetIndirectCommandBuffer</name>
        <qualifiedname>Bvr::Renderer::CFGNode::SetIndirectCommandBuffer</qualifiedname>
        <param>
          <type>const std::string_view</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="384" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a44657e0852869a4904d4dfce0cb47161" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode &amp; Bvr::Renderer::CFGNode::SetIndirectCounterBuffer</definition>
        <argsstring>(const std::string_view name) noexcept</argsstring>
        <name>SetIndirectCounterBuffer</name>
        <qualifiedname>Bvr::Renderer::CFGNode::SetIndirectCounterBuffer</qualifiedname>
        <param>
          <type>const std::string_view</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="385" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a197d24fec1f1bde3ae22298c34ede22a" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode &amp; Bvr::Renderer::CFGNode::SetRWTexture</definition>
        <argsstring>(uint32 slot, UFGImage image, const SImageDescription &amp;desc={}, const bool cond=true) noexcept</argsstring>
        <name>SetRWTexture</name>
        <qualifiedname>Bvr::Renderer::CFGNode::SetRWTexture</qualifiedname>
        <param>
          <type>uint32</type>
          <declname>slot</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_renderer_1_1_t_u_f_g_resource" kindref="compound">UFGImage</ref></type>
          <declname>image</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_renderer_1_1_s_image_description" kindref="compound">SImageDescription</ref> &amp;</type>
          <declname>desc</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>cond</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="388" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="388" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a9d5739cf9db333ad4b8b202a7683ff27" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode &amp; Bvr::Renderer::CFGNode::SetTexture</definition>
        <argsstring>(uint32 slot, UFGImage image, const ESamplerType eSampler=ESamplerType::LinearClampEdge, bool cond=true) noexcept</argsstring>
        <name>SetTexture</name>
        <qualifiedname>Bvr::Renderer::CFGNode::SetTexture</qualifiedname>
        <param>
          <type>uint32</type>
          <declname>slot</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_renderer_1_1_t_u_f_g_resource" kindref="compound">UFGImage</ref></type>
          <declname>image</declname>
        </param>
        <param>
          <type>const ESamplerType</type>
          <declname>eSampler</declname>
          <defval>ESamplerType::LinearClampEdge</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>cond</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="396" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="396" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1af798b0b5e2b9323e2a3160d18829fde5" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode &amp; Bvr::Renderer::CFGNode::SetConstantBuffer</definition>
        <argsstring>(uint32 slot, UFGBuffer buf) noexcept</argsstring>
        <name>SetConstantBuffer</name>
        <qualifiedname>Bvr::Renderer::CFGNode::SetConstantBuffer</qualifiedname>
        <param>
          <type>uint32</type>
          <declname>slot</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_renderer_1_1_t_u_f_g_resource" kindref="compound">UFGBuffer</ref></type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="403" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="403" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a7033fd08b924cffeb8a5ee188effaf9a" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode &amp; Bvr::Renderer::CFGNode::SetInputStorageBuffer</definition>
        <argsstring>(uint32 slot, UFGBuffer name, const bool cond=true) noexcept</argsstring>
        <name>SetInputStorageBuffer</name>
        <qualifiedname>Bvr::Renderer::CFGNode::SetInputStorageBuffer</qualifiedname>
        <param>
          <type>uint32</type>
          <declname>slot</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_renderer_1_1_t_u_f_g_resource" kindref="compound">UFGBuffer</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>cond</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="407" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="407" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a0f8a5700fffa8b1d316705d7440a287b" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode &amp; Bvr::Renderer::CFGNode::SetOutputBuffer</definition>
        <argsstring>(uint32 slot, UFGBuffer buf, const SBufferDescription &amp;desc={}, const bool cond=true) noexcept</argsstring>
        <name>SetOutputBuffer</name>
        <qualifiedname>Bvr::Renderer::CFGNode::SetOutputBuffer</qualifiedname>
        <param>
          <type>uint32</type>
          <declname>slot</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_renderer_1_1_t_u_f_g_resource" kindref="compound">UFGBuffer</ref></type>
          <declname>buf</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_renderer_1_1_s_buffer_description" kindref="compound">SBufferDescription</ref> &amp;</type>
          <declname>desc</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>cond</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="413" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="413" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1af3c10c1f1c12ff7de3577e3aba5400a9" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode &amp; Bvr::Renderer::CFGNode::SetRWTexture</definition>
        <argsstring>(uint32 slot, uint32 arrayId, UFGImage image, const SImageDescription &amp;desc={}, const bool cond=true) noexcept</argsstring>
        <name>SetRWTexture</name>
        <qualifiedname>Bvr::Renderer::CFGNode::SetRWTexture</qualifiedname>
        <param>
          <type>uint32</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>arrayId</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_renderer_1_1_t_u_f_g_resource" kindref="compound">UFGImage</ref></type>
          <declname>image</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_renderer_1_1_s_image_description" kindref="compound">SImageDescription</ref> &amp;</type>
          <declname>desc</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>cond</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="423" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a458fb314b34abf744b9dee2edebb90a0" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode &amp; Bvr::Renderer::CFGNode::SetTexture</definition>
        <argsstring>(uint32 slot, uint32 arrayId, UFGImage name, const ESamplerType eSampler=ESamplerType::LinearClampEdge, bool cond=true) noexcept</argsstring>
        <name>SetTexture</name>
        <qualifiedname>Bvr::Renderer::CFGNode::SetTexture</qualifiedname>
        <param>
          <type>uint32</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>arrayId</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_renderer_1_1_t_u_f_g_resource" kindref="compound">UFGImage</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type>const ESamplerType</type>
          <declname>eSampler</declname>
          <defval>ESamplerType::LinearClampEdge</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>cond</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="427" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a162f27bcbc0a368a3c24c0b49db4a106" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode &amp; Bvr::Renderer::CFGNode::SetConstantBuffer</definition>
        <argsstring>(uint32 slot, uint32 arrayId, UFGBuffer buf) noexcept</argsstring>
        <name>SetConstantBuffer</name>
        <qualifiedname>Bvr::Renderer::CFGNode::SetConstantBuffer</qualifiedname>
        <param>
          <type>uint32</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>arrayId</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_renderer_1_1_t_u_f_g_resource" kindref="compound">UFGBuffer</ref></type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="430" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a7406fe99ba2d18a19818dced35dfafb3" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode &amp; Bvr::Renderer::CFGNode::SetInputStorageBuffer</definition>
        <argsstring>(uint32 slot, uint32 arrayId, UFGBuffer buf, const bool cond=true) noexcept</argsstring>
        <name>SetInputStorageBuffer</name>
        <qualifiedname>Bvr::Renderer::CFGNode::SetInputStorageBuffer</qualifiedname>
        <param>
          <type>uint32</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>arrayId</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_renderer_1_1_t_u_f_g_resource" kindref="compound">UFGBuffer</ref></type>
          <declname>buf</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>cond</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="432" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1af92fd1bc738c72822a1f6d54293f4867" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode &amp; Bvr::Renderer::CFGNode::SetOutputBuffer</definition>
        <argsstring>(uint32 slot, uint32 arrayId, UFGBuffer name, const SBufferDescription &amp;desc={}, const bool cond=true) noexcept</argsstring>
        <name>SetOutputBuffer</name>
        <qualifiedname>Bvr::Renderer::CFGNode::SetOutputBuffer</qualifiedname>
        <param>
          <type>uint32</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>arrayId</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_renderer_1_1_t_u_f_g_resource" kindref="compound">UFGBuffer</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_renderer_1_1_s_buffer_description" kindref="compound">SBufferDescription</ref> &amp;</type>
          <declname>desc</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>cond</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="434" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1adc29fc75a5807e155efc3365cdd48ecd" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_t_basic_hashed_string" kindref="compound">HashedString</ref></type>
        <definition>HashedString Bvr::Renderer::CFGNode::GetName</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetName</name>
        <qualifiedname>Bvr::Renderer::CFGNode::GetName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="437" column="26" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="437" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a598d596016cc9e75515bd8a5a76d1337" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode &amp; Bvr::Renderer::CFGNode::SetDepthStencilOutput</definition>
        <argsstring>(THandle&lt; ImageView &gt; hView) noexcept</argsstring>
        <name>SetDepthStencilOutput</name>
        <qualifiedname>Bvr::Renderer::CFGNode::SetDepthStencilOutput</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">THandle</ref>&lt; <ref refid="struct_bvr_1_1_renderer_1_1_image_view" kindref="compound">ImageView</ref> &gt;</type>
          <declname>hView</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="443" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a35ac3aded1daaf34af7ecdb60f406e35" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode &amp; Bvr::Renderer::CFGNode::AddOutput</definition>
        <argsstring>(THandle&lt; ImageView &gt; hView) noexcept</argsstring>
        <name>AddOutput</name>
        <qualifiedname>Bvr::Renderer::CFGNode::AddOutput</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">THandle</ref>&lt; <ref refid="struct_bvr_1_1_renderer_1_1_image_view" kindref="compound">ImageView</ref> &gt;</type>
          <declname>hView</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="444" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a049c5487225dd7a9221d168fc3d0f8e3" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode &amp; Bvr::Renderer::CFGNode::SetRWTexture</definition>
        <argsstring>(uint32 slot, THandle&lt; ImageView &gt; hView) noexcept</argsstring>
        <name>SetRWTexture</name>
        <qualifiedname>Bvr::Renderer::CFGNode::SetRWTexture</qualifiedname>
        <param>
          <type>uint32</type>
          <declname>slot</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">THandle</ref>&lt; <ref refid="struct_bvr_1_1_renderer_1_1_image_view" kindref="compound">ImageView</ref> &gt;</type>
          <declname>hView</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="445" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="445" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1ab8e9fb04dc483e0c1ae943ac74578b8d" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode &amp; Bvr::Renderer::CFGNode::SetRWTexture</definition>
        <argsstring>(uint32 slot, uint32 arrayId, THandle&lt; ImageView &gt; hView) noexcept</argsstring>
        <name>SetRWTexture</name>
        <qualifiedname>Bvr::Renderer::CFGNode::SetRWTexture</qualifiedname>
        <param>
          <type>uint32</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>arrayId</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">THandle</ref>&lt; <ref refid="struct_bvr_1_1_renderer_1_1_image_view" kindref="compound">ImageView</ref> &gt;</type>
          <declname>hView</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="448" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1aaa0488527fb7e5d08858bfd9bf633a6b" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode &amp; Bvr::Renderer::CFGNode::SetTexture</definition>
        <argsstring>(uint32 slot, THandle&lt; ImageView &gt; hView) noexcept</argsstring>
        <name>SetTexture</name>
        <qualifiedname>Bvr::Renderer::CFGNode::SetTexture</qualifiedname>
        <param>
          <type>uint32</type>
          <declname>slot</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">THandle</ref>&lt; <ref refid="struct_bvr_1_1_renderer_1_1_image_view" kindref="compound">ImageView</ref> &gt;</type>
          <declname>hView</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="450" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="450" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1aa9a314e7a482db473e142080c0443fbd" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode &amp; Bvr::Renderer::CFGNode::SetTexture</definition>
        <argsstring>(uint32 slot, uint32 arrayId, THandle&lt; ImageView &gt; hView) noexcept</argsstring>
        <name>SetTexture</name>
        <qualifiedname>Bvr::Renderer::CFGNode::SetTexture</qualifiedname>
        <param>
          <type>uint32</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>arrayId</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">THandle</ref>&lt; <ref refid="struct_bvr_1_1_renderer_1_1_image_view" kindref="compound">ImageView</ref> &gt;</type>
          <declname>hView</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="453" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a2c463f687b5d04357a4c258b30183e83" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode &amp; Bvr::Renderer::CFGNode::SetConstantBuffer</definition>
        <argsstring>(uint32 slot, THandle&lt; BufferView &gt; hBuffer) noexcept</argsstring>
        <name>SetConstantBuffer</name>
        <qualifiedname>Bvr::Renderer::CFGNode::SetConstantBuffer</qualifiedname>
        <param>
          <type>uint32</type>
          <declname>slot</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">THandle</ref>&lt; <ref refid="struct_bvr_1_1_renderer_1_1_buffer_view" kindref="compound">BufferView</ref> &gt;</type>
          <declname>hBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="455" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="455" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1add2a7b676cb2b8912b76909dbf4ef079" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode &amp; Bvr::Renderer::CFGNode::SetConstantBuffer</definition>
        <argsstring>(uint32 slot, uint32 arrayId, THandle&lt; BufferView &gt; hBuffer) noexcept</argsstring>
        <name>SetConstantBuffer</name>
        <qualifiedname>Bvr::Renderer::CFGNode::SetConstantBuffer</qualifiedname>
        <param>
          <type>uint32</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>arrayId</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">THandle</ref>&lt; <ref refid="struct_bvr_1_1_renderer_1_1_buffer_view" kindref="compound">BufferView</ref> &gt;</type>
          <declname>hBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="459" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a2c03aa6b76978cc9d660ef91b8ace8fd" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode &amp; Bvr::Renderer::CFGNode::SetInputStorageBuffer</definition>
        <argsstring>(uint32 slot, THandle&lt; BufferView &gt; hBuffer, bool cond=true) noexcept</argsstring>
        <name>SetInputStorageBuffer</name>
        <qualifiedname>Bvr::Renderer::CFGNode::SetInputStorageBuffer</qualifiedname>
        <param>
          <type>uint32</type>
          <declname>slot</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">THandle</ref>&lt; <ref refid="struct_bvr_1_1_renderer_1_1_buffer_view" kindref="compound">BufferView</ref> &gt;</type>
          <declname>hBuffer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>cond</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="461" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="461" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a29748813ea8a718bd2cae971d31e37ab" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode &amp; Bvr::Renderer::CFGNode::SetInputStorageBuffer</definition>
        <argsstring>(uint32 slot, uint32 arrayId, THandle&lt; BufferView &gt; hBuffer, bool cond=true) noexcept</argsstring>
        <name>SetInputStorageBuffer</name>
        <qualifiedname>Bvr::Renderer::CFGNode::SetInputStorageBuffer</qualifiedname>
        <param>
          <type>uint32</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>arrayId</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">THandle</ref>&lt; <ref refid="struct_bvr_1_1_renderer_1_1_buffer_view" kindref="compound">BufferView</ref> &gt;</type>
          <declname>hBuffer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>cond</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="467" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a71e5756b2cfa5b6ec9cfd65f67e7d642" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode &amp; Bvr::Renderer::CFGNode::SetOutputBuffer</definition>
        <argsstring>(uint32 slot, THandle&lt; BufferView &gt; hBuffer, bool cond=true) noexcept</argsstring>
        <name>SetOutputBuffer</name>
        <qualifiedname>Bvr::Renderer::CFGNode::SetOutputBuffer</qualifiedname>
        <param>
          <type>uint32</type>
          <declname>slot</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">THandle</ref>&lt; <ref refid="struct_bvr_1_1_renderer_1_1_buffer_view" kindref="compound">BufferView</ref> &gt;</type>
          <declname>hBuffer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>cond</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="470" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="470" bodyend="473"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a6804be68f298d5ac68b008368aa7559d" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode &amp; Bvr::Renderer::CFGNode::SetOutputBuffer</definition>
        <argsstring>(uint32 slot, uint32 arrayId, THandle&lt; BufferView &gt; hBuffer, bool cond=true) noexcept</argsstring>
        <name>SetOutputBuffer</name>
        <qualifiedname>Bvr::Renderer::CFGNode::SetOutputBuffer</qualifiedname>
        <param>
          <type>uint32</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>arrayId</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">THandle</ref>&lt; <ref refid="struct_bvr_1_1_renderer_1_1_buffer_view" kindref="compound">BufferView</ref> &gt;</type>
          <declname>hBuffer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>cond</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="474" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1af317e5c7690212bfc22e1d89a71c6495" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode &amp; Bvr::Renderer::CFGNode::SetIndirectCommandBuffer</definition>
        <argsstring>(THandle&lt; BufferView &gt; hBuffer) noexcept</argsstring>
        <name>SetIndirectCommandBuffer</name>
        <qualifiedname>Bvr::Renderer::CFGNode::SetIndirectCommandBuffer</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">THandle</ref>&lt; <ref refid="struct_bvr_1_1_renderer_1_1_buffer_view" kindref="compound">BufferView</ref> &gt;</type>
          <declname>hBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="477" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1af3743b9b9b0c0004dc5c660f4ac06a6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode &amp; Bvr::Renderer::CFGNode::SetFlags</definition>
        <argsstring>(EFlags flags, bool set=true)</argsstring>
        <name>SetFlags</name>
        <qualifiedname>Bvr::Renderer::CFGNode::SetFlags</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a51f0267e7056df34c5b1280555cb8ef3" kindref="member">EFlags</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>set</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="480" column="20" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="480" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a94bdcb3e800570b27757f4bc2cad174f" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::Renderer::CFGNode::SetSelf</definition>
        <argsstring>(HFGNode hPass) noexcept</argsstring>
        <name>SetSelf</name>
        <qualifiedname>Bvr::Renderer::CFGNode::SetSelf</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_renderer_1_1_t_f_g_handle" kindref="compound">HFGNode</ref></type>
          <declname>hPass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="484" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="484" bodyend="484"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1af4a20eb659fc23921e34dba53cad2328" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_t_f_g_handle" kindref="compound">HFGNode</ref></type>
        <definition>HFGNode Bvr::Renderer::CFGNode::GetSelf</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetSelf</name>
        <qualifiedname>Bvr::Renderer::CFGNode::GetSelf</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="485" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="485" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a434c714f35f783463e431df0140e7c7b" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a51f0267e7056df34c5b1280555cb8ef3" kindref="member">EFlags</ref></type>
        <definition>EFlags Bvr::Renderer::CFGNode::GetFlags</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetFlags</name>
        <qualifiedname>Bvr::Renderer::CFGNode::GetFlags</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="486" column="20" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="486" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1a61ef23bc9cbb8de20d34c8a76ef9c139" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Bvr::Renderer::CFGNode::Execute</definition>
        <argsstring>(CCommandList *pCmd)=0</argsstring>
        <name>Execute</name>
        <qualifiedname>Bvr::Renderer::CFGNode::Execute</qualifiedname>
        <reimplementedby refid="class_bvr_1_1_renderer_1_1_t_f_g_lambda_node_1ab54f17b0cc250d8c99578b9f273492f9">Execute</reimplementedby>
        <reimplementedby refid="class_bvr_1_1_renderer_1_1_c_frame_graph_1a3704f90989b29588e7e753fc0b8bc0a0">Execute</reimplementedby>
        <param>
          <type>CCommandList *</type>
          <declname>pCmd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="487" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_f_g_node_1aaa01b26ebd13e9ed036525075d3c3e17" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::Renderer::CFGNode::SetParentGraph</definition>
        <argsstring>(CFrameGraph &amp;graph) noexcept</argsstring>
        <name>SetParentGraph</name>
        <qualifiedname>Bvr::Renderer::CFGNode::SetParentGraph</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_renderer_1_1_c_frame_graph" kindref="compound">CFrameGraph</ref> &amp;</type>
          <declname>graph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="489" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="489" bodyend="489"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Bvr::Renderer::CFGNode</label>
        <link refid="class_bvr_1_1_renderer_1_1_c_f_g_node"/>
      </node>
      <node id="2">
        <label>Bvr::Renderer::CFrameGraph</label>
        <link refid="class_bvr_1_1_renderer_1_1_c_frame_graph"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Bvr::Renderer::TFGLambdaNode&lt; FnT &gt;</label>
        <link refid="class_bvr_1_1_renderer_1_1_t_f_g_lambda_node"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" line="274" column="1" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/FrameGraph.hpp" bodystart="274" bodyend="508"/>
    <listofallmembers>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1ad280ab9c4d58e1c2892b642ae45ced1b" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>AddOutput</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a344281210faf7f2aac371e2c861d64a6" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>AddOutput</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a35ac3aded1daaf34af7ecdb60f406e35" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>AddOutput</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a5a1ceb1caca043476fdb5b1659231f87" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>CFGNode</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1ae14a1bb6a8453d96b8ce3d862fbf67de" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>CFGNode</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a51f0267e7056df34c5b1280555cb8ef3a14245722d709bcab98fc8c43a4b6c1fe" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>Compute</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a51f0267e7056df34c5b1280555cb8ef3" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>EFlags</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a61ef23bc9cbb8de20d34c8a76ef9c139" prot="public" virt="pure-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>Execute</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a51f0267e7056df34c5b1280555cb8ef3a904018fafd37c5192de9a130a5971365" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>ForceClear</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1aec5efd0f1715d0183e74cd14dddc4e8f" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>GetAllAccessedImages</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a94d4290827cab8a0374baae08b4f71b5" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>GetConstantBuffers</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1aaf5f719873696b87eda356345f6fd012" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>GetConstantBuffers</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1acd2daf0a9f792eaac7d6be71eb658cf3" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>GetDepthStencilOutput</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1af5db13e2b4793cc5e583cc313f82e46e" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>GetDepthStencilOutput</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a434c714f35f783463e431df0140e7c7b" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>GetFlags</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1ac535ed8644b3962106ea1f8f9530c74d" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>GetIndirectCommandBuffer</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a3c3b50cdf7460510520746ed62d0397d" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>GetIndirectCommandBuffer</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a433b1fac4e18f632631ccec0f6fe5793" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>GetIndirectCounterBuffer</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a313d7a1d31cc020bd32f0281d87b7742" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>GetIndirectCounterBuffer</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a1573e59f34fd032ed876819092b0b57a" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>GetInputImages</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1aca014294b8277eca5a2c01ff2d649ef5" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>GetInputImages</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a5d87bb09d79b73a4a0ebccc2915c70fa" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>GetInputStorageBuffers</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1addf83bb7af353cbc9bf0eb21390c80b1" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>GetInputStorageBuffers</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1adc29fc75a5807e155efc3365cdd48ecd" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>GetName</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1aaa8f691b8d4f5b785e05ff07652c009a" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>GetOutputBuffers</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a58d2946cc1c1786817e951ea8b8e17f6" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>GetOutputBuffers</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1abec08c27503275d8de1f2aec68957f72" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>GetOutputImages</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a32cf683d4fdd74643b19c0af5e551ca5" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>GetOutputImages</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a8ad8ea0001bc7921414a725afdf5ab99" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>GetOutputStorageImages</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a422a136d890f30135adc79f8a2d0bf3f" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>GetOutputStorageImages</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1af4a20eb659fc23921e34dba53cad2328" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>GetSelf</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a51f0267e7056df34c5b1280555cb8ef3abe693f0d6fe5931b9c2031f74d644ba0" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>Graphics</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a65f1dc5ab6107e91bf16696aa47ca0c2" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>m_allAccessedImages</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a6560f72f3b0be167ca80e531298f1baa" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>m_constantBuffers</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1ace1d1e7223f4896241801fe5869aba18" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>m_depthStencilOutput</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1af2f4b18199a0798eb3f7263ceecf2f2c" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>m_flags</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a1501818f0cdbf46819f37debfddb7a76" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>m_frameGraph</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a123f918b3da24eecb428f92e44dbb239" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>m_hSelf</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a4315fa767d4c481f3eb5727f86d029f1" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>m_inputImages</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1ad98ab9109f9330f8beced007ccaa767c" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>m_inputStorageBuffers</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1ab78b15767536ef1d4bf147c54cc1a053" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>m_name</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a0c5fe7845983dc837db2b7e3411ea87b" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>m_outputBuffers</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1aa5800f4570c5da93d3f245eecdf181fa" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>m_outputImages</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a0fce1ec4691f8f9385fb772807eb9156" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>m_outputStorageImages</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1abb60a93b71fcf8dd895c161c44a80b50" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>m_pIndirectCommandBuffer</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a23b1c4f1cb98ffafb93feebb77d9db56" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>m_pIndirectCounterBuffer</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a51f0267e7056df34c5b1280555cb8ef3afefac7b1749dd393d7f72747d0701aed" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>None</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a51f0267e7056df34c5b1280555cb8ef3af0f5c52ec6c5896e50f289983e01bcf6" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>Overlay</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1ab7dcff24a3c47912c7bbf05a2601a811" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>ParentGraph</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a51f0267e7056df34c5b1280555cb8ef3a0a63e5179ad6402bf5c9e490aa7a323c" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>RayTracing</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1af798b0b5e2b9323e2a3160d18829fde5" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>SetConstantBuffer</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a162f27bcbc0a368a3c24c0b49db4a106" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>SetConstantBuffer</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a2c463f687b5d04357a4c258b30183e83" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>SetConstantBuffer</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1add2a7b676cb2b8912b76909dbf4ef079" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>SetConstantBuffer</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a7f4d6c45b9ab6baf784de6f8d1d6c8e9" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>SetDepthStencilOutput</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a598d596016cc9e75515bd8a5a76d1337" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>SetDepthStencilOutput</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1af3743b9b9b0c0004dc5c660f4ac06a6a" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>SetFlags</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1ac06c3d09c51c2862cded195071479744" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>SetIndirectCommandBuffer</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1af317e5c7690212bfc22e1d89a71c6495" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>SetIndirectCommandBuffer</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a44657e0852869a4904d4dfce0cb47161" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>SetIndirectCounterBuffer</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a7033fd08b924cffeb8a5ee188effaf9a" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>SetInputStorageBuffer</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a7406fe99ba2d18a19818dced35dfafb3" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>SetInputStorageBuffer</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a2c03aa6b76978cc9d660ef91b8ace8fd" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>SetInputStorageBuffer</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a29748813ea8a718bd2cae971d31e37ab" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>SetInputStorageBuffer</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a0f8a5700fffa8b1d316705d7440a287b" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>SetOutputBuffer</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1af92fd1bc738c72822a1f6d54293f4867" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>SetOutputBuffer</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a71e5756b2cfa5b6ec9cfd65f67e7d642" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>SetOutputBuffer</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a6804be68f298d5ac68b008368aa7559d" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>SetOutputBuffer</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1aaa01b26ebd13e9ed036525075d3c3e17" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>SetParentGraph</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a197d24fec1f1bde3ae22298c34ede22a" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>SetRWTexture</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1af3c10c1f1c12ff7de3577e3aba5400a9" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>SetRWTexture</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a049c5487225dd7a9221d168fc3d0f8e3" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>SetRWTexture</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1ab8e9fb04dc483e0c1ae943ac74578b8d" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>SetRWTexture</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a94bdcb3e800570b27757f4bc2cad174f" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>SetSelf</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a9d5739cf9db333ad4b8b202a7683ff27" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>SetTexture</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a458fb314b34abf744b9dee2edebb90a0" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>SetTexture</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1aaa0488527fb7e5d08858bfd9bf633a6b" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>SetTexture</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1aa9a314e7a482db473e142080c0443fbd" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>SetTexture</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a51f0267e7056df34c5b1280555cb8ef3ac5657dc3694b5dea2a3726da8772d8b9" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>Transfer</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a51f0267e7056df34c5b1280555cb8ef3aa47ffc0173839f3bfa83d978bb76c7a2" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CFGNode</scope><name>UsesBindless</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a79b1acef83e1590fb19a079d63d72125" prot="public" virt="virtual"><scope>Bvr::Renderer::CFGNode</scope><name>~CFGNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

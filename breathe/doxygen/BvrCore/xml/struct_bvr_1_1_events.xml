<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="struct_bvr_1_1_events" kind="struct" language="C++" prot="public">
    <compoundname>Bvr::Events</compoundname>
    <innerclass refid="struct_bvr_1_1_events_1_1_update_system" prot="public">Bvr::Events::UpdateSystem</innerclass>
    <templateparamlist>
      <param>
        <type>typename E</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_bvr_1_1_events_1aa2208ce2aa03e68fe94ea70b9e48662b" prot="public" static="no">
        <type>E</type>
        <definition>using Bvr::Events&lt; E &gt;::TEvent =  E</definition>
        <argsstring></argsstring>
        <name>TEvent</name>
        <qualifiedname>Bvr::Events::TEvent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" line="18" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_events_1a27a529d1933c0ad533170a0ab6ea7c9c" prot="public" static="no">
        <type>typename std::vector&lt; E &gt;::iterator</type>
        <definition>using Bvr::Events&lt; E &gt;::iterator =  typename std::vector&lt;E&gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <qualifiedname>Bvr::Events::iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" line="19" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_events_1a3bc5d69f8bc7ef298a5fd24224142dfd" prot="public" static="no">
        <type>typename std::vector&lt; E &gt;::const_iterator</type>
        <definition>using Bvr::Events&lt; E &gt;::const_iterator =  typename std::vector&lt;E&gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <qualifiedname>Bvr::Events::const_iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" line="20" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_bvr_1_1_events_1a56eb39b620e9bbe191dd58e72fce9160" prot="private" static="no" mutable="no">
        <type>std::vector&lt; E &gt;</type>
        <definition>std::vector&lt;E&gt; Bvr::Events&lt; E &gt;::m_storage[2]</definition>
        <argsstring>[2]</argsstring>
        <name>m_storage</name>
        <qualifiedname>Bvr::Events::m_storage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" line="43" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_bvr_1_1_events_1ae119256cd109059b49ee47d24bed6f53" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend Bvr::Events&lt; E &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <qualifiedname>Bvr::Events::iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" line="45" column="12" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_bvr_1_1_events_1a170d8e7df847bce3fa04826bcac48c57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::Events&lt; E &gt;::Send</definition>
        <argsstring>(E &amp;&amp;e)</argsstring>
        <name>Send</name>
        <qualifiedname>Bvr::Events::Send</qualifiedname>
        <param>
          <type>E &amp;&amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" line="22" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" bodystart="22" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_events_1a0a36fe4943dfa7b76fc461f6df2ae36b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::Events&lt; E &gt;::Update</definition>
        <argsstring>()</argsstring>
        <name>Update</name>
        <qualifiedname>Bvr::Events::Update</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" line="24" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" bodystart="24" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_events_1a92b056a4fb9fa4547e5566f9f892acb7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Bvr::Events&lt; E &gt;::Size</definition>
        <argsstring>() const</argsstring>
        <name>Size</name>
        <qualifiedname>Bvr::Events::Size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" line="29" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_events_1a4e633958fb6a923659a60c43521b5fe6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Bvr::Events&lt; E &gt;::ReadSize</definition>
        <argsstring>() const</argsstring>
        <name>ReadSize</name>
        <qualifiedname>Bvr::Events::ReadSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" line="30" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_events_1aa7bb514b5f11177de7676aba39d4dbf3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Bvr::Events&lt; E &gt;::WriteSize</definition>
        <argsstring>() const</argsstring>
        <name>WriteSize</name>
        <qualifiedname>Bvr::Events::WriteSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" line="31" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_events_1a4963520a0a3878e0a0972963ab4a3384" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::Events&lt; E &gt;::HasReads</definition>
        <argsstring>() const</argsstring>
        <name>HasReads</name>
        <qualifiedname>Bvr::Events::HasReads</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" line="32" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_events_1ac78ac33d2fff131d33459db539b3833f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::Events&lt; E &gt;::HasWrites</definition>
        <argsstring>() const</argsstring>
        <name>HasWrites</name>
        <qualifiedname>Bvr::Events::HasWrites</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" line="33" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_events_1a4328c3033c37268cfd409bc94734507d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::Events&lt; E &gt;::Empty</definition>
        <argsstring>() const</argsstring>
        <name>Empty</name>
        <qualifiedname>Bvr::Events::Empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" line="34" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_events_1aa394812cc9d24a64a3f0915444d76be1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator Bvr::Events&lt; E &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <qualifiedname>Bvr::Events::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" line="36" column="26" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_events_1a2bdd279ba1457914fe697ac0d10f9b32" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator Bvr::Events&lt; E &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <qualifiedname>Bvr::Events::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" line="37" column="26" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_events_1a5ddc811285f79c721b00434a9fe069ac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator Bvr::Events&lt; E &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <qualifiedname>Bvr::Events::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" line="39" column="26" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_events_1a39c8d991f00ebfc14cf65d732e2c81c3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator Bvr::Events&lt; E &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <qualifiedname>Bvr::Events::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" line="40" column="26" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" bodystart="40" bodyend="40"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" line="8" column="12" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Events/Events.hpp" bodystart="8" bodyend="46"/>
    <listofallmembers>
      <member refid="struct_bvr_1_1_events_1aa394812cc9d24a64a3f0915444d76be1" prot="public" virt="non-virtual"><scope>Bvr::Events</scope><name>begin</name></member>
      <member refid="struct_bvr_1_1_events_1a5ddc811285f79c721b00434a9fe069ac" prot="public" virt="non-virtual"><scope>Bvr::Events</scope><name>begin</name></member>
      <member refid="struct_bvr_1_1_events_1a3bc5d69f8bc7ef298a5fd24224142dfd" prot="public" virt="non-virtual"><scope>Bvr::Events</scope><name>const_iterator</name></member>
      <member refid="struct_bvr_1_1_events_1a4328c3033c37268cfd409bc94734507d" prot="public" virt="non-virtual"><scope>Bvr::Events</scope><name>Empty</name></member>
      <member refid="struct_bvr_1_1_events_1a2bdd279ba1457914fe697ac0d10f9b32" prot="public" virt="non-virtual"><scope>Bvr::Events</scope><name>end</name></member>
      <member refid="struct_bvr_1_1_events_1a39c8d991f00ebfc14cf65d732e2c81c3" prot="public" virt="non-virtual"><scope>Bvr::Events</scope><name>end</name></member>
      <member refid="struct_bvr_1_1_events_1a4963520a0a3878e0a0972963ab4a3384" prot="public" virt="non-virtual"><scope>Bvr::Events</scope><name>HasReads</name></member>
      <member refid="struct_bvr_1_1_events_1ac78ac33d2fff131d33459db539b3833f" prot="public" virt="non-virtual"><scope>Bvr::Events</scope><name>HasWrites</name></member>
      <member refid="struct_bvr_1_1_events_1a27a529d1933c0ad533170a0ab6ea7c9c" prot="public" virt="non-virtual"><scope>Bvr::Events</scope><name>iterator</name></member>
      <member refid="struct_bvr_1_1_events_1ae119256cd109059b49ee47d24bed6f53" prot="private" virt="non-virtual"><scope>Bvr::Events</scope><name>iterator</name></member>
      <member refid="struct_bvr_1_1_events_1a56eb39b620e9bbe191dd58e72fce9160" prot="private" virt="non-virtual"><scope>Bvr::Events</scope><name>m_storage</name></member>
      <member refid="struct_bvr_1_1_events_1a4e633958fb6a923659a60c43521b5fe6" prot="public" virt="non-virtual"><scope>Bvr::Events</scope><name>ReadSize</name></member>
      <member refid="struct_bvr_1_1_events_1a170d8e7df847bce3fa04826bcac48c57" prot="public" virt="non-virtual"><scope>Bvr::Events</scope><name>Send</name></member>
      <member refid="struct_bvr_1_1_events_1a92b056a4fb9fa4547e5566f9f892acb7" prot="public" virt="non-virtual"><scope>Bvr::Events</scope><name>Size</name></member>
      <member refid="struct_bvr_1_1_events_1aa2208ce2aa03e68fe94ea70b9e48662b" prot="public" virt="non-virtual"><scope>Bvr::Events</scope><name>TEvent</name></member>
      <member refid="struct_bvr_1_1_events_1a0a36fe4943dfa7b76fc461f6df2ae36b" prot="public" virt="non-virtual"><scope>Bvr::Events</scope><name>Update</name></member>
      <member refid="struct_bvr_1_1_events_1aa7bb514b5f11177de7676aba39d4dbf3" prot="public" virt="non-virtual"><scope>Bvr::Events</scope><name>WriteSize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

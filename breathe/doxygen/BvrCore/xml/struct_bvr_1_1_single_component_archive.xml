<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="struct_bvr_1_1_single_component_archive" kind="struct" language="C++" prot="public">
    <compoundname>Bvr::SingleComponentArchive</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>bool</type>
        <declname>ForRead</declname>
        <defname>ForRead</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_bvr_1_1_single_component_archive_1abff52d21042659a91ac7d5049a02746c" prot="public" static="no">
        <type>T</type>
        <definition>using Bvr::SingleComponentArchive&lt; T, ForRead &gt;::ComponentT =  T</definition>
        <argsstring></argsstring>
        <name>ComponentT</name>
        <qualifiedname>Bvr::SingleComponentArchive::ComponentT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="94" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_single_component_archive_1a683e5350f9c7970596dfafcfef5f9bb4" prot="public" static="no">
        <type><ref refid="struct_bvr_1_1_detail_1_1_t_component_id_storage" kindref="compound">Detail::TComponentIdStorage</ref>&lt; T, ForRead &gt;</type>
        <definition>using Bvr::SingleComponentArchive&lt; T, ForRead &gt;::TStorage =  Detail::TComponentIdStorage&lt;T, ForRead&gt;</definition>
        <argsstring></argsstring>
        <name>TStorage</name>
        <qualifiedname>Bvr::SingleComponentArchive::TStorage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="95" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_single_component_archive_1aa9f53fd61f49fc3d6d815e6ec72ccf8d" prot="public" static="no">
        <type><ref refid="class_bvr_1_1_c_from_world_archive" kindref="compound">CFromWorldArchive</ref></type>
        <definition>using Bvr::SingleComponentArchive&lt; T, ForRead &gt;::TArch =  CFromWorldArchive</definition>
        <argsstring></argsstring>
        <name>TArch</name>
        <qualifiedname>Bvr::SingleComponentArchive::TArch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="96" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_single_component_archive_1a52efda66f115abb8a4e4ff4b56635ec1" prot="public" static="no">
        <type>typename TStorage::TKey</type>
        <definition>using Bvr::SingleComponentArchive&lt; T, ForRead &gt;::KeyT =  typename TStorage::TKey</definition>
        <argsstring></argsstring>
        <name>KeyT</name>
        <qualifiedname>Bvr::SingleComponentArchive::KeyT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="97" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_single_component_archive_1a25b69525ac81fb2664f42baa9d0c74bf" prot="public" static="no">
        <type>typename TStorage::TId</type>
        <definition>using Bvr::SingleComponentArchive&lt; T, ForRead &gt;::IdT =  typename TStorage::TId</definition>
        <argsstring></argsstring>
        <name>IdT</name>
        <qualifiedname>Bvr::SingleComponentArchive::IdT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="98" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="struct_bvr_1_1_single_component_archive_1adc61408f42010fad82fd635ad73a6586" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Bvr::SingleComponentArchive&lt; T, ForRead &gt;::IsRuntime</definition>
        <argsstring></argsstring>
        <name>IsRuntime</name>
        <qualifiedname>Bvr::SingleComponentArchive::IsRuntime</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="92" column="27" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_bvr_1_1_single_component_archive_1abcc3583b2409152df17f63f2534bc1dc" prot="private" static="no" mutable="no">
        <type><ref refid="struct_bvr_1_1_detail_1_1_t_component_id_storage" kindref="compound">TStorage</ref></type>
        <definition>TStorage Bvr::SingleComponentArchive&lt; T, ForRead &gt;::m_entityUUIDRemap</definition>
        <argsstring></argsstring>
        <name>m_entityUUIDRemap</name>
        <qualifiedname>Bvr::SingleComponentArchive::m_entityUUIDRemap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="147" column="16" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_bvr_1_1_single_component_archive_1ab615907fe54675e4fb7f1b778c48d39a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::SingleComponentArchive&lt; T, ForRead &gt;::SingleComponentArchive</definition>
        <argsstring>()=default</argsstring>
        <name>SingleComponentArchive</name>
        <qualifiedname>Bvr::SingleComponentArchive::SingleComponentArchive</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="100" column="5"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_single_component_archive_1a4beb82919e396be12ba21792f23e2435" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::SingleComponentArchive&lt; T, ForRead &gt;::WriteSingle</definition>
        <argsstring>(TArch &amp;arch, CWorld *pWorld, TEntity hEnt)</argsstring>
        <name>WriteSingle</name>
        <qualifiedname>Bvr::SingleComponentArchive::WriteSingle</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_c_from_world_archive" kindref="compound">TArch</ref> &amp;</type>
          <declname>arch</declname>
        </param>
        <param>
          <type><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> *</type>
          <declname>pWorld</declname>
        </param>
        <param>
          <type><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="102" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="102" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_single_component_archive_1a395ce9479d01b218176a3884995b5735" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename EntitySet</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Bvr::SingleComponentArchive&lt; T, ForRead &gt;::Write</definition>
        <argsstring>(TArch &amp;arch, CWorld *pWorld, const EntitySet &amp;entToSerialise)</argsstring>
        <name>Write</name>
        <qualifiedname>Bvr::SingleComponentArchive::Write</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_c_from_world_archive" kindref="compound">TArch</ref> &amp;</type>
          <declname>arch</declname>
        </param>
        <param>
          <type><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> *</type>
          <declname>pWorld</declname>
        </param>
        <param>
          <type>const EntitySet &amp;</type>
          <declname>entToSerialise</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="112" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="112" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_single_component_archive_1af3b4dd58f76607ff9d8ed88c74035429" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::SingleComponentArchive&lt; T, ForRead &gt;::ReadSingle</definition>
        <argsstring>(TArch &amp;arch)</argsstring>
        <name>ReadSingle</name>
        <qualifiedname>Bvr::SingleComponentArchive::ReadSingle</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_c_from_world_archive" kindref="compound">TArch</ref> &amp;</type>
          <declname>arch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="121" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_single_component_archive_1ab886b0b63a8dba0d562b322b8a568c92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::SingleComponentArchive&lt; T, ForRead &gt;::Read</definition>
        <argsstring>(TArch &amp;arch)</argsstring>
        <name>Read</name>
        <qualifiedname>Bvr::SingleComponentArchive::Read</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_c_from_world_archive" kindref="compound">TArch</ref> &amp;</type>
          <declname>arch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="126" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="126" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_single_component_archive_1a344d0895d6b8602e4144edf5f3ba480f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>IdT &amp;</type>
        <definition>IdT &amp; Bvr::SingleComponentArchive&lt; T, ForRead &gt;::GetComponentId</definition>
        <argsstring>(const KeyT &amp;key)</argsstring>
        <name>GetComponentId</name>
        <qualifiedname>Bvr::SingleComponentArchive::GetComponentId</qualifiedname>
        <param>
          <type>const KeyT &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="142" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="142" bodyend="144"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="91" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="91" bodyend="148"/>
    <listofallmembers>
      <member refid="struct_bvr_1_1_single_component_archive_1abff52d21042659a91ac7d5049a02746c" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive</scope><name>ComponentT</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_1a344d0895d6b8602e4144edf5f3ba480f" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive</scope><name>GetComponentId</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_1a25b69525ac81fb2664f42baa9d0c74bf" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive</scope><name>IdT</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_1adc61408f42010fad82fd635ad73a6586" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive</scope><name>IsRuntime</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_1a52efda66f115abb8a4e4ff4b56635ec1" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive</scope><name>KeyT</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_1abcc3583b2409152df17f63f2534bc1dc" prot="private" virt="non-virtual"><scope>Bvr::SingleComponentArchive</scope><name>m_entityUUIDRemap</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_1ab886b0b63a8dba0d562b322b8a568c92" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive</scope><name>Read</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_1af3b4dd58f76607ff9d8ed88c74035429" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive</scope><name>ReadSingle</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_1ab615907fe54675e4fb7f1b778c48d39a" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive</scope><name>SingleComponentArchive</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_1aa9f53fd61f49fc3d6d815e6ec72ccf8d" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive</scope><name>TArch</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_1a683e5350f9c7970596dfafcfef5f9bb4" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive</scope><name>TStorage</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_1a395ce9479d01b218176a3884995b5735" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive</scope><name>Write</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_1a4beb82919e396be12ba21792f23e2435" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive</scope><name>WriteSingle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

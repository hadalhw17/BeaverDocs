<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_debug_drawing_8hpp" kind="file" language="C++">
    <compoundname>DebugDrawing.hpp</compoundname>
    <includes local="no">BvrApp.hpp</includes>
    <incdepgraph>
      <node id="2">
        <label>BvrApp.hpp</label>
      </node>
      <node id="1">
        <label>/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/Bvr3DEngine/DebugDrawing.hpp</label>
        <link refid="_debug_drawing_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_bvr_1_1_debug_draw_1_1_t_cond_lbl" prot="public">Bvr::DebugDraw::TCondLbl</innerclass>
    <innerclass refid="struct_bvr_1_1_debug_draw_1_1_config" prot="public">Bvr::DebugDraw::Config</innerclass>
    <innernamespace refid="namespace_bvr_1_1_debug_draw">Bvr::DebugDraw</innernamespace>
    <innernamespace refid="namespace_bvr">Bvr</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;BvrApp.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_bvr_1_1_debug_draw" kindref="compound">Bvr::DebugDraw</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="struct_bvr_1_1_debug_draw_1_1_t_cond_lbl" refkind="compound"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_debug_draw_1_1_t_cond_lbl" kindref="compound">TCondLbl</ref><sp/>{};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="struct_bvr_1_1_debug_draw_1_1_config" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_debug_draw_1_1_config" kindref="compound">Config</ref><sp/>{</highlight></codeline>
<codeline lineno="33" refid="struct_bvr_1_1_debug_draw_1_1_config_1ae3f83f9956602d49a5cfd394ee1b19b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_debug_draw_1_1_config_1ae3f83f9956602d49a5cfd394ee1b19b3" kindref="member">Enable</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shouldEnable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_bvr_1_1_debug_draw_1_1_config_1ae3f83f9956602d49a5cfd394ee1b19b3" kindref="member">Enable</ref>(TypeName&lt;T&gt;::value(),<sp/>shouldEnable);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="struct_bvr_1_1_debug_draw_1_1_config_1a1f4042f9dd8bf72df987a60ac32cc4f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_debug_draw_1_1_config_1a1f4042f9dd8bf72df987a60ac32cc4f9" kindref="member">EnsureAndCheck</ref>()<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_debug_draw_1_1_config_1a1f4042f9dd8bf72df987a60ac32cc4f9" kindref="member">EnsureAndCheck</ref>(TypeName&lt;T&gt;::value());</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="struct_bvr_1_1_debug_draw_1_1_config_1a50182164345d61cd8350787d0b82fea6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_debug_draw_1_1_config_1a50182164345d61cd8350787d0b82fea6" kindref="member">IsEnabled</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_debug_draw_1_1_config_1a50182164345d61cd8350787d0b82fea6" kindref="member">IsEnabled</ref>(TypeName&lt;T&gt;::value());</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="struct_bvr_1_1_debug_draw_1_1_config_1aa0dbaa6aa071f48bbc4734857ad21812" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_debug_draw_1_1_config_1aa0dbaa6aa071f48bbc4734857ad21812" kindref="member">Enable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TTypeName&amp;<sp/>name,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shouldEnable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_bvr_1_1_debug_draw_1_1_config_1a335837e460063c5a9170495754ac02c2" kindref="member">Conditions</ref>[name]<sp/>=<sp/>shouldEnable;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="struct_bvr_1_1_debug_draw_1_1_config_1ae4a70b3772de39b0698cf80fc9e8281b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_debug_draw_1_1_config_1ae4a70b3772de39b0698cf80fc9e8281b" kindref="member">IsEnabled</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TTypeName&amp;<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="struct_bvr_1_1_debug_draw_1_1_config_1a335837e460063c5a9170495754ac02c2" kindref="member">Conditions</ref>.find(name);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it<sp/>==<sp/>std::end(<ref refid="struct_bvr_1_1_debug_draw_1_1_config_1a335837e460063c5a9170495754ac02c2" kindref="member">Conditions</ref>)<sp/>?<sp/>false<sp/>:<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="struct_bvr_1_1_debug_draw_1_1_config_1a0b76b5236606f1bdedc84da4d47808d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_debug_draw_1_1_config_1a0b76b5236606f1bdedc84da4d47808d0" kindref="member">EnsureAndCheck</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TTypeName&amp;<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="struct_bvr_1_1_debug_draw_1_1_config_1a335837e460063c5a9170495754ac02c2" kindref="member">Conditions</ref>.find(name);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>std::end(<ref refid="struct_bvr_1_1_debug_draw_1_1_config_1a335837e460063c5a9170495754ac02c2" kindref="member">Conditions</ref>))</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_bvr_1_1_debug_draw_1_1_config_1ae3f83f9956602d49a5cfd394ee1b19b3" kindref="member">Enable</ref>(name,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="struct_bvr_1_1_debug_draw_1_1_config_1abba7035f3a398edd05477eddf2326d51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_debug_draw_1_1_config_1abba7035f3a398edd05477eddf2326d51" kindref="member">EnableAll</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>item<sp/>:<sp/><ref refid="struct_bvr_1_1_debug_draw_1_1_config_1a335837e460063c5a9170495754ac02c2" kindref="member">Conditions</ref>)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item.second<sp/>=<sp/>enable;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ConditionDesc<sp/>RunCondition()<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ConditionDesc{[](<ref refid="struct_bvr_1_1_debug_draw_1_1_config" kindref="compound">Config</ref>&amp;<sp/>conf)<sp/>-&gt;<sp/>EShouldRun<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>conf.EnsureAndCheck&lt;T&gt;()<sp/>?<sp/>EShouldRun::Yes</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>EShouldRun::No;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Label(TypeLabel&lt;TCondLbl&lt;T&gt;&gt;());</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="struct_bvr_1_1_debug_draw_1_1_config_1a335837e460063c5a9170495754ac02c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;TTypeName,<sp/>bool&gt;<sp/><ref refid="struct_bvr_1_1_debug_draw_1_1_config_1a335837e460063c5a9170495754ac02c2" kindref="member">Conditions</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="namespace_bvr_1_1_debug_draw_1a284d8deeb05c75af7a9d898af8e3505c" refkind="member"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespace_bvr_1_1_debug_draw_1a284d8deeb05c75af7a9d898af8e3505c" kindref="member">CondFor</ref><sp/>=<sp/>Config::RunCondition&lt;T&gt;();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TSys&gt;</highlight></codeline>
<codeline lineno="102" refid="namespace_bvr_1_1_debug_draw_1aa2b3fe09cd27f0b85a3215bc940b4169" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Bvr::SystemDesc<sp/><ref refid="namespace_bvr_1_1_debug_draw_1aa2b3fe09cd27f0b85a3215bc940b4169" kindref="member">SystemDesc</ref>(TSys&amp;&amp;<sp/>sys)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Bvr::SystemDesc(std::forward&lt;TSys&gt;(sys)).WithCondition(CondFor&lt;T&gt;);</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Bvr::DebugDraw</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/Bvr3DEngine/DebugDrawing.hpp"/>
  </compounddef>
</doxygen>

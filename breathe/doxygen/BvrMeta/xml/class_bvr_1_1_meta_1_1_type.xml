<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_bvr_1_1_meta_1_1_type" kind="class" language="C++" prot="public">
    <compoundname>Bvr::Meta::Type</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_meta_1_1_type_1a5b4fe4c3f71ae87788c43986fbb0fcb6" prot="private" static="no" mutable="no">
        <type><ref refid="struct_bvr_1_1_meta_1_1_type_data" kindref="compound">TypeData</ref> *</type>
        <definition>TypeData* Bvr::Meta::Type::m_pTypeData</definition>
        <argsstring></argsstring>
        <name>m_pTypeData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="101" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1ab00f6ceca178311a4c27b1cefeb82d92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::Meta::Type::Type</definition>
        <argsstring>()</argsstring>
        <name>Type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="29" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="276" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1aeafe4ba09b9a01532480eaab51ec2920" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::Meta::Type::Type</definition>
        <argsstring>(TypeData *pData)</argsstring>
        <name>Type</name>
        <param>
          <type><ref refid="struct_bvr_1_1_meta_1_1_type_data" kindref="compound">TypeData</ref> *</type>
          <declname>pData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="30" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="277" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1a8d8c2ba8147a3361007c7c8a70604882" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::Meta::Type::~Type</definition>
        <argsstring>()=default</argsstring>
        <name>~Type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="31" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1adfbd3d42f229fa8474b4d0d436fc282b" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr Bvr::Meta::Type::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="33" column="16" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="280" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1ab4c03562bdbba077b5d1aed15622fc4a" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool Bvr::Meta::Type::operator==</definition>
        <argsstring>(const Type &amp;lhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_type" kindref="compound">Type</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="34" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="283" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1afe8ffed0aee95bb1438faeb2b43fb318" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool Bvr::Meta::Type::operator==</definition>
        <argsstring>(const TypeInfo &amp;lhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="struct_bvr_1_1_type_info" kindref="compound">TypeInfo</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="35" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="286" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1a243a8895924c6a09082ff9f5de7b87e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::Meta::Type::SetPropertyValue</definition>
        <argsstring>(std::string_view name, const Instance &amp;obj, Argument val)</argsstring>
        <name>SetPropertyValue</name>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_instance" kindref="compound">Instance</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="class_bvr_1_1_meta_1_1_argument" kindref="compound">Argument</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="41" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" bodystart="162" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1a7901e204e98ef68e8056ec7e3ac294d3" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool Bvr::Meta::Type::IsValid</definition>
        <argsstring>() const</argsstring>
        <name>IsValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="44" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="242" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1a1d719703afdfac1c2289683edab86b48" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool Bvr::Meta::Type::IsWrapper</definition>
        <argsstring>() const</argsstring>
        <name>IsWrapper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="45" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="245" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1abd90143ecf079c1d1cf563bf7a5056d8" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool Bvr::Meta::Type::IsEmpty</definition>
        <argsstring>() const</argsstring>
        <name>IsEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="47" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="248" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1ad9e9211b27e7bd74bcbbfb748ffd6341" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool Bvr::Meta::Type::IsClass</definition>
        <argsstring>() const</argsstring>
        <name>IsClass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="48" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="251" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1aab1bb940d42610fa924c534a11e932dd" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool Bvr::Meta::Type::IsEnum</definition>
        <argsstring>() const</argsstring>
        <name>IsEnum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="49" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="254" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1aaa969e0330a746f85745874c47cb24a2" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool Bvr::Meta::Type::IsArray</definition>
        <argsstring>() const</argsstring>
        <name>IsArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="50" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="257" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1acde2fea939be02cc1a73746f3e8733c0" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool Bvr::Meta::Type::IsPointer</definition>
        <argsstring>() const</argsstring>
        <name>IsPointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="51" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="260" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1a3c98023776aa33d03fb57396da33fd42" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool Bvr::Meta::Type::IsArithmetic</definition>
        <argsstring>() const</argsstring>
        <name>IsArithmetic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="52" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="263" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1a183aa098a0eb0ac919147c54eeda319a" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool Bvr::Meta::Type::IsSequentialContainer</definition>
        <argsstring>() const</argsstring>
        <name>IsSequentialContainer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="53" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="266" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1adfb81667e1846cae6cd8863353e9698f" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool Bvr::Meta::Type::IsAssociativeContainer</definition>
        <argsstring>() const</argsstring>
        <name>IsAssociativeContainer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="54" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="270" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1a2b9cf077df4fbd5c1b8107d282c285a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_enum" kindref="compound">Enum</ref></type>
        <definition>Enum Bvr::Meta::Type::GetEnum</definition>
        <argsstring>() const</argsstring>
        <name>GetEnum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="57" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="306" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1ac414fed85e6c7e8314f398df131e3f95" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr std::string_view</type>
        <definition>constexpr std::string_view Bvr::Meta::Type::GetName</definition>
        <argsstring>() const</argsstring>
        <name>GetName</name>
        <briefdescription>
<para>Get either user specified or prettified platform name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="59" column="33" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="316" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1a7b2a5cb985bb1e79bca28f333db5ff03" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr std::string_view</type>
        <definition>constexpr std::string_view Bvr::Meta::Type::GetTypeName</definition>
        <argsstring>() const</argsstring>
        <name>GetTypeName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the raw platform specific type name. Contains namespace information </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="62" column="42" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="313" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1a45be1af4e869328057fa82123b2709d8" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr std::uint64_t</type>
        <definition>constexpr std::uint64_t Bvr::Meta::Type::GetHash</definition>
        <argsstring>() const</argsstring>
        <name>GetHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="63" column="42" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="349" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1ac600ab3cdde9f4239d61c46ab812523e" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr std::size_t</type>
        <definition>constexpr std::size_t Bvr::Meta::Type::SizeOf</definition>
        <argsstring>() const</argsstring>
        <name>SizeOf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="64" column="42" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="310" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1afc3365174ba4be73f22499150d41a1ea" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr std::span&lt; <ref refid="class_bvr_1_1_meta_1_1_property" kindref="compound">Property</ref> const  &gt;</type>
        <definition>constexpr std::span&lt; Property const  &gt; Bvr::Meta::Type::GetProperties</definition>
        <argsstring>() const</argsstring>
        <name>GetProperties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="65" column="26" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="319" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1a758ade552e6412454e4289370fa79883" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr std::span&lt; <ref refid="class_bvr_1_1_meta_1_1_method" kindref="compound">Method</ref> const  &gt;</type>
        <definition>constexpr std::span&lt; Method const  &gt; Bvr::Meta::Type::GetMethods</definition>
        <argsstring>() const</argsstring>
        <name>GetMethods</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="66" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="322" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1a881bbb4166434a7c9bf52b5d2a89e77b" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr std::span&lt; <ref refid="class_bvr_1_1_meta_1_1_type" kindref="compound">Type</ref> const  &gt;</type>
        <definition>constexpr std::span&lt; Type const  &gt; Bvr::Meta::Type::GetTemplateArgs</definition>
        <argsstring>() const</argsstring>
        <name>GetTemplateArgs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="67" column="30" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="325" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1a5b8e1b9d133b933efa902ea8e9500625" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_bvr_1_1_type_info" kindref="compound">TypeInfo</ref></type>
        <definition>constexpr TypeInfo Bvr::Meta::Type::GetTypeInfo</definition>
        <argsstring>() const</argsstring>
        <name>GetTypeInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="68" column="42" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="329" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1aa35a986c6784aa24807a2747165806ed" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_bvr_1_1_meta_1_1_type_data" kindref="compound">TypeData</ref> *</type>
        <definition>constexpr const TypeData * Bvr::Meta::Type::GetTypeData</definition>
        <argsstring>() const</argsstring>
        <name>GetTypeData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="69" column="41" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="296" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1aa769983570c5e9f414bd1ddde52d8237" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_bvr_1_1_meta_1_1_type_data" kindref="compound">TypeData</ref> *</type>
        <definition>constexpr TypeData * Bvr::Meta::Type::GetTypeData</definition>
        <argsstring>()</argsstring>
        <name>GetTypeData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="70" column="41" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="299" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1aacd4728c4e638a802e72e9d8190d7978" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_type" kindref="compound">Type</ref></type>
        <definition>Type Bvr::Meta::Type::GetRawType</definition>
        <argsstring>() const</argsstring>
        <name>GetRawType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="71" column="42" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="303" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1a3e8a578b6541d889911458686adea172" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_meta_1_1_conversion_method_base" kindref="compound">ConversionMethodBase</ref> *</type>
        <definition>ConversionMethodBase * Bvr::Meta::Type::GetConversionMethod</definition>
        <argsstring>(const Type &amp;dstType) const</argsstring>
        <name>GetConversionMethod</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_type" kindref="compound">Type</ref> &amp;</type>
          <declname>dstType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="74" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="343" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1ac46cd43e2b1a29f42b094e79d5dfc420" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Bvr::Meta::Type::Is</definition>
        <argsstring>() const</argsstring>
        <name>Is</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="78" column="30" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1a7fbb2f940cafaf942eb4d47ab2eec9ea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_property" kindref="compound">Property</ref></type>
        <definition>Property Bvr::Meta::Type::GetProperty</definition>
        <argsstring>(std::string_view name) const</argsstring>
        <name>GetProperty</name>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="82" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="503" bodyend="510"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1ae472c079c63ac6f9e1699081a793e309" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref></type>
        <definition>Variant Bvr::Meta::Type::Invoke</definition>
        <argsstring>(std::string_view name, const Instance &amp;self, const std::span&lt; Argument const &gt; &amp;args) const</argsstring>
        <name>Invoke</name>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_instance" kindref="compound">Instance</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const std::span&lt; <ref refid="class_bvr_1_1_meta_1_1_argument" kindref="compound">Argument</ref> const &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="84" column="28"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1a032a0153938e6bd48fd4aad1d6b5b9f7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref></type>
        <definition>Variant Bvr::Meta::Type::Invoke</definition>
        <argsstring>(std::string_view name, const Instance &amp;self, const std::initializer_list&lt; Argument &gt; &amp;args) const</argsstring>
        <name>Invoke</name>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_instance" kindref="compound">Instance</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const std::initializer_list&lt; <ref refid="class_bvr_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="86" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="542" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1a1291fb00aae4df24dfff5c82fa66a320" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref></type>
        <definition>Variant Bvr::Meta::Type::CreateVariant</definition>
        <argsstring>(const void *copied=nullptr) const noexcept</argsstring>
        <name>CreateVariant</name>
        <param>
          <type>const void *</type>
          <declname>copied</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="95" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="559" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1adb2a0b73590c4b6c20762ac49668181c" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::Meta::Type::CreateWrappedValue</definition>
        <argsstring>(const Argument &amp;arg, Variant &amp;out) const noexcept</argsstring>
        <name>CreateWrappedValue</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <param>
          <type><ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="96" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="563" bodyend="567"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1a76e4cd76cc7f714da43b3c3c5bbc5a05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::Meta::Type::Visit</definition>
        <argsstring>(Visitor &amp;)</argsstring>
        <name>Visit</name>
        <param>
          <type><ref refid="class_bvr_1_1_meta_1_1_visitor" kindref="compound">Visitor</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="98" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" bodystart="98" bodyend="98"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1a66231aef6b0e71365c078b17c1268b02" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_bvr_1_1_meta_1_1_type" kindref="compound">Type</ref></type>
        <definition>Type Bvr::Meta::Type::Get</definition>
        <argsstring>()</argsstring>
        <name>Get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="36" column="30" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="289" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1a2b65743501013aa5c4b7da52c838bbd8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Bvr::Meta::Type::SetValue</definition>
        <argsstring>(const T &amp;val, const Instance &amp;obj)</argsstring>
        <name>SetValue</name>
        <param>
          <type>const T &amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_instance" kindref="compound">Instance</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="39" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1a2e0837ec1cc736473776617ac3862ea6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Bvr::Meta::Type::ConversionMethod</definition>
        <argsstring>(T meth)</argsstring>
        <name>ConversionMethod</name>
        <param>
          <type>T</type>
          <declname>meth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="76" column="43" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="333" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1a58702a9db47946ffb57dc2389f470aee" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref></type>
        <definition>Variant Bvr::Meta::Type::InvokeGlobalFunction</definition>
        <argsstring>(std::string_view name, const std::span&lt; Argument const &gt; &amp;args)</argsstring>
        <name>InvokeGlobalFunction</name>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::span&lt; <ref refid="class_bvr_1_1_meta_1_1_argument" kindref="compound">Argument</ref> const &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="89" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="548" bodyend="551"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_type_1ac2168b58c03f3d07c3783bcac1259c20" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref></type>
        <definition>Variant Bvr::Meta::Type::InvokeGlobalFunction</definition>
        <argsstring>(std::string_view name, const std::initializer_list&lt; Argument &gt; &amp;args)</argsstring>
        <name>InvokeGlobalFunction</name>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::initializer_list&lt; <ref refid="class_bvr_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="92" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="554" bodyend="557"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" line="27" column="1" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Type.hpp" bodystart="27" bodyend="102"/>
    <listofallmembers>
      <member refid="class_bvr_1_1_meta_1_1_type_1a2e0837ec1cc736473776617ac3862ea6" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>ConversionMethod</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1a1291fb00aae4df24dfff5c82fa66a320" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>CreateVariant</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1adb2a0b73590c4b6c20762ac49668181c" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>CreateWrappedValue</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1a66231aef6b0e71365c078b17c1268b02" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>Get</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1a3e8a578b6541d889911458686adea172" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>GetConversionMethod</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1a2b9cf077df4fbd5c1b8107d282c285a7" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>GetEnum</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1a45be1af4e869328057fa82123b2709d8" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>GetHash</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1a758ade552e6412454e4289370fa79883" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>GetMethods</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1ac414fed85e6c7e8314f398df131e3f95" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>GetName</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1afc3365174ba4be73f22499150d41a1ea" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>GetProperties</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1a7fbb2f940cafaf942eb4d47ab2eec9ea" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>GetProperty</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1aacd4728c4e638a802e72e9d8190d7978" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>GetRawType</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1a881bbb4166434a7c9bf52b5d2a89e77b" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>GetTemplateArgs</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1aa35a986c6784aa24807a2747165806ed" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>GetTypeData</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1aa769983570c5e9f414bd1ddde52d8237" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>GetTypeData</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1a5b8e1b9d133b933efa902ea8e9500625" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>GetTypeInfo</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1a7b2a5cb985bb1e79bca28f333db5ff03" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>GetTypeName</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1ae472c079c63ac6f9e1699081a793e309" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>Invoke</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1a032a0153938e6bd48fd4aad1d6b5b9f7" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>Invoke</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1a58702a9db47946ffb57dc2389f470aee" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>InvokeGlobalFunction</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1ac2168b58c03f3d07c3783bcac1259c20" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>InvokeGlobalFunction</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1ac46cd43e2b1a29f42b094e79d5dfc420" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>Is</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1a3c98023776aa33d03fb57396da33fd42" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>IsArithmetic</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1aaa969e0330a746f85745874c47cb24a2" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>IsArray</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1adfb81667e1846cae6cd8863353e9698f" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>IsAssociativeContainer</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1ad9e9211b27e7bd74bcbbfb748ffd6341" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>IsClass</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1abd90143ecf079c1d1cf563bf7a5056d8" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>IsEmpty</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1aab1bb940d42610fa924c534a11e932dd" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>IsEnum</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1acde2fea939be02cc1a73746f3e8733c0" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>IsPointer</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1a183aa098a0eb0ac919147c54eeda319a" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>IsSequentialContainer</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1a7901e204e98ef68e8056ec7e3ac294d3" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>IsValid</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1a1d719703afdfac1c2289683edab86b48" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>IsWrapper</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1a5b4fe4c3f71ae87788c43986fbb0fcb6" prot="private" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>m_pTypeData</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1adfbd3d42f229fa8474b4d0d436fc282b" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>operator bool</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1ab4c03562bdbba077b5d1aed15622fc4a" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>operator==</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1afe8ffed0aee95bb1438faeb2b43fb318" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>operator==</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1a243a8895924c6a09082ff9f5de7b87e9" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>SetPropertyValue</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1a2b65743501013aa5c4b7da52c838bbd8" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>SetValue</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1ac600ab3cdde9f4239d61c46ab812523e" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>SizeOf</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1ab00f6ceca178311a4c27b1cefeb82d92" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>Type</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1aeafe4ba09b9a01532480eaab51ec2920" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>Type</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1a76e4cd76cc7f714da43b3c3c5bbc5a05" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>Visit</name></member>
      <member refid="class_bvr_1_1_meta_1_1_type_1a8d8c2ba8147a3361007c7c8a70604882" prot="public" virt="non-virtual"><scope>Bvr::Meta::Type</scope><name>~Type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from" kind="struct" language="C++" prot="public">
    <compoundname>Bvr::Meta::Detail::CastFrom</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1a7c2bc3f83f6e616d0c319058668c4a9c" prot="public" static="no">
        <type>T</type>
        <definition>using Bvr::Meta::Detail::CastFrom&lt; T &gt;::SrcType =  T</definition>
        <argsstring></argsstring>
        <name>SrcType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="212" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="212" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1a5cb7fa7fc066d545cc592af8411c536c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, bool &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="214" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="214" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1aa75df1901929247d6d1a1f3cb3662721" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, char &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>char &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="215" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="215" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1a62ad087172508b10802f857ea614bf08" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int8_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int8_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="216" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="216" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1a034c12f84f926b63f9cfbee387c9fa74" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint8_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint8_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="219" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="219" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1a6e68e4441b113977dbbb0f178090253c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int16_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int16_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="222" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="222" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1ab8308cc5b0d1f7c834d75df897b9c304" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint16_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint16_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="225" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="225" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1a56a984233b70b2f66b43d9ec71746808" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int32_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int32_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="228" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="228" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1ad5b75545350ff760ae082167f9af30ee" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint32_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint32_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="231" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="231" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1a5ac9a21dd167ef036556e47be3c7e5b4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int64_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int64_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="234" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="234" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1ae8a7b81c26cdf0754926ab4fa2c03d9c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint64_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint64_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="237" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="237" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1a81e1629efe56e661515020eb876bcc54" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, float &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="240" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="240" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1ac2b8f7a8052402becc0da5be4e5cb53e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, double &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="241" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="241" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1ae89f0a2961740dc2b306b8463b38b33e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::string &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="242" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="242" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1ad11563d647b0bb8bd8bbdf00369b82fd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; T &gt;::ToEnum</definition>
        <argsstring>(const SrcType &amp;from, Argument &amp;to)</argsstring>
        <name>ToEnum</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="class_bvr_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="245" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="245" bodyend="247"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="211" column="16" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="211" bodyend="248"/>
    <listofallmembers>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1a7c2bc3f83f6e616d0c319058668c4a9c" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom</scope><name>SrcType</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1a5cb7fa7fc066d545cc592af8411c536c" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1aa75df1901929247d6d1a1f3cb3662721" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1a62ad087172508b10802f857ea614bf08" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1a034c12f84f926b63f9cfbee387c9fa74" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1a6e68e4441b113977dbbb0f178090253c" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1ab8308cc5b0d1f7c834d75df897b9c304" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1a56a984233b70b2f66b43d9ec71746808" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1ad5b75545350ff760ae082167f9af30ee" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1a5ac9a21dd167ef036556e47be3c7e5b4" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1ae8a7b81c26cdf0754926ab4fa2c03d9c" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1a81e1629efe56e661515020eb876bcc54" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1ac2b8f7a8052402becc0da5be4e5cb53e" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1ae89f0a2961740dc2b306b8463b38b33e" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1ad11563d647b0bb8bd8bbdf00369b82fd" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom</scope><name>ToEnum</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

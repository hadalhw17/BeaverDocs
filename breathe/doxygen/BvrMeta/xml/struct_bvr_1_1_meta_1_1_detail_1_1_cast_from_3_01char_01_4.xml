<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01char_01_4" kind="struct" language="C++" prot="public">
    <compoundname>Bvr::Meta::Detail::CastFrom&lt; char &gt;</compoundname>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01char_01_4_1a2bbcacefae7f84f33aaba7cad3a7510f" prot="public" static="no">
        <type>char</type>
        <definition>using Bvr::Meta::Detail::CastFrom&lt; char &gt;::SrcType =  char</definition>
        <argsstring></argsstring>
        <name>SrcType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="168" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="168" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01char_01_4_1a38b2afe43e5c5afb6f082e3bd0a58c41" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; char &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, bool &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="170" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="170" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01char_01_4_1ac28a08b215d383f7d5a32e06bd8b538b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; char &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, char &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>char &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="175" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="175" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01char_01_4_1a96a1722a5fab883662105ce29349c6d5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; char &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int8_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int8_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="180" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="180" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01char_01_4_1a51161788c619b805be18f8669c461f38" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; char &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint8_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint8_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="185" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="185" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01char_01_4_1a63fa0a18935fc7c7c8bb12e45c576301" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; char &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int16_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int16_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="190" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="190" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01char_01_4_1aac560adc3dd03c2e500a4fe698f43524" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; char &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint16_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint16_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="195" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="195" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01char_01_4_1a9bba03bf3e1c20ea4eb383ae9a0c0afe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; char &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int32_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int32_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="200" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="200" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01char_01_4_1a750e19bf98966334b0412d3fbb95b38b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; char &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint32_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint32_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="205" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="205" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01char_01_4_1a3493ad73092b82877bf29a621157caea" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; char &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int64_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int64_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="210" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="210" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01char_01_4_1a03d0334d8e207d72210ec3857ae7fe36" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; char &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint64_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint64_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="215" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="215" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01char_01_4_1a67d153db9dd6fabc511806d6a3c7e508" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; char &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, float &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="220" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="220" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01char_01_4_1a9d8f6702a15ed8f12550f92160962a5f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; char &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, double &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="225" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="225" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01char_01_4_1ae1b16295b49c7bc04b54431c62d5f14b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; char &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::string &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="230" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="230" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01char_01_4_1a6042afe9d03ab91da374829be786a3cf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; char &gt;::ToEnum</definition>
        <argsstring>(const SrcType &amp;from, Argument &amp;to)</argsstring>
        <name>ToEnum</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="class_bvr_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="234" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="234" bodyend="236"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="167" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="167" bodyend="237"/>
    <listofallmembers>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01char_01_4_1a2bbcacefae7f84f33aaba7cad3a7510f" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; char &gt;</scope><name>SrcType</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01char_01_4_1a38b2afe43e5c5afb6f082e3bd0a58c41" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; char &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01char_01_4_1ac28a08b215d383f7d5a32e06bd8b538b" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; char &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01char_01_4_1a96a1722a5fab883662105ce29349c6d5" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; char &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01char_01_4_1a51161788c619b805be18f8669c461f38" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; char &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01char_01_4_1a63fa0a18935fc7c7c8bb12e45c576301" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; char &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01char_01_4_1aac560adc3dd03c2e500a4fe698f43524" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; char &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01char_01_4_1a9bba03bf3e1c20ea4eb383ae9a0c0afe" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; char &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01char_01_4_1a750e19bf98966334b0412d3fbb95b38b" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; char &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01char_01_4_1a3493ad73092b82877bf29a621157caea" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; char &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01char_01_4_1a03d0334d8e207d72210ec3857ae7fe36" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; char &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01char_01_4_1a67d153db9dd6fabc511806d6a3c7e508" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; char &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01char_01_4_1a9d8f6702a15ed8f12550f92160962a5f" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; char &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01char_01_4_1ae1b16295b49c7bc04b54431c62d5f14b" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; char &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01char_01_4_1a6042afe9d03ab91da374829be786a3cf" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; char &gt;</scope><name>ToEnum</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base" kind="struct" language="C++" prot="public">
    <compoundname>Bvr::Meta::Detail::AssociativeContainerBinderBase</compoundname>
    <derivedcompoundref refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_map" prot="public" virt="non-virtual">Bvr::Meta::Detail::AssociativeContainerBinderBaseMap&lt; std::map&lt; T, U, Compare, Allocator &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_map" prot="public" virt="non-virtual">Bvr::Meta::Detail::AssociativeContainerBinderBaseMap&lt; std::unordered_map&lt; T, U, Hash, KeyEqual, Allocator &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_set" prot="public" virt="non-virtual">Bvr::Meta::Detail::AssociativeContainerBinderBaseSet&lt; std::set&lt; T, Compare, Allocator &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_set" prot="public" virt="non-virtual">Bvr::Meta::Detail::AssociativeContainerBinderBaseSet&lt; std::unordered_set&lt; T, Hash, KeyEq, Allocator &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_map" prot="public" virt="non-virtual">Bvr::Meta::Detail::AssociativeContainerBinderBaseMap&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_set" prot="public" virt="non-virtual">Bvr::Meta::Detail::AssociativeContainerBinderBaseSet&lt; T &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1abb121f1096d24a6cf702a1468c2806b5" prot="public" static="no">
        <type>T</type>
        <definition>using Bvr::Meta::Detail::AssociativeContainerBinderBase&lt; T &gt;::ContainerT =  T</definition>
        <argsstring></argsstring>
        <name>ContainerT</name>
        <qualifiedname>Bvr::Meta::Detail::AssociativeContainerBinderBase::ContainerT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" line="21" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1aceb328b2d12c38fdff8e9ae274304a62" prot="public" static="no">
        <type>typename T::key_type</type>
        <definition>using Bvr::Meta::Detail::AssociativeContainerBinderBase&lt; T &gt;::KeyT =  typename T::key_type</definition>
        <argsstring></argsstring>
        <name>KeyT</name>
        <qualifiedname>Bvr::Meta::Detail::AssociativeContainerBinderBase::KeyT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" line="22" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1ae22e333eb3fd75596c0d94f04ed66a48" prot="public" static="no">
        <type>typename <ref refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_value" kindref="compound">AssociativeContainerValue</ref>&lt; T &gt;::Type</type>
        <definition>using Bvr::Meta::Detail::AssociativeContainerBinderBase&lt; T &gt;::ValueT =  typename AssociativeContainerValue&lt;T&gt;::Type</definition>
        <argsstring></argsstring>
        <name>ValueT</name>
        <qualifiedname>Bvr::Meta::Detail::AssociativeContainerBinderBase::ValueT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" line="23" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1a9ba8447448cc0af5d4cdef651f61d0a1" prot="public" static="no">
        <type>typename T::iterator</type>
        <definition>using Bvr::Meta::Detail::AssociativeContainerBinderBase&lt; T &gt;::IteratorT =  typename T::iterator</definition>
        <argsstring></argsstring>
        <name>IteratorT</name>
        <qualifiedname>Bvr::Meta::Detail::AssociativeContainerBinderBase::IteratorT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" line="24" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1a919f07cddb1fa471be49987e193cf4b4" prot="public" static="no">
        <type>typename T::const_iterator</type>
        <definition>using Bvr::Meta::Detail::AssociativeContainerBinderBase&lt; T &gt;::CIteratorT =  typename T::const_iterator</definition>
        <argsstring></argsstring>
        <name>CIteratorT</name>
        <qualifiedname>Bvr::Meta::Detail::AssociativeContainerBinderBase::CIteratorT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" line="25" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1a50f2db6c1cf0b949b67965a27072a952" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const KeyT &amp;</type>
        <definition>static const KeyT &amp; Bvr::Meta::Detail::AssociativeContainerBinderBase&lt; T &gt;::GetKey</definition>
        <argsstring>(const CIteratorT &amp;it)</argsstring>
        <name>GetKey</name>
        <qualifiedname>Bvr::Meta::Detail::AssociativeContainerBinderBase::GetKey</qualifiedname>
        <param>
          <type>const CIteratorT &amp;</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" line="27" column="27" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1a9028ab602d05ff7f79df217e9f39f54f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::AssociativeContainerBinderBase&lt; T &gt;::empty</definition>
        <argsstring>(const ContainerT &amp;container)</argsstring>
        <name>empty</name>
        <qualifiedname>Bvr::Meta::Detail::AssociativeContainerBinderBase::empty</qualifiedname>
        <param>
          <type>const ContainerT &amp;</type>
          <declname>container</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" line="29" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1a243e2a63a3b0ec6f7c22b0f609ed5fab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Bvr::Meta::Detail::AssociativeContainerBinderBase&lt; T &gt;::clear</definition>
        <argsstring>(ContainerT &amp;container)</argsstring>
        <name>clear</name>
        <qualifiedname>Bvr::Meta::Detail::AssociativeContainerBinderBase::clear</qualifiedname>
        <param>
          <type>ContainerT &amp;</type>
          <declname>container</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" line="33" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1aabb638c8744f5e0ce5a9510eda41d528" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>static std::size_t Bvr::Meta::Detail::AssociativeContainerBinderBase&lt; T &gt;::size</definition>
        <argsstring>(const ContainerT &amp;container)</argsstring>
        <name>size</name>
        <qualifiedname>Bvr::Meta::Detail::AssociativeContainerBinderBase::size</qualifiedname>
        <param>
          <type>const ContainerT &amp;</type>
          <declname>container</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" line="35" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" bodystart="35" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1a4baf705caad6f2ffe200e59500564b6b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>IteratorT</type>
        <definition>static IteratorT Bvr::Meta::Detail::AssociativeContainerBinderBase&lt; T &gt;::begin</definition>
        <argsstring>(ContainerT &amp;container)</argsstring>
        <name>begin</name>
        <qualifiedname>Bvr::Meta::Detail::AssociativeContainerBinderBase::begin</qualifiedname>
        <param>
          <type>ContainerT &amp;</type>
          <declname>container</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" line="39" column="26" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" bodystart="39" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1a67eed5db6c173c05d4cfe71666ee77ea" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>CIteratorT</type>
        <definition>static CIteratorT Bvr::Meta::Detail::AssociativeContainerBinderBase&lt; T &gt;::begin</definition>
        <argsstring>(const ContainerT &amp;container)</argsstring>
        <name>begin</name>
        <qualifiedname>Bvr::Meta::Detail::AssociativeContainerBinderBase::begin</qualifiedname>
        <param>
          <type>const ContainerT &amp;</type>
          <declname>container</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" line="43" column="27" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" bodystart="43" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1a2f5a7c652368c0acc2b28782bad8ea64" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>IteratorT</type>
        <definition>static IteratorT Bvr::Meta::Detail::AssociativeContainerBinderBase&lt; T &gt;::end</definition>
        <argsstring>(ContainerT &amp;container)</argsstring>
        <name>end</name>
        <qualifiedname>Bvr::Meta::Detail::AssociativeContainerBinderBase::end</qualifiedname>
        <param>
          <type>ContainerT &amp;</type>
          <declname>container</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" line="47" column="27" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1a6d768dd1dc0fe8454282cd7be949516a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>CIteratorT</type>
        <definition>static CIteratorT Bvr::Meta::Detail::AssociativeContainerBinderBase&lt; T &gt;::end</definition>
        <argsstring>(const ContainerT &amp;container)</argsstring>
        <name>end</name>
        <qualifiedname>Bvr::Meta::Detail::AssociativeContainerBinderBase::end</qualifiedname>
        <param>
          <type>const ContainerT &amp;</type>
          <declname>container</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" line="49" column="27" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1aa475cabbc83d7901468f15413b18a2b3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>IteratorT</type>
        <definition>static IteratorT Bvr::Meta::Detail::AssociativeContainerBinderBase&lt; T &gt;::find</definition>
        <argsstring>(ContainerT &amp;container, const KeyT &amp;key)</argsstring>
        <name>find</name>
        <qualifiedname>Bvr::Meta::Detail::AssociativeContainerBinderBase::find</qualifiedname>
        <param>
          <type>ContainerT &amp;</type>
          <declname>container</declname>
        </param>
        <param>
          <type>const KeyT &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" line="53" column="26" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1a1f001818401982862677c2e2420a6a38" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>CIteratorT</type>
        <definition>static CIteratorT Bvr::Meta::Detail::AssociativeContainerBinderBase&lt; T &gt;::find</definition>
        <argsstring>(const ContainerT &amp;container, const KeyT &amp;key)</argsstring>
        <name>find</name>
        <qualifiedname>Bvr::Meta::Detail::AssociativeContainerBinderBase::find</qualifiedname>
        <param>
          <type>const ContainerT &amp;</type>
          <declname>container</declname>
        </param>
        <param>
          <type>const KeyT &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" line="57" column="27" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1a2ae4ebef207d167518be94e6df6ae505" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>static std::size_t Bvr::Meta::Detail::AssociativeContainerBinderBase&lt; T &gt;::erase</definition>
        <argsstring>(ContainerT &amp;container, const KeyT &amp;key)</argsstring>
        <name>erase</name>
        <qualifiedname>Bvr::Meta::Detail::AssociativeContainerBinderBase::erase</qualifiedname>
        <param>
          <type>ContainerT &amp;</type>
          <declname>container</declname>
        </param>
        <param>
          <type>const KeyT &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" line="61" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1aeb35afe065dbbaf6899422fea1cd6153" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::pair&lt; IteratorT, bool &gt;</type>
        <definition>static std::pair&lt; IteratorT, bool &gt; Bvr::Meta::Detail::AssociativeContainerBinderBase&lt; T &gt;::InsertKey</definition>
        <argsstring>(ContainerT &amp;container, const KeyT &amp;key)</argsstring>
        <name>InsertKey</name>
        <qualifiedname>Bvr::Meta::Detail::AssociativeContainerBinderBase::InsertKey</qualifiedname>
        <param>
          <type>ContainerT &amp;</type>
          <declname>container</declname>
        </param>
        <param>
          <type>const KeyT &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" line="65" column="26" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" bodystart="65" bodyend="68"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Bvr::Meta::Detail::AssociativeContainerBinderBaseMap&lt; std::map&lt; T, U, Compare, Allocator &gt; &gt;</label>
        <link refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_map"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Bvr::Meta::Detail::AssociativeContainerBinderBaseMap&lt; std::unordered_map&lt; T, U, Hash, KeyEqual, Allocator &gt; &gt;</label>
        <link refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_map"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>Bvr::Meta::Detail::AssociativeContainerBinderBaseSet&lt; std::set&lt; T, Compare, Allocator &gt; &gt;</label>
        <link refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_set"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>Bvr::Meta::Detail::AssociativeContainerBinderBaseSet&lt; std::unordered_set&lt; T, Hash, KeyEq, Allocator &gt; &gt;</label>
        <link refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_set"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Bvr::Meta::Detail::AssociativeContainerBinder&lt; std::map&lt; T, U, Compare, Allocator &gt; &gt;</label>
        <link refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_3_01std_1_1map_3_01_t_00_01_u_00a1de3599e113690c87cc0517d0d7a52a"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Bvr::Meta::Detail::AssociativeContainerBinder&lt; std::set&lt; T, Compare, Allocator &gt; &gt;</label>
        <link refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_3_01std_1_1set_3_01_t_00_01_compare_00_01_allocator_01_4_01_4"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Bvr::Meta::Detail::AssociativeContainerBinder&lt; std::unordered_map&lt; T, U, Hash, KeyEqual, Allocator &gt; &gt;</label>
        <link refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_3_01std_1_1unordered__map_3_01_teb83116edf7e3131bf7684ec862aab67"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>Bvr::Meta::Detail::AssociativeContainerBinder&lt; std::unordered_set&lt; T, Hash, KeyEq, Allocator &gt; &gt;</label>
        <link refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_3_01std_1_1unordered__set_3_01_t731f68f4f41c364b23f42f6d82a9b939"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Bvr::Meta::Detail::AssociativeContainerBinderBase&lt; T &gt;</label>
        <link refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base"/>
      </node>
      <node id="10">
        <label>Bvr::Meta::Detail::AssociativeContainerBinderBaseMap&lt; T &gt;</label>
        <link refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_map"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>Bvr::Meta::Detail::AssociativeContainerBinderBaseSet&lt; T &gt;</label>
        <link refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_set"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" line="20" column="16" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerBinderImpl.hpp" bodystart="20" bodyend="69"/>
    <listofallmembers>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1a4baf705caad6f2ffe200e59500564b6b" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::AssociativeContainerBinderBase</scope><name>begin</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1a67eed5db6c173c05d4cfe71666ee77ea" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::AssociativeContainerBinderBase</scope><name>begin</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1a919f07cddb1fa471be49987e193cf4b4" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::AssociativeContainerBinderBase</scope><name>CIteratorT</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1a243e2a63a3b0ec6f7c22b0f609ed5fab" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::AssociativeContainerBinderBase</scope><name>clear</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1abb121f1096d24a6cf702a1468c2806b5" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::AssociativeContainerBinderBase</scope><name>ContainerT</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1a9028ab602d05ff7f79df217e9f39f54f" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::AssociativeContainerBinderBase</scope><name>empty</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1a2f5a7c652368c0acc2b28782bad8ea64" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::AssociativeContainerBinderBase</scope><name>end</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1a6d768dd1dc0fe8454282cd7be949516a" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::AssociativeContainerBinderBase</scope><name>end</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1a2ae4ebef207d167518be94e6df6ae505" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::AssociativeContainerBinderBase</scope><name>erase</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1aa475cabbc83d7901468f15413b18a2b3" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::AssociativeContainerBinderBase</scope><name>find</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1a1f001818401982862677c2e2420a6a38" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::AssociativeContainerBinderBase</scope><name>find</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1a50f2db6c1cf0b949b67965a27072a952" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::AssociativeContainerBinderBase</scope><name>GetKey</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1aeb35afe065dbbaf6899422fea1cd6153" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::AssociativeContainerBinderBase</scope><name>InsertKey</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1a9ba8447448cc0af5d4cdef651f61d0a1" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::AssociativeContainerBinderBase</scope><name>IteratorT</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1aceb328b2d12c38fdff8e9ae274304a62" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::AssociativeContainerBinderBase</scope><name>KeyT</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1aabb638c8744f5e0ce5a9510eda41d528" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::AssociativeContainerBinderBase</scope><name>size</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_base_1ae22e333eb3fd75596c0d94f04ed66a48" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::AssociativeContainerBinderBase</scope><name>ValueT</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

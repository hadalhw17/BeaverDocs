<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_bvr_1_1_meta_1_1_variant" kind="class" language="C++" prot="public">
    <compoundname>Bvr::Meta::Variant</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_meta_1_1_variant_1a3a9759338cf1c6ada83ffdf6c76d73ff" prot="private" static="no" mutable="no">
        <type>VariantData</type>
        <definition>VariantData Bvr::Meta::Variant::m_data</definition>
        <argsstring></argsstring>
        <name>m_data</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" line="230" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_meta_1_1_variant_1ac384901fc279c11ba53659f7d22ee3ee" prot="private" static="no" mutable="no">
        <type>VariantPolicyFN</type>
        <definition>VariantPolicyFN Bvr::Meta::Variant::m_policy</definition>
        <argsstring></argsstring>
        <name>m_policy</name>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" line="231" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" bodystart="231" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_1a57dd1ff86972eef753f4d29db205af4d" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::Meta::Variant::Variant</definition>
        <argsstring>() noexcept</argsstring>
        <name>Variant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" line="24" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" bodystart="24" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_1a9c840575ee8c02b9f5247ff20f86fb5c" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Tp</type>
            <defval>DecayVariantT&lt;T&gt;</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Bvr::Meta::Variant::Variant</definition>
        <argsstring>(T &amp;&amp;obj) noexcept</argsstring>
        <name>Variant</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" line="26" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" bodystart="26" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_1ab66d48e3eb430b0540dbc4d82c828a37" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::Meta::Variant::Variant</definition>
        <argsstring>(const Variant &amp;item) noexcept</argsstring>
        <name>Variant</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" line="33" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_1ad634c0e0bf998ecba9b4a3a3d4a0e774" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::Meta::Variant::Variant</definition>
        <argsstring>(Variant &amp;&amp;item) noexcept</argsstring>
        <name>Variant</name>
        <param>
          <type><ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref> &amp;&amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" line="37" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_1ab95b9b85241551228af24c6ee891d45c" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref> &amp;</type>
        <definition>Variant&amp; Bvr::Meta::Variant::operator=</definition>
        <argsstring>(const Variant &amp;item) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" line="42" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" bodystart="42" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_1abade2c3088d4cde762a1d4dcd0a2a286" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref> &amp;</type>
        <definition>Variant&amp; Bvr::Meta::Variant::operator=</definition>
        <argsstring>(Variant &amp;&amp;item) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref> &amp;&amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" line="50" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" bodystart="50" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_1a460ec85ab451e7d8bfc1c1d2276a3b4c" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::Meta::Variant::~Variant</definition>
        <argsstring>() noexcept</argsstring>
        <name>~Variant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" line="62" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_1a53b1b41cfe81a7e837e331c57e46031c" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::Meta::Variant::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" line="66" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_1a7481ef9b0f419b2784fe2b5184b5baef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T&amp; Bvr::Meta::Variant::GetValue</definition>
        <argsstring>() const</argsstring>
        <name>GetValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" line="70" column="32" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_1a3a9f2c2c2d0997837aa4a7ee43ab91a6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref></type>
        <definition>Variant Bvr::Meta::Variant::CreateWrappedValue</definition>
        <argsstring>(const Type &amp;wrappedType) const</argsstring>
        <name>CreateWrappedValue</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_type" kindref="compound">Type</ref> &amp;</type>
          <declname>wrappedType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" line="75" column="20" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" bodystart="75" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_1a70c57b236c0ebbccf96d25f788ac970b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref></type>
        <definition>Variant Bvr::Meta::Variant::ExtractWrappedValue</definition>
        <argsstring>() const</argsstring>
        <name>ExtractWrappedValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" line="83" column="20" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" bodystart="83" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_1a35142dc5c7c80547f67344ee6e523642" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>T&amp; Bvr::Meta::Variant::GetValue</definition>
        <argsstring>()</argsstring>
        <name>GetValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" line="89" column="26" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_1a87248444a9eb094d963bcb87be623162" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_type" kindref="compound">Type</ref></type>
        <definition>Type Bvr::Meta::Variant::GetType</definition>
        <argsstring>() const</argsstring>
        <name>GetType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" line="94" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" bodystart="94" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_1a5b15a2bce58503822abbfb494fd5cf1d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Bvr::Meta::Variant::IsType</definition>
        <argsstring>() const</argsstring>
        <name>IsType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" line="100" column="29" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_1a1c5f5d2ae8b99185fe4325ad3f67a9c3" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::Meta::Variant::IsEnum</definition>
        <argsstring>() const noexcept</argsstring>
        <name>IsEnum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" line="104" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_1a8dcb4317e49f12a853f3bd507e94f3d3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void* Bvr::Meta::Variant::GetRawPtr</definition>
        <argsstring>() const</argsstring>
        <name>GetRawPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" line="106" column="16" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" bodystart="106" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_1a1984e5a46ebf48a9c8c7eede8e27efd0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::Meta::Variant::operator==</definition>
        <argsstring>(const Variant &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" line="112" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" bodystart="112" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_1a84f3779ff0b2d92913d91c0f826d1f30" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T Bvr::Meta::Variant::Cast</definition>
        <argsstring>(bool *bOk) const</argsstring>
        <name>Cast</name>
        <param>
          <type>bool *</type>
          <declname>bOk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" line="118" column="19" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" bodystart="118" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_1a7f0ac11c80763375209419ad806b0816" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::Meta::Variant::Cast</definition>
        <argsstring>(const Type &amp;dstType)</argsstring>
        <name>Cast</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_type" kindref="compound">Type</ref> &amp;</type>
          <declname>dstType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" line="144" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" bodystart="144" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_1a75935477df728a7d0b2a31a400c32bc9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::Meta::Variant::Cast</definition>
        <argsstring>(const Type &amp;dstType, Variant &amp;dstVariant) const</argsstring>
        <name>Cast</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_type" kindref="compound">Type</ref> &amp;</type>
          <declname>dstType</declname>
        </param>
        <param>
          <type><ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref> &amp;</type>
          <declname>dstVariant</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" line="146" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" bodystart="146" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_1a436ea649048cb7b1088943f787999e72" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Dst</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Bvr::Meta::Variant::TryBasicCast</definition>
        <argsstring>(Dst &amp;res) const</argsstring>
        <name>TryBasicCast</name>
        <param>
          <type>Dst &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" line="204" column="22" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" bodystart="204" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_1a2fc2e618e0041a06ceac19d7d8bdd2e3" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_variant_sequential_view" kindref="compound">VariantSequentialView</ref></type>
        <definition>VariantSequentialView Bvr::Meta::Variant::CreateSequentialView</definition>
        <argsstring>() const noexcept</argsstring>
        <name>CreateSequentialView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" line="208" column="35" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="420" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_1a23d9028dbc8525bbbfb6d62e0a47548d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_variant_associative_view" kindref="compound">VariantAssociativeView</ref></type>
        <definition>VariantAssociativeView Bvr::Meta::Variant::CreateAssociativeView</definition>
        <argsstring>() const noexcept</argsstring>
        <name>CreateAssociativeView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" line="209" column="35" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeDesc.hpp" bodystart="427" bodyend="431"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_1acd1af452ea5d410ca10bd3aa337bd361" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Bvr::Meta::Variant::Cast</definition>
        <argsstring>(T &amp;dst) const</argsstring>
        <name>Cast</name>
        <param>
          <type>T &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" line="213" column="29" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" bodystart="213" bodyend="223"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_bvr_1_1_meta_1_1_variant_1a00f45348106d87aa7d125fb39b0565d4" prot="private" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* unsafe_variant_cast</definition>
        <argsstring>(Variant *variant) noexcept</argsstring>
        <name>unsafe_variant_cast</name>
        <param>
          <type><ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref> *</type>
          <declname>variant</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" line="226" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" bodystart="234" bodyend="238"/>
      </memberdef>
      <memberdef kind="friend" id="class_bvr_1_1_meta_1_1_variant_1a605105ee3e61d0a15c0914eeaac5e487" prot="private" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>const T *</type>
        <definition>const T* unsafe_variant_cast</definition>
        <argsstring>(const Variant *variant) noexcept</argsstring>
        <name>unsafe_variant_cast</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref> *</type>
          <declname>variant</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" line="228" column="27" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" bodystart="241" bodyend="244"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" line="22" column="1" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Variant.hpp" bodystart="22" bodyend="232"/>
    <listofallmembers>
      <member refid="class_bvr_1_1_meta_1_1_variant_1a84f3779ff0b2d92913d91c0f826d1f30" prot="public" virt="non-virtual"><scope>Bvr::Meta::Variant</scope><name>Cast</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_1a7f0ac11c80763375209419ad806b0816" prot="public" virt="non-virtual"><scope>Bvr::Meta::Variant</scope><name>Cast</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_1a75935477df728a7d0b2a31a400c32bc9" prot="public" virt="non-virtual"><scope>Bvr::Meta::Variant</scope><name>Cast</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_1acd1af452ea5d410ca10bd3aa337bd361" prot="private" virt="non-virtual"><scope>Bvr::Meta::Variant</scope><name>Cast</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_1a23d9028dbc8525bbbfb6d62e0a47548d" prot="public" virt="non-virtual"><scope>Bvr::Meta::Variant</scope><name>CreateAssociativeView</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_1a2fc2e618e0041a06ceac19d7d8bdd2e3" prot="public" virt="non-virtual"><scope>Bvr::Meta::Variant</scope><name>CreateSequentialView</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_1a3a9f2c2c2d0997837aa4a7ee43ab91a6" prot="public" virt="non-virtual"><scope>Bvr::Meta::Variant</scope><name>CreateWrappedValue</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_1a70c57b236c0ebbccf96d25f788ac970b" prot="public" virt="non-virtual"><scope>Bvr::Meta::Variant</scope><name>ExtractWrappedValue</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_1a8dcb4317e49f12a853f3bd507e94f3d3" prot="public" virt="non-virtual"><scope>Bvr::Meta::Variant</scope><name>GetRawPtr</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_1a87248444a9eb094d963bcb87be623162" prot="public" virt="non-virtual"><scope>Bvr::Meta::Variant</scope><name>GetType</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_1a7481ef9b0f419b2784fe2b5184b5baef" prot="public" virt="non-virtual"><scope>Bvr::Meta::Variant</scope><name>GetValue</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_1a35142dc5c7c80547f67344ee6e523642" prot="public" virt="non-virtual"><scope>Bvr::Meta::Variant</scope><name>GetValue</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_1a1c5f5d2ae8b99185fe4325ad3f67a9c3" prot="public" virt="non-virtual"><scope>Bvr::Meta::Variant</scope><name>IsEnum</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_1a5b15a2bce58503822abbfb494fd5cf1d" prot="public" virt="non-virtual"><scope>Bvr::Meta::Variant</scope><name>IsType</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_1a3a9759338cf1c6ada83ffdf6c76d73ff" prot="private" virt="non-virtual"><scope>Bvr::Meta::Variant</scope><name>m_data</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_1ac384901fc279c11ba53659f7d22ee3ee" prot="private" virt="non-virtual"><scope>Bvr::Meta::Variant</scope><name>m_policy</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_1a53b1b41cfe81a7e837e331c57e46031c" prot="public" virt="non-virtual"><scope>Bvr::Meta::Variant</scope><name>operator bool</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_1ab95b9b85241551228af24c6ee891d45c" prot="public" virt="non-virtual"><scope>Bvr::Meta::Variant</scope><name>operator=</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_1abade2c3088d4cde762a1d4dcd0a2a286" prot="public" virt="non-virtual"><scope>Bvr::Meta::Variant</scope><name>operator=</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_1a1984e5a46ebf48a9c8c7eede8e27efd0" prot="public" virt="non-virtual"><scope>Bvr::Meta::Variant</scope><name>operator==</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_1a436ea649048cb7b1088943f787999e72" prot="public" virt="non-virtual"><scope>Bvr::Meta::Variant</scope><name>TryBasicCast</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_1a00f45348106d87aa7d125fb39b0565d4" prot="private" virt="non-virtual"><scope>Bvr::Meta::Variant</scope><name>unsafe_variant_cast</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_1a605105ee3e61d0a15c0914eeaac5e487" prot="private" virt="non-virtual"><scope>Bvr::Meta::Variant</scope><name>unsafe_variant_cast</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_1a57dd1ff86972eef753f4d29db205af4d" prot="public" virt="non-virtual"><scope>Bvr::Meta::Variant</scope><name>Variant</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_1a9c840575ee8c02b9f5247ff20f86fb5c" prot="public" virt="non-virtual"><scope>Bvr::Meta::Variant</scope><name>Variant</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_1ab66d48e3eb430b0540dbc4d82c828a37" prot="public" virt="non-virtual"><scope>Bvr::Meta::Variant</scope><name>Variant</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_1ad634c0e0bf998ecba9b4a3a3d4a0e774" prot="public" virt="non-virtual"><scope>Bvr::Meta::Variant</scope><name>Variant</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_1a460ec85ab451e7d8bfc1c1d2276a3b4c" prot="public" virt="non-virtual"><scope>Bvr::Meta::Variant</scope><name>~Variant</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

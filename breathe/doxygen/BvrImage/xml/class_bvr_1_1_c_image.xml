<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_bvr_1_1_c_image" kind="class" language="C++" prot="public">
    <compoundname>Bvr::CImage</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_bvr_1_1_c_image_1a4ded69fa222f0352b95bbc10553a4661" prot="public" static="no" strong="yes">
        <type>uint8</type>
        <name>EUsage</name>
        <enumvalue id="class_bvr_1_1_c_image_1a4ded69fa222f0352b95bbc10553a4661aa3e8ae43188ae76d38f414b2bdb0077b" prot="public">
          <name>Texture</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_bvr_1_1_c_image_1a4ded69fa222f0352b95bbc10553a4661a9b0bffda4bcb312168c0d6537cb04b4d" prot="public">
          <name>RenderTarget</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_bvr_1_1_c_image_1a4ded69fa222f0352b95bbc10553a4661af3c010256266268271a563d8363d4594" prot="public">
          <name>ComputeOutput</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>How image can be used by GPU. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" line="12" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" bodystart="12" bodyend="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_c_image_1a557e328d6d321bf16d47b5e2c02fe1b5" prot="private" static="no" mutable="no">
        <type></type>
        <definition>Bvr::CImage::BVR_REFLECTION_FRIEND</definition>
        <argsstring></argsstring>
        <name>BVR_REFLECTION_FRIEND</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" line="8" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_c_image_1a4d1a14155d884d0ecfe763079a624a4c" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Bvr::CImage::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" line="98" column="30" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_c_image_1a7d8a15483559394585c05acfc1ba956a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; uint8 &gt;</type>
        <definition>std::vector&lt;uint8&gt; Bvr::CImage::m_data</definition>
        <argsstring></argsstring>
        <name>m_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" line="99" column="23" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_c_image_1a9be0fd15b374a1acb6458fa968493e3b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Bvr::CImage::m_width</definition>
        <argsstring></argsstring>
        <name>m_width</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" line="100" column="30" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_c_image_1ac17fcb212a4c26afedff60fc78b843ed" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Bvr::CImage::m_height</definition>
        <argsstring></argsstring>
        <name>m_height</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" line="101" column="30" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_c_image_1a85cd8de824157d114093439a51e572f1" prot="private" static="no" mutable="no">
        <type>Renderer::STextureFormat</type>
        <definition>Renderer::STextureFormat Bvr::CImage::m_format</definition>
        <argsstring></argsstring>
        <name>m_format</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" line="102" column="30" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_c_image_1a9f79eb2f23745ceeb71af77529dbba81" prot="private" static="no" mutable="no">
        <type><ref refid="class_bvr_1_1_c_image_1a4ded69fa222f0352b95bbc10553a4661" kindref="member">CImage::EUsage</ref></type>
        <definition>CImage::EUsage Bvr::CImage::m_eUsage</definition>
        <argsstring></argsstring>
        <name>m_eUsage</name>
        <initializer>= EUsage::Texture</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" line="103" column="30" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_bvr_1_1_c_image_1a346b9b4bd7b174d0307d3f3f92cc5be7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::CImage::CImage</definition>
        <argsstring>()=default</argsstring>
        <name>CImage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" line="17" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_image_1a5e207a30a7da9df460a85745f2bdbb90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::CImage::CImage</definition>
        <argsstring>(int width, int height, Renderer::STextureFormat format, const EUsage eUsage=EUsage::Texture)</argsstring>
        <name>CImage</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>Renderer::STextureFormat</type>
          <declname>format</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_c_image_1a4ded69fa222f0352b95bbc10553a4661" kindref="member">EUsage</ref></type>
          <declname>eUsage</declname>
          <defval>EUsage::Texture</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" line="18" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" bodystart="18" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_image_1a510151d1a18cdf9bdee024d3e84d02e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::CImage::CImage</definition>
        <argsstring>(int width, int height, Renderer::STextureFormat format, std::span&lt; const uint8 &gt; data, const EUsage eUsage=EUsage::Texture)</argsstring>
        <name>CImage</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>Renderer::STextureFormat</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::span&lt; const uint8 &gt;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_c_image_1a4ded69fa222f0352b95bbc10553a4661" kindref="member">EUsage</ref></type>
          <declname>eUsage</declname>
          <defval>EUsage::Texture</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" line="23" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" bodystart="23" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_image_1a9c3e08053a5929b4af0642d2508f944c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::CImage::~CImage</definition>
        <argsstring>()=default</argsstring>
        <name>~CImage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" line="29" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_image_1a5497921acbd70ffe3cb0fb26129889bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::CImage::Resize</definition>
        <argsstring>(const int newWidth, const int newHeight)</argsstring>
        <name>Resize</name>
        <param>
          <type>const int</type>
          <declname>newWidth</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>newHeight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resize underlying buffer and its GPU representation Image contents are not going to be preserved <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>destination width </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newHeight</parametername>
</parameternamelist>
<parameterdescription>
<para>destination height </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" line="62" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_image_1aa100f83a3120367012b363a7d8d3a022" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_c_image" kindref="compound">CImage</ref> &amp;</type>
        <definition>CImage&amp; Bvr::CImage::SetName</definition>
        <argsstring>(std::string_view name)</argsstring>
        <name>SetName</name>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" line="64" column="12" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_image_1ae5970f8cb3d1c8c0e9b0b443d8b78643" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string_view</type>
        <definition>const std::string_view Bvr::CImage::GetName</definition>
        <argsstring>() const</argsstring>
        <name>GetName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" line="69" column="36" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_image_1ac913afe8bf42102f0041c9e813327d86" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Bvr::CImage::GetWidth</definition>
        <argsstring>() const</argsstring>
        <name>GetWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" line="73" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_image_1aedb47c800bc720701bf7325d4950df39" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Bvr::CImage::GetHeight</definition>
        <argsstring>() const</argsstring>
        <name>GetHeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" line="74" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_image_1a3f399b4990c1f2c519c1b8a7febba68c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Renderer::STextureFormat</type>
        <definition>Renderer::STextureFormat Bvr::CImage::GetFormat</definition>
        <argsstring>() const</argsstring>
        <name>GetFormat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" line="76" column="38" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" bodystart="76" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_image_1a603f185215295293ae0a2b32a23e4ecc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::span&lt; uint8 const  &gt;</type>
        <definition>std::span&lt;uint8 const&gt; Bvr::CImage::GetData</definition>
        <argsstring>() const</argsstring>
        <name>GetData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" line="79" column="23" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_image_1aa7f7831105ceba6747df67cce098ce37" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::span&lt; uint8 &gt;</type>
        <definition>std::span&lt;uint8&gt; Bvr::CImage::GetData</definition>
        <argsstring>()</argsstring>
        <name>GetData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" line="83" column="23" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_image_1a9fc127cc3109cb3a0efe3e58c900d1a3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_c_image_1a4ded69fa222f0352b95bbc10553a4661" kindref="member">EUsage</ref></type>
        <definition>EUsage Bvr::CImage::GetUsage</definition>
        <argsstring>() const</argsstring>
        <name>GetUsage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" line="85" column="30" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_image_1ad784211dc1ba4b831f5a7293d71e62f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::CImage::SetUsage</definition>
        <argsstring>(const EUsage eUsage)</argsstring>
        <name>SetUsage</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_c_image_1a4ded69fa222f0352b95bbc10553a4661" kindref="member">EUsage</ref></type>
          <declname>eUsage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" line="86" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_image_1a3c1c2769bd8402dcdecc7acb53edad78" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::CImage::ClearData</definition>
        <argsstring>()</argsstring>
        <name>ClearData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" line="88" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" bodystart="88" bodyend="88"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_bvr_1_1_c_image_1a973b83d3ea9ebbd3b8c61e02d9752f6e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_c_image" kindref="compound">CImage</ref></type>
        <definition>static CImage Bvr::CImage::RenderTarget</definition>
        <argsstring>(const int width, const int height, const bool isHDR=false)</argsstring>
        <name>RenderTarget</name>
        <param>
          <type>const int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>isHDR</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create image to be used as render target <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>image width </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>image height </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isHDR</parametername>
</parameternamelist>
<parameterdescription>
<para>if true, then image is RGBA16F, RGB8sRGB otherwise </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>constructed image </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" line="37" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" bodystart="37" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_image_1a2ddb7cd4d51b97a6132c6a1e355d14c3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_c_image" kindref="compound">CImage</ref></type>
        <definition>static CImage Bvr::CImage::ComputeOutput</definition>
        <argsstring>(const int width, const int height, const Renderer::STextureFormat fmt)</argsstring>
        <name>ComputeOutput</name>
        <param>
          <type>const int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>const Renderer::STextureFormat</type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create image to be used as compute output(with storage/UAV flags) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>image width </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>image height </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>image format </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>constructed image </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" line="53" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" bodystart="53" bodyend="56"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_bvr_1_1_c_image_1af570e97cfa0fa8bb54f6a572f86e8a0c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::CImage::Initialise</definition>
        <argsstring>(int width, int height, Renderer::STextureFormat format)</argsstring>
        <name>Initialise</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>Renderer::STextureFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" line="91" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_image_1ae2b0b556329420a9898f2917067dcee6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::CImage::Initialise</definition>
        <argsstring>(int width, int height, Renderer::STextureFormat format, std::span&lt; const uint8 &gt; data)</argsstring>
        <name>Initialise</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>Renderer::STextureFormat</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::span&lt; const uint8 &gt;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" line="92" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_bvr_1_1_c_image_1a035e51f902aca90698fc81f4bd2b61a1" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t Bvr::CImage::CalculateImageSize</definition>
        <argsstring>(int w, int h, Renderer::STextureFormat f)</argsstring>
        <name>CalculateImageSize</name>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>Renderer::STextureFormat</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" line="94" column="20"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" line="7" column="1" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrImage/Image.hpp" bodystart="7" bodyend="104"/>
    <listofallmembers>
      <member refid="class_bvr_1_1_c_image_1a557e328d6d321bf16d47b5e2c02fe1b5" prot="private" virt="non-virtual"><scope>Bvr::CImage</scope><name>BVR_REFLECTION_FRIEND</name></member>
      <member refid="class_bvr_1_1_c_image_1a035e51f902aca90698fc81f4bd2b61a1" prot="private" virt="non-virtual"><scope>Bvr::CImage</scope><name>CalculateImageSize</name></member>
      <member refid="class_bvr_1_1_c_image_1a346b9b4bd7b174d0307d3f3f92cc5be7" prot="public" virt="non-virtual"><scope>Bvr::CImage</scope><name>CImage</name></member>
      <member refid="class_bvr_1_1_c_image_1a5e207a30a7da9df460a85745f2bdbb90" prot="public" virt="non-virtual"><scope>Bvr::CImage</scope><name>CImage</name></member>
      <member refid="class_bvr_1_1_c_image_1a510151d1a18cdf9bdee024d3e84d02e4" prot="public" virt="non-virtual"><scope>Bvr::CImage</scope><name>CImage</name></member>
      <member refid="class_bvr_1_1_c_image_1a3c1c2769bd8402dcdecc7acb53edad78" prot="public" virt="non-virtual"><scope>Bvr::CImage</scope><name>ClearData</name></member>
      <member refid="class_bvr_1_1_c_image_1a2ddb7cd4d51b97a6132c6a1e355d14c3" prot="public" virt="non-virtual"><scope>Bvr::CImage</scope><name>ComputeOutput</name></member>
      <member refid="class_bvr_1_1_c_image_1a4ded69fa222f0352b95bbc10553a4661" prot="public" virt="non-virtual"><scope>Bvr::CImage</scope><name>EUsage</name></member>
      <member refid="class_bvr_1_1_c_image_1a603f185215295293ae0a2b32a23e4ecc" prot="public" virt="non-virtual"><scope>Bvr::CImage</scope><name>GetData</name></member>
      <member refid="class_bvr_1_1_c_image_1aa7f7831105ceba6747df67cce098ce37" prot="public" virt="non-virtual"><scope>Bvr::CImage</scope><name>GetData</name></member>
      <member refid="class_bvr_1_1_c_image_1a3f399b4990c1f2c519c1b8a7febba68c" prot="public" virt="non-virtual"><scope>Bvr::CImage</scope><name>GetFormat</name></member>
      <member refid="class_bvr_1_1_c_image_1aedb47c800bc720701bf7325d4950df39" prot="public" virt="non-virtual"><scope>Bvr::CImage</scope><name>GetHeight</name></member>
      <member refid="class_bvr_1_1_c_image_1ae5970f8cb3d1c8c0e9b0b443d8b78643" prot="public" virt="non-virtual"><scope>Bvr::CImage</scope><name>GetName</name></member>
      <member refid="class_bvr_1_1_c_image_1a9fc127cc3109cb3a0efe3e58c900d1a3" prot="public" virt="non-virtual"><scope>Bvr::CImage</scope><name>GetUsage</name></member>
      <member refid="class_bvr_1_1_c_image_1ac913afe8bf42102f0041c9e813327d86" prot="public" virt="non-virtual"><scope>Bvr::CImage</scope><name>GetWidth</name></member>
      <member refid="class_bvr_1_1_c_image_1af570e97cfa0fa8bb54f6a572f86e8a0c" prot="private" virt="non-virtual"><scope>Bvr::CImage</scope><name>Initialise</name></member>
      <member refid="class_bvr_1_1_c_image_1ae2b0b556329420a9898f2917067dcee6" prot="private" virt="non-virtual"><scope>Bvr::CImage</scope><name>Initialise</name></member>
      <member refid="class_bvr_1_1_c_image_1a7d8a15483559394585c05acfc1ba956a" prot="private" virt="non-virtual"><scope>Bvr::CImage</scope><name>m_data</name></member>
      <member refid="class_bvr_1_1_c_image_1a9f79eb2f23745ceeb71af77529dbba81" prot="private" virt="non-virtual"><scope>Bvr::CImage</scope><name>m_eUsage</name></member>
      <member refid="class_bvr_1_1_c_image_1a85cd8de824157d114093439a51e572f1" prot="private" virt="non-virtual"><scope>Bvr::CImage</scope><name>m_format</name></member>
      <member refid="class_bvr_1_1_c_image_1ac17fcb212a4c26afedff60fc78b843ed" prot="private" virt="non-virtual"><scope>Bvr::CImage</scope><name>m_height</name></member>
      <member refid="class_bvr_1_1_c_image_1a4d1a14155d884d0ecfe763079a624a4c" prot="private" virt="non-virtual"><scope>Bvr::CImage</scope><name>m_name</name></member>
      <member refid="class_bvr_1_1_c_image_1a9be0fd15b374a1acb6458fa968493e3b" prot="private" virt="non-virtual"><scope>Bvr::CImage</scope><name>m_width</name></member>
      <member refid="class_bvr_1_1_c_image_1a973b83d3ea9ebbd3b8c61e02d9752f6e" prot="public" virt="non-virtual"><scope>Bvr::CImage</scope><name>RenderTarget</name></member>
      <member refid="class_bvr_1_1_c_image_1a5497921acbd70ffe3cb0fb26129889bf" prot="public" virt="non-virtual"><scope>Bvr::CImage</scope><name>Resize</name></member>
      <member refid="class_bvr_1_1_c_image_1aa100f83a3120367012b363a7d8d3a022" prot="public" virt="non-virtual"><scope>Bvr::CImage</scope><name>SetName</name></member>
      <member refid="class_bvr_1_1_c_image_1ad784211dc1ba4b831f5a7293d71e62f2" prot="public" virt="non-virtual"><scope>Bvr::CImage</scope><name>SetUsage</name></member>
      <member refid="class_bvr_1_1_c_image_1a9c3e08053a5929b4af0642d2508f944c" prot="public" virt="non-virtual"><scope>Bvr::CImage</scope><name>~CImage</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

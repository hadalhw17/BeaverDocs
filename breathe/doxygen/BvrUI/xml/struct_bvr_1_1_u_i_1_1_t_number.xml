<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="struct_bvr_1_1_u_i_1_1_t_number" kind="struct" language="C++" prot="public">
    <compoundname>Bvr::UI::TNumber</compoundname>
    <templateparamlist>
      <param>
        <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">typename</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">T</ref></type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="struct_bvr_1_1_u_i_1_1_t_number_1abc475ca4fb9d42083d873a3c0a4679a4" prot="public" static="yes" constexpr="yes" mutable="no">
        <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">constexpr</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">T</ref></type>
        <definition>constexpr T Bvr::UI::TNumber&lt; T &gt;::UndefinedVal</definition>
        <argsstring></argsstring>
        <name>UndefinedVal</name>
        <qualifiedname>Bvr::UI::TNumber::UndefinedVal</qualifiedname>
        <initializer>= std::numeric_limits&lt;<ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">T</ref>&gt;::max()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" line="87" column="27" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_bvr_1_1_u_i_1_1_t_number_1a9dd89ff5119526a5b0b877f885047964" prot="public" static="no" mutable="no">
        <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">T</ref></type>
        <definition>T Bvr::UI::TNumber&lt; T &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <qualifiedname>Bvr::UI::TNumber::value</qualifiedname>
        <initializer>= UndefinedVal</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" line="195" column="7" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" bodystart="195" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="struct_bvr_1_1_u_i_1_1_t_number_1a8388bfc8184e4260d9799e8757aba611" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">constexpr</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">auto</ref></type>
        <definition>constexpr auto operator&lt;=&gt;</definition>
        <argsstring>(const TNumber &amp;, const TNumber &amp;)=default</argsstring>
        <name>operator&lt;=&gt;</name>
        <qualifiedname>Bvr::UI::TNumber::operator&lt;=&gt;</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_number" kindref="compound">TNumber</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_number" kindref="compound">TNumber</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" line="89" column="22"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_bvr_1_1_u_i_1_1_t_number_1abd1335388777931088c7288d23c6002f" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">constexpr</ref></type>
        <definition>constexpr Bvr::UI::TNumber&lt; T &gt;::operator T</definition>
        <argsstring>() const</argsstring>
        <name>operator T</name>
        <qualifiedname>Bvr::UI::TNumber::operator T</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" line="90" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_u_i_1_1_t_number_1a06cba4fcb151be752af1764a62c5070a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">typename</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">U</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">constexpr</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_number" kindref="compound">TNumber</ref>&lt; <ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">U</ref> &gt;</type>
        <definition>constexpr TNumber&lt; U &gt; Bvr::UI::TNumber&lt; T &gt;::operator=</definition>
        <argsstring>(const TNumber &amp;rhs) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>Bvr::UI::TNumber::operator=</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_number" kindref="compound">TNumber</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" line="96" column="23" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" bodystart="96" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_u_i_1_1_t_number_1a6546e43ede1713d754d887fb6de0e66b" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">constexpr</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_number" kindref="compound">TNumber</ref></type>
        <definition>constexpr TNumber Bvr::UI::TNumber&lt; T &gt;::operator+</definition>
        <argsstring>(const TNumber &amp;rhs) const</argsstring>
        <name>operator+</name>
        <qualifiedname>Bvr::UI::TNumber::operator+</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_number" kindref="compound">TNumber</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" line="100" column="23" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" bodystart="100" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_u_i_1_1_t_number_1af2e7c1707ead4d566607aae0caa23977" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">constexpr</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_number" kindref="compound">TNumber</ref></type>
        <definition>constexpr TNumber Bvr::UI::TNumber&lt; T &gt;::operator-</definition>
        <argsstring>(const TNumber &amp;rhs) const</argsstring>
        <name>operator-</name>
        <qualifiedname>Bvr::UI::TNumber::operator-</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_number" kindref="compound">TNumber</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" line="108" column="23" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" bodystart="108" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_u_i_1_1_t_number_1a9d258fd058003c8e16c16256b5bdfef3" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">constexpr</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_number" kindref="compound">TNumber</ref></type>
        <definition>constexpr TNumber Bvr::UI::TNumber&lt; T &gt;::operator*</definition>
        <argsstring>(const TNumber &amp;rhs) const</argsstring>
        <name>operator*</name>
        <qualifiedname>Bvr::UI::TNumber::operator*</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_number" kindref="compound">TNumber</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" line="116" column="23" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" bodystart="116" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_u_i_1_1_t_number_1ac8633f78003f16332fb71bf382ddf16f" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">constexpr</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_number" kindref="compound">TNumber</ref></type>
        <definition>constexpr TNumber Bvr::UI::TNumber&lt; T &gt;::operator/</definition>
        <argsstring>(const TNumber &amp;rhs) const</argsstring>
        <name>operator/</name>
        <qualifiedname>Bvr::UI::TNumber::operator/</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_number" kindref="compound">TNumber</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" line="124" column="23" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" bodystart="124" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_u_i_1_1_t_number_1aaea4caa4227862538f068323724820a7" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">constexpr</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_number" kindref="compound">TNumber</ref></type>
        <definition>constexpr TNumber Bvr::UI::TNumber&lt; T &gt;::operator+</definition>
        <argsstring>(const T &amp;rhs) const</argsstring>
        <name>operator+</name>
        <qualifiedname>Bvr::UI::TNumber::operator+</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">T</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" line="133" column="23" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" bodystart="133" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_u_i_1_1_t_number_1a6c2ea611c79319f5f8e3c4bb2ef2cc82" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">constexpr</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_number" kindref="compound">TNumber</ref></type>
        <definition>constexpr TNumber Bvr::UI::TNumber&lt; T &gt;::operator-</definition>
        <argsstring>(const T &amp;rhs) const</argsstring>
        <name>operator-</name>
        <qualifiedname>Bvr::UI::TNumber::operator-</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">T</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" line="138" column="23" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" bodystart="138" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_u_i_1_1_t_number_1aface922c49c6a162dee22744313f7595" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">constexpr</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_number" kindref="compound">TNumber</ref></type>
        <definition>constexpr TNumber Bvr::UI::TNumber&lt; T &gt;::operator*</definition>
        <argsstring>(const T &amp;rhs) const</argsstring>
        <name>operator*</name>
        <qualifiedname>Bvr::UI::TNumber::operator*</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">T</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" line="143" column="23" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" bodystart="143" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_u_i_1_1_t_number_1a82fab191ca9f7912e62f74b7e7278060" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">constexpr</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_number" kindref="compound">TNumber</ref></type>
        <definition>constexpr TNumber Bvr::UI::TNumber&lt; T &gt;::operator/</definition>
        <argsstring>(const T rhs) const</argsstring>
        <name>operator/</name>
        <qualifiedname>Bvr::UI::TNumber::operator/</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">T</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" line="148" column="23" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" bodystart="148" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_u_i_1_1_t_number_1a3a7751c128d14dfc91d9a4efdece0134" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">constexpr</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">bool</ref></type>
        <definition>constexpr bool Bvr::UI::TNumber&lt; T &gt;::IsDefined</definition>
        <argsstring>() const</argsstring>
        <name>IsDefined</name>
        <qualifiedname>Bvr::UI::TNumber::IsDefined</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" line="163" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" bodystart="163" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_u_i_1_1_t_number_1a73d1e1cb514e51b289c784f9837fd495" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">constexpr</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_number" kindref="compound">TNumber</ref></type>
        <definition>constexpr TNumber Bvr::UI::TNumber&lt; T &gt;::Or</definition>
        <argsstring>(const T val) const</argsstring>
        <name>Or</name>
        <qualifiedname>Bvr::UI::TNumber::Or</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">T</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" line="167" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" bodystart="167" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_u_i_1_1_t_number_1a8966a44537538e6c8e42f49ade99682a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">typename</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">Fn</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">constexpr</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_number" kindref="compound">TNumber</ref></type>
        <definition>constexpr TNumber Bvr::UI::TNumber&lt; T &gt;::Or</definition>
        <argsstring>(Fn &amp;&amp;fn)</argsstring>
        <name>Or</name>
        <qualifiedname>Bvr::UI::TNumber::Or</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">Fn</ref> &amp;&amp;</type>
          <declname>fn</declname>
        </param>
    <requiresclause>std::is_invocable_v&lt;Fn&gt;    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" line="173" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" bodystart="173" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_u_i_1_1_t_number_1a6dc7cb3ad2a3c66c822f594af51ffeab" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">constexpr</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_number" kindref="compound">TNumber</ref></type>
        <definition>constexpr TNumber Bvr::UI::TNumber&lt; T &gt;::MaybeMax</definition>
        <argsstring>(const TNumber rhs) const</argsstring>
        <name>MaybeMax</name>
        <qualifiedname>Bvr::UI::TNumber::MaybeMax</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_number" kindref="compound">TNumber</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" line="177" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" bodystart="177" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_u_i_1_1_t_number_1a633cb73e6581e0ed081d730748538bda" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">constexpr</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_number" kindref="compound">TNumber</ref></type>
        <definition>constexpr TNumber Bvr::UI::TNumber&lt; T &gt;::MaybeMin</definition>
        <argsstring>(const TNumber rhs) const</argsstring>
        <name>MaybeMin</name>
        <qualifiedname>Bvr::UI::TNumber::MaybeMin</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_number" kindref="compound">TNumber</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" line="184" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" bodystart="184" bodyend="189"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_bvr_1_1_u_i_1_1_t_number_1a5baa15de2b44715001cc4bd10a98d82f" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">constexpr</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_number" kindref="compound">TNumber</ref></type>
        <definition>static constexpr TNumber Bvr::UI::TNumber&lt; T &gt;::Defined</definition>
        <argsstring>(const T val)</argsstring>
        <name>Defined</name>
        <qualifiedname>Bvr::UI::TNumber::Defined</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">T</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" line="154" column="31" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" bodystart="154" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_u_i_1_1_t_number_1a810b6353f00f0d709daab08910ba8c12" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">constexpr</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_number" kindref="compound">TNumber</ref></type>
        <definition>static constexpr TNumber Bvr::UI::TNumber&lt; T &gt;::Undefined</definition>
        <argsstring>()</argsstring>
        <name>Undefined</name>
        <qualifiedname>Bvr::UI::TNumber::Undefined</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" line="159" column="31" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_u_i_1_1_t_number_1af0672a6285dcb095e106fbd140eabc30" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_u_i_1_1_t_size" kindref="compound">constexpr</ref> <ref refid="struct_bvr_1_1_u_i_1_1_t_number" kindref="compound">TNumber</ref></type>
        <definition>static constexpr TNumber Bvr::UI::TNumber&lt; T &gt;::Auto</definition>
        <argsstring>()</argsstring>
        <name>Auto</name>
        <qualifiedname>Bvr::UI::TNumber::Auto</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" line="191" column="31" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" bodystart="191" bodyend="193"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" line="85" column="12" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrUI/BvrUI.hpp" bodystart="85" bodyend="196"/>
    <listofallmembers>
      <member refid="struct_bvr_1_1_u_i_1_1_t_number_1af0672a6285dcb095e106fbd140eabc30" prot="public" virt="non-virtual"><scope>Bvr::UI::TNumber</scope><name>Auto</name></member>
      <member refid="struct_bvr_1_1_u_i_1_1_t_number_1a5baa15de2b44715001cc4bd10a98d82f" prot="public" virt="non-virtual"><scope>Bvr::UI::TNumber</scope><name>Defined</name></member>
      <member refid="struct_bvr_1_1_u_i_1_1_t_number_1a3a7751c128d14dfc91d9a4efdece0134" prot="public" virt="non-virtual"><scope>Bvr::UI::TNumber</scope><name>IsDefined</name></member>
      <member refid="struct_bvr_1_1_u_i_1_1_t_number_1a6dc7cb3ad2a3c66c822f594af51ffeab" prot="public" virt="non-virtual"><scope>Bvr::UI::TNumber</scope><name>MaybeMax</name></member>
      <member refid="struct_bvr_1_1_u_i_1_1_t_number_1a633cb73e6581e0ed081d730748538bda" prot="public" virt="non-virtual"><scope>Bvr::UI::TNumber</scope><name>MaybeMin</name></member>
      <member refid="struct_bvr_1_1_u_i_1_1_t_number_1abd1335388777931088c7288d23c6002f" prot="public" virt="non-virtual"><scope>Bvr::UI::TNumber</scope><name>operator T</name></member>
      <member refid="struct_bvr_1_1_u_i_1_1_t_number_1a9d258fd058003c8e16c16256b5bdfef3" prot="public" virt="non-virtual"><scope>Bvr::UI::TNumber</scope><name>operator*</name></member>
      <member refid="struct_bvr_1_1_u_i_1_1_t_number_1aface922c49c6a162dee22744313f7595" prot="public" virt="non-virtual"><scope>Bvr::UI::TNumber</scope><name>operator*</name></member>
      <member refid="struct_bvr_1_1_u_i_1_1_t_number_1a6546e43ede1713d754d887fb6de0e66b" prot="public" virt="non-virtual"><scope>Bvr::UI::TNumber</scope><name>operator+</name></member>
      <member refid="struct_bvr_1_1_u_i_1_1_t_number_1aaea4caa4227862538f068323724820a7" prot="public" virt="non-virtual"><scope>Bvr::UI::TNumber</scope><name>operator+</name></member>
      <member refid="struct_bvr_1_1_u_i_1_1_t_number_1af2e7c1707ead4d566607aae0caa23977" prot="public" virt="non-virtual"><scope>Bvr::UI::TNumber</scope><name>operator-</name></member>
      <member refid="struct_bvr_1_1_u_i_1_1_t_number_1a6c2ea611c79319f5f8e3c4bb2ef2cc82" prot="public" virt="non-virtual"><scope>Bvr::UI::TNumber</scope><name>operator-</name></member>
      <member refid="struct_bvr_1_1_u_i_1_1_t_number_1ac8633f78003f16332fb71bf382ddf16f" prot="public" virt="non-virtual"><scope>Bvr::UI::TNumber</scope><name>operator/</name></member>
      <member refid="struct_bvr_1_1_u_i_1_1_t_number_1a82fab191ca9f7912e62f74b7e7278060" prot="public" virt="non-virtual"><scope>Bvr::UI::TNumber</scope><name>operator/</name></member>
      <member refid="struct_bvr_1_1_u_i_1_1_t_number_1a8388bfc8184e4260d9799e8757aba611" prot="public" virt="non-virtual"><scope>Bvr::UI::TNumber</scope><name>operator&lt;=&gt;</name></member>
      <member refid="struct_bvr_1_1_u_i_1_1_t_number_1a06cba4fcb151be752af1764a62c5070a" prot="public" virt="non-virtual"><scope>Bvr::UI::TNumber</scope><name>operator=</name></member>
      <member refid="struct_bvr_1_1_u_i_1_1_t_number_1a73d1e1cb514e51b289c784f9837fd495" prot="public" virt="non-virtual"><scope>Bvr::UI::TNumber</scope><name>Or</name></member>
      <member refid="struct_bvr_1_1_u_i_1_1_t_number_1a8966a44537538e6c8e42f49ade99682a" prot="public" virt="non-virtual"><scope>Bvr::UI::TNumber</scope><name>Or</name></member>
      <member refid="struct_bvr_1_1_u_i_1_1_t_number_1a810b6353f00f0d709daab08910ba8c12" prot="public" virt="non-virtual"><scope>Bvr::UI::TNumber</scope><name>Undefined</name></member>
      <member refid="struct_bvr_1_1_u_i_1_1_t_number_1abc475ca4fb9d42083d873a3c0a4679a4" prot="public" virt="non-virtual"><scope>Bvr::UI::TNumber</scope><name>UndefinedVal</name></member>
      <member refid="struct_bvr_1_1_u_i_1_1_t_number_1a9dd89ff5119526a5b0b877f885047964" prot="public" virt="non-virtual"><scope>Bvr::UI::TNumber</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespacegl_t_f_helpers" kind="namespace" language="C++">
    <compoundname>glTFHelpers</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="_gltf_helpers_8hpp_1a04b2cdf1f906b81cb42e7d3d6f743a6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>bMutable</declname>
            <defname>bMutable</defname>
          </param>
          <param>
            <type>typename SliceT</type>
            <defval>BasicStreamSlice&lt;bMutable&gt;</defval>
          </param>
          <param>
            <type>typename ModelT</type>
            <defval>std::conditional_t&lt;bMutable, <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref>,                                               const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref>&gt;</defval>
          </param>
        </templateparamlist>
        <type>SliceT</type>
        <definition>SliceT glTFHelpers::AccessorToSlice</definition>
        <argsstring>(ModelT &amp;doc, const int accessorIdx)</argsstring>
        <name>AccessorToSlice</name>
        <param>
          <type>ModelT &amp;</type>
          <declname>doc</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>accessorIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="10" column="15" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="10" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1a23ab1e7b9645040ee45b7c665cbeef75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>bMutable</declname>
            <defname>bMutable</defname>
          </param>
          <param>
            <type>typename SliceT</type>
            <defval>BasicStreamSlice&lt;bMutable&gt;</defval>
          </param>
          <param>
            <type>typename ModelT</type>
            <defval>std::conditional_t&lt;bMutable, <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref>,                                               const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref>&gt;</defval>
          </param>
        </templateparamlist>
        <type>SliceT</type>
        <definition>SliceT glTFHelpers::GetAttribute</definition>
        <argsstring>(ModelT &amp;gltfMesh, const Raven::GLTF::SPrimitive &amp;prim, const char *attrubuteName)</argsstring>
        <name>GetAttribute</name>
        <param>
          <type>ModelT &amp;</type>
          <declname>gltfMesh</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_primitive" kindref="compound">Raven::GLTF::SPrimitive</ref> &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attrubuteName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="29" column="15" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="29" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1ae49ccf79ffbba316f59a6329b79d4589" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void glTFHelpers::GetAttribute</definition>
        <argsstring>(std::vector&lt; T &gt; &amp;attribute, const Raven::GLTF::SDocument &amp;gltfMesh, const Raven::GLTF::SPrimitive &amp;prim, const char *attrubuteName)</argsstring>
        <name>GetAttribute</name>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref> &amp;</type>
          <declname>gltfMesh</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_primitive" kindref="compound">Raven::GLTF::SPrimitive</ref> &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attrubuteName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="41" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="41" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1a195e454c1ef2419486c612774c96d1b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>bMutable</declname>
            <defname>bMutable</defname>
          </param>
          <param>
            <type>typename SliceT</type>
            <defval>BasicStreamSlice&lt;bMutable&gt;</defval>
          </param>
        </templateparamlist>
        <type>SliceT</type>
        <definition>SliceT glTFHelpers::GetIndexBuffer</definition>
        <argsstring>(const Raven::GLTF::SDocument &amp;model, int meshIdx, int primitiveIdx, int &amp;componentSize)</argsstring>
        <name>GetIndexBuffer</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>meshIdx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>primitiveIdx</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>componentSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="56" column="15" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="56" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1ac8c762318a4705da350b02e69b578c70" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>bIsMutable</declname>
            <defname>bIsMutable</defname>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int glTFHelpers::GetIndexBuffer</definition>
        <argsstring>(const Raven::GLTF::SDocument &amp;model, int meshIdx, int primitiveIdx, int vertexStart, std::vector&lt; uint32 &gt; &amp;outBuffer)</argsstring>
        <name>GetIndexBuffer</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>meshIdx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>primitiveIdx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vertexStart</declname>
        </param>
        <param>
          <type>std::vector&lt; uint32 &gt; &amp;</type>
          <declname>outBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="88" column="12" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="88" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1a2057d674436de57d0b2a98946246f913" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AABB</type>
        <definition>AABB glTFHelpers::GetPrimitiveBounds</definition>
        <argsstring>(const Raven::GLTF::SDocument &amp;doc, int meshIdx, int primitiveIdx)</argsstring>
        <name>GetPrimitiveBounds</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref> &amp;</type>
          <declname>doc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>meshIdx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>primitiveIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="132" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="132" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1a6bde90f9b5fc590a1762b45f2b7d0e2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>mat4</type>
        <definition>mat4 glTFHelpers::GetNodeTransform</definition>
        <argsstring>(const Raven::GLTF::SDocument &amp;document, int nodeIdx)</argsstring>
        <name>GetNodeTransform</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref> &amp;</type>
          <declname>document</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nodeIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="154" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="154" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1ade0aab819b9dc30f3c4a8bbd96bd87d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int glTFHelpers::GetNodeLightId</definition>
        <argsstring>(const Raven::GLTF::SDocument &amp;model, int nodeIdx)</argsstring>
        <name>GetNodeLightId</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nodeIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="188" column="12" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="188" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1a1f7faced291daecf5192e0ff86a7592c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void glTFHelpers::WriteTransform</definition>
        <argsstring>(Raven::GLTF::SDocument &amp;document, int nodeIdx, const mat4 transform)</argsstring>
        <name>WriteTransform</name>
        <param>
          <type><ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref> &amp;</type>
          <declname>document</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nodeIdx</declname>
        </param>
        <param>
          <type>const mat4</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="205" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="205" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1abf4430788e901489d3d3c13ffd6ae05a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int glTFHelpers::GetAnimationSamplerInputCount</definition>
        <argsstring>(const Raven::GLTF::SAnimation::SSampler &amp;sampler, const Raven::GLTF::SDocument &amp;model)</argsstring>
        <name>GetAnimationSamplerInputCount</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_animation_1_1_s_sampler" kindref="compound">Raven::GLTF::SAnimation::SSampler</ref> &amp;</type>
          <declname>sampler</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="222" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="222" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1aac2647f20f06e7ce4da8384078f63e3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int glTFHelpers::GetAnimationSamplerOutputCount</definition>
        <argsstring>(const Raven::GLTF::SAnimation::SSampler &amp;sampler, const Raven::GLTF::SDocument &amp;model)</argsstring>
        <name>GetAnimationSamplerOutputCount</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_animation_1_1_s_sampler" kindref="compound">Raven::GLTF::SAnimation::SSampler</ref> &amp;</type>
          <declname>sampler</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="230" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="230" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1a31ff7cd38d30433e6d4cc10bad0ea230" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool glTFHelpers::GetAnimationSamplerBounds</definition>
        <argsstring>(const Raven::GLTF::SAnimation::SSampler &amp;sampler, const Raven::GLTF::SDocument &amp;model, float &amp;min, float &amp;max)</argsstring>
        <name>GetAnimationSamplerBounds</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_animation_1_1_s_sampler" kindref="compound">Raven::GLTF::SAnimation::SSampler</ref> &amp;</type>
          <declname>sampler</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="238" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="238" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1a184ac2344632aee625d74d98c4de475d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float glTFHelpers::DecodeAnimationChannelValue</definition>
        <argsstring>(int8_t c)</argsstring>
        <name>DecodeAnimationChannelValue</name>
        <param>
          <type>int8_t</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="256" column="14" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="256" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1adfafac05debd89e7cf3fb6d6b7ce2ad8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float glTFHelpers::DecodeAnimationChannelValue</definition>
        <argsstring>(uint8_t c)</argsstring>
        <name>DecodeAnimationChannelValue</name>
        <param>
          <type>uint8_t</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="260" column="14" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="260" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1a719690e767d008fdae1846dcc7634257" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float glTFHelpers::DecodeAnimationChannelValue</definition>
        <argsstring>(int16_t c)</argsstring>
        <name>DecodeAnimationChannelValue</name>
        <param>
          <type>int16_t</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="264" column="14" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="264" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1ae87c705849a5d6f5e8ab19e57a9462fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float glTFHelpers::DecodeAnimationChannelValue</definition>
        <argsstring>(uint16_t c)</argsstring>
        <name>DecodeAnimationChannelValue</name>
        <param>
          <type>uint16_t</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="268" column="14" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="268" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1a7f508d89d6eea63b79d14d567fef46aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const uint8_t *</type>
        <definition>const uint8_t* glTFHelpers::GetBufferAddress</definition>
        <argsstring>(const int i, const Raven::GLTF::SAccessor &amp;accessor, const Raven::GLTF::SBufferView &amp;bufferViewObject, const Raven::GLTF::SBuffer &amp;buffer)</argsstring>
        <name>GetBufferAddress</name>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_accessor" kindref="compound">Raven::GLTF::SAccessor</ref> &amp;</type>
          <declname>accessor</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_buffer_view" kindref="compound">Raven::GLTF::SBufferView</ref> &amp;</type>
          <declname>bufferViewObject</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_buffer" kindref="compound">Raven::GLTF::SBuffer</ref> &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="273" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="273" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1a3689a553030d0239e9f25d3148e7c23a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool glTFHelpers::DecodeScalarAnimationValue</definition>
        <argsstring>(const size_t i, const Raven::GLTF::SAccessor &amp;accessor, const Raven::GLTF::SDocument &amp;model, float *scalar)</argsstring>
        <name>DecodeScalarAnimationValue</name>
        <param>
          <type>const size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_accessor" kindref="compound">Raven::GLTF::SAccessor</ref> &amp;</type>
          <declname>accessor</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="290" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="290" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1afb061c2c0d37e62e2b28f78e00a16e3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool glTFHelpers::DecodeTranslationAnimationValue</definition>
        <argsstring>(const size_t i, const Raven::GLTF::SAccessor &amp;accessor, const Raven::GLTF::SDocument &amp;model, float *xyz)</argsstring>
        <name>DecodeTranslationAnimationValue</name>
        <param>
          <type>const size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_accessor" kindref="compound">Raven::GLTF::SAccessor</ref> &amp;</type>
          <declname>accessor</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>xyz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="334" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="334" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1a9f324d8a96ed86c805df376e5da8a7bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool glTFHelpers::DecodeScaleAnimationValue</definition>
        <argsstring>(const size_t i, const Raven::GLTF::SAccessor &amp;accessor, const Raven::GLTF::SDocument &amp;model, float *xyz)</argsstring>
        <name>DecodeScaleAnimationValue</name>
        <param>
          <type>const size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_accessor" kindref="compound">Raven::GLTF::SAccessor</ref> &amp;</type>
          <declname>accessor</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>xyz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="363" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="363" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1a49796ba8860565779258e32196e17d58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool glTFHelpers::DecodeRotationAnimationValue</definition>
        <argsstring>(const size_t i, const Raven::GLTF::SAccessor &amp;accessor, const Raven::GLTF::SDocument &amp;model, float *xyzw)</argsstring>
        <name>DecodeRotationAnimationValue</name>
        <param>
          <type>const size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_accessor" kindref="compound">Raven::GLTF::SAccessor</ref> &amp;</type>
          <declname>accessor</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>xyzw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="393" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="393" bodyend="458"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="6" column="1"/>
  </compounddef>
</doxygen>

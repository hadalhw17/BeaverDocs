<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespace_raven_1_1gl_t_f_helpers" kind="namespace" language="C++">
    <compoundname>Raven::glTFHelpers</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="_gltf_helpers_8hpp_1ab1b8e6785ff9e7c6eac9e5fc008b0112" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>bMutable</declname>
            <defname>bMutable</defname>
          </param>
          <param>
            <type>typename SliceT</type>
            <defval>BasicStreamSlice&lt;bMutable&gt;</defval>
          </param>
          <param>
            <type>typename ModelT</type>
            <defval>std::conditional_t&lt;bMutable, <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref>,                                               const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref>&gt;</defval>
          </param>
        </templateparamlist>
        <type>SliceT</type>
        <definition>SliceT Raven::glTFHelpers::AccessorToSlice</definition>
        <argsstring>(ModelT &amp;doc, const int accessorIdx)</argsstring>
        <name>AccessorToSlice</name>
        <param>
          <type>ModelT &amp;</type>
          <declname>doc</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>accessorIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="10" column="15" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="10" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1a17710fc15a972b5503407e582855f55f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>bMutable</declname>
            <defname>bMutable</defname>
          </param>
          <param>
            <type>typename SliceT</type>
            <defval>BasicStreamSlice&lt;bMutable&gt;</defval>
          </param>
          <param>
            <type>typename ModelT</type>
            <defval>std::conditional_t&lt;bMutable, <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref>,                                               const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref>&gt;</defval>
          </param>
        </templateparamlist>
        <type>SliceT</type>
        <definition>SliceT Raven::glTFHelpers::GetAttribute</definition>
        <argsstring>(ModelT &amp;gltfMesh, const Raven::GLTF::SPrimitive &amp;prim, const char *attrubuteName)</argsstring>
        <name>GetAttribute</name>
        <param>
          <type>ModelT &amp;</type>
          <declname>gltfMesh</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_primitive" kindref="compound">Raven::GLTF::SPrimitive</ref> &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attrubuteName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="29" column="15" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="29" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1ac4908b8a9592a174b8610fdbed31597b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Raven::glTFHelpers::GetAttribute</definition>
        <argsstring>(std::vector&lt; T &gt; &amp;attribute, const Raven::GLTF::SDocument &amp;gltfMesh, const Raven::GLTF::SPrimitive &amp;prim, const char *attrubuteName)</argsstring>
        <name>GetAttribute</name>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref> &amp;</type>
          <declname>gltfMesh</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_primitive" kindref="compound">Raven::GLTF::SPrimitive</ref> &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attrubuteName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="41" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="41" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1a16d59e0633dfde3c674c250a3677d9b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>bMutable</declname>
            <defname>bMutable</defname>
          </param>
          <param>
            <type>typename SliceT</type>
            <defval>BasicStreamSlice&lt;bMutable&gt;</defval>
          </param>
        </templateparamlist>
        <type>SliceT</type>
        <definition>SliceT Raven::glTFHelpers::GetIndexBuffer</definition>
        <argsstring>(const Raven::GLTF::SDocument &amp;model, int meshIdx, int primitiveIdx, int &amp;componentSize)</argsstring>
        <name>GetIndexBuffer</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>meshIdx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>primitiveIdx</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>componentSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="56" column="15" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="56" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1a631b6d55b498f2270411215ca166d1a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>bIsMutable</declname>
            <defname>bIsMutable</defname>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int Raven::glTFHelpers::GetIndexBuffer</definition>
        <argsstring>(const Raven::GLTF::SDocument &amp;model, int meshIdx, int primitiveIdx, int vertexStart, std::vector&lt; uint32 &gt; &amp;outBuffer)</argsstring>
        <name>GetIndexBuffer</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>meshIdx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>primitiveIdx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vertexStart</declname>
        </param>
        <param>
          <type>std::vector&lt; uint32 &gt; &amp;</type>
          <declname>outBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="88" column="12" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="88" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1abd8fe762d749d532927caf11b5f10441" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AABB</type>
        <definition>AABB Raven::glTFHelpers::GetPrimitiveBounds</definition>
        <argsstring>(const Raven::GLTF::SDocument &amp;doc, int meshIdx, int primitiveIdx)</argsstring>
        <name>GetPrimitiveBounds</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref> &amp;</type>
          <declname>doc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>meshIdx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>primitiveIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="132" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="132" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1a109d25009b8dc843a58e59e26170be7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>mat4</type>
        <definition>mat4 Raven::glTFHelpers::GetNodeTransform</definition>
        <argsstring>(const Raven::GLTF::SDocument &amp;document, int nodeIdx)</argsstring>
        <name>GetNodeTransform</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref> &amp;</type>
          <declname>document</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nodeIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="154" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="154" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1a63aa384bcf7665fe1661c6ee0269cff5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Raven::glTFHelpers::GetNodeLightId</definition>
        <argsstring>(const Raven::GLTF::SDocument &amp;model, int nodeIdx)</argsstring>
        <name>GetNodeLightId</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nodeIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="188" column="12" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="188" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1a8a0266f1ea07630cd137a58b3e76b651" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::glTFHelpers::WriteTransform</definition>
        <argsstring>(Raven::GLTF::SDocument &amp;document, int nodeIdx, const mat4 transform)</argsstring>
        <name>WriteTransform</name>
        <param>
          <type><ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref> &amp;</type>
          <declname>document</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nodeIdx</declname>
        </param>
        <param>
          <type>const mat4</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="205" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="205" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1a451202ee55e3adca1903026d10303a37" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Raven::glTFHelpers::GetAnimationSamplerInputCount</definition>
        <argsstring>(const Raven::GLTF::SAnimation::SSampler &amp;sampler, const Raven::GLTF::SDocument &amp;model)</argsstring>
        <name>GetAnimationSamplerInputCount</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_animation_1_1_s_sampler" kindref="compound">Raven::GLTF::SAnimation::SSampler</ref> &amp;</type>
          <declname>sampler</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="222" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="222" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1a3dc4f2b5bb47bf5efbf7e3f6f4fe16cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Raven::glTFHelpers::GetAnimationSamplerOutputCount</definition>
        <argsstring>(const Raven::GLTF::SAnimation::SSampler &amp;sampler, const Raven::GLTF::SDocument &amp;model)</argsstring>
        <name>GetAnimationSamplerOutputCount</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_animation_1_1_s_sampler" kindref="compound">Raven::GLTF::SAnimation::SSampler</ref> &amp;</type>
          <declname>sampler</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="230" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="230" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1a505740ce77f520a415d9b35bc5e89ce8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::glTFHelpers::GetAnimationSamplerBounds</definition>
        <argsstring>(const Raven::GLTF::SAnimation::SSampler &amp;sampler, const Raven::GLTF::SDocument &amp;model, float &amp;min, float &amp;max)</argsstring>
        <name>GetAnimationSamplerBounds</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_animation_1_1_s_sampler" kindref="compound">Raven::GLTF::SAnimation::SSampler</ref> &amp;</type>
          <declname>sampler</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="238" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="238" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1a0df39a189683438cb79b0302cedd98d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Raven::glTFHelpers::DecodeAnimationChannelValue</definition>
        <argsstring>(int8_t c)</argsstring>
        <name>DecodeAnimationChannelValue</name>
        <param>
          <type>int8_t</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="256" column="14" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="256" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1abccd9fa1fc96ff26c6926d6ca1f59dd6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Raven::glTFHelpers::DecodeAnimationChannelValue</definition>
        <argsstring>(uint8_t c)</argsstring>
        <name>DecodeAnimationChannelValue</name>
        <param>
          <type>uint8_t</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="260" column="14" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="260" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1a87bb260625213b497c140bedcb60c5cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Raven::glTFHelpers::DecodeAnimationChannelValue</definition>
        <argsstring>(int16_t c)</argsstring>
        <name>DecodeAnimationChannelValue</name>
        <param>
          <type>int16_t</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="264" column="14" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="264" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1a750ab7307c46affbc94a9c218a59b0c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Raven::glTFHelpers::DecodeAnimationChannelValue</definition>
        <argsstring>(uint16_t c)</argsstring>
        <name>DecodeAnimationChannelValue</name>
        <param>
          <type>uint16_t</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="268" column="14" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="268" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1aa22e94648fab4a26653e53f07c0e8b67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const uint8_t *</type>
        <definition>const uint8_t* Raven::glTFHelpers::GetBufferAddress</definition>
        <argsstring>(const int i, const Raven::GLTF::SAccessor &amp;accessor, const Raven::GLTF::SBufferView &amp;bufferViewObject, const Raven::GLTF::SBuffer &amp;buffer)</argsstring>
        <name>GetBufferAddress</name>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_accessor" kindref="compound">Raven::GLTF::SAccessor</ref> &amp;</type>
          <declname>accessor</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_buffer_view" kindref="compound">Raven::GLTF::SBufferView</ref> &amp;</type>
          <declname>bufferViewObject</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_buffer" kindref="compound">Raven::GLTF::SBuffer</ref> &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="273" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="273" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1a8273c05a50fe0183f2d08fde2823dd1f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::glTFHelpers::DecodeScalarAnimationValue</definition>
        <argsstring>(const size_t i, const Raven::GLTF::SAccessor &amp;accessor, const Raven::GLTF::SDocument &amp;model, float *scalar)</argsstring>
        <name>DecodeScalarAnimationValue</name>
        <param>
          <type>const size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_accessor" kindref="compound">Raven::GLTF::SAccessor</ref> &amp;</type>
          <declname>accessor</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="290" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="290" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1a04acc41b8e743210e1a217dc110ca817" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::glTFHelpers::DecodeTranslationAnimationValue</definition>
        <argsstring>(const size_t i, const Raven::GLTF::SAccessor &amp;accessor, const Raven::GLTF::SDocument &amp;model, float *xyz)</argsstring>
        <name>DecodeTranslationAnimationValue</name>
        <param>
          <type>const size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_accessor" kindref="compound">Raven::GLTF::SAccessor</ref> &amp;</type>
          <declname>accessor</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>xyz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="334" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="334" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1acfc9e9a70cc689e667446b027bc7ca2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::glTFHelpers::DecodeScaleAnimationValue</definition>
        <argsstring>(const size_t i, const Raven::GLTF::SAccessor &amp;accessor, const Raven::GLTF::SDocument &amp;model, float *xyz)</argsstring>
        <name>DecodeScaleAnimationValue</name>
        <param>
          <type>const size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_accessor" kindref="compound">Raven::GLTF::SAccessor</ref> &amp;</type>
          <declname>accessor</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>xyz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="363" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="363" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="_gltf_helpers_8hpp_1acdabe0fa6fa5b80415fb1f90bd6996ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::glTFHelpers::DecodeRotationAnimationValue</definition>
        <argsstring>(const size_t i, const Raven::GLTF::SAccessor &amp;accessor, const Raven::GLTF::SDocument &amp;model, float *xyzw)</argsstring>
        <name>DecodeRotationAnimationValue</name>
        <param>
          <type>const size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_accessor" kindref="compound">Raven::GLTF::SAccessor</ref> &amp;</type>
          <declname>accessor</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">Raven::GLTF::SDocument</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>xyzw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="393" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" bodystart="393" bodyend="458"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenGLTF/GltfHelpers.hpp" line="6" column="1"/>
  </compounddef>
</doxygen>

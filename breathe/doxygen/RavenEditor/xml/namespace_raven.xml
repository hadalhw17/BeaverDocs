<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespace_raven" kind="namespace" language="C++">
    <compoundname>Raven</compoundname>
    <innerclass refid="class_raven_1_1_c_editor_camera_controller" prot="public">Raven::CEditorCameraController</innerclass>
    <innerclass refid="class_raven_1_1_c_prefab_editor" prot="public">Raven::CPrefabEditor</innerclass>
    <innerclass refid="class_raven_1_1_c_material_editor" prot="public">Raven::CMaterialEditor</innerclass>
    <innerclass refid="struct_raven_1_1_s_editor_viewport_event" prot="public">Raven::SEditorViewportEvent</innerclass>
    <innerclass refid="struct_raven_1_1_s_viewport_resize_event" prot="public">Raven::SViewportResizeEvent</innerclass>
    <innerclass refid="struct_raven_1_1_s_viewport_focused_event" prot="public">Raven::SViewportFocusedEvent</innerclass>
    <innerclass refid="struct_raven_1_1_s_viewport_repaint_event" prot="public">Raven::SViewportRepaintEvent</innerclass>
    <innerclass refid="class_raven_1_1_i_viewport" prot="public">Raven::IViewport</innerclass>
    <innerclass refid="class_raven_1_1_c_render_viewport" prot="public">Raven::CRenderViewport</innerclass>
    <innerclass refid="struct_raven_1_1_s_selection_context" prot="public">Raven::SSelectionContext</innerclass>
    <innerclass refid="struct_raven_1_1_level_editor_plugin" prot="public">Raven::LevelEditorPlugin</innerclass>
    <innerclass refid="class_raven_1_1_c_level_editor" prot="public">Raven::CLevelEditor</innerclass>
    <innerclass refid="class_raven_1_1_c_undo_stack" prot="public">Raven::CUndoStack</innerclass>
    <innerclass refid="class_raven_1_1_c_project" prot="public">Raven::CProject</innerclass>
    <innerclass refid="class_raven_1_1_c_prefab" prot="public">Raven::CPrefab</innerclass>
    <innerclass refid="class_raven_1_1_c_prefab_loader" prot="public">Raven::CPrefabLoader</innerclass>
    <innerclass refid="class_raven_1_1_c_asset_browser" prot="public">Raven::CAssetBrowser</innerclass>
    <innerclass refid="class_raven_1_1_c_resource_import_panel" prot="public">Raven::CResourceImportPanel</innerclass>
    <innerclass refid="struct_raven_1_1_s_component_modified_command" prot="public">Raven::SComponentModifiedCommand</innerclass>
    <innerclass refid="struct_raven_1_1_s_component_add_command" prot="public">Raven::SComponentAddCommand</innerclass>
    <innerclass refid="struct_raven_1_1_s_component_remove_command" prot="public">Raven::SComponentRemoveCommand</innerclass>
    <innerclass refid="struct_raven_1_1_s_scene_panel" prot="public">Raven::SScenePanel</innerclass>
    <innerclass refid="struct_raven_1_1_editor_console_plugin" prot="public">Raven::EditorConsolePlugin</innerclass>
    <innerclass refid="class_raven_1_1_c_console" prot="public">Raven::CConsole</innerclass>
    <innerclass refid="struct_raven_1_1_s_general_editing_commands" prot="public">Raven::SGeneralEditingCommands</innerclass>
    <innerclass refid="struct_raven_1_1_editor_viewport_plugin" prot="public">Raven::EditorViewportPlugin</innerclass>
    <innerclass refid="class_raven_1_1_c_editor_viewport_consumer" prot="public">Raven::CEditorViewportConsumer</innerclass>
    <innerclass refid="struct_raven_1_1_s_level_editor_popup" prot="public">Raven::SLevelEditorPopup</innerclass>
    <innerclass refid="class_raven_1_1_c_editor_viewport" prot="public">Raven::CEditorViewport</innerclass>
    <innerclass refid="struct_raven_1_1_s_editor_viewport_commands" prot="public">Raven::SEditorViewportCommands</innerclass>
    <innerclass refid="struct_raven_1_1_s_u_i_action" prot="public">Raven::SUIAction</innerclass>
    <innerclass refid="struct_raven_1_1_s_hot_key_comb" prot="public">Raven::SHotKeyComb</innerclass>
    <innerclass refid="class_raven_1_1_c_u_i_command_desc" prot="public">Raven::CUICommandDesc</innerclass>
    <innerclass refid="class_raven_1_1_c_u_i_command_list" prot="public">Raven::CUICommandList</innerclass>
    <innerclass refid="class_raven_1_1_t_commands" prot="public">Raven::TCommands</innerclass>
    <innernamespace refid="namespace_raven_1_1_asset_browser">Raven::AssetBrowser</innernamespace>
    <innernamespace refid="namespace_raven_1_1_detail">Raven::Detail</innernamespace>
    <innernamespace refid="namespace_raven_1_1_event">Raven::Event</innernamespace>
    <innernamespace refid="namespace_raven_1_1_project">Raven::Project</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_level_editor_8hpp_1a67b0287113e4946ada8914827435339e" prot="public" static="no">
        <type>std::vector&lt; class <ref refid="class_raven_1_1_c_level_editor" kindref="compound">CLevelEditor</ref> * &gt;</type>
        <definition>using Raven::CLevelEditors = typedef std::vector&lt;class CLevelEditor*&gt;</definition>
        <argsstring></argsstring>
        <name>CLevelEditors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/LevelEditor.hpp" line="42" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/LevelEditor.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_editor_viewport_consumer_8hpp_1a35473ebd5e4c6328bf7356adbe37869c" prot="public" static="no">
        <type>std::vector&lt; class <ref refid="class_raven_1_1_c_editor_viewport_consumer" kindref="compound">CEditorViewportConsumer</ref> * &gt;</type>
        <definition>using Raven::TViewportConsumers = typedef std::vector&lt;class CEditorViewportConsumer*&gt;</definition>
        <argsstring></argsstring>
        <name>TViewportConsumers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/Core/EditorViewportConsumer.hpp" line="19" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/Core/EditorViewportConsumer.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_editor_viewport_consumer_8hpp_1a4f08ae186aadce5f84674d2a152f64eb" prot="public" static="no">
        <type>TInvokable&lt; void(CWorld *, const char *)&gt;</type>
        <definition>using Raven::TResourceDropAction = typedef TInvokable&lt;void(CWorld*, const char*)&gt;</definition>
        <argsstring></argsstring>
        <name>TResourceDropAction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/Core/EditorViewportConsumer.hpp" line="21" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/Core/EditorViewportConsumer.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_editor_viewport_8hpp_1abc0241b0e39e7c9ce132ffc2cc55b694" prot="public" static="no">
        <type>TInvokable&lt; std::string()&gt;</type>
        <definition>using Raven::TGetActiveNameAction = typedef TInvokable&lt;std::string()&gt;</definition>
        <argsstring></argsstring>
        <name>TGetActiveNameAction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/Core/EditorViewport.hpp" line="13" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/Core/EditorViewport.hpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_u_i_action_8hpp_1ad1041860f206a7d8eb6bf47e40d4a821" prot="public" static="no">
        <type>TInvokable&lt; void()&gt;</type>
        <definition>using Raven::TExecuteAction = typedef TInvokable&lt;void()&gt;</definition>
        <argsstring></argsstring>
        <name>TExecuteAction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/Core/UIAction.hpp" line="5" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/Core/UIAction.hpp" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_u_i_action_8hpp_1a051c6fde743e9725f345cbdfa4ccb135" prot="public" static="no">
        <type>TInvokable&lt; bool()&gt;</type>
        <definition>using Raven::TCanExecuteAction = typedef TInvokable&lt;bool()&gt;</definition>
        <argsstring></argsstring>
        <name>TCanExecuteAction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/Core/UIAction.hpp" line="6" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/Core/UIAction.hpp" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_u_i_action_8hpp_1acf584da763b6f1ea7e26b7dea65a8e9d" prot="public" static="no">
        <type>TInvokable&lt; bool()&gt;</type>
        <definition>using Raven::TIsCheckedAction = typedef TInvokable&lt;bool()&gt;</definition>
        <argsstring></argsstring>
        <name>TIsCheckedAction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/Core/UIAction.hpp" line="7" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/Core/UIAction.hpp" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_u_i_action_8hpp_1a6c2aa57b9529ede969227de0c1337f75" prot="public" static="no">
        <type>TInvokable&lt; bool()&gt;</type>
        <definition>using Raven::TVisibleAction = typedef TInvokable&lt;bool()&gt;</definition>
        <argsstring></argsstring>
        <name>TVisibleAction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/Core/UIAction.hpp" line="8" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/Core/UIAction.hpp" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_u_i_command_8hpp_1a563c6724981f26099975709229d6c544" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="class_raven_1_1_c_u_i_command_desc" kindref="compound">CUICommandDesc</ref> &gt;</type>
        <definition>using Raven::CUICommandDescPtr = typedef std::shared_ptr&lt;CUICommandDesc&gt;</definition>
        <argsstring></argsstring>
        <name>CUICommandDescPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/Core/UICommand.hpp" line="63" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/Core/UICommand.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_component_property_editor_8hpp_1a2edc8a634ff3ae1dee296e2ec0e070c9" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static ImGuiTreeNodeFlags</type>
        <definition>constexpr static ImGuiTreeNodeFlags Raven::kPropertyEditorHeaderFlags</definition>
        <argsstring></argsstring>
        <name>kPropertyEditorHeaderFlags</name>
        <initializer>= ImGuiTreeNodeFlags_OpenOnArrow
		| ImGuiTreeNodeFlags_SpanAvailWidth
		| ImGuiTreeNodeFlags_AllowItemOverlap
		| ImGuiTreeNodeFlags_CollapsingHeader</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/Panels/ComponentPropertyEditor.hpp" line="89" column="37" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/Panels/ComponentPropertyEditor.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_component_property_editor_8hpp_1a977ce0f91fa2a2c3e5e3eb2fa0667543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UIFun</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Raven::DrawComponent</definition>
        <argsstring>(CEntity ent, const IComponentBind &amp;bind, UIFun function)</argsstring>
        <name>DrawComponent</name>
        <param>
          <type>CEntity</type>
          <declname>ent</declname>
        </param>
        <param>
          <type>const IComponentBind &amp;</type>
          <declname>bind</declname>
        </param>
        <param>
          <type>UIFun</type>
          <declname>function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/Panels/ComponentPropertyEditor.hpp" line="96" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/Panels/ComponentPropertyEditor.hpp" bodystart="96" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="_component_property_editor_8hpp_1acc3a89ba5d646a3a63b10e3a1f14334e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ComponentType</type>
          </param>
          <param>
            <type>bool</type>
            <declname>Deletable</declname>
            <defname>Deletable</defname>
            <defval>true</defval>
          </param>
          <param>
            <type>bool</type>
            <declname>OpenByDefault</declname>
            <defname>OpenByDefault</defname>
            <defval>false</defval>
          </param>
          <param>
            <type>typename UIFun</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Raven::DrawComponent</definition>
        <argsstring>(const std::string &amp;name, CEntity ent, UIFun function)</argsstring>
        <name>DrawComponent</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>CEntity</type>
          <declname>ent</declname>
        </param>
        <param>
          <type>UIFun</type>
          <declname>function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/Panels/ComponentPropertyEditor.hpp" line="129" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/Panels/ComponentPropertyEditor.hpp" bodystart="129" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="_component_property_editor_8hpp_1a4ad7a6d587fcb62432bf8857313c0ca6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ComponentType</type>
          </param>
          <param>
            <type>bool</type>
            <declname>RequiresTransform</declname>
            <defname>RequiresTransform</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Raven::DefaultAddFn</definition>
        <argsstring>(CEntity ent)</argsstring>
        <name>DefaultAddFn</name>
        <param>
          <type>CEntity</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/Panels/ComponentPropertyEditor.hpp" line="163" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/Panels/ComponentPropertyEditor.hpp" bodystart="163" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="_component_property_editor_8hpp_1a3143e0ebb4246d2ba80024c38fd4420f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ComponentType</type>
          </param>
          <param>
            <type>bool</type>
            <declname>RequiresTransform</declname>
            <defname>RequiresTransform</defname>
            <defval>true</defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Raven::AddComponent</definition>
        <argsstring>(const std::string name, CEntity ent)</argsstring>
        <name>AddComponent</name>
        <param>
          <type>const std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>CEntity</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/Panels/ComponentPropertyEditor.hpp" line="185" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/Panels/ComponentPropertyEditor.hpp" bodystart="185" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="_component_property_editor_8hpp_1a5b0215354cdc2ef8b5fc1961a0d03d26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ComponentType</type>
          </param>
          <param>
            <type>bool</type>
            <declname>RequiresTransform</declname>
            <defname>RequiresTransform</defname>
            <defval>true</defval>
          </param>
          <param>
            <type>typename SelectFn</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Raven::AddComponent</definition>
        <argsstring>(const std::string name, CEntity ent, SelectFn onSelect)</argsstring>
        <name>AddComponent</name>
        <param>
          <type>const std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>CEntity</type>
          <declname>ent</declname>
        </param>
        <param>
          <type>SelectFn</type>
          <declname>onSelect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/Panels/ComponentPropertyEditor.hpp" line="199" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/Panels/ComponentPropertyEditor.hpp" bodystart="199" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="_component_property_editor_8hpp_1a6cc6cf246673776f879837ba1e1c5aeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::EntityPropertyPannel</definition>
        <argsstring>(SSelectionContext &amp;ctx, const CEntity camEntity)</argsstring>
        <name>EntityPropertyPannel</name>
        <param>
          <type><ref refid="struct_raven_1_1_s_selection_context" kindref="compound">SSelectionContext</ref> &amp;</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const CEntity</type>
          <declname>camEntity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/Panels/ComponentPropertyEditor.hpp" line="218" column="13" declfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/Panels/ComponentPropertyEditor.hpp" declline="218" declcolumn="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenEditor/EditorCamera.hpp" line="5" column="1"/>
  </compounddef>
</doxygen>

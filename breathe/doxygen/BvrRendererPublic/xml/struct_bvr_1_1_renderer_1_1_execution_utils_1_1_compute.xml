<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="struct_bvr_1_1_renderer_1_1_execution_utils_1_1_compute" kind="struct" language="C++" prot="public">
    <compoundname>Bvr::Renderer::ExecutionUtils::Compute</compoundname>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_execution_utils_1_1_compute_1af6e45cfa508562df3cf89a336c5fac81" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExtraFn</type>
            <defval><ref refid="struct_bvr_1_1_renderer_1_1_no_op" kindref="compound">NoOp</ref></defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void Bvr::Renderer::ExecutionUtils::Compute::Dispatch</definition>
        <argsstring>(CCommandList *pCmd, const CFGNode &amp;node, const CShader *pShader, const CFrameContext &amp;ctx, const uint3 dispatchSize, const ExtraFn &amp;extraFn={})</argsstring>
        <name>Dispatch</name>
        <qualifiedname>Bvr::Renderer::ExecutionUtils::Compute::Dispatch</qualifiedname>
        <param>
          <type>CCommandList *</type>
          <declname>pCmd</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const CShader *</type>
          <declname>pShader</declname>
        </param>
        <param>
          <type>const CFrameContext &amp;</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const uint3</type>
          <declname>dispatchSize</declname>
        </param>
        <param>
          <type>const ExtraFn &amp;</type>
          <declname>extraFn</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderPassScheduler.hpp" line="168" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderPassScheduler.hpp" bodystart="168" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_execution_utils_1_1_compute_1ae266bb44b9a18af5835074ccd0fdc1d9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExtraFn</type>
            <defval><ref refid="struct_bvr_1_1_renderer_1_1_no_op" kindref="compound">NoOp</ref></defval>
          </param>
        </templateparamlist>
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>static CFGNode &amp; Bvr::Renderer::ExecutionUtils::Compute::Dispatch</definition>
        <argsstring>(CRenderPassScheduler &amp;scheduler, std::string_view name, const STechniqueDesc &amp;tech, const uint3 dispatchSize, const ExtraFn &amp;extraFn={})</argsstring>
        <name>Dispatch</name>
        <qualifiedname>Bvr::Renderer::ExecutionUtils::Compute::Dispatch</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_renderer_1_1_c_render_pass_scheduler" kindref="compound">CRenderPassScheduler</ref> &amp;</type>
          <declname>scheduler</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_renderer_1_1_s_technique_desc" kindref="compound">STechniqueDesc</ref> &amp;</type>
          <declname>tech</declname>
        </param>
        <param>
          <type>const uint3</type>
          <declname>dispatchSize</declname>
        </param>
        <param>
          <type>const ExtraFn &amp;</type>
          <declname>extraFn</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderPassScheduler.hpp" line="180" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderPassScheduler.hpp" bodystart="180" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_execution_utils_1_1_compute_1afcaf23b444c99310ebbf067de160f9b1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExtraFn</type>
            <defval><ref refid="struct_bvr_1_1_renderer_1_1_no_op" kindref="compound">NoOp</ref></defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void Bvr::Renderer::ExecutionUtils::Compute::DispatchIndirect</definition>
        <argsstring>(CCommandList *pCmd, const CFGNode &amp;node, const CShader *pShader, const CFrameContext &amp;ctx, uint64 indirectOffset, const ExtraFn &amp;extraFn={})</argsstring>
        <name>DispatchIndirect</name>
        <qualifiedname>Bvr::Renderer::ExecutionUtils::Compute::DispatchIndirect</qualifiedname>
        <param>
          <type>CCommandList *</type>
          <declname>pCmd</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const CShader *</type>
          <declname>pShader</declname>
        </param>
        <param>
          <type>const CFrameContext &amp;</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>uint64</type>
          <declname>indirectOffset</declname>
        </param>
        <param>
          <type>const ExtraFn &amp;</type>
          <declname>extraFn</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderPassScheduler.hpp" line="195" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderPassScheduler.hpp" bodystart="195" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_execution_utils_1_1_compute_1a0e7d7277885195970c3eed26da93e407" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExtraFn</type>
            <defval><ref refid="struct_bvr_1_1_renderer_1_1_no_op" kindref="compound">NoOp</ref></defval>
          </param>
        </templateparamlist>
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>static CFGNode &amp; Bvr::Renderer::ExecutionUtils::Compute::DispatchIndirect</definition>
        <argsstring>(CRenderPassScheduler &amp;scheduler, std::string_view name, const STechniqueDesc &amp;tech, const uint64 indirectOffset, const ExtraFn &amp;extraFn={})</argsstring>
        <name>DispatchIndirect</name>
        <qualifiedname>Bvr::Renderer::ExecutionUtils::Compute::DispatchIndirect</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_renderer_1_1_c_render_pass_scheduler" kindref="compound">CRenderPassScheduler</ref> &amp;</type>
          <declname>scheduler</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_renderer_1_1_s_technique_desc" kindref="compound">STechniqueDesc</ref> &amp;</type>
          <declname>tech</declname>
        </param>
        <param>
          <type>const uint64</type>
          <declname>indirectOffset</declname>
        </param>
        <param>
          <type>const ExtraFn &amp;</type>
          <declname>extraFn</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderPassScheduler.hpp" line="209" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderPassScheduler.hpp" bodystart="209" bodyend="223"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderPassScheduler.hpp" line="166" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderPassScheduler.hpp" bodystart="166" bodyend="224"/>
    <listofallmembers>
      <member refid="struct_bvr_1_1_renderer_1_1_execution_utils_1_1_compute_1af6e45cfa508562df3cf89a336c5fac81" prot="public" virt="non-virtual"><scope>Bvr::Renderer::ExecutionUtils::Compute</scope><name>Dispatch</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_execution_utils_1_1_compute_1ae266bb44b9a18af5835074ccd0fdc1d9" prot="public" virt="non-virtual"><scope>Bvr::Renderer::ExecutionUtils::Compute</scope><name>Dispatch</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_execution_utils_1_1_compute_1afcaf23b444c99310ebbf067de160f9b1" prot="public" virt="non-virtual"><scope>Bvr::Renderer::ExecutionUtils::Compute</scope><name>DispatchIndirect</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_execution_utils_1_1_compute_1a0e7d7277885195970c3eed26da93e407" prot="public" virt="non-virtual"><scope>Bvr::Renderer::ExecutionUtils::Compute</scope><name>DispatchIndirect</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

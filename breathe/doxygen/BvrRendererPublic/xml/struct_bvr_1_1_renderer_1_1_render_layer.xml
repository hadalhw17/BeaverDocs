<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="struct_bvr_1_1_renderer_1_1_render_layer" kind="struct" language="C++" prot="public">
    <compoundname>Bvr::Renderer::RenderLayer</compoundname>
    <includes refid="_render_output_8hpp" local="no">RenderOutput.hpp</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_bvr_1_1_renderer_1_1_render_layer_1aab45ad2c043ceb3162dba2d7fb704ef5" prot="public" static="no" mutable="no">
        <type>uint32</type>
        <definition>uint32 Bvr::Renderer::RenderLayer::Mask</definition>
        <argsstring></argsstring>
        <name>Mask</name>
        <qualifiedname>Bvr::Renderer::RenderLayer::Mask</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" line="162" column="12" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" bodystart="162" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_render_layer_1a4f2b63bec36d14ff8674d395b7520ac8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_renderer_1_1_render_layer" kindref="compound">RenderLayer</ref></type>
        <definition>static RenderLayer Bvr::Renderer::RenderLayer::Default</definition>
        <argsstring>()</argsstring>
        <name>Default</name>
        <qualifiedname>Bvr::Renderer::RenderLayer::Default</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a component that is not visible anywhere <simplesect kind="return"><para><ref refid="struct_bvr_1_1_renderer_1_1_render_layer" kindref="compound">RenderLayer</ref> component that is not visible anywhere </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" line="23" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" bodystart="23" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_render_layer_1ac9be913baec201dc4f651519ccad2e80" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_renderer_1_1_render_layer" kindref="compound">RenderLayer</ref></type>
        <definition>static RenderLayer Bvr::Renderer::RenderLayer::All</definition>
        <argsstring>()</argsstring>
        <name>All</name>
        <qualifiedname>Bvr::Renderer::RenderLayer::All</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create component that is visible on all layers <simplesect kind="return"><para><ref refid="struct_bvr_1_1_renderer_1_1_render_layer" kindref="compound">RenderLayer</ref> component that is visible on all layers </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" line="27" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" bodystart="27" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_render_layer_1a39ca4ce94989cc4fca127bc832e797c0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_renderer_1_1_render_layer" kindref="compound">RenderLayer</ref></type>
        <definition>static RenderLayer Bvr::Renderer::RenderLayer::FromLayer</definition>
        <argsstring>(uint32 layer)</argsstring>
        <name>FromLayer</name>
        <qualifiedname>Bvr::Renderer::RenderLayer::FromLayer</qualifiedname>
        <param>
          <type>uint32</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create component that is visible on a single layer <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>layer</parametername>
</parameternamelist>
<parameterdescription>
<para>Layer to be visible on </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_bvr_1_1_renderer_1_1_render_layer" kindref="compound">RenderLayer</ref> component that is visible on a single layer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" line="34" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" bodystart="34" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_render_layer_1afafb2448d0a3c900caf158f541b41f14" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_renderer_1_1_render_layer" kindref="compound">RenderLayer</ref></type>
        <definition>static RenderLayer Bvr::Renderer::RenderLayer::FromLayers</definition>
        <argsstring>(Span&lt; uint32 const &gt; layers)</argsstring>
        <name>FromLayers</name>
        <qualifiedname>Bvr::Renderer::RenderLayer::FromLayers</qualifiedname>
        <param>
          <type>Span&lt; uint32 const &gt;</type>
          <declname>layers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create component that is visible on multiple layers <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>layers</parametername>
</parameternamelist>
<parameterdescription>
<para>Layers to be visible on </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_bvr_1_1_renderer_1_1_render_layer" kindref="compound">RenderLayer</ref> component that is visible on multiple layers </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" line="43" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" bodystart="43" bodyend="47"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_render_layer_1a8edfc0dae6099894469d2878dd7f42f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_renderer_1_1_render_layer" kindref="compound">RenderLayer</ref> &amp;</type>
        <definition>RenderLayer &amp; Bvr::Renderer::RenderLayer::SetLayer</definition>
        <argsstring>(uint32 layer)</argsstring>
        <name>SetLayer</name>
        <qualifiedname>Bvr::Renderer::RenderLayer::SetLayer</qualifiedname>
        <param>
          <type>uint32</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set to render only on a specific layer <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>layer</parametername>
</parameternamelist>
<parameterdescription>
<para>Layer to render on </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Modified self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" line="52" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_render_layer_1ab2f575bfaf7332df20594ec72dfa3249" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_renderer_1_1_render_layer" kindref="compound">RenderLayer</ref> &amp;</type>
        <definition>RenderLayer &amp; Bvr::Renderer::RenderLayer::AddLayer</definition>
        <argsstring>(uint32 layer)</argsstring>
        <name>AddLayer</name>
        <qualifiedname>Bvr::Renderer::RenderLayer::AddLayer</qualifiedname>
        <param>
          <type>uint32</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add entity to a layer <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>layer</parametername>
</parameternamelist>
<parameterdescription>
<para>Layer to add entity to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Modified self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" line="60" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_render_layer_1afeee686eef45e9f29f71c8424cadc939" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_renderer_1_1_render_layer" kindref="compound">RenderLayer</ref> &amp;</type>
        <definition>RenderLayer &amp; Bvr::Renderer::RenderLayer::RemoveLayer</definition>
        <argsstring>(uint32 layer)</argsstring>
        <name>RemoveLayer</name>
        <qualifiedname>Bvr::Renderer::RenderLayer::RemoveLayer</qualifiedname>
        <param>
          <type>uint32</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove entity from a layer <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>layer</parametername>
</parameternamelist>
<parameterdescription>
<para>Layer to remove entity from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Modified self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" line="68" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_render_layer_1af8afb83603909489880717fc75b7cb2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_renderer_1_1_render_layer" kindref="compound">RenderLayer</ref> &amp;</type>
        <definition>RenderLayer &amp; Bvr::Renderer::RenderLayer::AddLayers</definition>
        <argsstring>(Span&lt; uint32 const &gt; layers)</argsstring>
        <name>AddLayers</name>
        <qualifiedname>Bvr::Renderer::RenderLayer::AddLayers</qualifiedname>
        <param>
          <type>Span&lt; uint32 const &gt;</type>
          <declname>layers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add entity to multiple layers <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>layers</parametername>
</parameternamelist>
<parameterdescription>
<para>Layers to add entity to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" line="75" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" bodystart="75" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_render_layer_1a10ea3fa53b870631d3ede969f2f306f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_renderer_1_1_render_layer" kindref="compound">RenderLayer</ref> &amp;</type>
        <definition>RenderLayer &amp; Bvr::Renderer::RenderLayer::RemoveLayers</definition>
        <argsstring>(Span&lt; uint32 const &gt; layers)</argsstring>
        <name>RemoveLayers</name>
        <qualifiedname>Bvr::Renderer::RenderLayer::RemoveLayers</qualifiedname>
        <param>
          <type>Span&lt; uint32 const &gt;</type>
          <declname>layers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove entity from multiple layers <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>layers</parametername>
</parameternamelist>
<parameterdescription>
<para>Layers to remove entity from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Modified self </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" line="84" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" bodystart="84" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_render_layer_1a647c9ab59686695ea3175d4a15ebbafd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::Renderer::RenderLayer::HasLayer</definition>
        <argsstring>(uint32 layer) const</argsstring>
        <name>HasLayer</name>
        <qualifiedname>Bvr::Renderer::RenderLayer::HasLayer</qualifiedname>
        <param>
          <type>uint32</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check weather is present on a specific layer <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>layer</parametername>
</parameternamelist>
<parameterdescription>
<para>Layer to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if entity is present on the layer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" line="93" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_render_layer_1a93b0f0aa2df8c75bf9b808b4c6db7581" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::Renderer::RenderLayer::HasAny</definition>
        <argsstring>(const RenderLayer layer) const</argsstring>
        <name>HasAny</name>
        <qualifiedname>Bvr::Renderer::RenderLayer::HasAny</qualifiedname>
        <param>
          <type>const <ref refid="struct_bvr_1_1_renderer_1_1_render_layer" kindref="compound">RenderLayer</ref></type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check weather is present on any of the layers <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>layer</parametername>
</parameternamelist>
<parameterdescription>
<para>Layers to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if entity is present on any of the layers </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" line="100" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_render_layer_1a0dbef04de7d76e241bdf7302aca5bca3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::Renderer::RenderLayer::HasAll</definition>
        <argsstring>(const RenderLayer layer) const</argsstring>
        <name>HasAll</name>
        <qualifiedname>Bvr::Renderer::RenderLayer::HasAll</qualifiedname>
        <param>
          <type>const <ref refid="struct_bvr_1_1_renderer_1_1_render_layer" kindref="compound">RenderLayer</ref></type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check weather is present on all of the layers <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>layer</parametername>
</parameternamelist>
<parameterdescription>
<para>Layers to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if entity is present on all of the layers </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" line="107" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" bodystart="107" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_render_layer_1a0f6e716f10238771e1354e0b4677361d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::Renderer::RenderLayer::HasAny</definition>
        <argsstring>(Span&lt; uint32 const &gt; layers) const</argsstring>
        <name>HasAny</name>
        <qualifiedname>Bvr::Renderer::RenderLayer::HasAny</qualifiedname>
        <param>
          <type>Span&lt; uint32 const &gt;</type>
          <declname>layers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check weather is present on any of the layers <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>layers</parametername>
</parameternamelist>
<parameterdescription>
<para>Layers to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if entity is present on any of the layers </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" line="114" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" bodystart="114" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_render_layer_1a6abc31df7934a2ad79b8c5e4ca03a050" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::Renderer::RenderLayer::HasAll</definition>
        <argsstring>(Span&lt; uint32 const &gt; layers) const</argsstring>
        <name>HasAll</name>
        <qualifiedname>Bvr::Renderer::RenderLayer::HasAll</qualifiedname>
        <param>
          <type>Span&lt; uint32 const &gt;</type>
          <declname>layers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check weather is present on all of the layers <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>layers</parametername>
</parameternamelist>
<parameterdescription>
<para>Layers to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if entity is present on all of the layers </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" line="124" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" bodystart="124" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_render_layer_1a66a76ecd6aa0cb959dae87475017e19e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::Renderer::RenderLayer::IsVisible</definition>
        <argsstring>() const</argsstring>
        <name>IsVisible</name>
        <qualifiedname>Bvr::Renderer::RenderLayer::IsVisible</qualifiedname>
        <briefdescription>
<para>Check weather entity is visible anywhere. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" line="132" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_render_layer_1a8fd5b0593f9f0a57a3e4dc0f6e0ab338" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::Renderer::RenderLayer::operator==</definition>
        <argsstring>(const RenderLayer &amp;other) const</argsstring>
        <name>operator==</name>
        <qualifiedname>Bvr::Renderer::RenderLayer::operator==</qualifiedname>
        <param>
          <type>const <ref refid="struct_bvr_1_1_renderer_1_1_render_layer" kindref="compound">RenderLayer</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" line="135" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" bodystart="135" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_render_layer_1a2529cb93392cd177b11895a4a07b3916" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::Renderer::RenderLayer::operator!=</definition>
        <argsstring>(const RenderLayer &amp;other) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>Bvr::Renderer::RenderLayer::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="struct_bvr_1_1_renderer_1_1_render_layer" kindref="compound">RenderLayer</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" line="139" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" bodystart="139" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_render_layer_1ae4fbe7921112f112dbf5d2c661edb492" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_renderer_1_1_render_layer" kindref="compound">RenderLayer</ref> &amp;</type>
        <definition>RenderLayer &amp; Bvr::Renderer::RenderLayer::operator|=</definition>
        <argsstring>(const RenderLayer &amp;other)</argsstring>
        <name>operator|=</name>
        <qualifiedname>Bvr::Renderer::RenderLayer::operator|=</qualifiedname>
        <param>
          <type>const <ref refid="struct_bvr_1_1_renderer_1_1_render_layer" kindref="compound">RenderLayer</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" line="143" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_render_layer_1ae233468d4fa461f2ab638b721037616b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_renderer_1_1_render_layer" kindref="compound">RenderLayer</ref> &amp;</type>
        <definition>RenderLayer &amp; Bvr::Renderer::RenderLayer::operator&amp;=</definition>
        <argsstring>(const RenderLayer &amp;other)</argsstring>
        <name>operator&amp;=</name>
        <qualifiedname>Bvr::Renderer::RenderLayer::operator&amp;=</qualifiedname>
        <param>
          <type>const <ref refid="struct_bvr_1_1_renderer_1_1_render_layer" kindref="compound">RenderLayer</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" line="148" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" bodystart="148" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_render_layer_1a3e834928ba973e49b546e7e6d917a1cb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_renderer_1_1_render_layer" kindref="compound">RenderLayer</ref></type>
        <definition>RenderLayer Bvr::Renderer::RenderLayer::operator|</definition>
        <argsstring>(const RenderLayer &amp;other) const</argsstring>
        <name>operator|</name>
        <qualifiedname>Bvr::Renderer::RenderLayer::operator|</qualifiedname>
        <param>
          <type>const <ref refid="struct_bvr_1_1_renderer_1_1_render_layer" kindref="compound">RenderLayer</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" line="153" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" bodystart="153" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_render_layer_1a596ebb6fa12fd9979db196713eea891e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_renderer_1_1_render_layer" kindref="compound">RenderLayer</ref></type>
        <definition>RenderLayer Bvr::Renderer::RenderLayer::operator&amp;</definition>
        <argsstring>(const RenderLayer &amp;other) const</argsstring>
        <name>operator&amp;</name>
        <qualifiedname>Bvr::Renderer::RenderLayer::operator&amp;</qualifiedname>
        <param>
          <type>const <ref refid="struct_bvr_1_1_renderer_1_1_render_layer" kindref="compound">RenderLayer</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" line="157" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" bodystart="157" bodyend="159"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A component representing entity render layers. An entity that doesn&apos;t have <ref refid="struct_bvr_1_1_renderer_1_1_render_layer" kindref="compound">RenderLayer</ref> assigned will be rendered In all layers. A camera with no render layers will render all layers. A camera that has render layers will only render entities present in those layers. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" line="19" column="1" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderOutput.hpp" bodystart="19" bodyend="163"/>
    <listofallmembers>
      <member refid="struct_bvr_1_1_renderer_1_1_render_layer_1ab2f575bfaf7332df20594ec72dfa3249" prot="public" virt="non-virtual"><scope>Bvr::Renderer::RenderLayer</scope><name>AddLayer</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_render_layer_1af8afb83603909489880717fc75b7cb2d" prot="public" virt="non-virtual"><scope>Bvr::Renderer::RenderLayer</scope><name>AddLayers</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_render_layer_1ac9be913baec201dc4f651519ccad2e80" prot="public" virt="non-virtual"><scope>Bvr::Renderer::RenderLayer</scope><name>All</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_render_layer_1a4f2b63bec36d14ff8674d395b7520ac8" prot="public" virt="non-virtual"><scope>Bvr::Renderer::RenderLayer</scope><name>Default</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_render_layer_1a39ca4ce94989cc4fca127bc832e797c0" prot="public" virt="non-virtual"><scope>Bvr::Renderer::RenderLayer</scope><name>FromLayer</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_render_layer_1afafb2448d0a3c900caf158f541b41f14" prot="public" virt="non-virtual"><scope>Bvr::Renderer::RenderLayer</scope><name>FromLayers</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_render_layer_1a0dbef04de7d76e241bdf7302aca5bca3" prot="public" virt="non-virtual"><scope>Bvr::Renderer::RenderLayer</scope><name>HasAll</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_render_layer_1a6abc31df7934a2ad79b8c5e4ca03a050" prot="public" virt="non-virtual"><scope>Bvr::Renderer::RenderLayer</scope><name>HasAll</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_render_layer_1a93b0f0aa2df8c75bf9b808b4c6db7581" prot="public" virt="non-virtual"><scope>Bvr::Renderer::RenderLayer</scope><name>HasAny</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_render_layer_1a0f6e716f10238771e1354e0b4677361d" prot="public" virt="non-virtual"><scope>Bvr::Renderer::RenderLayer</scope><name>HasAny</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_render_layer_1a647c9ab59686695ea3175d4a15ebbafd" prot="public" virt="non-virtual"><scope>Bvr::Renderer::RenderLayer</scope><name>HasLayer</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_render_layer_1a66a76ecd6aa0cb959dae87475017e19e" prot="public" virt="non-virtual"><scope>Bvr::Renderer::RenderLayer</scope><name>IsVisible</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_render_layer_1aab45ad2c043ceb3162dba2d7fb704ef5" prot="public" virt="non-virtual"><scope>Bvr::Renderer::RenderLayer</scope><name>Mask</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_render_layer_1a2529cb93392cd177b11895a4a07b3916" prot="public" virt="non-virtual"><scope>Bvr::Renderer::RenderLayer</scope><name>operator!=</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_render_layer_1a596ebb6fa12fd9979db196713eea891e" prot="public" virt="non-virtual"><scope>Bvr::Renderer::RenderLayer</scope><name>operator&amp;</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_render_layer_1ae233468d4fa461f2ab638b721037616b" prot="public" virt="non-virtual"><scope>Bvr::Renderer::RenderLayer</scope><name>operator&amp;=</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_render_layer_1a8fd5b0593f9f0a57a3e4dc0f6e0ab338" prot="public" virt="non-virtual"><scope>Bvr::Renderer::RenderLayer</scope><name>operator==</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_render_layer_1a3e834928ba973e49b546e7e6d917a1cb" prot="public" virt="non-virtual"><scope>Bvr::Renderer::RenderLayer</scope><name>operator|</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_render_layer_1ae4fbe7921112f112dbf5d2c661edb492" prot="public" virt="non-virtual"><scope>Bvr::Renderer::RenderLayer</scope><name>operator|=</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_render_layer_1afeee686eef45e9f29f71c8424cadc939" prot="public" virt="non-virtual"><scope>Bvr::Renderer::RenderLayer</scope><name>RemoveLayer</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_render_layer_1a10ea3fa53b870631d3ede969f2f306f2" prot="public" virt="non-virtual"><scope>Bvr::Renderer::RenderLayer</scope><name>RemoveLayers</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_render_layer_1a8edfc0dae6099894469d2878dd7f42f3" prot="public" virt="non-virtual"><scope>Bvr::Renderer::RenderLayer</scope><name>SetLayer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_bvr_1_1_renderer_1_1_execution_utils_1_1_graphics" kind="struct" language="C++" prot="public">
    <compoundname>Bvr::Renderer::ExecutionUtils::Graphics</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_execution_utils_1_1_graphics_1a427027055504452660e0be075a846551" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExtraFn</type>
            <defval><ref refid="struct_bvr_1_1_renderer_1_1_no_op" kindref="compound">NoOp</ref></defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void Bvr::Renderer::ExecutionUtils::Graphics::FullScreenPass</definition>
        <argsstring>(CCommandList *pCmd, const CFGNode &amp;node, CFrameContext &amp;ctx, SGraphicsPSODesc pipeline, const ExtraFn &amp;extraFn={})</argsstring>
        <name>FullScreenPass</name>
        <param>
          <type>CCommandList *</type>
          <declname>pCmd</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>CFrameContext &amp;</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_renderer_1_1_s_graphics_p_s_o_desc" kindref="compound">SGraphicsPSODesc</ref></type>
          <declname>pipeline</declname>
        </param>
        <param>
          <type>const ExtraFn &amp;</type>
          <declname>extraFn</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderPassScheduler.hpp" line="236" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderPassScheduler.hpp" bodystart="236" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_execution_utils_1_1_graphics_1a920608ee0778831ad33cd8a83afbf2c5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ExtraFn</type>
            <defval><ref refid="struct_bvr_1_1_renderer_1_1_no_op" kindref="compound">NoOp</ref></defval>
          </param>
        </templateparamlist>
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>static CFGNode&amp; Bvr::Renderer::ExecutionUtils::Graphics::FullScreenPass</definition>
        <argsstring>(CRenderPassScheduler &amp;scheduler, std::string_view name, const STechniqueDesc &amp;tech, const ExtraFn &amp;extraFn={}, const SBlendStateInfo *pBlendState=nullptr, EPipelineProperty extraProps=EPipelineProperty::None)</argsstring>
        <name>FullScreenPass</name>
        <param>
          <type><ref refid="class_bvr_1_1_renderer_1_1_c_render_pass_scheduler" kindref="compound">CRenderPassScheduler</ref> &amp;</type>
          <declname>scheduler</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_renderer_1_1_s_technique_desc" kindref="compound">STechniqueDesc</ref> &amp;</type>
          <declname>tech</declname>
        </param>
        <param>
          <type>const ExtraFn &amp;</type>
          <declname>extraFn</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_renderer_1_1_s_blend_state_info" kindref="compound">SBlendStateInfo</ref> *</type>
          <declname>pBlendState</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>EPipelineProperty</type>
          <declname>extraProps</declname>
          <defval>EPipelineProperty::None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderPassScheduler.hpp" line="256" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderPassScheduler.hpp" bodystart="256" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_execution_utils_1_1_graphics_1a361041078f2ade683f9be1d229d18cdc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>static CFGNode&amp; Bvr::Renderer::ExecutionUtils::Graphics::DrawList</definition>
        <argsstring>(CRenderPassScheduler &amp;scheduler, std::string_view name, const ERenderList list, const EPipelineProperty passProps, const uint32 sceneBindSlot, const uint32 visibleItemsSlot, const CFGNode::EFlags nodeFlags={}, std::function&lt; void(CCommandList *)&gt; extra=&amp;NoOp::Do)</argsstring>
        <name>DrawList</name>
        <param>
          <type><ref refid="class_bvr_1_1_renderer_1_1_c_render_pass_scheduler" kindref="compound">CRenderPassScheduler</ref> &amp;</type>
          <declname>scheduler</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const ERenderList</type>
          <declname>list</declname>
        </param>
        <param>
          <type>const EPipelineProperty</type>
          <declname>passProps</declname>
        </param>
        <param>
          <type>const uint32</type>
          <declname>sceneBindSlot</declname>
        </param>
        <param>
          <type>const uint32</type>
          <declname>visibleItemsSlot</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node_1a51f0267e7056df34c5b1280555cb8ef3" kindref="member">CFGNode::EFlags</ref></type>
          <declname>nodeFlags</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>std::function&lt; void(CCommandList *)&gt;</type>
          <declname>extra</declname>
          <defval>&amp;NoOp::Do</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderPassScheduler.hpp" line="276" column="24"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_execution_utils_1_1_graphics_1adb9f3b3acae01478287297306a394a53" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>static CFGNode&amp; Bvr::Renderer::ExecutionUtils::Graphics::DrawIndirect</definition>
        <argsstring>(CRenderPassScheduler &amp;scheduler, std::string_view name, const STechniqueDesc &amp;tech, const EPipelineProperty passProps, const uint32 drawCount, const size_t indirectOffset=0, const SBlendStateInfo *pBlendState=nullptr)</argsstring>
        <name>DrawIndirect</name>
        <param>
          <type><ref refid="class_bvr_1_1_renderer_1_1_c_render_pass_scheduler" kindref="compound">CRenderPassScheduler</ref> &amp;</type>
          <declname>scheduler</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_renderer_1_1_s_technique_desc" kindref="compound">STechniqueDesc</ref> &amp;</type>
          <declname>tech</declname>
        </param>
        <param>
          <type>const EPipelineProperty</type>
          <declname>passProps</declname>
        </param>
        <param>
          <type>const uint32</type>
          <declname>drawCount</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>indirectOffset</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_renderer_1_1_s_blend_state_info" kindref="compound">SBlendStateInfo</ref> *</type>
          <declname>pBlendState</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderPassScheduler.hpp" line="285" column="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderPassScheduler.hpp" line="234" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderPassScheduler.hpp" bodystart="234" bodyend="290"/>
    <listofallmembers>
      <member refid="struct_bvr_1_1_renderer_1_1_execution_utils_1_1_graphics_1adb9f3b3acae01478287297306a394a53" prot="public" virt="non-virtual"><scope>Bvr::Renderer::ExecutionUtils::Graphics</scope><name>DrawIndirect</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_execution_utils_1_1_graphics_1a361041078f2ade683f9be1d229d18cdc" prot="public" virt="non-virtual"><scope>Bvr::Renderer::ExecutionUtils::Graphics</scope><name>DrawList</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_execution_utils_1_1_graphics_1a427027055504452660e0be075a846551" prot="public" virt="non-virtual"><scope>Bvr::Renderer::ExecutionUtils::Graphics</scope><name>FullScreenPass</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_execution_utils_1_1_graphics_1a920608ee0778831ad33cd8a83afbf2c5" prot="public" virt="non-virtual"><scope>Bvr::Renderer::ExecutionUtils::Graphics</scope><name>FullScreenPass</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

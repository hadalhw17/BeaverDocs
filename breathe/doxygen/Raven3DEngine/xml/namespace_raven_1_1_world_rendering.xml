<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespace_raven_1_1_world_rendering" kind="namespace" language="C++">
    <compoundname>Raven::WorldRendering</compoundname>
    <innerclass refid="struct_raven_1_1_world_rendering_1_1_s_extracted_render_info" prot="public">Raven::WorldRendering::SExtractedRenderInfo</innerclass>
    <innerclass refid="struct_raven_1_1_world_rendering_1_1_plugin" prot="public">Raven::WorldRendering::Plugin</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_render_system_8hpp_1a79c10c600de7ee67b41d28930a8e3d49" prot="public" static="no">
        <type>std::vector&lt; <ref refid="struct_raven_1_1_world_rendering_1_1_s_extracted_render_info" kindref="compound">SExtractedRenderInfo</ref> &gt;</type>
        <definition>using Raven::WorldRendering::TRenderInfos = typedef std::vector&lt;SExtractedRenderInfo&gt;</definition>
        <argsstring></argsstring>
        <name>TRenderInfos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/RenderSystem.hpp" line="19" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/RenderSystem.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_render_system_8hpp_1ac1c96cf9f377ac7acac4dce34b48a573" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::WorldRendering::ExtractRenderInfos</definition>
        <argsstring>(IRavenRenderer &amp;renderer, IRavenEngine &amp;raven, CWorld &amp;world, Query&lt; With&lt; SRenderInfo, SNameComponent, SCameraComponent &gt;&gt; query, TRenderInfos &amp;dstInfos)</argsstring>
        <name>ExtractRenderInfos</name>
        <param>
          <type>IRavenRenderer &amp;</type>
          <declname>renderer</declname>
        </param>
        <param>
          <type>IRavenEngine &amp;</type>
          <declname>raven</declname>
        </param>
        <param>
          <type>CWorld &amp;</type>
          <declname>world</declname>
        </param>
        <param>
          <type>Query&lt; With&lt; SRenderInfo, SNameComponent, SCameraComponent &gt;&gt;</type>
          <declname>query</declname>
        </param>
        <param>
          <type>TRenderInfos &amp;</type>
          <declname>dstInfos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/RenderSystem.hpp" line="22" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/RenderSystem.hpp" bodystart="22" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="_render_system_8hpp_1ab76855f4e557e0884bf0c8832179c52b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::WorldRendering::RenderWorlds</definition>
        <argsstring>(App &amp;app, IRavenRenderer &amp;renderer, TRenderInfos &amp;infos, TContextsToRender &amp;renderContexts)</argsstring>
        <name>RenderWorlds</name>
        <param>
          <type>App &amp;</type>
          <declname>app</declname>
        </param>
        <param>
          <type>IRavenRenderer &amp;</type>
          <declname>renderer</declname>
        </param>
        <param>
          <type>TRenderInfos &amp;</type>
          <declname>infos</declname>
        </param>
        <param>
          <type>TContextsToRender &amp;</type>
          <declname>renderContexts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/RenderSystem.hpp" line="50" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/RenderSystem.hpp" bodystart="50" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="_render_system_8hpp_1add8efcb96be42d084c7df3b3d490b562" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::WorldRendering::UpdateCameraProjection</definition>
        <argsstring>(Query&lt; With&lt; SRenderInfo, RenderTargetT, SCameraComponent &gt;&gt; query, const Window::Windows &amp;windows, const Assets&lt; CImage &gt; &amp;images)</argsstring>
        <name>UpdateCameraProjection</name>
        <param>
          <type>Query&lt; With&lt; SRenderInfo, RenderTargetT, SCameraComponent &gt;&gt;</type>
          <declname>query</declname>
        </param>
        <param>
          <type>const Window::Windows &amp;</type>
          <declname>windows</declname>
        </param>
        <param>
          <type>const Assets&lt; CImage &gt; &amp;</type>
          <declname>images</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/RenderSystem.hpp" line="69" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/RenderSystem.hpp" bodystart="69" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="_render_system_8hpp_1ac895cce604a94509aa0ca809a93f876f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::WorldRendering::UpdateCameraView</definition>
        <argsstring>(const CWorld &amp;world, Query&lt; With&lt; SRenderInfo, WorldSpaceTransform &gt;&gt; query)</argsstring>
        <name>UpdateCameraView</name>
        <param>
          <type>const CWorld &amp;</type>
          <declname>world</declname>
        </param>
        <param>
          <type>Query&lt; With&lt; SRenderInfo, WorldSpaceTransform &gt;&gt;</type>
          <declname>query</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/RenderSystem.hpp" line="100" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/RenderSystem.hpp" bodystart="100" bodyend="113"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/RenderSystem.hpp" line="13" column="1"/>
  </compounddef>
</doxygen>

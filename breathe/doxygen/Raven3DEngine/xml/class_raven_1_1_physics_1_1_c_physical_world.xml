<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_raven_1_1_physics_1_1_c_physical_world" kind="class" language="C++" prot="public">
    <compoundname>Raven::Physics::CPhysicalWorld</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_raven_1_1_physics_1_1_c_physical_world_1af288d611021bdec70f4c7f63065b72ff" prot="private" static="no" mutable="no">
        <type>physx::PxScene *</type>
        <definition>physx::PxScene* Raven::Physics::CPhysicalWorld::m_pScene</definition>
        <argsstring></argsstring>
        <name>m_pScene</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/Physics/PhysicalWorld.hpp" line="51" column="16" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/Physics/PhysicalWorld.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_physics_1_1_c_physical_world_1ab0d53e85c467bc3723857cca8030a186" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Raven::Physics::CPhysicalWorld::m_bFirstFrame</definition>
        <argsstring></argsstring>
        <name>m_bFirstFrame</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/Physics/PhysicalWorld.hpp" line="52" column="17" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/Physics/PhysicalWorld.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_raven_1_1_physics_1_1_c_physical_world_1a2e3c3d3862760649289f2c30892720d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Raven::Physics::CPhysicalWorld::CPhysicalWorld</definition>
        <argsstring>()=default</argsstring>
        <name>CPhysicalWorld</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/Physics/PhysicalWorld.hpp" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_physics_1_1_c_physical_world_1a5731910550f873536d0dcc0f99597601" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Raven::Physics::CPhysicalWorld::~CPhysicalWorld</definition>
        <argsstring>()</argsstring>
        <name>~CPhysicalWorld</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/Physics/PhysicalWorld.hpp" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_physics_1_1_c_physical_world_1abaa1e6eacadc9f32c9514ac5d9fe5576" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>physx::PxScene *</type>
        <definition>physx::PxScene* Raven::Physics::CPhysicalWorld::GetScene</definition>
        <argsstring>()</argsstring>
        <name>GetScene</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/Physics/PhysicalWorld.hpp" line="43" column="39" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/Physics/PhysicalWorld.hpp" bodystart="43" bodyend="43"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_raven_1_1_physics_1_1_c_physical_world_1acce1535bc71c3ee5ae19c834e1188839" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Raven::Physics::CPhysicalWorld::Tick</definition>
        <argsstring>(PhysX::Instance &amp;instance, const Query&lt; With&lt; CPhysicalWorld * &gt;&gt; &amp;physWorlds, CWorld &amp;world, const CTimestep timestep)</argsstring>
        <name>Tick</name>
        <param>
          <type><ref refid="struct_raven_1_1_physics_1_1_phys_x_1_1_instance" kindref="compound">PhysX::Instance</ref> &amp;</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>const Query&lt; With&lt; <ref refid="class_raven_1_1_physics_1_1_c_physical_world" kindref="compound">CPhysicalWorld</ref> * &gt;&gt; &amp;</type>
          <declname>physWorlds</declname>
        </param>
        <param>
          <type>CWorld &amp;</type>
          <declname>world</declname>
        </param>
        <param>
          <type>const CTimestep</type>
          <declname>timestep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/Physics/PhysicalWorld.hpp" line="25" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_physics_1_1_c_physical_world_1a9abbca16151e349cbb2ff8aeb515cf01" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Raven::Physics::CPhysicalWorld::Simulate</definition>
        <argsstring>(const Query&lt; With&lt; CPhysicalWorld * &gt;&gt; &amp;physWorlds, CWorld &amp;world, const CTimestep timestep)</argsstring>
        <name>Simulate</name>
        <param>
          <type>const Query&lt; With&lt; <ref refid="class_raven_1_1_physics_1_1_c_physical_world" kindref="compound">CPhysicalWorld</ref> * &gt;&gt; &amp;</type>
          <declname>physWorlds</declname>
        </param>
        <param>
          <type>CWorld &amp;</type>
          <declname>world</declname>
        </param>
        <param>
          <type>const CTimestep</type>
          <declname>timestep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/Physics/PhysicalWorld.hpp" line="28" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_physics_1_1_c_physical_world_1ada6ad458b7b9120246fc23be27e42894" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Raven::Physics::CPhysicalWorld::DrawDebugVisualisers</definition>
        <argsstring>(CWorld &amp;world, IPrimitiveDrawCollector *pIPDC)</argsstring>
        <name>DrawDebugVisualisers</name>
        <param>
          <type>CWorld &amp;</type>
          <declname>world</declname>
        </param>
        <param>
          <type>IPrimitiveDrawCollector *</type>
          <declname>pIPDC</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/Physics/PhysicalWorld.hpp" line="30" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_physics_1_1_c_physical_world_1a641e972e993273daef34349e0cb7060f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Raven::Physics::CPhysicalWorld::CreateBoxColliders</definition>
        <argsstring>(PhysX::Instance &amp;physx, Query&lt; With&lt; SBoxColliderComponent, SRigidBodyComponent, WorldSpaceTransform, Initialised&lt; SBoxColliderComponent &gt;&gt;&gt; colliders)</argsstring>
        <name>CreateBoxColliders</name>
        <param>
          <type><ref refid="struct_raven_1_1_physics_1_1_phys_x_1_1_instance" kindref="compound">PhysX::Instance</ref> &amp;</type>
          <declname>physx</declname>
        </param>
        <param>
          <type>Query&lt; With&lt; SBoxColliderComponent, SRigidBodyComponent, WorldSpaceTransform, Initialised&lt; SBoxColliderComponent &gt;&gt;&gt;</type>
          <declname>colliders</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/Physics/PhysicalWorld.hpp" line="33" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_physics_1_1_c_physical_world_1a888f89c6949409df71dc171c7c8914f6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Raven::Physics::CPhysicalWorld::CreateRigidBodyComponents</definition>
        <argsstring>(PhysX::Instance &amp;physx, const Query&lt; With&lt; CPhysicalWorld * &gt;&gt; &amp;physWorlds, const Query&lt; With&lt; SRigidBodyComponent, WorldSpaceTransform, Initialised&lt; SRigidBodyComponent &gt;&gt;&gt; &amp;rigids)</argsstring>
        <name>CreateRigidBodyComponents</name>
        <param>
          <type><ref refid="struct_raven_1_1_physics_1_1_phys_x_1_1_instance" kindref="compound">PhysX::Instance</ref> &amp;</type>
          <declname>physx</declname>
        </param>
        <param>
          <type>const Query&lt; With&lt; <ref refid="class_raven_1_1_physics_1_1_c_physical_world" kindref="compound">CPhysicalWorld</ref> * &gt;&gt; &amp;</type>
          <declname>physWorlds</declname>
        </param>
        <param>
          <type>const Query&lt; With&lt; SRigidBodyComponent, WorldSpaceTransform, Initialised&lt; SRigidBodyComponent &gt;&gt;&gt; &amp;</type>
          <declname>rigids</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/Physics/PhysicalWorld.hpp" line="38" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_physics_1_1_c_physical_world_1ab4ace7f841e05e68bb2103a0ae67e552" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="class_raven_1_1_physics_1_1_c_physical_world" kindref="compound">CPhysicalWorld</ref> &gt;</type>
        <definition>static std::unique_ptr&lt;CPhysicalWorld&gt; Raven::Physics::CPhysicalWorld::Create</definition>
        <argsstring>(PhysX::Instance &amp;instance)</argsstring>
        <name>Create</name>
        <param>
          <type><ref refid="struct_raven_1_1_physics_1_1_phys_x_1_1_instance" kindref="compound">PhysX::Instance</ref> &amp;</type>
          <declname>instance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/Physics/PhysicalWorld.hpp" line="45" column="24"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_raven_1_1_physics_1_1_c_physical_world_1a8b26d8000959cd4ec5878084a17b5b01" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::Physics::CPhysicalWorld::WaitOnSimulation</definition>
        <argsstring>()</argsstring>
        <name>WaitOnSimulation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/Physics/PhysicalWorld.hpp" line="48" column="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/Physics/PhysicalWorld.hpp" line="21" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/Physics/PhysicalWorld.hpp" bodystart="21" bodyend="53"/>
    <listofallmembers>
      <member refid="class_raven_1_1_physics_1_1_c_physical_world_1a2e3c3d3862760649289f2c30892720d2" prot="public" virt="non-virtual"><scope>Raven::Physics::CPhysicalWorld</scope><name>CPhysicalWorld</name></member>
      <member refid="class_raven_1_1_physics_1_1_c_physical_world_1ab4ace7f841e05e68bb2103a0ae67e552" prot="public" virt="non-virtual"><scope>Raven::Physics::CPhysicalWorld</scope><name>Create</name></member>
      <member refid="class_raven_1_1_physics_1_1_c_physical_world_1a641e972e993273daef34349e0cb7060f" prot="public" virt="non-virtual"><scope>Raven::Physics::CPhysicalWorld</scope><name>CreateBoxColliders</name></member>
      <member refid="class_raven_1_1_physics_1_1_c_physical_world_1a888f89c6949409df71dc171c7c8914f6" prot="public" virt="non-virtual"><scope>Raven::Physics::CPhysicalWorld</scope><name>CreateRigidBodyComponents</name></member>
      <member refid="class_raven_1_1_physics_1_1_c_physical_world_1ada6ad458b7b9120246fc23be27e42894" prot="public" virt="non-virtual"><scope>Raven::Physics::CPhysicalWorld</scope><name>DrawDebugVisualisers</name></member>
      <member refid="class_raven_1_1_physics_1_1_c_physical_world_1abaa1e6eacadc9f32c9514ac5d9fe5576" prot="public" virt="non-virtual"><scope>Raven::Physics::CPhysicalWorld</scope><name>GetScene</name></member>
      <member refid="class_raven_1_1_physics_1_1_c_physical_world_1ab0d53e85c467bc3723857cca8030a186" prot="private" virt="non-virtual"><scope>Raven::Physics::CPhysicalWorld</scope><name>m_bFirstFrame</name></member>
      <member refid="class_raven_1_1_physics_1_1_c_physical_world_1af288d611021bdec70f4c7f63065b72ff" prot="private" virt="non-virtual"><scope>Raven::Physics::CPhysicalWorld</scope><name>m_pScene</name></member>
      <member refid="class_raven_1_1_physics_1_1_c_physical_world_1a9abbca16151e349cbb2ff8aeb515cf01" prot="public" virt="non-virtual"><scope>Raven::Physics::CPhysicalWorld</scope><name>Simulate</name></member>
      <member refid="class_raven_1_1_physics_1_1_c_physical_world_1acce1535bc71c3ee5ae19c834e1188839" prot="public" virt="non-virtual"><scope>Raven::Physics::CPhysicalWorld</scope><name>Tick</name></member>
      <member refid="class_raven_1_1_physics_1_1_c_physical_world_1a8b26d8000959cd4ec5878084a17b5b01" prot="private" virt="non-virtual"><scope>Raven::Physics::CPhysicalWorld</scope><name>WaitOnSimulation</name></member>
      <member refid="class_raven_1_1_physics_1_1_c_physical_world_1a5731910550f873536d0dcc0f99597601" prot="public" virt="non-virtual"><scope>Raven::Physics::CPhysicalWorld</scope><name>~CPhysicalWorld</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespace_raven" kind="namespace" language="C++">
    <compoundname>Raven</compoundname>
    <innerclass refid="struct_raven_1_1_t_component_render_system" prot="public">Raven::TComponentRenderSystem</innerclass>
    <innerclass refid="struct_raven_1_1_t_filter" prot="public">Raven::TFilter</innerclass>
    <innerclass refid="struct_raven_1_1_t_filter_3_01_predecate_00_01std_1_1tuple_3_01_ts_8_8_8_01_4_01_4" prot="public">Raven::TFilter&lt; Predecate, std::tuple&lt; Ts... &gt; &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_t_render_system_for" prot="public">Raven::TRenderSystemFor</innerclass>
    <innerclass refid="class_raven_1_1_c_animation" prot="public">Raven::CAnimation</innerclass>
    <innerclass refid="class_raven_1_1_c3_d_engine" prot="public">Raven::C3DEngine</innerclass>
    <innerclass refid="class_raven_1_1_c_voxel_mesh" prot="public">Raven::CVoxelMesh</innerclass>
    <innerclass refid="struct_raven_1_1_parse_result" prot="public">Raven::ParseResult</innerclass>
    <innerclass refid="class_raven_1_1_c_magica_vox_loader" prot="public">Raven::CMagicaVoxLoader</innerclass>
    <innerclass refid="struct_raven_1_1_s_pool_handle" prot="public">Raven::SPoolHandle</innerclass>
    <innerclass refid="struct_raven_1_1_vox_object_h" prot="public">Raven::VoxObjectH</innerclass>
    <innerclass refid="class_raven_1_1_c_voxel_object" prot="public">Raven::CVoxelObject</innerclass>
    <innerclass refid="class_raven_1_1_c_voxel_manager" prot="public">Raven::CVoxelManager</innerclass>
    <innernamespace refid="namespace_raven_1_1_animation">Raven::Animation</innernamespace>
    <innernamespace refid="namespace_raven_1_1_physics">Raven::Physics</innernamespace>
    <innernamespace refid="namespace_raven_1_1_voxel">Raven::Voxel</innernamespace>
    <innernamespace refid="namespace_raven_1_1_world_rendering">Raven::WorldRendering</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_render_function_8hpp_1a3523ba1c2221c7952f39381d3f745206" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::integral_constant&lt; bool, !std::is_same_v&lt; T, IFrameContext * &gt; &gt;</type>
        <definition>using Raven::TIsNotCtx = typedef std::integral_constant&lt;bool, !std::is_same_v&lt;T, IFrameContext*&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>TIsNotCtx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/RenderFunction.hpp" line="29" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/RenderFunction.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_render_system_8hpp_1a9b374e9eac7453fffcb8fd8346d5a5c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::PrepareSunFrustums</definition>
        <argsstring>(SRenderInfo &amp;)</argsstring>
        <name>PrepareSunFrustums</name>
        <param>
          <type>SRenderInfo &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/RenderSystem.hpp" line="10" column="6" declfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/RenderSystem.hpp" declline="10" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_render_system_8hpp_1a5c7dff7fa34f2c299f1762cecfeaabcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::RecordToFrameContext</definition>
        <argsstring>(App &amp;app, CWorld *pWorld, IFrameContext *context)</argsstring>
        <name>RecordToFrameContext</name>
        <param>
          <type>App &amp;</type>
          <declname>app</declname>
        </param>
        <param>
          <type>CWorld *</type>
          <declname>pWorld</declname>
        </param>
        <param>
          <type>IFrameContext *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/RenderSystem.hpp" line="11" column="6" declfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/RenderSystem.hpp" declline="11" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/Raven3DEngine/AnimationSystem.hpp" line="4" column="1"/>
  </compounddef>
</doxygen>

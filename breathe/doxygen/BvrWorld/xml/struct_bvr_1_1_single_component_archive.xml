<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_bvr_1_1_single_component_archive" kind="struct" language="C++" prot="public">
    <compoundname>Bvr::SingleComponentArchive</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>Archiver</type>
        <declname>Arch</declname>
        <defname>Arch</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_bvr_1_1_single_component_archive_1a613407c6d813c3a9b2af9f9711025157" prot="public" static="no">
        <type>T</type>
        <definition>using Bvr::SingleComponentArchive&lt; T, Arch &gt;::ComponentT =  T</definition>
        <argsstring></argsstring>
        <name>ComponentT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="10" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_single_component_archive_1a69fb50f85ce1b7b6047f9d642c3cd2d9" prot="public" static="no">
        <type>std::conditional_t&lt; Arch::IsWriter, Utils::uuid, int &gt;</type>
        <definition>using Bvr::SingleComponentArchive&lt; T, Arch &gt;::KeyT =  std::conditional_t&lt;Arch::IsWriter, Utils::uuid, int&gt;</definition>
        <argsstring></argsstring>
        <name>KeyT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="11" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_single_component_archive_1a41693e794062468db4b55e8faac29277" prot="public" static="no">
        <type>std::conditional_t&lt; Arch::IsWriter, int, ComponentT &gt;</type>
        <definition>using Bvr::SingleComponentArchive&lt; T, Arch &gt;::IdT =  std::conditional_t&lt;Arch::IsWriter, int, ComponentT&gt;</definition>
        <argsstring></argsstring>
        <name>IdT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="12" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_single_component_archive_1aed80765cee278a9993359d4bf0fd1969" prot="public" static="no">
        <type>std::conditional_t&lt; Arch::IsWriter, std::unordered_map&lt; KeyT, IdT &gt;, std::vector&lt; IdT &gt; &gt;</type>
        <definition>using Bvr::SingleComponentArchive&lt; T, Arch &gt;::ContainerT =  std::conditional_t&lt;Arch::IsWriter, std::unordered_map&lt;KeyT, IdT&gt;, std::vector&lt;IdT&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>ContainerT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="13" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="struct_bvr_1_1_single_component_archive_1ae9884237ab0f09dc14aa9434dd806b8e" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static bool</type>
        <definition>constexpr static bool Bvr::SingleComponentArchive&lt; T, Arch &gt;::IsRuntime</definition>
        <argsstring></argsstring>
        <name>IsRuntime</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="16" column="27" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_bvr_1_1_single_component_archive_1ab606c3d90b254b83b2f8d4e8e628889e" prot="private" static="no" mutable="no">
        <type>ContainerT</type>
        <definition>ContainerT Bvr::SingleComponentArchive&lt; T, Arch &gt;::m_entityUUIDRemap</definition>
        <argsstring></argsstring>
        <name>m_entityUUIDRemap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="63" column="16" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_bvr_1_1_single_component_archive_1a761be62a02709c8bb49fe88e0af95ac6" prot="private" static="no" mutable="no">
        <type><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> *</type>
        <definition>CWorld* Bvr::SingleComponentArchive&lt; T, Arch &gt;::m_pWorld</definition>
        <argsstring></argsstring>
        <name>m_pWorld</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="65" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_bvr_1_1_single_component_archive_1a875b6dd70a3a1aceabfa7d86e43d4c2b" prot="private" static="no" mutable="no">
        <type>ComponentT</type>
        <definition>ComponentT Bvr::SingleComponentArchive&lt; T, Arch &gt;::m_null</definition>
        <argsstring></argsstring>
        <name>m_null</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="66" column="16" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_bvr_1_1_single_component_archive_1ade940499fad8aca2c08bbc35e6ab6760" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::SingleComponentArchive&lt; T, Arch &gt;::SingleComponentArchive</definition>
        <argsstring>(CWorld *pWorld, bool recreateUuids)</argsstring>
        <name>SingleComponentArchive</name>
        <param>
          <type><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> *</type>
          <declname>pWorld</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>recreateUuids</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="18" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="18" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_single_component_archive_1a3264cdcc2379d073b703cced41bc062b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::SingleComponentArchive&lt; T, Arch &gt;::Write</definition>
        <argsstring>(Arch &amp;arch, const std::unordered_set&lt; TEntity &gt; &amp;entToSerialise)</argsstring>
        <name>Write</name>
        <param>
          <type>Arch &amp;</type>
          <declname>arch</declname>
        </param>
        <param>
          <type>const std::unordered_set&lt; <ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref> &gt; &amp;</type>
          <declname>entToSerialise</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="20" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="20" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_single_component_archive_1ae74c25d787f929376ec33f1c8cdc5ff7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::SingleComponentArchive&lt; T, Arch &gt;::Read</definition>
        <argsstring>(Arch &amp;arch)</argsstring>
        <name>Read</name>
        <param>
          <type>Arch &amp;</type>
          <declname>arch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="35" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="35" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_single_component_archive_1a48d624a89e3c002fed6cd8eb3ec03d5e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>IdT &amp;</type>
        <definition>IdT&amp; Bvr::SingleComponentArchive&lt; T, Arch &gt;::GetComponentId</definition>
        <argsstring>(const KeyT &amp;key)</argsstring>
        <name>GetComponentId</name>
        <param>
          <type>const KeyT &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="50" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="50" bodyend="60"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="9" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="9" bodyend="67"/>
    <listofallmembers>
      <member refid="struct_bvr_1_1_single_component_archive_1a613407c6d813c3a9b2af9f9711025157" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive</scope><name>ComponentT</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_1aed80765cee278a9993359d4bf0fd1969" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive</scope><name>ContainerT</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_1a48d624a89e3c002fed6cd8eb3ec03d5e" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive</scope><name>GetComponentId</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_1a41693e794062468db4b55e8faac29277" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive</scope><name>IdT</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_1ae9884237ab0f09dc14aa9434dd806b8e" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive</scope><name>IsRuntime</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_1a69fb50f85ce1b7b6047f9d642c3cd2d9" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive</scope><name>KeyT</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_1ab606c3d90b254b83b2f8d4e8e628889e" prot="private" virt="non-virtual"><scope>Bvr::SingleComponentArchive</scope><name>m_entityUUIDRemap</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_1a875b6dd70a3a1aceabfa7d86e43d4c2b" prot="private" virt="non-virtual"><scope>Bvr::SingleComponentArchive</scope><name>m_null</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_1a761be62a02709c8bb49fe88e0af95ac6" prot="private" virt="non-virtual"><scope>Bvr::SingleComponentArchive</scope><name>m_pWorld</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_1ae74c25d787f929376ec33f1c8cdc5ff7" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive</scope><name>Read</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_1ade940499fad8aca2c08bbc35e6ab6760" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive</scope><name>SingleComponentArchive</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_1a3264cdcc2379d073b703cced41bc062b" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive</scope><name>Write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="struct_bvr_1_1_single_component_archive_3_01_comp_t_00_01_for_read_01_4" kind="struct" language="C++" prot="public">
    <compoundname>Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>Detail::IsTagComponent</type>
        <declname>CompT</declname>
        <defname>CompT</defname>
      </param>
      <param>
        <type>bool</type>
        <declname>ForRead</declname>
        <defname>ForRead</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_bvr_1_1_single_component_archive_3_01_comp_t_00_01_for_read_01_4_1a7e5973a197c96700018a1dbec2a91ab0" prot="public" static="no">
        <type><ref refid="class_bvr_1_1_c_from_world_archive" kindref="compound">CFromWorldArchive</ref></type>
        <definition>using Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;::TArch =  CFromWorldArchive</definition>
        <argsstring></argsstring>
        <name>TArch</name>
        <qualifiedname>Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;::TArch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="156" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_single_component_archive_3_01_comp_t_00_01_for_read_01_4_1a4c36b791d637ac221355475356b1f22e" prot="public" static="no">
        <type>CompT</type>
        <definition>using Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;::ComponentT =  CompT</definition>
        <argsstring></argsstring>
        <name>ComponentT</name>
        <qualifiedname>Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;::ComponentT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="157" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_single_component_archive_3_01_comp_t_00_01_for_read_01_4_1a4820d06c880000cfd9c105aa0cef3509" prot="public" static="no">
        <type>std::conditional_t&lt; IsWriter, <ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref>, int &gt;</type>
        <definition>using Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;::KeyT =  std::conditional_t&lt;IsWriter, TEntity, int&gt;</definition>
        <argsstring></argsstring>
        <name>KeyT</name>
        <qualifiedname>Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;::KeyT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="158" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_single_component_archive_3_01_comp_t_00_01_for_read_01_4_1aeb0026d6bb9f061c74499a0e13f67060" prot="public" static="no">
        <type>std::conditional_t&lt; IsWriter, int, ComponentT &gt;</type>
        <definition>using Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;::IdT =  std::conditional_t&lt;IsWriter, int, ComponentT&gt;</definition>
        <argsstring></argsstring>
        <name>IdT</name>
        <qualifiedname>Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;::IdT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="159" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="159" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="struct_bvr_1_1_single_component_archive_3_01_comp_t_00_01_for_read_01_4_1a53239c5f55e062c24ad0916b122f2a4d" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;::IsWriter</definition>
        <argsstring></argsstring>
        <name>IsWriter</name>
        <qualifiedname>Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;::IsWriter</qualifiedname>
        <initializer>= !ForRead</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="153" column="27" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_bvr_1_1_single_component_archive_3_01_comp_t_00_01_for_read_01_4_1aa6bbf8e287af1cc229bea582d7eb9a70" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;::IsRuntime</definition>
        <argsstring></argsstring>
        <name>IsRuntime</name>
        <qualifiedname>Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;::IsRuntime</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="154" column="27" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="154" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="struct_bvr_1_1_single_component_archive_3_01_comp_t_00_01_for_read_01_4_1a0485cb1617ab401799d1367f4603d95c" prot="private" static="yes" mutable="no">
        <type>IdT</type>
        <definition>SingleComponentArchive&lt; CompT, ForRead &gt;::IdT Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;::m_null</definition>
        <argsstring></argsstring>
        <name>m_null</name>
        <qualifiedname>Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;::m_null</qualifiedname>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="190" column="16" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="190" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_bvr_1_1_single_component_archive_3_01_comp_t_00_01_for_read_01_4_1af0fc34c7c5a8129acccf983d12c75143" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;::SingleComponentArchive</definition>
        <argsstring>()=default</argsstring>
        <name>SingleComponentArchive</name>
        <qualifiedname>Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;::SingleComponentArchive</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="161" column="5"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_single_component_archive_3_01_comp_t_00_01_for_read_01_4_1ade013f169f13095a91fefeadf6675544" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>IdT &amp;</type>
        <definition>IdT &amp; Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;::GetComponentId</definition>
        <argsstring>(const KeyT &amp;key)</argsstring>
        <name>GetComponentId</name>
        <qualifiedname>Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;::GetComponentId</qualifiedname>
        <param>
          <type>const KeyT &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="162" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_single_component_archive_3_01_comp_t_00_01_for_read_01_4_1abc76569e1f3fded47e18e2472977193b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;::WriteSingle</definition>
        <argsstring>(TArch &amp;arch, CWorld *pWorld, TEntity hEnt)</argsstring>
        <name>WriteSingle</name>
        <qualifiedname>Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;::WriteSingle</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_c_from_world_archive" kindref="compound">TArch</ref> &amp;</type>
          <declname>arch</declname>
        </param>
        <param>
          <type><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> *</type>
          <declname>pWorld</declname>
        </param>
        <param>
          <type><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="163" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="163" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_single_component_archive_3_01_comp_t_00_01_for_read_01_4_1abe534391a80f20dcc004dca0296dac22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename EntitySet</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;::Write</definition>
        <argsstring>(TArch &amp;arch, CWorld *, const EntitySet &amp;entToSerialise)</argsstring>
        <name>Write</name>
        <qualifiedname>Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;::Write</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_c_from_world_archive" kindref="compound">TArch</ref> &amp;</type>
          <declname>arch</declname>
        </param>
        <param>
          <type><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> *</type>
        </param>
        <param>
          <type>const EntitySet &amp;</type>
          <declname>entToSerialise</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="172" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="172" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_single_component_archive_3_01_comp_t_00_01_for_read_01_4_1ab146896b990c5ce12fec71cce58e8277" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;::ReadSingle</definition>
        <argsstring>(TArch &amp;arch)</argsstring>
        <name>ReadSingle</name>
        <qualifiedname>Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;::ReadSingle</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_c_from_world_archive" kindref="compound">TArch</ref> &amp;</type>
          <declname>arch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="176" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="176" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_single_component_archive_3_01_comp_t_00_01_for_read_01_4_1a3269fca35e2ce9d3b90fde4d2c30f960" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;::Read</definition>
        <argsstring>(TArch &amp;arch)</argsstring>
        <name>Read</name>
        <qualifiedname>Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;::Read</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_c_from_world_archive" kindref="compound">TArch</ref> &amp;</type>
          <declname>arch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="181" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="181" bodyend="187"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" line="152" column="1" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp" bodystart="152" bodyend="191"/>
    <listofallmembers>
      <member refid="struct_bvr_1_1_single_component_archive_3_01_comp_t_00_01_for_read_01_4_1a4c36b791d637ac221355475356b1f22e" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;</scope><name>ComponentT</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_3_01_comp_t_00_01_for_read_01_4_1ade013f169f13095a91fefeadf6675544" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;</scope><name>GetComponentId</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_3_01_comp_t_00_01_for_read_01_4_1aeb0026d6bb9f061c74499a0e13f67060" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;</scope><name>IdT</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_3_01_comp_t_00_01_for_read_01_4_1aa6bbf8e287af1cc229bea582d7eb9a70" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;</scope><name>IsRuntime</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_3_01_comp_t_00_01_for_read_01_4_1a53239c5f55e062c24ad0916b122f2a4d" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;</scope><name>IsWriter</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_3_01_comp_t_00_01_for_read_01_4_1a4820d06c880000cfd9c105aa0cef3509" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;</scope><name>KeyT</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_3_01_comp_t_00_01_for_read_01_4_1a0485cb1617ab401799d1367f4603d95c" prot="private" virt="non-virtual"><scope>Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;</scope><name>m_null</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_3_01_comp_t_00_01_for_read_01_4_1a3269fca35e2ce9d3b90fde4d2c30f960" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;</scope><name>Read</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_3_01_comp_t_00_01_for_read_01_4_1ab146896b990c5ce12fec71cce58e8277" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;</scope><name>ReadSingle</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_3_01_comp_t_00_01_for_read_01_4_1af0fc34c7c5a8129acccf983d12c75143" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;</scope><name>SingleComponentArchive</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_3_01_comp_t_00_01_for_read_01_4_1a7e5973a197c96700018a1dbec2a91ab0" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;</scope><name>TArch</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_3_01_comp_t_00_01_for_read_01_4_1abe534391a80f20dcc004dca0296dac22" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;</scope><name>Write</name></member>
      <member refid="struct_bvr_1_1_single_component_archive_3_01_comp_t_00_01_for_read_01_4_1abc76569e1f3fded47e18e2472977193b" prot="public" virt="non-virtual"><scope>Bvr::SingleComponentArchive&lt; CompT, ForRead &gt;</scope><name>WriteSingle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

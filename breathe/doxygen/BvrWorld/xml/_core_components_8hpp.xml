<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_core_components_8hpp" kind="file" language="C++">
    <compoundname>CoreComponents.hpp</compoundname>
    <includes refid="_world_defs_8hpp" local="yes">WorldDefs.hpp</includes>
    <includes local="no">BvrMath/BvrMath.hpp</includes>
    <includes local="no">Utils/uuid.hpp</includes>
    <includedby refid="_default_components_8hpp" local="yes">/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/DefaultComponents.hpp</includedby>
    <includedby refid="_world_8hpp" local="yes">/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>WorldDefs.hpp</label>
        <link refid="_world_defs_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>BvrMath/BvrMath.hpp</label>
      </node>
      <node id="6">
        <label>Utils/uuid.hpp</label>
      </node>
      <node id="1">
        <label>/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/CoreComponents.hpp</label>
        <link refid="_core_components_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Utils/Assert.hpp</label>
      </node>
      <node id="3">
        <label>entt.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="8">
        <label>/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/Scene.hpp</label>
        <link refid="_scene_8hpp"/>
      </node>
      <node id="6">
        <label>/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/Entity.hpp</label>
        <link refid="_entity_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/CoreComponents.hpp</label>
        <link refid="_core_components_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/DefaultComponentLists.hpp</label>
        <link refid="_default_component_lists_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp</label>
        <link refid="_world_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/Components.hpp</label>
        <link refid="_components_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp</label>
        <link refid="_world_archive_8hpp_source"/>
      </node>
      <node id="2">
        <label>/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/DefaultComponents.hpp</label>
        <link refid="_default_components_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_bvr_1_1_tags_1_1_no_serialise" prot="public">Bvr::Tags::NoSerialise</innerclass>
    <innerclass refid="struct_bvr_1_1_tags_1_1_no_copy" prot="public">Bvr::Tags::NoCopy</innerclass>
    <innerclass refid="struct_bvr_1_1_tags_1_1_transform2_d" prot="public">Bvr::Tags::Transform2D</innerclass>
    <innerclass refid="struct_bvr_1_1_name_component" prot="public">Bvr::NameComponent</innerclass>
    <innerclass refid="struct_bvr_1_1_uuid_component" prot="public">Bvr::UuidComponent</innerclass>
    <innerclass refid="struct_bvr_1_1_s_parent_component" prot="public">Bvr::SParentComponent</innerclass>
    <innerclass refid="struct_bvr_1_1_s_hierarchy_component" prot="public">Bvr::SHierarchyComponent</innerclass>
    <innerclass refid="struct_bvr_1_1_transform_component" prot="public">Bvr::TransformComponent</innerclass>
    <innerclass refid="struct_bvr_1_1_world_space_transform" prot="public">Bvr::WorldSpaceTransform</innerclass>
    <innernamespace refid="namespace_bvr">Bvr</innernamespace>
    <innernamespace refid="namespace_bvr_1_1_tags">Bvr::Tags</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;WorldDefs.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;BvrMath/BvrMath.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Utils/uuid.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Bvr<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="namespace_bvr_1_1_tags" refkind="compound"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Tags<sp/>{</highlight></codeline>
<codeline lineno="11" refid="struct_bvr_1_1_tags_1_1_no_serialise" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_tags_1_1_no_serialise" kindref="compound">NoSerialise</ref><sp/>{};</highlight></codeline>
<codeline lineno="13" refid="struct_bvr_1_1_tags_1_1_no_copy" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_tags_1_1_no_copy" kindref="compound">NoCopy</ref><sp/>{};</highlight></codeline>
<codeline lineno="15" refid="struct_bvr_1_1_tags_1_1_transform2_d" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_tags_1_1_transform2_d" kindref="compound">Transform2D</ref><sp/>{};</highlight></codeline>
<codeline lineno="16"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Tags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="struct_bvr_1_1_name_component" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_name_component" kindref="compound">NameComponent</ref><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator*()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Name;<sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>operator*()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Name;<sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator-&gt;()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;Name;<sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string*<sp/>operator-&gt;()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;Name;<sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Name;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="struct_bvr_1_1_uuid_component" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_uuid_component" kindref="compound">UuidComponent</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_bvr_1_1_uuid_component" kindref="compound">UuidComponent</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_bvr_1_1_uuid_component" kindref="compound">UuidComponent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Utils::uuid&amp;<sp/>uuid)<sp/>:<sp/>Uuid{uuid}<sp/>{}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_uuid_component" kindref="compound">UuidComponent</ref>&amp;<sp/>rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Uuid<sp/>==<sp/>rhs.Uuid;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Utils::uuid&amp;<sp/>rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Uuid<sp/>==<sp/>rhs;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_uuid_component" kindref="compound">UuidComponent</ref>&amp;<sp/>rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Uuid<sp/>!=<sp/>rhs.Uuid;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Utils::uuid&amp;<sp/>rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Uuid<sp/>!=<sp/>rhs;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_uuid_component" kindref="compound">UuidComponent</ref><sp/>Generate()<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_uuid_component" kindref="compound">UuidComponent</ref>{Utils::uuid::Generate()};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_uuid_component" kindref="compound">UuidComponent</ref><sp/>Null()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_uuid_component" kindref="compound">UuidComponent</ref>{Utils::uuid{}};<sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>Utils::uuid<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Uuid{};</highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="struct_bvr_1_1_s_parent_component" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_s_parent_component" kindref="compound">SParentComponent</ref><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bvr_1_1_t_entity" kindref="compound">Bvr::TEntity</ref><sp/>first{};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bvr_1_1_t_entity" kindref="compound">Bvr::TEntity</ref><sp/>last{};</highlight></codeline>
<codeline lineno="61"><highlight class="normal">};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="struct_bvr_1_1_s_hierarchy_component" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_s_hierarchy_component" kindref="compound">SHierarchyComponent</ref><sp/>{</highlight></codeline>
<codeline lineno="67" refid="struct_bvr_1_1_s_hierarchy_component_1ab7d8a3faf16dffc94122db267daf5ac4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bvr_1_1_t_entity" kindref="compound">Bvr::TEntity</ref><sp/><ref refid="struct_bvr_1_1_s_hierarchy_component_1ab7d8a3faf16dffc94122db267daf5ac4" kindref="member">parentId</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="69" refid="struct_bvr_1_1_s_hierarchy_component_1abc63689c358638dda655f68694e96f89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bvr_1_1_t_entity" kindref="compound">Bvr::TEntity</ref><sp/><ref refid="struct_bvr_1_1_s_hierarchy_component_1abc63689c358638dda655f68694e96f89" kindref="member">next</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="71" refid="struct_bvr_1_1_s_hierarchy_component_1a482d2f19de7d034665ad5f71b3f54829" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bvr_1_1_t_entity" kindref="compound">Bvr::TEntity</ref><sp/><ref refid="struct_bvr_1_1_s_hierarchy_component_1a482d2f19de7d034665ad5f71b3f54829" kindref="member">prev</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="72"><highlight class="normal">};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="struct_bvr_1_1_transform_component" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_transform_component" kindref="compound">TransformComponent</ref><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_bvr_1_1_transform_component" kindref="compound">TransformComponent</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_bvr_1_1_transform_component" kindref="compound">TransformComponent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mat4<sp/>trns)<sp/>{<sp/>Decompose(trns);<sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>mat4<sp/><sp/><sp/>GetTransform()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="struct_bvr_1_1_transform_component_1a581a1116275f774f423f1d7c796e3a14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float3<sp/><ref refid="struct_bvr_1_1_transform_component_1a581a1116275f774f423f1d7c796e3a14" kindref="member">Up</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>glm::rotate(glm::normalize(m_rotation),<sp/>MathConstants::UpVec);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="struct_bvr_1_1_transform_component_1a90bfb2f3005dda2e3ee869c3e17395e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float3<sp/><ref refid="struct_bvr_1_1_transform_component_1a90bfb2f3005dda2e3ee869c3e17395e4" kindref="member">Front</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>glm::rotate(glm::normalize(m_rotation),<sp/>MathConstants::FrontVec);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="struct_bvr_1_1_transform_component_1aa600bc70fe043fabb41bb36774e5010b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float3<sp/><ref refid="struct_bvr_1_1_transform_component_1aa600bc70fe043fabb41bb36774e5010b" kindref="member">Right</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>glm::rotate(glm::normalize(m_rotation),<sp/>MathConstants::RightVec);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_bvr_1_1_transform_component" kindref="compound">TransformComponent</ref>&amp;<sp/>RotateAround(float3<sp/>pivotPoint,<sp/>float3<sp/>axis,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float3<sp/>vec<sp/><sp/><sp/><sp/>=<sp/>m_translation;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float3<sp/>vec2<sp/><sp/><sp/>=<sp/>vec<sp/>-<sp/>pivotPoint;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>pivotPoint<sp/>+<sp/>vec2;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_translation<sp/>=<sp/>vec;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_rotation<sp/>*=<sp/>glm::angleAxis(angle,<sp/>axis);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TransformComponent&amp;<sp/>SetTransform(mat4<sp/>trns)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Decompose(trns);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TransformComponent&amp;<sp/><ref refid="struct_bvr_1_1_transform_component_1a581a1116275f774f423f1d7c796e3a14" kindref="member">Up</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float3&amp;<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_rotation<sp/>=<sp/>glm::rotation(MathConstants::UpVec,<sp/>val);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TransformComponent&amp;<sp/><ref refid="struct_bvr_1_1_transform_component_1a90bfb2f3005dda2e3ee869c3e17395e4" kindref="member">Front</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float3&amp;<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_rotation<sp/>=<sp/>glm::rotation(MathConstants::FrontVec,<sp/>val);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TransformComponent&amp;<sp/><ref refid="struct_bvr_1_1_transform_component_1aa600bc70fe043fabb41bb36774e5010b" kindref="member">Right</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float3&amp;<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_rotation<sp/>=<sp/>glm::rotation(MathConstants::RightVec,<sp/>val);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TransformComponent&amp;<sp/>LookAt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float3<sp/>wPos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float3<sp/>up)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_rotation<sp/>=<sp/>glm::quatLookAtLH(glm::normalize(wPos<sp/>-<sp/>m_translation),</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::normalize(up));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TransformComponent&amp;<sp/>Rotate(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float3&amp;<sp/>euler)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quat<sp/>rhs{euler};</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_rotation<sp/>*=<sp/>glm::inverse(m_rotation)<sp/>*<sp/>rhs<sp/>*<sp/>m_rotation;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TransformComponent&amp;<sp/>Rotate(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float3<sp/>axis,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_rotation<sp/>*=<sp/>glm::angleAxis(angle,<sp/>axis);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>quat<sp/><sp/><sp/>m_rotation{glm::identity&lt;quat&gt;()};</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>float3<sp/>m_translation{0.f};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>float3<sp/>m_scale{1.f};</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Decompose(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mat4<sp/>m);</highlight></codeline>
<codeline lineno="151"><highlight class="normal">};</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="struct_bvr_1_1_world_space_transform" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_bvr_1_1_world_space_transform" kindref="compound">WorldSpaceTransform</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_bvr_1_1_transform_component" kindref="compound">TransformComponent</ref><sp/>{};</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Bvr</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/CoreComponents.hpp"/>
  </compounddef>
</doxygen>

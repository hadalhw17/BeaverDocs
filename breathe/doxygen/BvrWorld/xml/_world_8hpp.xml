<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_world_8hpp" kind="file" language="C++">
    <compoundname>World.hpp</compoundname>
    <includes refid="_core_components_8hpp" local="yes">CoreComponents.hpp</includes>
    <includes local="yes">Utils/Assert.hpp</includes>
    <includes refid="_world_defs_8hpp" local="yes">WorldDefs.hpp</includes>
    <includes local="no">Utils/Registry.hpp</includes>
    <includes local="no">BvrApp/ResourceMap.hpp</includes>
    <includes local="no">BvrApp/AppTraits.hpp</includes>
    <includes local="no">IO/AssetHandle.hpp</includes>
    <includes local="no">span</includes>
    <includedby refid="_entity_8hpp" local="yes">/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/Entity.hpp</includedby>
    <includedby refid="_scene_8hpp" local="no">/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/Scene.hpp</includedby>
    <incdepgraph>
      <node id="3">
        <label>WorldDefs.hpp</label>
        <link refid="_world_defs_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>BvrApp/AppTraits.hpp</label>
      </node>
      <node id="6">
        <label>Utils/uuid.hpp</label>
      </node>
      <node id="5">
        <label>Meta/PropertyTraits.hpp</label>
      </node>
      <node id="11">
        <label>IO/AssetHandle.hpp</label>
      </node>
      <node id="2">
        <label>CoreComponents.hpp</label>
        <link refid="_core_components_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>Utils/Assert.hpp</label>
      </node>
      <node id="1">
        <label>/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp</label>
        <link refid="_world_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Utils/Registry.hpp</label>
      </node>
      <node id="12">
        <label>span</label>
      </node>
      <node id="4">
        <label>Utils/EntityHandle.hpp</label>
      </node>
      <node id="9">
        <label>BvrApp/ResourceMap.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/Scene.hpp</label>
        <link refid="_scene_8hpp"/>
      </node>
      <node id="2">
        <label>/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/Entity.hpp</label>
        <link refid="_entity_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp</label>
        <link refid="_world_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/Components.hpp</label>
        <link refid="_components_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/WorldArchive.hpp</label>
        <link refid="_world_archive_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_bvr_1_1_c_world" prot="public">Bvr::CWorld</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_is_world_resource_3_01_t_01_4" prot="public">Bvr::Detail::IsWorldResource&lt; T &gt;</innerclass>
    <innernamespace refid="namespace_bvr">Bvr</innernamespace>
    <innernamespace refid="namespace_bvr_1_1_detail">Bvr::Detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CoreComponents.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Utils/Assert.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;WorldDefs.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Utils/Registry.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;BvrApp/ResourceMap.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;BvrApp/AppTraits.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;IO/AssetHandle.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;span&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Bvr<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>EEntityDuplicateFlags<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>None<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>KeepUUIDs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Bit32(0),</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>ForceAddParents<sp/><sp/>=<sp/>Bit32(1),</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>ForceAddChildren<sp/>=<sp/>Bit32(2),</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>ForceAddAll<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ForceAddParents<sp/>|<sp/>ForceAddChildren,</highlight></codeline>
<codeline lineno="22"><highlight class="normal">};</highlight></codeline>
<codeline lineno="23"><highlight class="normal">BVR_ENUM_OPERATORS(EEntityDuplicateFlags);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="class_bvr_1_1_c_world" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>InPlaceRelease<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_bvr_1_1_c_world_1a61468e62ebac166003fb836a561b459f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bvr_1_1_c_world_1a61468e62ebac166003fb836a561b459f" kindref="member">CWorld</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isPaused<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>attachSignals<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>noexcept;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref>()<sp/>noexcept<sp/>=<sp/>default;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref>(const<sp/><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref>&amp;<sp/>rhs)<sp/>noexcept;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref>(<ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref>&amp;&amp;<sp/>rhs)<sp/>noexcept;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref>&amp;<sp/><sp/><sp/><sp/><sp/>operator=(const<sp/><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref>&amp;<sp/>rhs)<sp/>noexcept;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref>&amp;<sp/><sp/><sp/><sp/><sp/>operator=(<ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref>&amp;&amp;<sp/>rhs)<sp/>noexcept;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref>&amp;<sp/><sp/><sp/><sp/><sp/>SetPath(const<sp/>std::string_view<sp/>path);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>GetPath()<sp/>const;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>Reg&amp;<sp/><sp/>GetRegistry()<sp/>const;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>Reg&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetRegistry();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="class_bvr_1_1_c_world_1ae06622898e7a2c2f9aa7b3390df02f9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>CompT&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_bvr_1_1_c_world_1ae06622898e7a2c2f9aa7b3390df02f9e" kindref="member">Has</ref>(const<sp/><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref><sp/>hEnt)<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_reg.Has&lt;CompT&gt;(hEnt);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CompT&gt;</highlight></codeline>
<codeline lineno="60" refid="class_bvr_1_1_c_world_1ac11a23aa33b31bedb5d40234e012631d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>decltype(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/><ref refid="class_bvr_1_1_c_world_1ac11a23aa33b31bedb5d40234e012631d" kindref="member">GetComponent</ref>(const<sp/><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref><sp/>hEnt)<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BvrAssert(Has&lt;CompT&gt;(hEnt),</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>get<sp/>component<sp/>that<sp/>wasn&apos;t<sp/>created!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)-&gt;m_reg.get&lt;CompT&gt;(hEnt);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CompT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="73" refid="class_bvr_1_1_c_world_1a59213f160c03994202d0eb6807e06583" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>decltype(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/><ref refid="class_bvr_1_1_c_world_1a59213f160c03994202d0eb6807e06583" kindref="member">AddComponent</ref>(const<sp/><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref><sp/>hEnt,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args&amp;&amp;...<sp/>args)<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BvrAssert(!Has&lt;CompT&gt;(hEnt),</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>add<sp/>component<sp/>multiple<sp/>times<sp/>to<sp/>the<sp/>same<sp/>entity!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)-&gt;m_reg.emplace&lt;CompT&gt;(</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hEnt,<sp/>std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CompT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="87" refid="class_bvr_1_1_c_world_1a7db8c477e169f41147cf1576dff8693a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>decltype(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/><ref refid="class_bvr_1_1_c_world_1a7db8c477e169f41147cf1576dff8693a" kindref="member">AddOrReplace</ref>(const<sp/><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref><sp/>hEnt,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args&amp;&amp;...<sp/>args)<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)-&gt;m_reg.emplace_or_replace&lt;CompT&gt;(</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hEnt,<sp/>std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CompT&gt;</highlight></codeline>
<codeline lineno="97" refid="class_bvr_1_1_c_world_1ad686429e8aafaba69cebe93cab861d1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_bvr_1_1_c_world_1ad686429e8aafaba69cebe93cab861d1a" kindref="member">RemoveComponent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref><sp/>hEnt)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BvrAssert(Has&lt;CompT&gt;(hEnt),</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>get<sp/>component<sp/>that<sp/>wasn&apos;t<sp/>created!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)-&gt;m_reg.remove&lt;CompT&gt;(hEnt)<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="class_bvr_1_1_c_world_1a7895f34293c6385caa41f073c724c2a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_bvr_1_1_c_world_1a7895f34293c6385caa41f073c724c2a3" kindref="member">SetSelf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Handle&lt;CWorld&gt;&amp;<sp/>hWorld)<sp/>{<sp/>m_hSelf<sp/>=<sp/>hWorld.ToWeak();<sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="class_bvr_1_1_c_world_1a5e3884b7cf6cb91c5beb56efb9809037" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Handle&lt;CWorld&gt;<sp/><ref refid="class_bvr_1_1_c_world_1a5e3884b7cf6cb91c5beb56efb9809037" kindref="member">GetSelf</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_hSelf;<sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="class_bvr_1_1_c_world_1a83208a43489f0df592ad1e9cc2e97056" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_bvr_1_1_c_world_1a83208a43489f0df592ad1e9cc2e97056" kindref="member">AddChild</ref>(<ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref><sp/>hTo,<sp/><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref><sp/>hChild)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="class_bvr_1_1_c_world_1ac0f19d4fab1d39924ba0e6febce1dc9d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref><sp/><ref refid="class_bvr_1_1_c_world_1ac0f19d4fab1d39924ba0e6febce1dc9d" kindref="member">CreateChild</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref><sp/>hTo,<sp/>std::string_view<sp/>name<sp/>=<sp/>{},</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Utils::uuid&amp;<sp/>uuid<sp/>=<sp/>{})<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="class_bvr_1_1_c_world_1a31fb94749e3aa890185d4f70cbb037ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_bvr_1_1_c_world_1a31fb94749e3aa890185d4f70cbb037ec" kindref="member">RemoveChild</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref><sp/>hFrom,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref><sp/>hChild);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="class_bvr_1_1_c_world_1a2ff190748f63efcb41274283a40cd3bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref><sp/><ref refid="class_bvr_1_1_c_world_1a2ff190748f63efcb41274283a40cd3bd" kindref="member">CreateEntity</ref>(<ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref><sp/>parent)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="class_bvr_1_1_c_world_1a797dda45d5fbe7f45bdda1f2696a6162" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref><sp/><ref refid="class_bvr_1_1_c_world_1a797dda45d5fbe7f45bdda1f2696a6162" kindref="member">CreateEntity</ref>(std::string_view<sp/><sp/><sp/>name,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Utils::uuid&amp;<sp/>uuid<sp/>=<sp/>{})<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="class_bvr_1_1_c_world_1a1a97e61dd08d3a0e4ceb9a09c06c85f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_bvr_1_1_c_world_1a1a97e61dd08d3a0e4ceb9a09c06c85f3" kindref="member">RemoveEntity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref><sp/>hEnt);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></highlight></codeline>
<codeline lineno="156" refid="class_bvr_1_1_c_world_1a152b649055e8f68ff46fc36da85b0932" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bvr_1_1_c_world_1a152b649055e8f68ff46fc36da85b0932" kindref="member">DuplicateEntity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref>&amp;<sp/>src,<sp/><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref>*<sp/>pDstWorld,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EEntityDuplicateFlags<sp/>flags<sp/>=<sp/>EEntityDuplicateFlags::None);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="class_bvr_1_1_c_world_1ad3e72a5087b954792f8f6cad7980aa1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;TEntity,<sp/>TEntity&gt;<sp/><ref refid="class_bvr_1_1_c_world_1ad3e72a5087b954792f8f6cad7980aa1a" kindref="member">DuplicateEntities</ref>(</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::span&lt;TEntity<sp/>const&gt;<sp/>srcEntities,<sp/><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref>*<sp/>pDstWorld,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EEntityDuplicateFlags<sp/>flags<sp/>=<sp/>EEntityDuplicateFlags::None);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CompT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>ExtraT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>ExcludeT&gt;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_bvr_1_1_e_c_s_1_1_t_query" kindref="compound">Query</ref>(<ref refid="struct_bvr_1_1_e_c_s_1_1_with_out" kindref="compound">WithOut&lt;ExcludeT...&gt;</ref><sp/>exclude<sp/>=<sp/>{})<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_reg.Query&lt;<ref refid="struct_bvr_1_1_e_c_s_1_1_with" kindref="compound">With</ref>&lt;CompT,<sp/>ExtraT...&gt;,<sp/><ref refid="struct_bvr_1_1_e_c_s_1_1_with_out" kindref="compound">WithOut</ref>&lt;ExcludeT...&gt;&gt;();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CompT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>ExtraT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>ExcludeT&gt;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Query(WithOut&lt;ExcludeT...&gt;<sp/>exclude<sp/>=<sp/>{})<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_reg.Query&lt;With&lt;CompT,<sp/>ExtraT...&gt;,<sp/>WithOut&lt;ExcludeT...&gt;&gt;();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetSimulationEnabled(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bEnabled)<sp/>{<sp/>m_bSimulating<sp/>=<sp/>bEnabled;<sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GetSimulationEnabled()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_bSimulating;<sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetIsPaused(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isPaused)<sp/>{<sp/>m_isPaused<sp/>=<sp/>isPaused;<sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsPaused()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_isPaused;<sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>TRootsQuery<sp/>=</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_bvr_1_1_e_c_s_1_1_t_query" kindref="compound">Bvr::Query&lt;With&lt;UuidComponent&gt;</ref>,<sp/>WithOut&lt;SHierarchyComponent&gt;&gt;;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Fn&gt;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>TraverseScene(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Fn&amp;<sp/>fn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TRootsQuery&amp;<sp/>roots,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_bvr_1_1_e_c_s_1_1_t_query" kindref="compound">Bvr::Query</ref>&lt;With&lt;SHierarchyComponent&gt;&gt;&amp;<sp/>hierarchies,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_bvr_1_1_e_c_s_1_1_t_query" kindref="compound">Bvr::Query</ref>&lt;With&lt;SParentComponent&gt;&gt;&amp;<sp/><sp/><sp/><sp/>parents)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>hRoot<sp/>:<sp/>roots)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEntity<sp/>hEnt{hRoot};</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TraverseSceneImpl({},<sp/>hEnt,<sp/>fn,<sp/>hierarchies,<sp/>parents);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="class_bvr_1_1_c_world_1a49fc9a98672fa2ea5cf2b7ea2048223b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_bvr_1_1_c_world_1a49fc9a98672fa2ea5cf2b7ea2048223b" kindref="member">PublishUpdate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref><sp/>hEnt)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BvrAssert(Has&lt;T&gt;(hEnt),<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>component!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_reg.patch&lt;T&gt;(hEnt);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="class_bvr_1_1_c_world_1ab1aa0f5fb4121fa68a1076d9c1bb4df8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/><ref refid="class_bvr_1_1_e_c_s_1_1_t_basic_sparse_set" kindref="compound">TComponentStorage</ref>&amp;<sp/><ref refid="class_bvr_1_1_c_world_1ab1aa0f5fb4121fa68a1076d9c1bb4df8" kindref="member">GetComponentStorage</ref>()<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_reg.Storage&lt;T&gt;();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/>T*<sp/>GetResource()<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_resources.Get&lt;T&gt;();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="class_bvr_1_1_c_world_1a1653c42e1bf08159ebfc2f3ef4fcd140" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_bvr_1_1_c_world_1a1653c42e1bf08159ebfc2f3ef4fcd140" kindref="member">Insert</ref>(U&amp;&amp;<sp/>resource)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_resources.Insert&lt;T,<sp/>U&gt;(std::forward&lt;U&gt;(resource));</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="227" refid="class_bvr_1_1_c_world_1ab1fe4767c5ea4647a4ff092d96cd212b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>decltype(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/><ref refid="class_bvr_1_1_c_world_1ab1fe4767c5ea4647a4ff092d96cd212b" kindref="member">CreateResource</ref>(Args&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_resources.Create&lt;T&gt;(std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="class_bvr_1_1_c_world_1a5d9288d331bed33ea599393f09e7b6f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_bvr_1_1_c_world_1a5d9288d331bed33ea599393f09e7b6f2" kindref="member">RemoveResource</ref>()<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_resources.Remove&lt;T&gt;();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="class_bvr_1_1_c_world_1ad2149f719e13fb80fd6eb07559c07c3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_bvr_1_1_c_world_1ad2149f719e13fb80fd6eb07559c07c3b" kindref="member">ClearResources</ref>()<sp/>{<sp/>m_resources.Clear();<sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref><sp/><sp/><sp/><sp/><sp/><sp/>Clone()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Fn&gt;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TraverseSceneImpl(</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref><sp/>parent,<sp/><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref>&amp;<sp/>ent,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Fn&amp;<sp/>fn,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_bvr_1_1_e_c_s_1_1_t_query" kindref="compound">Bvr::Query</ref>&lt;<ref refid="struct_bvr_1_1_e_c_s_1_1_with" kindref="compound">With&lt;SHierarchyComponent&gt;</ref>&gt;&amp;<sp/>hierarchies,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_bvr_1_1_e_c_s_1_1_t_query" kindref="compound">Bvr::Query</ref>&lt;<ref refid="struct_bvr_1_1_e_c_s_1_1_with" kindref="compound">With&lt;SParentComponent&gt;</ref>&gt;&amp;<sp/><sp/><sp/><sp/>parents)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ent)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref><sp/>backtrack{};</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ent)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parents.contains(ent))<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hierarchies.contains(ent))</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backtrack<sp/>=<sp/>hierarchies.get&lt;SHierarchyComponent&gt;(ent).next;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn(ent,<sp/>parent);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEntity<sp/>savedParent<sp/>=<sp/>ent;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>parents.get&lt;SParentComponent&gt;(ent).first;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TraverseSceneImpl(savedParent,<sp/>ent,<sp/>fn,<sp/>hierarchies,<sp/>parents);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ent<sp/>&amp;&amp;<sp/>!backtrack)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ent)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn(ent,<sp/>parent);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ent<sp/>&amp;&amp;<sp/>hierarchies.contains(ent))<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent<sp/>=<sp/>hierarchies.get&lt;SHierarchyComponent&gt;(ent).next;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(backtrack)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>backtrack;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backtrack<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ent<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Init(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>attachSignals);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CloneFrom(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_bvr_1_1_c_world_1a61468e62ebac166003fb836a561b459f" kindref="member">CWorld</ref>&amp;<sp/>from,<sp/><ref refid="class_bvr_1_1_c_world_1a61468e62ebac166003fb836a561b459f" kindref="member">CWorld</ref>&amp;<sp/>to);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::unordered_map&lt;TEntity,<sp/>TEntity&gt;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bvr_1_1_c_world_1ad3e72a5087b954792f8f6cad7980aa1a" kindref="member">DuplicateEntities</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_bvr_1_1_c_world_1a61468e62ebac166003fb836a561b459f" kindref="member">CWorld</ref>&amp;<sp/>srcWorld,<sp/>std::span&lt;TEntity<sp/>const&gt;<sp/>entities,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_bvr_1_1_c_world_1a61468e62ebac166003fb836a561b459f" kindref="member">CWorld</ref>&amp;<sp/>dstWorld,<sp/>EEntityDuplicateFlags<sp/>flags);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>Handle&lt;CWorld&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_hSelf{};</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>CResourceMap<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_resources{};</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>Reg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_reg;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_currentLevelPath{};</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Indicates<sp/>weather<sp/>main<sp/>simulation<sp/>is<sp/>running<sp/>(probably<sp/>temporary)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_bSimulating<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Indicated<sp/>weather<sp/>the<sp/>executor<sp/>should<sp/>run<sp/>this<sp/>world</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_isPaused<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal">};</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Detail<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::convertible_to&lt;CWorld&gt;<sp/>T&gt;</highlight></codeline>
<codeline lineno="300" refid="struct_bvr_1_1_detail_1_1_is_world_resource_3_01_t_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IsWorldResource&lt;T&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::true_type<sp/>{};</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TRes,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TOut&gt;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ExtractWorldResource(<ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref>&amp;<sp/>world,<sp/>TOut&amp;<sp/>out)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>world.GetResource&lt;TRes&gt;();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>CompT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>ExcludeT&gt;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>ExtractQuery(<ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWorld,</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_bvr_1_1_e_c_s_1_1_t_query" kindref="compound">Query</ref>&lt;<ref refid="struct_bvr_1_1_e_c_s_1_1_with" kindref="compound">With&lt;CompT...&gt;</ref>,<sp/><ref refid="struct_bvr_1_1_e_c_s_1_1_with_out" kindref="compound">WithOut&lt;ExcludeT...&gt;</ref>&gt;&amp;<sp/>out)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>pWorld.Query&lt;CompT...&gt;(<ref refid="struct_bvr_1_1_e_c_s_1_1_with_out" kindref="compound">WithOut</ref>&lt;ExcludeT...&gt;{});</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Bvr</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp"/>
  </compounddef>
</doxygen>

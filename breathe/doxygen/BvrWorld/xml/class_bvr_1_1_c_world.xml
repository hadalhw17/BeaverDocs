<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_bvr_1_1_c_world" kind="class" language="C++" prot="public">
    <compoundname>Bvr::CWorld</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_bvr_1_1_c_world_1a6f16557b24ece1954ec48911cedf6632" prot="public" static="no">
        <type><ref refid="class_bvr_1_1_e_c_s_1_1_t_query" kindref="compound">Bvr::Query</ref>&lt; <ref refid="struct_bvr_1_1_e_c_s_1_1_with" kindref="compound">With</ref>&lt; <ref refid="struct_bvr_1_1_uuid_component" kindref="compound">UuidComponent</ref> &gt;, <ref refid="struct_bvr_1_1_e_c_s_1_1_with_out" kindref="compound">WithOut</ref>&lt; <ref refid="struct_bvr_1_1_s_hierarchy_component" kindref="compound">SHierarchyComponent</ref> &gt; &gt;</type>
        <definition>using Bvr::CWorld::TRootsQuery =  Bvr::Query&lt;With&lt;UuidComponent&gt;, WithOut&lt;SHierarchyComponent&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>TRootsQuery</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="173" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="174" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_c_world_1a1375957ce574761c064831a665b3e051" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Bvr::CWorld::InPlaceRelease</definition>
        <argsstring></argsstring>
        <name>InPlaceRelease</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="17" column="27" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_c_world_1a145746c80844b4ad630bc44bb1783a5a" prot="private" static="no" mutable="no">
        <type>Handle&lt; <ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> &gt;</type>
        <definition>Handle&lt;CWorld&gt; Bvr::CWorld::m_hSelf</definition>
        <argsstring></argsstring>
        <name>m_hSelf</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="272" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_c_world_1aa0d0e59bb416c492409a52b88dea6689" prot="private" static="no" mutable="no">
        <type>CResourceMap</type>
        <definition>CResourceMap Bvr::CWorld::m_resources</definition>
        <argsstring></argsstring>
        <name>m_resources</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="273" column="29" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_c_world_1ac13f77de934a21652a0819b4ada81d3f" prot="private" static="no" mutable="no">
        <type>Reg</type>
        <definition>Reg Bvr::CWorld::m_reg</definition>
        <argsstring></argsstring>
        <name>m_reg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="274" column="29" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_c_world_1a880ea9825296fd8c6820dbc6985a048a" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Bvr::CWorld::m_currentLevelPath</definition>
        <argsstring></argsstring>
        <name>m_currentLevelPath</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="276" column="29" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_c_world_1a5722cfe7e5af368b3f6d87a57cfe6694" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Bvr::CWorld::m_bSimulating</definition>
        <argsstring></argsstring>
        <name>m_bSimulating</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="279" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_c_world_1a2c148d0e70adca2bd7a01101cd5d7ec4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Bvr::CWorld::m_isPaused</definition>
        <argsstring></argsstring>
        <name>m_isPaused</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="281" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="281" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a807bda042dd65266f7d9b0f440884a9b" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::CWorld::CWorld</definition>
        <argsstring>() noexcept</argsstring>
        <name>CWorld</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construt default world <bold>Note that the default state of the world is paused</bold> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="21" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a0eeaa324e82a75f135a20f1a8e6180b8" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::CWorld::CWorld</definition>
        <argsstring>(bool isPaused) noexcept</argsstring>
        <name>CWorld</name>
        <param>
          <type>bool</type>
          <declname>isPaused</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct the world with state <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>isPaused</parametername>
</parameternamelist>
<parameterdescription>
<para>indicates weather the world should be paused </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="25" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a36d0b1a3d4eb6ea4e33567b7026b0141" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::CWorld::~CWorld</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>~CWorld</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="27" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1ab1ee0453411d182a28811af94058490e" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::CWorld::CWorld</definition>
        <argsstring>(const CWorld &amp;rhs) noexcept</argsstring>
        <name>CWorld</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="29" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a86eddc6406a22a47f1b050dc60ed1abe" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::CWorld::CWorld</definition>
        <argsstring>(CWorld &amp;&amp;rhs) noexcept</argsstring>
        <name>CWorld</name>
        <param>
          <type><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="30" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a36a362f86f0364457379b32966d16e94" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> &amp;</type>
        <definition>CWorld&amp; Bvr::CWorld::operator=</definition>
        <argsstring>(const CWorld &amp;rhs) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="31" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a66eabb8a193b3abf4a92b12b63f98ac7" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> &amp;</type>
        <definition>CWorld&amp; Bvr::CWorld::operator=</definition>
        <argsstring>(CWorld &amp;&amp;rhs) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="32" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a4961d8429adf2bdfa17f8c3ccef5a3fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> &amp;</type>
        <definition>CWorld&amp; Bvr::CWorld::SetPath</definition>
        <argsstring>(const std::string_view path)</argsstring>
        <name>SetPath</name>
        <param>
          <type>const std::string_view</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="34" column="35"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1ad75c5e43bf55a13059203f444141adc0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* Bvr::CWorld::GetPath</definition>
        <argsstring>() const</argsstring>
        <name>GetPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="35" column="35"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1ac76ea81c7a3ea4802a253043ea5ff9a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const Reg &amp;</type>
        <definition>const Reg&amp; Bvr::CWorld::GetRegistry</definition>
        <argsstring>() const</argsstring>
        <name>GetRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="37" column="35"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a11815f7212088e620fe8faccb818af70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Reg &amp;</type>
        <definition>Reg&amp; Bvr::CWorld::GetRegistry</definition>
        <argsstring>()</argsstring>
        <name>GetRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="38" column="35"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1ae06622898e7a2c2f9aa7b3390df02f9e" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CompT</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Bvr::CWorld::Has</definition>
        <argsstring>(const TEntity hEnt) const noexcept</argsstring>
        <name>Has</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks weather an entity has a component of type CompT <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hEnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Entity handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if entity has a component of type CompT </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="43" column="22" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="43" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1ac11a23aa33b31bedb5d40234e012631d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CompT</type>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) Bvr::CWorld::GetComponent</definition>
        <argsstring>(const TEntity hEnt) const noexcept</argsstring>
        <name>GetComponent</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets component of type CompT from entity. <bold>Note that this function doesn&apos;t check for presense of a component, this needs to be done manually.</bold> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hEnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Entity handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Component reference of type CompT </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="53" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="53" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a59213f160c03994202d0eb6807e06583" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CompT</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) Bvr::CWorld::AddComponent</definition>
        <argsstring>(const TEntity hEnt, Args &amp;&amp;... args) const noexcept</argsstring>
        <name>AddComponent</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a component of type CompT to entity. <bold>Note that component of the same type cannot be added multiple times to the same entity.</bold> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hEnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Entity handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>Arguments to be forwarded to CompT constructor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>created component reference of type CompT </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="66" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="66" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a7db8c477e169f41147cf1576dff8693a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CompT</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) Bvr::CWorld::AddOrReplace</definition>
        <argsstring>(const TEntity hEnt, Args &amp;&amp;... args) const noexcept</argsstring>
        <name>AddOrReplace</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a component of type CompT to entity if component of type CompT wasn&apos;t added before, otherwise replaces it. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hEnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Entity handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>Arguments to be forwarded to CompT constructor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>created component reference of type CompT </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="81" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="81" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1ad686429e8aafaba69cebe93cab861d1a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CompT</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Bvr::CWorld::RemoveComponent</definition>
        <argsstring>(const TEntity hEnt) const noexcept</argsstring>
        <name>RemoveComponent</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove component of type CompT from entity. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hEnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Entity handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if component was removed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="91" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="91" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a7895f34293c6385caa41f073c724c2a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::CWorld::SetSelf</definition>
        <argsstring>(const Handle&lt; CWorld &gt; &amp;hWorld)</argsstring>
        <name>SetSelf</name>
        <param>
          <type>const Handle&lt; <ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> &gt; &amp;</type>
          <declname>hWorld</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets a handle to self. The function ensures that the handle is weak to avoid circular dependencies </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="100" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a5e3884b7cf6cb91c5beb56efb9809037" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Handle&lt; <ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> &gt;</type>
        <definition>Handle&lt;CWorld&gt; Bvr::CWorld::GetSelf</definition>
        <argsstring>() const</argsstring>
        <name>GetSelf</name>
        <briefdescription>
<para>Returs a <bold>weak</bold> handle to self. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="103" column="12" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a83208a43489f0df592ad1e9cc2e97056" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::CWorld::AddChild</definition>
        <argsstring>(TEntity hTo, TEntity hChild) const</argsstring>
        <name>AddChild</name>
        <param>
          <type><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hTo</declname>
        </param>
        <param>
          <type><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hChild</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parent one entity to another. Configures SHierarcyComponent and <ref refid="struct_bvr_1_1_s_parent_component" kindref="compound">SParentComponent</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hTo</parametername>
</parameternamelist>
<parameterdescription>
<para>Parent entity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hChild</parametername>
</parameternamelist>
<parameterdescription>
<para>Entity to be attached as to hTo </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="109" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1aecda1d69764a8031ee5cd6b6d4d8a2ea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
        <definition>TEntity Bvr::CWorld::CreateChild</definition>
        <argsstring>(const TEntity hTo, const std::string_view &amp;name={}) const</argsstring>
        <name>CreateChild</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hTo</declname>
        </param>
        <param>
          <type>const std::string_view &amp;</type>
          <declname>name</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a child for entity Configures SHierarcyComponent and <ref refid="struct_bvr_1_1_s_parent_component" kindref="compound">SParentComponent</ref> If name is not provided, then entity will be named as *&lt;parent_name&gt;_child* <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hTo</parametername>
</parameternamelist>
<parameterdescription>
<para>Parent entity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>optional name of an entity </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Created entity handle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="118" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a31fb94749e3aa890185d4f70cbb037ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::CWorld::RemoveChild</definition>
        <argsstring>(const TEntity hFrom, const TEntity hChild)</argsstring>
        <name>RemoveChild</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hFrom</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hChild</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Detaches entity from parent. Note that detached entity is not removed from the world. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hFrom</parametername>
</parameternamelist>
<parameterdescription>
<para>Parent entity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hChild</parametername>
</parameternamelist>
<parameterdescription>
<para>Child to be detached </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="125" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a2ff190748f63efcb41274283a40cd3bd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
        <definition>TEntity Bvr::CWorld::CreateEntity</definition>
        <argsstring>(TEntity parent) const</argsstring>
        <name>CreateEntity</name>
        <param>
          <type><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a child for entity if parent is a valid entity <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hTo</parametername>
</parameternamelist>
<parameterdescription>
<para>Parent entity </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Created entity handle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="130" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a2a0962f40efd2f1a310bbfb819def4f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
        <definition>TEntity Bvr::CWorld::CreateEntity</definition>
        <argsstring>(const std::string_view &amp;name) const</argsstring>
        <name>CreateEntity</name>
        <param>
          <type>const std::string_view &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create entity with name. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of entity to be created </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Created entity handle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="135" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a1a97e61dd08d3a0e4ceb9a09c06c85f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::CWorld::RemoveEntity</definition>
        <argsstring>(const TEntity hEnt)</argsstring>
        <name>RemoveEntity</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete entity from the world <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hEnt</parametername>
</parameternamelist>
<parameterdescription>
<para>entity to be deleted </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="139" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1aa20f4a25c5f1cb0c9c45db997781bf39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
        <definition>TEntity Bvr::CWorld::DuplicateEntity</definition>
        <argsstring>(const TEntity &amp;src, CWorld *pDstWorld)</argsstring>
        <name>DuplicateEntity</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> *</type>
          <declname>pDstWorld</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a copy of an entity with all components in a specified world. It is possible to provide itself or nullptr as world to just duplicate entity. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>entity to be copied </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pDstWorld</parametername>
</parameternamelist>
<parameterdescription>
<para>World to which entity will be copied </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Duplicated entity </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="147" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a9cea1dbff4c0d55d8c854bf91698b7d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unordered_map&lt; <ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref>, <ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref> &gt;</type>
        <definition>std::unordered_map&lt;TEntity, TEntity&gt; Bvr::CWorld::DuplicateEntities</definition>
        <argsstring>(std::span&lt; TEntity const &gt; srcEntities, CWorld *pDstWorld)</argsstring>
        <name>DuplicateEntities</name>
        <param>
          <type>std::span&lt; <ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref> const &gt;</type>
          <declname>srcEntities</declname>
        </param>
        <param>
          <type><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> *</type>
          <declname>pDstWorld</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a copy of each entity and their children in the list. It is possible to provide itself or nullptr as world to just duplicate entity. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>entity to be copied </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pDstWorld</parametername>
</parameternamelist>
<parameterdescription>
<para>World to which entity will be copied </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Map [original: created] of duplicated entities </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="156" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a291a037d6ae88d2131feeaded4487fb8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CompT</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>ExtraT</declname>
            <defname>ExtraT</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>ExcludeT</declname>
            <defname>ExcludeT</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Bvr::CWorld::Query</definition>
        <argsstring>(WithOut&lt; ExcludeT... &gt; exclude={}) const</argsstring>
        <name>Query</name>
        <param>
          <type><ref refid="struct_bvr_1_1_e_c_s_1_1_with_out" kindref="compound">WithOut</ref>&lt; ExcludeT... &gt;</type>
          <declname>exclude</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="159" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1af9416507d9e33c54abbd415af1f2dac5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CompT</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>ExtraT</declname>
            <defname>ExtraT</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>ExcludeT</declname>
            <defname>ExcludeT</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Bvr::CWorld::Query</definition>
        <argsstring>(WithOut&lt; ExcludeT... &gt; exclude={})</argsstring>
        <name>Query</name>
        <param>
          <type><ref refid="struct_bvr_1_1_e_c_s_1_1_with_out" kindref="compound">WithOut</ref>&lt; ExcludeT... &gt;</type>
          <declname>exclude</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="163" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="163" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a59bb057f82c7b95e3885bd1df13b340d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::CWorld::SetSimulationEnabled</definition>
        <argsstring>(const bool bEnabled)</argsstring>
        <name>SetSimulationEnabled</name>
        <param>
          <type>const bool</type>
          <declname>bEnabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="167" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="167" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a5e38520e93cee4025d746c97bbcc525c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::CWorld::GetSimulationEnabled</definition>
        <argsstring>() const</argsstring>
        <name>GetSimulationEnabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="168" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="168" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a4649cc7bd67d4b8322159984a89421a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::CWorld::SetIsPaused</definition>
        <argsstring>(const bool isPaused)</argsstring>
        <name>SetIsPaused</name>
        <param>
          <type>const bool</type>
          <declname>isPaused</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="170" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="170" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a292271db2b86fa9929d24c3b1b63794d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::CWorld::IsPaused</definition>
        <argsstring>() const</argsstring>
        <name>IsPaused</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="171" column="23" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="171" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a49fc9a98672fa2ea5cf2b7ea2048223b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Bvr::CWorld::PublishUpdate</definition>
        <argsstring>(const TEntity hEnt)</argsstring>
        <name>PublishUpdate</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send update singal for component of type &lt;T&gt; <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hEnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Entity owning component &lt;T&gt; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="188" column="22" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="188" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1ab1aa0f5fb4121fa68a1076d9c1bb4df8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_bvr_1_1_e_c_s_1_1_t_basic_sparse_set" kindref="compound">TComponentStorage</ref> &amp;</type>
        <definition>TComponentStorage&amp; Bvr::CWorld::GetComponentStorage</definition>
        <argsstring>()</argsstring>
        <name>GetComponentStorage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get underlying sparse set for componet &lt;T&gt; <simplesect kind="return"><para>Component storage </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="195" column="35" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="195" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a69a30a95e22e8a5e6244c46cf992f42c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* Bvr::CWorld::GetResource</definition>
        <argsstring>()</argsstring>
        <name>GetResource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="200" column="19" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="200" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a1653c42e1bf08159ebfc2f3ef4fcd140" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Bvr::CWorld::Insert</definition>
        <argsstring>(U &amp;&amp;resource)</argsstring>
        <name>Insert</name>
        <param>
          <type>U &amp;&amp;</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inserts the resource of type T Inserts previously constructed instance of the resource without claiming its ownership Does nothing if resource of type T already exists </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="207" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="207" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1ab1fe4767c5ea4647a4ff092d96cd212b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) Bvr::CWorld::CreateResource</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>CreateResource</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs the resource of type T with specified arguments instance. Does nothing if resource of type T already exists <simplesect kind="return"><para>reference to the resource that was created or that already existed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="215" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="215" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a5d9288d331bed33ea599393f09e7b6f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Bvr::CWorld::RemoveResource</definition>
        <argsstring>()</argsstring>
        <name>RemoveResource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove the resource Does nothing if resource wasn&apos;t created </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="221" column="22" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="221" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a15f04da99c629ce1f59a887fd0c88215" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref></type>
        <definition>CWorld Bvr::CWorld::Clone</definition>
        <argsstring>() const</argsstring>
        <name>Clone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="226" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a342068bf114b607f0255f2a2df5763a4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Fn</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void Bvr::CWorld::TraverseScene</definition>
        <argsstring>(const Fn &amp;fn, const TRootsQuery &amp;roots, const Bvr::Query&lt; With&lt; SHierarchyComponent &gt;&gt; &amp;hierarchies, const Bvr::Query&lt; With&lt; SParentComponent &gt;&gt; &amp;parents)</argsstring>
        <name>TraverseScene</name>
        <param>
          <type>const Fn &amp;</type>
          <declname>fn</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_e_c_s_1_1_t_query" kindref="compound">TRootsQuery</ref> &amp;</type>
          <declname>roots</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_e_c_s_1_1_t_query" kindref="compound">Bvr::Query</ref>&lt; <ref refid="struct_bvr_1_1_e_c_s_1_1_with" kindref="compound">With</ref>&lt; <ref refid="struct_bvr_1_1_s_hierarchy_component" kindref="compound">SHierarchyComponent</ref> &gt;&gt; &amp;</type>
          <declname>hierarchies</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_e_c_s_1_1_t_query" kindref="compound">Bvr::Query</ref>&lt; <ref refid="struct_bvr_1_1_e_c_s_1_1_with" kindref="compound">With</ref>&lt; <ref refid="struct_bvr_1_1_s_parent_component" kindref="compound">SParentComponent</ref> &gt;&gt; &amp;</type>
          <declname>parents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="177" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="177" bodyend="184"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_bvr_1_1_c_world_1af55aa0ee2a47a641403ae0eaf00593a6" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Fn</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void Bvr::CWorld::TraverseSceneImpl</definition>
        <argsstring>(TEntity parent, TEntity &amp;ent, const Fn &amp;fn, const Bvr::Query&lt; With&lt; SHierarchyComponent &gt;&gt; &amp;hierarchies, const Bvr::Query&lt; With&lt; SParentComponent &gt;&gt; &amp;parents)</argsstring>
        <name>TraverseSceneImpl</name>
        <param>
          <type><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref> &amp;</type>
          <declname>ent</declname>
        </param>
        <param>
          <type>const Fn &amp;</type>
          <declname>fn</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_e_c_s_1_1_t_query" kindref="compound">Bvr::Query</ref>&lt; <ref refid="struct_bvr_1_1_e_c_s_1_1_with" kindref="compound">With</ref>&lt; <ref refid="struct_bvr_1_1_s_hierarchy_component" kindref="compound">SHierarchyComponent</ref> &gt;&gt; &amp;</type>
          <declname>hierarchies</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_e_c_s_1_1_t_query" kindref="compound">Bvr::Query</ref>&lt; <ref refid="struct_bvr_1_1_e_c_s_1_1_with" kindref="compound">With</ref>&lt; <ref refid="struct_bvr_1_1_s_parent_component" kindref="compound">SParentComponent</ref> &gt;&gt; &amp;</type>
          <declname>parents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="229" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="229" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1ab84132fa34ef98f56724e491936bb068" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Bvr::CWorld::CloneFrom</definition>
        <argsstring>(const CWorld &amp;from, CWorld &amp;to)</argsstring>
        <name>CloneFrom</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="265" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_world_1ae74de3133a18a667957dfebda68b61fd" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unordered_map&lt; <ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref>, <ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref> &gt;</type>
        <definition>static std::unordered_map&lt;TEntity, TEntity&gt; Bvr::CWorld::DuplicateEntities</definition>
        <argsstring>(const CWorld &amp;srcWorld, std::span&lt; TEntity const &gt; entities, CWorld &amp;dstWorld)</argsstring>
        <name>DuplicateEntities</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> &amp;</type>
          <declname>srcWorld</declname>
        </param>
        <param>
          <type>std::span&lt; <ref refid="class_bvr_1_1_t_entity" kindref="compound">TEntity</ref> const &gt;</type>
          <declname>entities</declname>
        </param>
        <param>
          <type><ref refid="class_bvr_1_1_c_world" kindref="compound">CWorld</ref> &amp;</type>
          <declname>dstWorld</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="268" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_bvr_1_1_c_world_1a3103b315d34d7aa294498c2a392ce6d8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::CWorld::Init</definition>
        <argsstring>()</argsstring>
        <name>Init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="264" column="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" line="15" column="1" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrWorld/World.hpp" bodystart="15" bodyend="282"/>
    <listofallmembers>
      <member refid="class_bvr_1_1_c_world_1a83208a43489f0df592ad1e9cc2e97056" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>AddChild</name></member>
      <member refid="class_bvr_1_1_c_world_1a59213f160c03994202d0eb6807e06583" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>AddComponent</name></member>
      <member refid="class_bvr_1_1_c_world_1a7db8c477e169f41147cf1576dff8693a" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>AddOrReplace</name></member>
      <member refid="class_bvr_1_1_c_world_1a15f04da99c629ce1f59a887fd0c88215" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>Clone</name></member>
      <member refid="class_bvr_1_1_c_world_1ab84132fa34ef98f56724e491936bb068" prot="private" virt="non-virtual"><scope>Bvr::CWorld</scope><name>CloneFrom</name></member>
      <member refid="class_bvr_1_1_c_world_1aecda1d69764a8031ee5cd6b6d4d8a2ea" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>CreateChild</name></member>
      <member refid="class_bvr_1_1_c_world_1a2ff190748f63efcb41274283a40cd3bd" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>CreateEntity</name></member>
      <member refid="class_bvr_1_1_c_world_1a2a0962f40efd2f1a310bbfb819def4f1" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>CreateEntity</name></member>
      <member refid="class_bvr_1_1_c_world_1ab1fe4767c5ea4647a4ff092d96cd212b" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>CreateResource</name></member>
      <member refid="class_bvr_1_1_c_world_1a807bda042dd65266f7d9b0f440884a9b" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>CWorld</name></member>
      <member refid="class_bvr_1_1_c_world_1a0eeaa324e82a75f135a20f1a8e6180b8" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>CWorld</name></member>
      <member refid="class_bvr_1_1_c_world_1ab1ee0453411d182a28811af94058490e" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>CWorld</name></member>
      <member refid="class_bvr_1_1_c_world_1a86eddc6406a22a47f1b050dc60ed1abe" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>CWorld</name></member>
      <member refid="class_bvr_1_1_c_world_1a9cea1dbff4c0d55d8c854bf91698b7d4" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>DuplicateEntities</name></member>
      <member refid="class_bvr_1_1_c_world_1ae74de3133a18a667957dfebda68b61fd" prot="private" virt="non-virtual"><scope>Bvr::CWorld</scope><name>DuplicateEntities</name></member>
      <member refid="class_bvr_1_1_c_world_1aa20f4a25c5f1cb0c9c45db997781bf39" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>DuplicateEntity</name></member>
      <member refid="class_bvr_1_1_c_world_1ac11a23aa33b31bedb5d40234e012631d" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>GetComponent</name></member>
      <member refid="class_bvr_1_1_c_world_1ab1aa0f5fb4121fa68a1076d9c1bb4df8" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>GetComponentStorage</name></member>
      <member refid="class_bvr_1_1_c_world_1ad75c5e43bf55a13059203f444141adc0" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>GetPath</name></member>
      <member refid="class_bvr_1_1_c_world_1ac76ea81c7a3ea4802a253043ea5ff9a3" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>GetRegistry</name></member>
      <member refid="class_bvr_1_1_c_world_1a11815f7212088e620fe8faccb818af70" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>GetRegistry</name></member>
      <member refid="class_bvr_1_1_c_world_1a69a30a95e22e8a5e6244c46cf992f42c" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>GetResource</name></member>
      <member refid="class_bvr_1_1_c_world_1a5e3884b7cf6cb91c5beb56efb9809037" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>GetSelf</name></member>
      <member refid="class_bvr_1_1_c_world_1a5e38520e93cee4025d746c97bbcc525c" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>GetSimulationEnabled</name></member>
      <member refid="class_bvr_1_1_c_world_1ae06622898e7a2c2f9aa7b3390df02f9e" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>Has</name></member>
      <member refid="class_bvr_1_1_c_world_1a3103b315d34d7aa294498c2a392ce6d8" prot="private" virt="non-virtual"><scope>Bvr::CWorld</scope><name>Init</name></member>
      <member refid="class_bvr_1_1_c_world_1a1375957ce574761c064831a665b3e051" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>InPlaceRelease</name></member>
      <member refid="class_bvr_1_1_c_world_1a1653c42e1bf08159ebfc2f3ef4fcd140" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>Insert</name></member>
      <member refid="class_bvr_1_1_c_world_1a292271db2b86fa9929d24c3b1b63794d" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>IsPaused</name></member>
      <member refid="class_bvr_1_1_c_world_1a5722cfe7e5af368b3f6d87a57cfe6694" prot="private" virt="non-virtual"><scope>Bvr::CWorld</scope><name>m_bSimulating</name></member>
      <member refid="class_bvr_1_1_c_world_1a880ea9825296fd8c6820dbc6985a048a" prot="private" virt="non-virtual"><scope>Bvr::CWorld</scope><name>m_currentLevelPath</name></member>
      <member refid="class_bvr_1_1_c_world_1a145746c80844b4ad630bc44bb1783a5a" prot="private" virt="non-virtual"><scope>Bvr::CWorld</scope><name>m_hSelf</name></member>
      <member refid="class_bvr_1_1_c_world_1a2c148d0e70adca2bd7a01101cd5d7ec4" prot="private" virt="non-virtual"><scope>Bvr::CWorld</scope><name>m_isPaused</name></member>
      <member refid="class_bvr_1_1_c_world_1ac13f77de934a21652a0819b4ada81d3f" prot="private" virt="non-virtual"><scope>Bvr::CWorld</scope><name>m_reg</name></member>
      <member refid="class_bvr_1_1_c_world_1aa0d0e59bb416c492409a52b88dea6689" prot="private" virt="non-virtual"><scope>Bvr::CWorld</scope><name>m_resources</name></member>
      <member refid="class_bvr_1_1_c_world_1a36a362f86f0364457379b32966d16e94" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>operator=</name></member>
      <member refid="class_bvr_1_1_c_world_1a66eabb8a193b3abf4a92b12b63f98ac7" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>operator=</name></member>
      <member refid="class_bvr_1_1_c_world_1a49fc9a98672fa2ea5cf2b7ea2048223b" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>PublishUpdate</name></member>
      <member refid="class_bvr_1_1_c_world_1a291a037d6ae88d2131feeaded4487fb8" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>Query</name></member>
      <member refid="class_bvr_1_1_c_world_1af9416507d9e33c54abbd415af1f2dac5" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>Query</name></member>
      <member refid="class_bvr_1_1_c_world_1a31fb94749e3aa890185d4f70cbb037ec" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>RemoveChild</name></member>
      <member refid="class_bvr_1_1_c_world_1ad686429e8aafaba69cebe93cab861d1a" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>RemoveComponent</name></member>
      <member refid="class_bvr_1_1_c_world_1a1a97e61dd08d3a0e4ceb9a09c06c85f3" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>RemoveEntity</name></member>
      <member refid="class_bvr_1_1_c_world_1a5d9288d331bed33ea599393f09e7b6f2" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>RemoveResource</name></member>
      <member refid="class_bvr_1_1_c_world_1a4649cc7bd67d4b8322159984a89421a0" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>SetIsPaused</name></member>
      <member refid="class_bvr_1_1_c_world_1a4961d8429adf2bdfa17f8c3ccef5a3fd" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>SetPath</name></member>
      <member refid="class_bvr_1_1_c_world_1a7895f34293c6385caa41f073c724c2a3" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>SetSelf</name></member>
      <member refid="class_bvr_1_1_c_world_1a59bb057f82c7b95e3885bd1df13b340d" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>SetSimulationEnabled</name></member>
      <member refid="class_bvr_1_1_c_world_1a342068bf114b607f0255f2a2df5763a4" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>TraverseScene</name></member>
      <member refid="class_bvr_1_1_c_world_1af55aa0ee2a47a641403ae0eaf00593a6" prot="private" virt="non-virtual"><scope>Bvr::CWorld</scope><name>TraverseSceneImpl</name></member>
      <member refid="class_bvr_1_1_c_world_1a6f16557b24ece1954ec48911cedf6632" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>TRootsQuery</name></member>
      <member refid="class_bvr_1_1_c_world_1a36d0b1a3d4eb6ea4e33567b7026b0141" prot="public" virt="non-virtual"><scope>Bvr::CWorld</scope><name>~CWorld</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_bvr_1_1_renderer_1_1_c_shader_reflection" kind="class" language="C++" prot="public">
    <compoundname>Bvr::Renderer::CShaderReflection</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_renderer_1_1_c_shader_reflection_1a4649fd9802105d5c2ca6f5b6bf80e2ca" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; Impl &gt;</type>
        <definition>std::unique_ptr&lt;Impl&gt; Bvr::Renderer::CShaderReflection::m_pImpl</definition>
        <argsstring></argsstring>
        <name>m_pImpl</name>
        <qualifiedname>Bvr::Renderer::CShaderReflection::m_pImpl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/Shaders/Reflection.hpp" line="45" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/Shaders/Reflection.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_renderer_1_1_c_shader_reflection_1af3bf434fe999cac8f7a4b2c30922b1e0" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Bvr::Renderer::CShaderReflection::m_entryPoint</definition>
        <argsstring></argsstring>
        <name>m_entryPoint</name>
        <qualifiedname>Bvr::Renderer::CShaderReflection::m_entryPoint</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/Shaders/Reflection.hpp" line="47" column="27" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/Shaders/Reflection.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_renderer_1_1_c_shader_reflection_1a836e51a948ebd3981614e7b979cd57d5" prot="private" static="no" mutable="no">
        <type>EShaderType</type>
        <definition>EShaderType Bvr::Renderer::CShaderReflection::m_eShaderType</definition>
        <argsstring></argsstring>
        <name>m_eShaderType</name>
        <qualifiedname>Bvr::Renderer::CShaderReflection::m_eShaderType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/Shaders/Reflection.hpp" line="48" column="27" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/Shaders/Reflection.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_shader_reflection_1a3d573b5497094c8c9bb7ae63b3d79763" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::Renderer::CShaderReflection::CShaderReflection</definition>
        <argsstring>(const TShaderBlob &amp;blob, EShaderType eType) noexcept</argsstring>
        <name>CShaderReflection</name>
        <qualifiedname>Bvr::Renderer::CShaderReflection::CShaderReflection</qualifiedname>
        <param>
          <type>const TShaderBlob &amp;</type>
          <declname>blob</declname>
        </param>
        <param>
          <type>EShaderType</type>
          <declname>eType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/Shaders/Reflection.hpp" line="11" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_shader_reflection_1a144e17beb1d69c8934d754f197a12488" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::Renderer::CShaderReflection::~CShaderReflection</definition>
        <argsstring>()</argsstring>
        <name>~CShaderReflection</name>
        <qualifiedname>Bvr::Renderer::CShaderReflection::~CShaderReflection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/Shaders/Reflection.hpp" line="12" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_shader_reflection_1a4fc4a33a228098574e0c5da27b3a8671" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::Renderer::CShaderReflection::BuildPipelineLayout</definition>
        <argsstring>(std::map&lt; uint32, SDescriptorSetLayout &gt; &amp;layout) const noexcept</argsstring>
        <name>BuildPipelineLayout</name>
        <qualifiedname>Bvr::Renderer::CShaderReflection::BuildPipelineLayout</qualifiedname>
        <param>
          <type>std::map&lt; uint32, SDescriptorSetLayout &gt; &amp;</type>
          <declname>layout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/Shaders/Reflection.hpp" line="14" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_shader_reflection_1a540d8baee0a3a94675e8c2929508852b" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::Renderer::CShaderReflection::ReflectInputLayout</definition>
        <argsstring>(std::vector&lt; std::pair&lt; HashedString, uint32 &gt; &gt; &amp;semantics) const noexcept</argsstring>
        <name>ReflectInputLayout</name>
        <qualifiedname>Bvr::Renderer::CShaderReflection::ReflectInputLayout</qualifiedname>
        <param>
          <type>std::vector&lt; std::pair&lt; HashedString, uint32 &gt; &gt; &amp;</type>
          <declname>semantics</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/Shaders/Reflection.hpp" line="16" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_shader_reflection_1a7db50dddb8dcffa5618548cc74e3e621" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>SPushConstantRange</type>
        <definition>SPushConstantRange Bvr::Renderer::CShaderReflection::BuildPushConstantBlock</definition>
        <argsstring>(std::unordered_set&lt; SPushConstantDesc, SPushConstantDesc::SHash &gt; &amp;pushConstant, const std::unordered_map&lt; std::string_view, EPushConstants &gt; &amp;nameRemapping) const noexcept</argsstring>
        <name>BuildPushConstantBlock</name>
        <qualifiedname>Bvr::Renderer::CShaderReflection::BuildPushConstantBlock</qualifiedname>
        <param>
          <type>std::unordered_set&lt; SPushConstantDesc, SPushConstantDesc::SHash &gt; &amp;</type>
          <declname>pushConstant</declname>
        </param>
        <param>
          <type>const std::unordered_map&lt; std::string_view, EPushConstants &gt; &amp;</type>
          <declname>nameRemapping</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/Shaders/Reflection.hpp" line="18" column="24"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_shader_reflection_1a2c95f52f17989e2baba9983063fb2b75" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::Renderer::CShaderReflection::HasBufferWithName</definition>
        <argsstring>(const char *pName) const noexcept</argsstring>
        <name>HasBufferWithName</name>
        <qualifiedname>Bvr::Renderer::CShaderReflection::HasBufferWithName</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>pName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/Shaders/Reflection.hpp" line="24" column="11"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_shader_reflection_1a38f5bdff4dc6dd88b1dc25a7f6c501cc" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::Renderer::CShaderReflection::HasTextureWithName</definition>
        <argsstring>(const char *pName) const noexcept</argsstring>
        <name>HasTextureWithName</name>
        <qualifiedname>Bvr::Renderer::CShaderReflection::HasTextureWithName</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>pName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/Shaders/Reflection.hpp" line="25" column="11"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_shader_reflection_1a1c911007e44ecd81f86773fb2c85ebaf" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::Renderer::CShaderReflection::HasStreamWithName</definition>
        <argsstring>(const char *pName) const noexcept</argsstring>
        <name>HasStreamWithName</name>
        <qualifiedname>Bvr::Renderer::CShaderReflection::HasStreamWithName</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>pName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/Shaders/Reflection.hpp" line="26" column="11"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_shader_reflection_1a3a3a0061c5c6ea2236a209931518a7b8" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>EShaderType</type>
        <definition>EShaderType Bvr::Renderer::CShaderReflection::GetShaderStage</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetShaderStage</name>
        <qualifiedname>Bvr::Renderer::CShaderReflection::GetShaderStage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/Shaders/Reflection.hpp" line="28" column="25" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/Shaders/Reflection.hpp" bodystart="28" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_shader_reflection_1a3c514322027d941de108fd78645b5c46" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; Bvr::Renderer::CShaderReflection::GetEntryPoint</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetEntryPoint</name>
        <qualifiedname>Bvr::Renderer::CShaderReflection::GetEntryPoint</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/Shaders/Reflection.hpp" line="31" column="31" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/Shaders/Reflection.hpp" bodystart="31" bodyend="33"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_shader_reflection_1a77ebfab7a9f496ae954a19d02f34bcec" prot="private" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>uint32</type>
        <definition>uint32 Bvr::Renderer::CShaderReflection::CountDescriptors</definition>
        <argsstring>() const noexcept</argsstring>
        <name>CountDescriptors</name>
        <qualifiedname>Bvr::Renderer::CShaderReflection::CountDescriptors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/Shaders/Reflection.hpp" line="36" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_shader_reflection_1a842566791deeecf5a20860b9aee91924" prot="private" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Bvr::Renderer::CShaderReflection::GetIdxFromStage</definition>
        <argsstring>(EShaderType eType) const noexcept</argsstring>
        <name>GetIdxFromStage</name>
        <qualifiedname>Bvr::Renderer::CShaderReflection::GetIdxFromStage</qualifiedname>
        <param>
          <type>EShaderType</type>
          <declname>eType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/Shaders/Reflection.hpp" line="38" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_shader_reflection_1a6ced71fe03348ac7414f7f37dc1932c2" prot="private" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>EShaderType</type>
        <definition>EShaderType Bvr::Renderer::CShaderReflection::GetShaderStageImpl</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetShaderStageImpl</name>
        <qualifiedname>Bvr::Renderer::CShaderReflection::GetShaderStageImpl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/Shaders/Reflection.hpp" line="39" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_shader_reflection_1a3c7602896702d3d8bc15326ea2991f1e" prot="private" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Bvr::Renderer::CShaderReflection::GetEntryPointImpl</definition>
        <argsstring>(EShaderType eType) const noexcept</argsstring>
        <name>GetEntryPointImpl</name>
        <qualifiedname>Bvr::Renderer::CShaderReflection::GetEntryPointImpl</qualifiedname>
        <param>
          <type>EShaderType</type>
          <declname>eType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/Shaders/Reflection.hpp" line="41" column="5"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/Shaders/Reflection.hpp" line="9" column="1" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/Shaders/Reflection.hpp" bodystart="9" bodyend="49"/>
    <listofallmembers>
      <member refid="class_bvr_1_1_renderer_1_1_c_shader_reflection_1a4fc4a33a228098574e0c5da27b3a8671" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CShaderReflection</scope><name>BuildPipelineLayout</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_shader_reflection_1a7db50dddb8dcffa5618548cc74e3e621" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CShaderReflection</scope><name>BuildPushConstantBlock</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_shader_reflection_1a77ebfab7a9f496ae954a19d02f34bcec" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CShaderReflection</scope><name>CountDescriptors</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_shader_reflection_1a3d573b5497094c8c9bb7ae63b3d79763" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CShaderReflection</scope><name>CShaderReflection</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_shader_reflection_1a3c514322027d941de108fd78645b5c46" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CShaderReflection</scope><name>GetEntryPoint</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_shader_reflection_1a3c7602896702d3d8bc15326ea2991f1e" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CShaderReflection</scope><name>GetEntryPointImpl</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_shader_reflection_1a842566791deeecf5a20860b9aee91924" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CShaderReflection</scope><name>GetIdxFromStage</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_shader_reflection_1a3a3a0061c5c6ea2236a209931518a7b8" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CShaderReflection</scope><name>GetShaderStage</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_shader_reflection_1a6ced71fe03348ac7414f7f37dc1932c2" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CShaderReflection</scope><name>GetShaderStageImpl</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_shader_reflection_1a2c95f52f17989e2baba9983063fb2b75" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CShaderReflection</scope><name>HasBufferWithName</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_shader_reflection_1a1c911007e44ecd81f86773fb2c85ebaf" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CShaderReflection</scope><name>HasStreamWithName</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_shader_reflection_1a38f5bdff4dc6dd88b1dc25a7f6c501cc" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CShaderReflection</scope><name>HasTextureWithName</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_shader_reflection_1af3bf434fe999cac8f7a4b2c30922b1e0" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CShaderReflection</scope><name>m_entryPoint</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_shader_reflection_1a836e51a948ebd3981614e7b979cd57d5" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CShaderReflection</scope><name>m_eShaderType</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_shader_reflection_1a4649fd9802105d5c2ca6f5b6bf80e2ca" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CShaderReflection</scope><name>m_pImpl</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_shader_reflection_1a540d8baee0a3a94675e8c2929508852b" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CShaderReflection</scope><name>ReflectInputLayout</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_shader_reflection_1a144e17beb1d69c8934d754f197a12488" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CShaderReflection</scope><name>~CShaderReflection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

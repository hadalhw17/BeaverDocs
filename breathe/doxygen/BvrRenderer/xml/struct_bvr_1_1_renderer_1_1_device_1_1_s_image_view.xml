<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view" kind="struct" language="C++" prot="public">
    <compoundname>Bvr::Renderer::Device::SImageView</compoundname>
    <basecompoundref refid="class_bvr_1_1_renderer_1_1_detail_1_1_c_binding_invalidation_callback" prot="public" virt="non-virtual">Bvr::Renderer::Detail::CBindingInvalidationCallback</basecompoundref>
    <innerclass refid="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1_1_s_hash" prot="public">Bvr::Renderer::Device::SImageView::SHash</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1a0de6ce7c8651afc4c16a4206b750ad8e" prot="public" static="no" mutable="no">
        <type><ref refid="struct_bvr_1_1_renderer_1_1_device_1_1_s_view_key" kindref="compound">SViewKey</ref></type>
        <definition>SViewKey Bvr::Renderer::Device::SImageView::key</definition>
        <argsstring></argsstring>
        <name>key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/DeviceLayer/ImageView.hpp" line="73" column="35" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/DeviceLayer/ImageView.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1a7fa2bc91e16a263ce6e27bba88227e10" prot="public" static="no" mutable="no">
        <type>VkImageView</type>
        <definition>VkImageView Bvr::Renderer::Device::SImageView::vkView</definition>
        <argsstring></argsstring>
        <name>vkView</name>
        <initializer>= VK_NULL_HANDLE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/DeviceLayer/ImageView.hpp" line="74" column="35" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/DeviceLayer/ImageView.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1a71be48ce317f3002dfdb02d450749a70" prot="public" static="no" mutable="no">
        <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">THandle</ref>&lt; <ref refid="struct_bvr_1_1_texture" kindref="compound">Texture</ref> &gt;</type>
        <definition>THandle&lt;Texture&gt; Bvr::Renderer::Device::SImageView::hBaseTexture</definition>
        <argsstring></argsstring>
        <name>hBaseTexture</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/DeviceLayer/ImageView.hpp" line="76" column="26" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/DeviceLayer/ImageView.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1afeed8539cf5a2d643c8b1b6a5e8abcf6" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend Bvr::Renderer::Device::SImageView::CSwapchain</definition>
        <argsstring></argsstring>
        <name>CSwapchain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/DeviceLayer/ImageView.hpp" line="89" column="16" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/DeviceLayer/ImageView.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1adddb53ddcf3f5837434fd10fd16022ba" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Bvr::Renderer::Device::SImageView::Release</definition>
        <argsstring>(THandle&lt; ImageView &gt; hView, const CCommandList *pCmd=nullptr)</argsstring>
        <name>Release</name>
        <param>
          <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">THandle</ref>&lt; <ref refid="struct_bvr_1_1_renderer_1_1_image_view" kindref="compound">ImageView</ref> &gt;</type>
          <declname>hView</declname>
        </param>
        <param>
          <type>const CCommandList *</type>
          <declname>pCmd</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/DeviceLayer/ImageView.hpp" line="49" column="21"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1acabb8c3c980d2dff96c332602b95bb44" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view" kindref="compound">SImageView</ref> *</type>
        <definition>static SImageView* Bvr::Renderer::Device::SImageView::Get</definition>
        <argsstring>(THandle&lt; ImageView &gt; hView)</argsstring>
        <name>Get</name>
        <param>
          <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">THandle</ref>&lt; <ref refid="struct_bvr_1_1_renderer_1_1_image_view" kindref="compound">ImageView</ref> &gt;</type>
          <declname>hView</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/DeviceLayer/ImageView.hpp" line="56" column="28"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1aa0099ab4761f5db3ad6d42c9d9b214f0" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">THandle</ref>&lt; <ref refid="struct_bvr_1_1_renderer_1_1_image_view" kindref="compound">ImageView</ref> &gt;</type>
        <definition>static THandle&lt;ImageView&gt; Bvr::Renderer::Device::SImageView::GetImageView</definition>
        <argsstring>(THandle&lt; Texture &gt; hTexture, ESamplerType eSamplerType, uint32 firstMip, uint32 mipCount, uint32 firstSlice, uint32 sliceCount) noexcept</argsstring>
        <name>GetImageView</name>
        <param>
          <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">THandle</ref>&lt; <ref refid="struct_bvr_1_1_texture" kindref="compound">Texture</ref> &gt;</type>
          <declname>hTexture</declname>
        </param>
        <param>
          <type>ESamplerType</type>
          <declname>eSamplerType</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>firstMip</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>mipCount</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>firstSlice</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>sliceCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/DeviceLayer/ImageView.hpp" line="78" column="24"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1a3a32f05d094e0991fc3f76f5ad8e61a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::Renderer::Device::SImageView::SImageView</definition>
        <argsstring>()=default</argsstring>
        <name>SImageView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/DeviceLayer/ImageView.hpp" line="52" column="9"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1a513173e06ae11cdfe3dadc89d0521c28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::Renderer::Device::SImageView::~SImageView</definition>
        <argsstring>()</argsstring>
        <name>~SImageView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/DeviceLayer/ImageView.hpp" line="53" column="9"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1a713c36d59de18f54d804eb9743feef77" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>VkImageView</type>
        <definition>VkImageView Bvr::Renderer::Device::SImageView::GetVkView</definition>
        <argsstring>() const</argsstring>
        <name>GetVkView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/DeviceLayer/ImageView.hpp" line="55" column="42"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1a62dbd8d213eb6ac5ff98c7264d80bd8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::Renderer::Device::SImageView::SetDebugName</definition>
        <argsstring>(const char *name)</argsstring>
        <name>SetDebugName</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/DeviceLayer/ImageView.hpp" line="58" column="42"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1a5d4eff9528a181b5e7dcfdc9bb49f977" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::Renderer::Device::SImageView::operator==</definition>
        <argsstring>(const SImageView *rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view" kindref="compound">SImageView</ref> *</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/DeviceLayer/ImageView.hpp" line="60" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/DeviceLayer/ImageView.hpp" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1a4b48c8de753252624286094a2a1abb3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::Renderer::Device::SImageView::operator==</definition>
        <argsstring>(const SImageView *rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view" kindref="compound">SImageView</ref> *</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/DeviceLayer/ImageView.hpp" line="63" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/DeviceLayer/ImageView.hpp" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1af1a8e02ca59c7bc43090cef0a9fb238e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::Renderer::Device::SImageView::operator!=</definition>
        <argsstring>(const SImageView *rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view" kindref="compound">SImageView</ref> *</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/DeviceLayer/ImageView.hpp" line="66" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/DeviceLayer/ImageView.hpp" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1aa2ad026742e10356cf1978f3ba56d8ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::Renderer::Device::SImageView::operator!=</definition>
        <argsstring>(const SImageView *rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view" kindref="compound">SImageView</ref> *</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/DeviceLayer/ImageView.hpp" line="69" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/DeviceLayer/ImageView.hpp" bodystart="69" bodyend="71"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1a893542c1aeb1c4151d686f6c47376b98" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">THandle</ref>&lt; <ref refid="struct_bvr_1_1_renderer_1_1_image_view" kindref="compound">ImageView</ref> &gt;</type>
        <definition>static THandle&lt;ImageView&gt; Bvr::Renderer::Device::SImageView::CreateImageView</definition>
        <argsstring>(THandle&lt; Texture &gt; hTex, CTexture *pTexture, const SViewKey &amp;key)</argsstring>
        <name>CreateImageView</name>
        <param>
          <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">THandle</ref>&lt; <ref refid="struct_bvr_1_1_texture" kindref="compound">Texture</ref> &gt;</type>
          <declname>hTex</declname>
        </param>
        <param>
          <type>CTexture *</type>
          <declname>pTexture</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_renderer_1_1_device_1_1_s_view_key" kindref="compound">SViewKey</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/DeviceLayer/ImageView.hpp" line="85" column="24"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Bvr::Renderer::Device::SImageView</label>
        <link refid="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Bvr::Renderer::Detail::CBindingInvalidationCallback</label>
        <link refid="class_bvr_1_1_renderer_1_1_detail_1_1_c_binding_invalidation_callback"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Bvr::Renderer::Device::SImageView</label>
        <link refid="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>key</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>hBaseTexture</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Bvr::Renderer::Device::SViewKey</label>
        <link refid="struct_bvr_1_1_renderer_1_1_device_1_1_s_view_key"/>
      </node>
      <node id="4">
        <label>Bvr::THandle&lt; Bvr::Texture &gt;</label>
        <link refid="struct_bvr_1_1_t_handle"/>
      </node>
      <node id="2">
        <label>Bvr::Renderer::Detail::CBindingInvalidationCallback</label>
        <link refid="class_bvr_1_1_renderer_1_1_detail_1_1_c_binding_invalidation_callback"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/DeviceLayer/ImageView.hpp" line="32" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/DeviceLayer/ImageView.hpp" bodystart="33" bodyend="90"/>
    <listofallmembers>
      <member refid="class_bvr_1_1_renderer_1_1_detail_1_1_c_binding_invalidation_callback_1a71eff387296573a4d0dfee465800c9fc" prot="public" virt="non-virtual"><scope>Bvr::Renderer::Device::SImageView</scope><name>AddInvalidationCallback</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_detail_1_1_c_binding_invalidation_callback_1a823e2634981459d817391c702bd396d6" prot="public" virt="non-virtual"><scope>Bvr::Renderer::Device::SImageView</scope><name>CBindingInvalidationCallback</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1a893542c1aeb1c4151d686f6c47376b98" prot="private" virt="non-virtual"><scope>Bvr::Renderer::Device::SImageView</scope><name>CreateImageView</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1afeed8539cf5a2d643c8b1b6a5e8abcf6" prot="private" virt="non-virtual"><scope>Bvr::Renderer::Device::SImageView</scope><name>CSwapchain</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1acabb8c3c980d2dff96c332602b95bb44" prot="public" virt="non-virtual"><scope>Bvr::Renderer::Device::SImageView</scope><name>Get</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1aa0099ab4761f5db3ad6d42c9d9b214f0" prot="public" virt="non-virtual"><scope>Bvr::Renderer::Device::SImageView</scope><name>GetImageView</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1a713c36d59de18f54d804eb9743feef77" prot="public" virt="non-virtual"><scope>Bvr::Renderer::Device::SImageView</scope><name>GetVkView</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1a71be48ce317f3002dfdb02d450749a70" prot="public" virt="non-virtual"><scope>Bvr::Renderer::Device::SImageView</scope><name>hBaseTexture</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_detail_1_1_c_binding_invalidation_callback_1a1e21eb46f294aa0dfa9d1e0239a1092c" prot="public" virt="non-virtual"><scope>Bvr::Renderer::Device::SImageView</scope><name>InvalidationFn</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1a0de6ce7c8651afc4c16a4206b750ad8e" prot="public" virt="non-virtual"><scope>Bvr::Renderer::Device::SImageView</scope><name>key</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1af1a8e02ca59c7bc43090cef0a9fb238e" prot="public" virt="non-virtual"><scope>Bvr::Renderer::Device::SImageView</scope><name>operator!=</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1aa2ad026742e10356cf1978f3ba56d8ce" prot="public" virt="non-virtual"><scope>Bvr::Renderer::Device::SImageView</scope><name>operator!=</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1a5d4eff9528a181b5e7dcfdc9bb49f977" prot="public" virt="non-virtual"><scope>Bvr::Renderer::Device::SImageView</scope><name>operator==</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1a4b48c8de753252624286094a2a1abb3e" prot="public" virt="non-virtual"><scope>Bvr::Renderer::Device::SImageView</scope><name>operator==</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1adddb53ddcf3f5837434fd10fd16022ba" prot="public" virt="non-virtual"><scope>Bvr::Renderer::Device::SImageView</scope><name>Release</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_detail_1_1_c_binding_invalidation_callback_1a1116be7e8e22a35d2c7f4c857cf3b80e" prot="public" virt="non-virtual"><scope>Bvr::Renderer::Device::SImageView</scope><name>RemoveInvalicationCallback</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1a62dbd8d213eb6ac5ff98c7264d80bd8b" prot="public" virt="non-virtual"><scope>Bvr::Renderer::Device::SImageView</scope><name>SetDebugName</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1a3a32f05d094e0991fc3f76f5ad8e61a4" prot="public" virt="non-virtual"><scope>Bvr::Renderer::Device::SImageView</scope><name>SImageView</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1a7fa2bc91e16a263ce6e27bba88227e10" prot="public" virt="non-virtual"><scope>Bvr::Renderer::Device::SImageView</scope><name>vkView</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_detail_1_1_c_binding_invalidation_callback_1a90fab977da52500289cc28712e806ae4" prot="public" virt="virtual"><scope>Bvr::Renderer::Device::SImageView</scope><name>~CBindingInvalidationCallback</name></member>
      <member refid="struct_bvr_1_1_renderer_1_1_device_1_1_s_image_view_1a513173e06ae11cdfe3dadc89d0521c28" prot="public" virt="non-virtual"><scope>Bvr::Renderer::Device::SImageView</scope><name>~SImageView</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

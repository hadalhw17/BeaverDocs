<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_bvr_1_1_renderer_1_1_c_render_mesh" kind="class" language="C++" prot="public">
    <compoundname>Bvr::Renderer::CRenderMesh</compoundname>
    <includes refid="_render_mesh_8hpp" local="no">RenderMesh.hpp</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_bvr_1_1_renderer_1_1_c_render_mesh_1adcddccf08aba622668261cccd845d93f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class CRenderer</definition>
        <argsstring></argsstring>
        <name>CRenderer</name>
        <param>
          <type>CRenderer</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" line="51" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_renderer_1_1_c_render_mesh_1a47baf93c3bf48bc38df82f19cbd8df7f" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Bvr::Renderer::CRenderMesh::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" line="128" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_renderer_1_1_c_render_mesh_1a6887e53dda8dae0cb2eff0499db53dbe" prot="private" static="no" mutable="no">
        <type>std::array&lt; <ref refid="struct_bvr_1_1_renderer_1_1_s_vertex_stream" kindref="compound">SVertexStream</ref>, static_cast&lt; std::size_t &gt;EVertexAttribute::Count)&gt;</type>
        <definition>std::array&lt;SVertexStream, static_cast&lt;std::size_t&gt;EVertexAttribute::Count)&gt; Bvr::Renderer::CRenderMesh::m_streams</definition>
        <argsstring></argsstring>
        <name>m_streams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" line="130" column="33" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_renderer_1_1_c_render_mesh_1a1bfdc0915c56b92de193d4e9bb4cae05" prot="private" static="no" mutable="no">
        <type>CBuffer *</type>
        <definition>CBuffer* Bvr::Renderer::CRenderMesh::m_pVertexBuffer</definition>
        <argsstring></argsstring>
        <name>m_pVertexBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" line="131" column="32" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_renderer_1_1_c_render_mesh_1ad632da5a0fdfe7b5d1ba273bcee03d5f" prot="private" static="no" mutable="no">
        <type><ref refid="classstd_1_1vector" kindref="compound">std::vector</ref>&lt; <ref refid="struct_bvr_1_1_renderer_1_1_s_rend_primitive" kindref="compound">SRendPrimitive</ref> &gt;</type>
        <definition>std::vector&lt;SRendPrimitive&gt; Bvr::Renderer::CRenderMesh::m_rendPrimitives</definition>
        <argsstring></argsstring>
        <name>m_rendPrimitives</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" line="132" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_renderer_1_1_c_render_mesh_1ab5a26278383344f500401782422daf64" prot="private" static="no" mutable="no">
        <type>CBuffer *</type>
        <definition>CBuffer* Bvr::Renderer::CRenderMesh::m_pGPUMeshData</definition>
        <argsstring></argsstring>
        <name>m_pGPUMeshData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" line="133" column="32" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_renderer_1_1_c_render_mesh_1aa5abcbc62b52f46fff037112a70957e1" prot="private" static="no" mutable="no">
        <type>uint32</type>
        <definition>uint32 Bvr::Renderer::CRenderMesh::m_bindlessMeshId</definition>
        <argsstring></argsstring>
        <name>m_bindlessMeshId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" line="134" column="33" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_renderer_1_1_c_render_mesh_1abfaddd4590e5804e3e79faeb2a6effab" prot="private" static="no" mutable="no">
        <type>EPrimitiveTopology</type>
        <definition>EPrimitiveTopology Bvr::Renderer::CRenderMesh::m_topology</definition>
        <argsstring></argsstring>
        <name>m_topology</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" line="135" column="33" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" bodystart="135" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_render_mesh_1a9d8ca195581ac3eaa0772deb5aeceb51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::Renderer::CRenderMesh::CRenderMesh</definition>
        <argsstring>()</argsstring>
        <name>CRenderMesh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" line="54" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_render_mesh_1a0beb106ceedda78ef6bf11712ca79312" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::Renderer::CRenderMesh::~CRenderMesh</definition>
        <argsstring>()</argsstring>
        <name>~CRenderMesh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" line="55" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_render_mesh_1ad589acc66776e0241721168860cc132a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_renderer_1_1_s_vertex_stream" kindref="compound">SVertexStream</ref> *</type>
        <definition>SVertexStream* Bvr::Renderer::CRenderMesh::AllocateStream</definition>
        <argsstring>(EVertexAttribute eAttribute, const uint64 size, CBuffer *pDstBuffer=nullptr, const uint64 offset=0, const int customSize=0)</argsstring>
        <name>AllocateStream</name>
        <param>
          <type>EVertexAttribute</type>
          <declname>eAttribute</declname>
        </param>
        <param>
          <type>const uint64</type>
          <declname>size</declname>
        </param>
        <param>
          <type>CBuffer *</type>
          <declname>pDstBuffer</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>const uint64</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>customSize</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" line="58" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_render_mesh_1a1b4a64dea16e2bd37f5e9d0e268c3e4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_renderer_1_1_s_vertex_stream" kindref="compound">SVertexStream</ref> *</type>
        <definition>SVertexStream* Bvr::Renderer::CRenderMesh::CreateStream</definition>
        <argsstring>(CCommandList &amp;cmd, EVertexAttribute eAttribute, const SStreamSlice &amp;data, CBuffer *pDstBuffer=nullptr, const uint64 offset=0)</argsstring>
        <name>CreateStream</name>
        <param>
          <type>CCommandList &amp;</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>EVertexAttribute</type>
          <declname>eAttribute</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_basic_stream_slice" kindref="compound">SStreamSlice</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>CBuffer *</type>
          <declname>pDstBuffer</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>const uint64</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" line="63" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_render_mesh_1ae1c31bb58e18af91a7464466566b368a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_renderer_1_1_s_vertex_stream" kindref="compound">SVertexStream</ref> *</type>
        <definition>SVertexStream* Bvr::Renderer::CRenderMesh::GetStream</definition>
        <argsstring>(const EVertexAttribute eAttr)</argsstring>
        <name>GetStream</name>
        <param>
          <type>const EVertexAttribute</type>
          <declname>eAttr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" line="68" column="20"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_render_mesh_1a5194d14db84121bea4f0a86d2f4a19dc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="struct_bvr_1_1_renderer_1_1_s_vertex_stream" kindref="compound">SVertexStream</ref> *</type>
        <definition>const SVertexStream* Bvr::Renderer::CRenderMesh::GetStream</definition>
        <argsstring>(const EVertexAttribute eAttr) const</argsstring>
        <name>GetStream</name>
        <param>
          <type>const EVertexAttribute</type>
          <declname>eAttr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" line="70" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_render_mesh_1aa06597db546ecbb4eb490b5e8f7e0a74" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint64</type>
        <definition>uint64 Bvr::Renderer::CRenderMesh::GetStreamDeviceAddress</definition>
        <argsstring>(const EVertexAttribute eAttr) const</argsstring>
        <name>GetStreamDeviceAddress</name>
        <param>
          <type>const EVertexAttribute</type>
          <declname>eAttr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" line="72" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_render_mesh_1ae34037b857276e388fa4ae482dc2db20" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="struct_bvr_1_1_renderer_1_1_s_vertex_stream" kindref="compound">SVertexStream</ref> &amp;</type>
        <definition>const SVertexStream&amp; Bvr::Renderer::CRenderMesh::GetIndexStream</definition>
        <argsstring>() const</argsstring>
        <name>GetIndexStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" line="73" column="26" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_render_mesh_1a775fff3e3e26daa43c5a102e81ef18f2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::span&lt; const <ref refid="struct_bvr_1_1_renderer_1_1_s_vertex_stream" kindref="compound">SVertexStream</ref> &gt;</type>
        <definition>std::span&lt;const SVertexStream&gt; Bvr::Renderer::CRenderMesh::GetVertexStreams</definition>
        <argsstring>() const</argsstring>
        <name>GetVertexStreams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" line="76" column="16" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_render_mesh_1a3dc8e11c3de4e0c70784b510d3dc27ae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classstd_1_1vector" kindref="compound">std::vector</ref>&lt; <ref refid="struct_bvr_1_1_renderer_1_1_s_rend_primitive" kindref="compound">SRendPrimitive</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;SRendPrimitive&gt;&amp; Bvr::Renderer::CRenderMesh::GetRenderPrimitives</definition>
        <argsstring>() const</argsstring>
        <name>GetRenderPrimitives</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" line="81" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" bodystart="81" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_render_mesh_1a9ca02ed7cbe56e1426bb64bf3e2f8888" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classstd_1_1vector" kindref="compound">std::vector</ref>&lt; <ref refid="struct_bvr_1_1_renderer_1_1_s_rend_primitive" kindref="compound">SRendPrimitive</ref> &gt; &amp;</type>
        <definition>std::vector&lt;SRendPrimitive&gt;&amp; Bvr::Renderer::CRenderMesh::GetRenderPrimitives</definition>
        <argsstring>()</argsstring>
        <name>GetRenderPrimitives</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" line="84" column="18" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_render_mesh_1a229db01a3954af1b693905250906d932" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32</type>
        <definition>uint32 Bvr::Renderer::CRenderMesh::GetBindlessMeshId</definition>
        <argsstring>() const</argsstring>
        <name>GetBindlessMeshId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" line="88" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_render_mesh_1a3f00684d9f8a51288d6cf7507448e820" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string_view</type>
        <definition>std::string_view Bvr::Renderer::CRenderMesh::GetName</definition>
        <argsstring>() const</argsstring>
        <name>GetName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" line="90" column="23" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_render_mesh_1a0e98da4352224184a692c3803d3cd1e4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>EPrimitiveTopology</type>
        <definition>EPrimitiveTopology Bvr::Renderer::CRenderMesh::GetTopology</definition>
        <argsstring>() const</argsstring>
        <name>GetTopology</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" line="92" column="25" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_render_mesh_1a447462d749f3a101ff703ba2ab0ec504" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::Renderer::CRenderMesh::SetTopology</definition>
        <argsstring>(const EPrimitiveTopology topology)</argsstring>
        <name>SetTopology</name>
        <param>
          <type>const EPrimitiveTopology</type>
          <declname>topology</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" line="93" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_render_mesh_1ac445e42a48319ed70b0cd202c52c28c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::Renderer::CRenderMesh::UploadGeometry</definition>
        <argsstring>(CCommandList &amp;cmd, const std::span&lt; SMeshPrimitive const &gt; &amp;primitives, const std::span&lt; SVertex const &gt; &amp;geometry, const std::span&lt; uint32 const &gt; &amp;indices, const bool buildRT)</argsstring>
        <name>UploadGeometry</name>
        <param>
          <type>CCommandList &amp;</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>const std::span&lt; SMeshPrimitive const &gt; &amp;</type>
          <declname>primitives</declname>
        </param>
        <param>
          <type>const std::span&lt; SVertex const &gt; &amp;</type>
          <declname>geometry</declname>
        </param>
        <param>
          <type>const std::span&lt; uint32 const &gt; &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>buildRT</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" line="97" column="36"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_render_mesh_1ad3fdea168f6a442c944246fe7b2dc059" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::Renderer::CRenderMesh::UploadGeometry</definition>
        <argsstring>(CCommandList &amp;cmd, const std::span&lt; SMeshPrimitive const &gt; &amp;primitives, const SVertexStreamMap &amp;streams, const SStreamSlice &amp;indices, const bool buildRT)</argsstring>
        <name>UploadGeometry</name>
        <param>
          <type>CCommandList &amp;</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>const std::span&lt; SMeshPrimitive const &gt; &amp;</type>
          <declname>primitives</declname>
        </param>
        <param>
          <type>const SVertexStreamMap &amp;</type>
          <declname>streams</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_basic_stream_slice" kindref="compound">SStreamSlice</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>buildRT</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" line="103" column="36"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_render_mesh_1a3949546fbeb05e33c28bb9dd1a54314a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::Renderer::CRenderMesh::BuildBlas</definition>
        <argsstring>(CCommandList &amp;cmd)</argsstring>
        <name>BuildBlas</name>
        <param>
          <type>CCommandList &amp;</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" line="109" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_render_mesh_1abd59116a394cefebff326ce91ac92c45" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::Renderer::CRenderMesh::FlushGPUModelBuffer</definition>
        <argsstring>(CCommandList &amp;cmd)</argsstring>
        <name>FlushGPUModelBuffer</name>
        <param>
          <type>CCommandList &amp;</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" line="110" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_render_mesh_1a6ab81590abbaa79fef9b5831ad8b1729" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::Renderer::CRenderMesh::UnregisterPrimitive</definition>
        <argsstring>(const int i)</argsstring>
        <name>UnregisterPrimitive</name>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" line="111" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_render_mesh_1a91f2ce08aedb6946a3bd53d606928928" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::Renderer::CRenderMesh::UnregisterPrimitives</definition>
        <argsstring>()</argsstring>
        <name>UnregisterPrimitives</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" line="112" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_render_mesh_1ab116b091948d60f6e5a8678414e02b23" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::Renderer::CRenderMesh::UploadSliceContent</definition>
        <argsstring>(CCommandList &amp;cmd, SVertexStream *pStream, const SStreamSlice &amp;slice, const size_t offset) const</argsstring>
        <name>UploadSliceContent</name>
        <param>
          <type>CCommandList &amp;</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_renderer_1_1_s_vertex_stream" kindref="compound">SVertexStream</ref> *</type>
          <declname>pStream</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_basic_stream_slice" kindref="compound">SStreamSlice</ref> &amp;</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" line="114" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_renderer_1_1_c_render_mesh_1a9dbba14a4cf842e9f5c74f8f5bba42af" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::Renderer::CRenderMesh::UploadGeometryImpl</definition>
        <argsstring>(CCommandList &amp;cmd, const SStreamSlice &amp;indices, const SStreamSlice &amp;positions, const SStreamSlice &amp;normals, const SStreamSlice &amp;tangents, const SStreamSlice &amp;texCords, const SStreamSlice &amp;colours, const SStreamSlice &amp;weights, const SStreamSlice &amp;joints)</argsstring>
        <name>UploadGeometryImpl</name>
        <param>
          <type>CCommandList &amp;</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_basic_stream_slice" kindref="compound">SStreamSlice</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_basic_stream_slice" kindref="compound">SStreamSlice</ref> &amp;</type>
          <declname>positions</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_basic_stream_slice" kindref="compound">SStreamSlice</ref> &amp;</type>
          <declname>normals</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_basic_stream_slice" kindref="compound">SStreamSlice</ref> &amp;</type>
          <declname>tangents</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_basic_stream_slice" kindref="compound">SStreamSlice</ref> &amp;</type>
          <declname>texCords</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_basic_stream_slice" kindref="compound">SStreamSlice</ref> &amp;</type>
          <declname>colours</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_basic_stream_slice" kindref="compound">SStreamSlice</ref> &amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_basic_stream_slice" kindref="compound">SStreamSlice</ref> &amp;</type>
          <declname>joints</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" line="118" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Ideally just a GPU repdesentation of CMesh. Is a container for GPU streams and RendPrimitives </para>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" line="50" column="1" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Public/BvrRenderer/RenderMesh.hpp" bodystart="50" bodyend="136"/>
    <listofallmembers>
      <member refid="class_bvr_1_1_renderer_1_1_c_render_mesh_1ad589acc66776e0241721168860cc132a" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CRenderMesh</scope><name>AllocateStream</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_render_mesh_1a3949546fbeb05e33c28bb9dd1a54314a" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CRenderMesh</scope><name>BuildBlas</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_render_mesh_1a1b4a64dea16e2bd37f5e9d0e268c3e4b" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CRenderMesh</scope><name>CreateStream</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_render_mesh_1adcddccf08aba622668261cccd845d93f" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CRenderMesh</scope><name>CRenderer</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_render_mesh_1a9d8ca195581ac3eaa0772deb5aeceb51" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CRenderMesh</scope><name>CRenderMesh</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_render_mesh_1abd59116a394cefebff326ce91ac92c45" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CRenderMesh</scope><name>FlushGPUModelBuffer</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_render_mesh_1a229db01a3954af1b693905250906d932" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CRenderMesh</scope><name>GetBindlessMeshId</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_render_mesh_1ae34037b857276e388fa4ae482dc2db20" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CRenderMesh</scope><name>GetIndexStream</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_render_mesh_1a3f00684d9f8a51288d6cf7507448e820" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CRenderMesh</scope><name>GetName</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_render_mesh_1a3dc8e11c3de4e0c70784b510d3dc27ae" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CRenderMesh</scope><name>GetRenderPrimitives</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_render_mesh_1a9ca02ed7cbe56e1426bb64bf3e2f8888" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CRenderMesh</scope><name>GetRenderPrimitives</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_render_mesh_1ae1c31bb58e18af91a7464466566b368a" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CRenderMesh</scope><name>GetStream</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_render_mesh_1a5194d14db84121bea4f0a86d2f4a19dc" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CRenderMesh</scope><name>GetStream</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_render_mesh_1aa06597db546ecbb4eb490b5e8f7e0a74" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CRenderMesh</scope><name>GetStreamDeviceAddress</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_render_mesh_1a0e98da4352224184a692c3803d3cd1e4" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CRenderMesh</scope><name>GetTopology</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_render_mesh_1a775fff3e3e26daa43c5a102e81ef18f2" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CRenderMesh</scope><name>GetVertexStreams</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_render_mesh_1aa5abcbc62b52f46fff037112a70957e1" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CRenderMesh</scope><name>m_bindlessMeshId</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_render_mesh_1a47baf93c3bf48bc38df82f19cbd8df7f" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CRenderMesh</scope><name>m_name</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_render_mesh_1ab5a26278383344f500401782422daf64" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CRenderMesh</scope><name>m_pGPUMeshData</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_render_mesh_1a1bfdc0915c56b92de193d4e9bb4cae05" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CRenderMesh</scope><name>m_pVertexBuffer</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_render_mesh_1ad632da5a0fdfe7b5d1ba273bcee03d5f" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CRenderMesh</scope><name>m_rendPrimitives</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_render_mesh_1a6887e53dda8dae0cb2eff0499db53dbe" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CRenderMesh</scope><name>m_streams</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_render_mesh_1abfaddd4590e5804e3e79faeb2a6effab" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CRenderMesh</scope><name>m_topology</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_render_mesh_1a447462d749f3a101ff703ba2ab0ec504" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CRenderMesh</scope><name>SetTopology</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_render_mesh_1a6ab81590abbaa79fef9b5831ad8b1729" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CRenderMesh</scope><name>UnregisterPrimitive</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_render_mesh_1a91f2ce08aedb6946a3bd53d606928928" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CRenderMesh</scope><name>UnregisterPrimitives</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_render_mesh_1ac445e42a48319ed70b0cd202c52c28c1" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CRenderMesh</scope><name>UploadGeometry</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_render_mesh_1ad3fdea168f6a442c944246fe7b2dc059" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CRenderMesh</scope><name>UploadGeometry</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_render_mesh_1a9dbba14a4cf842e9f5c74f8f5bba42af" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CRenderMesh</scope><name>UploadGeometryImpl</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_render_mesh_1ab116b091948d60f6e5a8678414e02b23" prot="private" virt="non-virtual"><scope>Bvr::Renderer::CRenderMesh</scope><name>UploadSliceContent</name></member>
      <member refid="class_bvr_1_1_renderer_1_1_c_render_mesh_1a0beb106ceedda78ef6bf11712ca79312" prot="public" virt="non-virtual"><scope>Bvr::Renderer::CRenderMesh</scope><name>~CRenderMesh</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

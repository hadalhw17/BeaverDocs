<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_d_x_c_wrapper_8hpp" kind="file" language="C++">
    <compoundname>DXCWrapper.hpp</compoundname>
    <includes local="no">BvrRendererExport.hpp</includes>
    <includes local="yes">CommonShaders.hpp</includes>
    <includes local="no">Utils/Span.hpp</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/Shaders/DXCWrapper.hpp</label>
        <link refid="_d_x_c_wrapper_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>BvrRendererExport.hpp</label>
      </node>
      <node id="3">
        <label>CommonShaders.hpp</label>
      </node>
      <node id="4">
        <label>Utils/Span.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_bvr">Bvr</innernamespace>
    <innernamespace refid="namespace_bvr_1_1_renderer">Bvr::Renderer</innernamespace>
    <innernamespace refid="namespace_bvr_1_1_renderer_1_1_d_x_c">Bvr::Renderer::DXC</innernamespace>
    <innernamespace refid="namespace_bvr_1_1_renderer_1_1_d_x_c_1_1_detail">Bvr::Renderer::DXC::Detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;BvrRendererExport.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>&quot;CommonShaders.hpp&quot;;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>&lt;Utils/Span.hpp&gt;;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Bvr::Renderer::DXC<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Detail<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Compiler;</highlight></codeline>
<codeline lineno="10"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">TCompilerPtr<sp/>=<sp/>Detail::Compiler*;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>BVRRENDERER_API<sp/>TCompilerPtr</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Create(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string_view&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shaderModel,</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>defaultParams);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>BVRRENDERER_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Release(TCompilerPtr&amp;&amp;<sp/>compiler);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>BVRRENDERER_API<sp/>TShaderBlob</highlight></codeline>
<codeline lineno="18"><highlight class="normal">Compile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCompilerPtr&amp;<sp/>compiler,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pSource,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sourceSize,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string_view<sp/>pShaderName,<sp/>std::string_view<sp/>pEntryPoint,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EShaderType<sp/>eShaderType,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SShaderDefineMap&amp;<sp/>defineMap,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string_view&amp;<sp/>includePath);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>BVRRENDERER_API<sp/>TShaderBlob<sp/>Compile(</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCompilerPtr&amp;<sp/>compiler,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pSource,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sourceSize,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string_view<sp/>pShaderName,<sp/>std::string_view<sp/>pEntryPoint,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EShaderType<sp/>eShaderType,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SShaderDefineMap&amp;<sp/>defineMap,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;std::string,<sp/>Span&lt;char<sp/>const&gt;&gt;&amp;<sp/>includeMap);</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Bvr::Renderer::DXC</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrRenderer/Private/Shaders/DXCWrapper.hpp"/>
  </compounddef>
</doxygen>

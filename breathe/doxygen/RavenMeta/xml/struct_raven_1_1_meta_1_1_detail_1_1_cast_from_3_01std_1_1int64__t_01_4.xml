<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int64__t_01_4" kind="struct" language="C++" prot="public">
    <compoundname>Raven::Meta::Detail::CastFrom&lt; std::int64_t &gt;</compoundname>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int64__t_01_4_1a7ff00041070729b3a24c22436f7a03d1" prot="public" static="no">
        <type>std::int64_t</type>
        <definition>using Raven::Meta::Detail::CastFrom&lt; std::int64_t &gt;::SrcType =  std::int64_t</definition>
        <argsstring></argsstring>
        <name>SrcType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="922" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="922" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int64__t_01_4_1a08bf08b8529014cb849730ad3f3e5d1d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; std::int64_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, bool &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="924" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="924" bodyend="928"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int64__t_01_4_1a98f0219a695f05e30f984d7b78aa7dc1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; std::int64_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, char &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>char &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="930" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="930" bodyend="933"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int64__t_01_4_1adf345bbaa296dd9d63ffba48e48c5b45" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; std::int64_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int8_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int8_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="935" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="935" bodyend="938"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int64__t_01_4_1a48df6f15dd1fee39fa062e66093fd4d4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; std::int64_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint8_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint8_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="940" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="940" bodyend="943"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int64__t_01_4_1aa38668bbb151a6e5618d431861629fa0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; std::int64_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int16_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int16_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="945" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="945" bodyend="948"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int64__t_01_4_1a078f31ef8aee539b2ff6f877b205c63e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; std::int64_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint16_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint16_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="950" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="950" bodyend="953"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int64__t_01_4_1a74a6fef26edd060e62acd1b4d4b9fc91" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; std::int64_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int32_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int32_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="955" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="955" bodyend="958"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int64__t_01_4_1ae567f9f83ed6f19c1e73ee949f0349a4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; std::int64_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint32_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint32_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="960" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="960" bodyend="963"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int64__t_01_4_1abde20b41d1f6e96f73e3aad6c78c9230" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; std::int64_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int64_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int64_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="965" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="965" bodyend="969"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int64__t_01_4_1a2a1a7bd853be20187d4e0f50290f0bad" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; std::int64_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint64_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint64_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="971" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="971" bodyend="974"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int64__t_01_4_1aeb1fef7e167acf5c4ca63eebe91c8922" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; std::int64_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, float &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="976" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="976" bodyend="980"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int64__t_01_4_1ac53e9ad3a4a83a9f8435e503f74b6d2a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; std::int64_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, double &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="982" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="982" bodyend="986"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int64__t_01_4_1a98d850324d4a16109f12ce46cdc41e3a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; std::int64_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::string &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="988" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="988" bodyend="992"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int64__t_01_4_1a97ea6c7040155b6667f25972cfbd098e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; std::int64_t &gt;::ToEnum</definition>
        <argsstring>(const SrcType &amp;from, Argument &amp;to)</argsstring>
        <name>ToEnum</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="class_raven_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="994" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="994" bodyend="997"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="920" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="921" bodyend="998"/>
    <listofallmembers>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int64__t_01_4_1a7ff00041070729b3a24c22436f7a03d1" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; std::int64_t &gt;</scope><name>SrcType</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int64__t_01_4_1a08bf08b8529014cb849730ad3f3e5d1d" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; std::int64_t &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int64__t_01_4_1a98f0219a695f05e30f984d7b78aa7dc1" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; std::int64_t &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int64__t_01_4_1adf345bbaa296dd9d63ffba48e48c5b45" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; std::int64_t &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int64__t_01_4_1a48df6f15dd1fee39fa062e66093fd4d4" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; std::int64_t &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int64__t_01_4_1aa38668bbb151a6e5618d431861629fa0" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; std::int64_t &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int64__t_01_4_1a078f31ef8aee539b2ff6f877b205c63e" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; std::int64_t &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int64__t_01_4_1a74a6fef26edd060e62acd1b4d4b9fc91" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; std::int64_t &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int64__t_01_4_1ae567f9f83ed6f19c1e73ee949f0349a4" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; std::int64_t &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int64__t_01_4_1abde20b41d1f6e96f73e3aad6c78c9230" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; std::int64_t &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int64__t_01_4_1a2a1a7bd853be20187d4e0f50290f0bad" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; std::int64_t &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int64__t_01_4_1aeb1fef7e167acf5c4ca63eebe91c8922" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; std::int64_t &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int64__t_01_4_1ac53e9ad3a4a83a9f8435e503f74b6d2a" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; std::int64_t &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int64__t_01_4_1a98d850324d4a16109f12ce46cdc41e3a" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; std::int64_t &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int64__t_01_4_1a97ea6c7040155b6667f25972cfbd098e" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; std::int64_t &gt;</scope><name>ToEnum</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

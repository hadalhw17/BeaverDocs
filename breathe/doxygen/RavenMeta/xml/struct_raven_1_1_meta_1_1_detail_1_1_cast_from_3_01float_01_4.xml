<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4" kind="struct" language="C++" prot="public">
    <compoundname>Raven::Meta::Detail::CastFrom&lt; float &gt;</compoundname>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a3b12f615d94050c6195fccb0e422deae" prot="public" static="no">
        <type>float</type>
        <definition>using Raven::Meta::Detail::CastFrom&lt; float &gt;::SrcType =  float</definition>
        <argsstring></argsstring>
        <name>SrcType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="1084" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="1084" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a71f67734dd22165c86e8d62b3d022b46" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; float &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, bool &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="1086" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="1086" bodyend="1090"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a474343486478997a70223f8111391364" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; float &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, char &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>char &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="1092" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="1092" bodyend="1095"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1ab10563bf0ddd31a3ec39bc9abdcd7e85" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; float &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int8_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int8_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="1097" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="1097" bodyend="1100"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1ab1f29b0e27394daf1b4d6f49238dd436" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; float &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint8_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint8_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="1102" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="1102" bodyend="1105"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a75ea3ff1fe4cc42e95b7f7921e0928c0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; float &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int16_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int16_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="1107" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="1107" bodyend="1110"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1ac34857bb7decc2de1562abc096ecabba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; float &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint16_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint16_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="1112" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="1112" bodyend="1115"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a0e13cf60050175ff60c7840a1ee40224" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; float &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int32_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int32_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="1117" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="1117" bodyend="1120"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a50f073752b71d4439d39d538832543ba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; float &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint32_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint32_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="1122" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="1122" bodyend="1125"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a439972661d25037f016dbb2d7c6d27bd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; float &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int64_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int64_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="1127" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="1127" bodyend="1130"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1abd627a196fdd344842ae82485e1393d9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; float &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint64_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint64_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="1132" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="1132" bodyend="1135"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a9cb9c16332813ecaf1018ed2b326c7c0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; float &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, float &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="1137" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="1137" bodyend="1141"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a0e92dd0d980cbf5857156d752ebf9cad" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; float &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, double &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="1143" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="1143" bodyend="1147"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1acebe98571244a1a6b96e287b11ff9607" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; float &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::string &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="1149" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="1149" bodyend="1153"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a3b1978a2d06389ba2e7a81a506df4e0c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; float &gt;::ToEnum</definition>
        <argsstring>(const SrcType &amp;from, Argument &amp;to)</argsstring>
        <name>ToEnum</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="class_raven_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="1155" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="1155" bodyend="1158"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="1082" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="1083" bodyend="1159"/>
    <listofallmembers>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a3b12f615d94050c6195fccb0e422deae" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; float &gt;</scope><name>SrcType</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a71f67734dd22165c86e8d62b3d022b46" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; float &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a474343486478997a70223f8111391364" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; float &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1ab10563bf0ddd31a3ec39bc9abdcd7e85" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; float &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1ab1f29b0e27394daf1b4d6f49238dd436" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; float &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a75ea3ff1fe4cc42e95b7f7921e0928c0" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; float &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1ac34857bb7decc2de1562abc096ecabba" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; float &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a0e13cf60050175ff60c7840a1ee40224" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; float &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a50f073752b71d4439d39d538832543ba" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; float &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a439972661d25037f016dbb2d7c6d27bd" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; float &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1abd627a196fdd344842ae82485e1393d9" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; float &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a9cb9c16332813ecaf1018ed2b326c7c0" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; float &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a0e92dd0d980cbf5857156d752ebf9cad" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; float &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1acebe98571244a1a6b96e287b11ff9607" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; float &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a3b1978a2d06389ba2e7a81a506df4e0c" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; float &gt;</scope><name>ToEnum</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper" kind="struct" language="C++" prot="public">
    <compoundname>Raven::Meta::Detail::SequentialContainerBinderWrapper</compoundname>
    <basecompoundref prot="public" virt="non-virtual">IteratorBinderBase&lt; std::conditional_t&lt; std::is_const_v&lt; ConstT &gt;, typename SequentialContainerBinder&lt; T &gt;::CIteratorT, typename SequentialContainerBinder&lt; T &gt;::IteratorT &gt; &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename ConstT</type>
      </param>
      <param>
        <type>typename Tp</type>
        <defval>std::conditional_t&lt;std::is_const_v&lt;ConstT&gt;,																					typename <ref refid="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder" kindref="compound">SequentialContainerBinder</ref>&lt;T&gt;::CIteratorT,																					typename <ref refid="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder" kindref="compound">SequentialContainerBinder</ref>&lt;T&gt;::IteratorT&gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a453dec61f46d6b3054e53a51aa6a7f90" prot="public" static="no">
        <type><ref refid="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder" kindref="compound">SequentialContainerBinder</ref>&lt; T &gt;</type>
        <definition>using Raven::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::Base =  SequentialContainerBinder&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" line="127" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a6282f73ccb21b3cd23b4fd88fc58402e" prot="public" static="no">
        <type>typename Base::ValueT</type>
        <definition>using Raven::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::ValueT =  typename Base::ValueT</definition>
        <argsstring></argsstring>
        <name>ValueT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" line="128" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1af0a5b64a9118a7cb24ee851f68a5d7db" prot="public" static="no">
        <type>typename Base::IteratorT</type>
        <definition>using Raven::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::IteratorT =  typename Base::IteratorT</definition>
        <argsstring></argsstring>
        <name>IteratorT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" line="129" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a111bf040d3448669d01d3d86353b4b93" prot="public" static="no">
        <type>typename Base::CIteratorT</type>
        <definition>using Raven::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::CIteratorT =  typename Base::CIteratorT</definition>
        <argsstring></argsstring>
        <name>CIteratorT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" line="130" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a863a32bb1fe85025d81e669f608c4aa8" prot="public" static="no">
        <type>IteratorBinderBase&lt; Tp &gt;</type>
        <definition>using Raven::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::IteratorBinderT =  IteratorBinderBase&lt;Tp&gt;</definition>
        <argsstring></argsstring>
        <name>IteratorBinderT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" line="131" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a481b8b44f313f48e51ef7d6a3f1be6ad" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ConstT &amp;</type>
        <definition>static ConstT&amp; Raven::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::GetContainer</definition>
        <argsstring>(void *pContainer)</argsstring>
        <name>GetContainer</name>
        <param>
          <type>void *</type>
          <declname>pContainer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" line="133" column="15" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" bodystart="133" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a6959c5a052b1bc0e8d011e8b477b3ff3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_meta_1_1_variant" kindref="compound">Variant</ref></type>
        <definition>static Variant Raven::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::GetData</definition>
        <argsstring>(const IteratorT &amp;itr)</argsstring>
        <name>GetData</name>
        <param>
          <type>const IteratorT &amp;</type>
          <declname>itr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" line="138" column="16" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" bodystart="138" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a38baad4b74c0d8b12cd3b751118ae717" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::IsDynamic</definition>
        <argsstring>()</argsstring>
        <name>IsDynamic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" line="144" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" bodystart="144" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a564427847e051240e4dd14921b0b4968" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Raven::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::begin</definition>
        <argsstring>(void *pContainer, IteratorData &amp;dst)</argsstring>
        <name>begin</name>
        <param>
          <type>void *</type>
          <declname>pContainer</declname>
        </param>
        <param>
          <type>IteratorData &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" line="149" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a51d919683e545e3089e20ac164d236b3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Raven::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::end</definition>
        <argsstring>(void *pContainer, IteratorData &amp;dst)</argsstring>
        <name>end</name>
        <param>
          <type>void *</type>
          <declname>pContainer</declname>
        </param>
        <param>
          <type>IteratorData &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" line="154" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" bodystart="154" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1ae67f2d8c16cbb05f3e7b25557b9a0dd7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::empty</definition>
        <argsstring>(void *pContainer)</argsstring>
        <name>empty</name>
        <param>
          <type>void *</type>
          <declname>pContainer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" line="159" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" bodystart="159" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1ad586728119cc3b7ad586b31bceb3abb1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Raven::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::clear</definition>
        <argsstring>(void *pContainer)</argsstring>
        <name>clear</name>
        <param>
          <type>void *</type>
          <declname>pContainer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" line="164" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" bodystart="164" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a3113ed77953db2055f9f0861bb3544c1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Raven::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::resize</definition>
        <argsstring>(void *pContainer, const std::size_t size)</argsstring>
        <name>resize</name>
        <param>
          <type>void *</type>
          <declname>pContainer</declname>
        </param>
        <param>
          <type>const std::size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" line="169" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" bodystart="169" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1aa28f4a06a2d02a039d1dd296fe8ed2ad" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Raven::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::insert</definition>
        <argsstring>(void *pContainer, Argument &amp;val, const IteratorData &amp;posIt, IteratorData &amp;outIt)</argsstring>
        <name>insert</name>
        <param>
          <type>void *</type>
          <declname>pContainer</declname>
        </param>
        <param>
          <type><ref refid="class_raven_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>const IteratorData &amp;</type>
          <declname>posIt</declname>
        </param>
        <param>
          <type>IteratorData &amp;</type>
          <declname>outIt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" line="174" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" bodystart="174" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a18b56c5ea3d4c3dee94ff3291f843e0a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Raven::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::erase</definition>
        <argsstring>(void *pContainer, const IteratorData &amp;posIt, IteratorData &amp;outIt)</argsstring>
        <name>erase</name>
        <param>
          <type>void *</type>
          <declname>pContainer</declname>
        </param>
        <param>
          <type>const IteratorData &amp;</type>
          <declname>posIt</declname>
        </param>
        <param>
          <type>IteratorData &amp;</type>
          <declname>outIt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" line="182" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" bodystart="182" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1accca31d9cec949ea7b5e542259bcb3e3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>static std::size_t Raven::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::size</definition>
        <argsstring>(void *pContainer)</argsstring>
        <name>size</name>
        <param>
          <type>void *</type>
          <declname>pContainer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" line="187" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" bodystart="187" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1abced0107ba08ce6a5f4bd5d2fe1861fa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_meta_1_1_variant" kindref="compound">Variant</ref></type>
        <definition>static Variant Raven::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::at</definition>
        <argsstring>(void *pContainer, const std::size_t index)</argsstring>
        <name>at</name>
        <param>
          <type>void *</type>
          <declname>pContainer</declname>
        </param>
        <param>
          <type>const std::size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" line="192" column="16" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" bodystart="192" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a00ba08e327faec8e6910b257f2fe1f0f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
          </param>
          <param>
            <type>typename C</type>
            <defval>ConstT</defval>
          </param>
          <param>
            <type>typename RetT</type>
            <defval>decltype(Base::at(std::declval&lt;C&amp;&gt;(), 0))</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt;!std::is_const_v&lt; C &gt;, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::set</definition>
        <argsstring>(void *pContainer, const std::size_t index, const Argument &amp;val)</argsstring>
        <name>set</name>
        <param>
          <type>void *</type>
          <declname>pContainer</declname>
        </param>
        <param>
          <type>const std::size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="class_raven_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" line="199" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" bodystart="199" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a00ba08e327faec8e6910b257f2fe1f0f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
          </param>
          <param>
            <type>typename C</type>
            <defval>ConstT</defval>
          </param>
          <param>
            <type>typename RetT</type>
            <defval>decltype(Base::at(std::declval&lt;C&amp;&gt;(), 0))</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_const_v&lt; C &gt;, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::set</definition>
        <argsstring>(void *pContainer, const std::size_t index, const Argument &amp;val)</argsstring>
        <name>set</name>
        <param>
          <type>void *</type>
          <declname>pContainer</declname>
        </param>
        <param>
          <type>const std::size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="class_raven_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" line="210" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" bodystart="210" bodyend="213"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>IteratorBinderBase&lt; std::conditional_t&lt; std::is_const_v&lt; ConstT &gt;, typename SequentialContainerBinder&lt; T &gt;::CIteratorT, typename SequentialContainerBinder&lt; T &gt;::IteratorT &gt; &gt;</label>
      </node>
      <node id="1">
        <label>Raven::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;</label>
        <link refid="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>IteratorBinderBase&lt; std::conditional_t&lt; std::is_const_v&lt; ConstT &gt;, typename SequentialContainerBinder&lt; T &gt;::CIteratorT, typename SequentialContainerBinder&lt; T &gt;::IteratorT &gt; &gt;</label>
      </node>
      <node id="1">
        <label>Raven::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;</label>
        <link refid="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" line="125" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/SequentialContainerBinder.hpp" bodystart="126" bodyend="214"/>
    <listofallmembers>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1abced0107ba08ce6a5f4bd5d2fe1861fa" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::SequentialContainerBinderWrapper</scope><name>at</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a453dec61f46d6b3054e53a51aa6a7f90" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::SequentialContainerBinderWrapper</scope><name>Base</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a564427847e051240e4dd14921b0b4968" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::SequentialContainerBinderWrapper</scope><name>begin</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a111bf040d3448669d01d3d86353b4b93" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::SequentialContainerBinderWrapper</scope><name>CIteratorT</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1ad586728119cc3b7ad586b31bceb3abb1" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::SequentialContainerBinderWrapper</scope><name>clear</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1ae67f2d8c16cbb05f3e7b25557b9a0dd7" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::SequentialContainerBinderWrapper</scope><name>empty</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a51d919683e545e3089e20ac164d236b3" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::SequentialContainerBinderWrapper</scope><name>end</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a18b56c5ea3d4c3dee94ff3291f843e0a" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::SequentialContainerBinderWrapper</scope><name>erase</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a481b8b44f313f48e51ef7d6a3f1be6ad" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::SequentialContainerBinderWrapper</scope><name>GetContainer</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a6959c5a052b1bc0e8d011e8b477b3ff3" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::SequentialContainerBinderWrapper</scope><name>GetData</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1aa28f4a06a2d02a039d1dd296fe8ed2ad" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::SequentialContainerBinderWrapper</scope><name>insert</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a38baad4b74c0d8b12cd3b751118ae717" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::SequentialContainerBinderWrapper</scope><name>IsDynamic</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a863a32bb1fe85025d81e669f608c4aa8" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::SequentialContainerBinderWrapper</scope><name>IteratorBinderT</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1af0a5b64a9118a7cb24ee851f68a5d7db" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::SequentialContainerBinderWrapper</scope><name>IteratorT</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a3113ed77953db2055f9f0861bb3544c1" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::SequentialContainerBinderWrapper</scope><name>resize</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a00ba08e327faec8e6910b257f2fe1f0f" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::SequentialContainerBinderWrapper</scope><name>set</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a00ba08e327faec8e6910b257f2fe1f0f" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::SequentialContainerBinderWrapper</scope><name>set</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1accca31d9cec949ea7b5e542259bcb3e3" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::SequentialContainerBinderWrapper</scope><name>size</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a6282f73ccb21b3cd23b4fd88fc58402e" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::SequentialContainerBinderWrapper</scope><name>ValueT</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

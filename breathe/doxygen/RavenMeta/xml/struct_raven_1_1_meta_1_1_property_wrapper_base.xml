<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_raven_1_1_meta_1_1_property_wrapper_base" kind="struct" language="C++" prot="public">
    <compoundname>Raven::Meta::PropertyWrapperBase</compoundname>
    <derivedcompoundref refid="struct_raven_1_1_meta_1_1_member_property_wrapper" prot="public" virt="non-virtual">Raven::Meta::MemberPropertyWrapper&lt; PropType, AttributeCount &gt;</derivedcompoundref>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_raven_1_1_meta_1_1_property_wrapper_base_1ad01f2d458239ed2a5998c2813ea616ec" prot="public" static="no">
        <type>std::string_view</type>
        <definition>using Raven::Meta::PropertyWrapperBase::NameT =  std::string_view</definition>
        <argsstring></argsstring>
        <name>NameT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" line="13" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_raven_1_1_meta_1_1_property_wrapper_base_1a669e760337ec83601991120019a90d44" prot="private" static="no" mutable="no">
        <type>NameT</type>
        <definition>NameT Raven::Meta::PropertyWrapperBase::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" line="36" column="7" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_raven_1_1_meta_1_1_property_wrapper_base_1aeff7929ed6ac77ed151ee1365e2aefe3" prot="private" static="no" mutable="no">
        <type><ref refid="class_raven_1_1_meta_1_1_type" kindref="compound">Type</ref></type>
        <definition>Type Raven::Meta::PropertyWrapperBase::m_parentObjectType</definition>
        <argsstring></argsstring>
        <name>m_parentObjectType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" line="37" column="7" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_property_wrapper_base_1af4083f830bb620aaad9706d869cd4234" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Raven::Meta::PropertyWrapperBase::PropertyWrapperBase</definition>
        <argsstring>(NameT name, Type type)</argsstring>
        <name>PropertyWrapperBase</name>
        <param>
          <type>NameT</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="class_raven_1_1_meta_1_1_type" kindref="compound">Type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" line="14" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" bodystart="14" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_property_wrapper_base_1a41e24deb63a2ad117c08d1970ce96a06" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Raven::Meta::PropertyWrapperBase::~PropertyWrapperBase</definition>
        <argsstring>()=default</argsstring>
        <name>~PropertyWrapperBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" line="16" column="9"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_property_wrapper_base_1af299125c7b9e3f13cbe08b997238c2a9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_meta_1_1_type" kindref="compound">Type</ref></type>
        <definition>Type Raven::Meta::PropertyWrapperBase::GetParentObjectType</definition>
        <argsstring>() const</argsstring>
        <name>GetParentObjectType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" line="19" column="7" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" bodystart="19" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_property_wrapper_base_1ae4a06f0c66551e7adde85dad0934e56e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>NameT</type>
        <definition>NameT Raven::Meta::PropertyWrapperBase::GetName</definition>
        <argsstring>() const</argsstring>
        <name>GetName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" line="22" column="15" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" bodystart="22" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_property_wrapper_base_1acea4f2679bb16d68354a31af82235a1d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_raven_1_1_meta_1_1_type" kindref="compound">Type</ref></type>
        <definition>virtual Type Raven::Meta::PropertyWrapperBase::GetType</definition>
        <argsstring>() const</argsstring>
        <name>GetType</name>
        <reimplementedby refid="struct_raven_1_1_meta_1_1_member_property_wrapper_1a56cb9b2ace284b827603d64335d5afb3">GetType</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" line="23" column="15" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" bodystart="23" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_property_wrapper_base_1a3d35abbcb3de5c16821fcc0661a39354" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool Raven::Meta::PropertyWrapperBase::IsValid</definition>
        <argsstring>() const</argsstring>
        <name>IsValid</name>
        <reimplementedby refid="struct_raven_1_1_meta_1_1_member_property_wrapper_1a66c62862c83c9a76d9efd397e83bf6bd">IsValid</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" line="24" column="15" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" bodystart="24" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_property_wrapper_base_1ab99a76e5cfffe45f10af2d2a38be8724" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool Raven::Meta::PropertyWrapperBase::SetValue</definition>
        <argsstring>(Instance &amp;, Argument) const</argsstring>
        <name>SetValue</name>
        <reimplementedby refid="struct_raven_1_1_meta_1_1_member_property_wrapper_1a2192325f1f3d54287b631511b03563c2">SetValue</reimplementedby>
        <param>
          <type><ref refid="class_raven_1_1_meta_1_1_instance" kindref="compound">Instance</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="class_raven_1_1_meta_1_1_argument" kindref="compound">Argument</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" line="25" column="15" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" bodystart="25" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_property_wrapper_base_1a7c85f4ac74ac401e828338065ed1a87a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::size_t</type>
        <definition>virtual std::size_t Raven::Meta::PropertyWrapperBase::OffsetOf</definition>
        <argsstring>() const</argsstring>
        <name>OffsetOf</name>
        <reimplementedby refid="struct_raven_1_1_meta_1_1_member_property_wrapper_1a639b6aeed7528697df3d64876ee2aef3">OffsetOf</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" line="28" column="22" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_property_wrapper_base_1af380d92f53ea99289df7ac873303af85" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_raven_1_1_meta_1_1_variant" kindref="compound">Variant</ref></type>
        <definition>virtual Variant Raven::Meta::PropertyWrapperBase::GetValue</definition>
        <argsstring>(Instance &amp;) const</argsstring>
        <name>GetValue</name>
        <reimplementedby refid="struct_raven_1_1_meta_1_1_member_property_wrapper_1ab673dab150e8f6b815acbeced3942774">GetValue</reimplementedby>
        <param>
          <type><ref refid="class_raven_1_1_meta_1_1_instance" kindref="compound">Instance</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" line="29" column="22" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_property_wrapper_base_1a042478da4de3edb317fde38f27b0d9dc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_raven_1_1_meta_1_1_variant" kindref="compound">Variant</ref></type>
        <definition>virtual Variant Raven::Meta::PropertyWrapperBase::GetAttribute</definition>
        <argsstring>(const Variant &amp;) const</argsstring>
        <name>GetAttribute</name>
        <reimplementedby refid="struct_raven_1_1_meta_1_1_member_property_wrapper_1a8f6971a01efe55ea370101770e129ea8">GetAttribute</reimplementedby>
        <param>
          <type>const <ref refid="class_raven_1_1_meta_1_1_variant" kindref="compound">Variant</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" line="30" column="22" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" bodystart="30" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_property_wrapper_base_1aeedbd5f9754ffbcc358aeb999f79d227" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::size_t</type>
        <definition>virtual std::size_t Raven::Meta::PropertyWrapperBase::GetAttributeCount</definition>
        <argsstring>() const</argsstring>
        <name>GetAttributeCount</name>
        <reimplementedby refid="struct_raven_1_1_meta_1_1_member_property_wrapper_1ad11da4981758a2634dc5913fc99d9cbb">GetAttributeCount</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" line="33" column="22" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" bodystart="33" bodyend="33"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Raven::Meta::PropertyWrapperBase</label>
        <link refid="struct_raven_1_1_meta_1_1_property_wrapper_base"/>
      </node>
      <node id="2">
        <label>Raven::Meta::MemberPropertyWrapper&lt; PropType, AttributeCount &gt;</label>
        <link refid="struct_raven_1_1_meta_1_1_member_property_wrapper"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" line="11" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" bodystart="11" bodyend="38"/>
    <listofallmembers>
      <member refid="struct_raven_1_1_meta_1_1_property_wrapper_base_1a042478da4de3edb317fde38f27b0d9dc" prot="public" virt="virtual"><scope>Raven::Meta::PropertyWrapperBase</scope><name>GetAttribute</name></member>
      <member refid="struct_raven_1_1_meta_1_1_property_wrapper_base_1aeedbd5f9754ffbcc358aeb999f79d227" prot="public" virt="virtual"><scope>Raven::Meta::PropertyWrapperBase</scope><name>GetAttributeCount</name></member>
      <member refid="struct_raven_1_1_meta_1_1_property_wrapper_base_1ae4a06f0c66551e7adde85dad0934e56e" prot="public" virt="non-virtual"><scope>Raven::Meta::PropertyWrapperBase</scope><name>GetName</name></member>
      <member refid="struct_raven_1_1_meta_1_1_property_wrapper_base_1af299125c7b9e3f13cbe08b997238c2a9" prot="public" virt="non-virtual"><scope>Raven::Meta::PropertyWrapperBase</scope><name>GetParentObjectType</name></member>
      <member refid="struct_raven_1_1_meta_1_1_property_wrapper_base_1acea4f2679bb16d68354a31af82235a1d" prot="public" virt="virtual"><scope>Raven::Meta::PropertyWrapperBase</scope><name>GetType</name></member>
      <member refid="struct_raven_1_1_meta_1_1_property_wrapper_base_1af380d92f53ea99289df7ac873303af85" prot="public" virt="virtual"><scope>Raven::Meta::PropertyWrapperBase</scope><name>GetValue</name></member>
      <member refid="struct_raven_1_1_meta_1_1_property_wrapper_base_1a3d35abbcb3de5c16821fcc0661a39354" prot="public" virt="virtual"><scope>Raven::Meta::PropertyWrapperBase</scope><name>IsValid</name></member>
      <member refid="struct_raven_1_1_meta_1_1_property_wrapper_base_1a669e760337ec83601991120019a90d44" prot="private" virt="non-virtual"><scope>Raven::Meta::PropertyWrapperBase</scope><name>m_name</name></member>
      <member refid="struct_raven_1_1_meta_1_1_property_wrapper_base_1aeff7929ed6ac77ed151ee1365e2aefe3" prot="private" virt="non-virtual"><scope>Raven::Meta::PropertyWrapperBase</scope><name>m_parentObjectType</name></member>
      <member refid="struct_raven_1_1_meta_1_1_property_wrapper_base_1ad01f2d458239ed2a5998c2813ea616ec" prot="public" virt="non-virtual"><scope>Raven::Meta::PropertyWrapperBase</scope><name>NameT</name></member>
      <member refid="struct_raven_1_1_meta_1_1_property_wrapper_base_1a7c85f4ac74ac401e828338065ed1a87a" prot="public" virt="virtual"><scope>Raven::Meta::PropertyWrapperBase</scope><name>OffsetOf</name></member>
      <member refid="struct_raven_1_1_meta_1_1_property_wrapper_base_1af4083f830bb620aaad9706d869cd4234" prot="public" virt="non-virtual"><scope>Raven::Meta::PropertyWrapperBase</scope><name>PropertyWrapperBase</name></member>
      <member refid="struct_raven_1_1_meta_1_1_property_wrapper_base_1ab99a76e5cfffe45f10af2d2a38be8724" prot="public" virt="virtual"><scope>Raven::Meta::PropertyWrapperBase</scope><name>SetValue</name></member>
      <member refid="struct_raven_1_1_meta_1_1_property_wrapper_base_1a41e24deb63a2ad117c08d1970ce96a06" prot="public" virt="virtual"><scope>Raven::Meta::PropertyWrapperBase</scope><name>~PropertyWrapperBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

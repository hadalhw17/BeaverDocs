<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_raven_1_1_meta_1_1_argument_extractor" kind="struct" language="C++" prot="public">
    <compoundname>Raven::Meta::ArgumentExtractor</compoundname>
    <templateparamlist>
      <param>
        <type>typename FilterT</type>
      </param>
      <param>
        <type>typename...</type>
        <declname>BaseArgs</declname>
        <defname>BaseArgs</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_raven_1_1_meta_1_1_argument_extractor_1aaebf2584590b4bd365ee8a234a500acc" prot="public" static="no">
        <type>std::array&lt; FilterT, ArraySize &gt;</type>
        <definition>using Raven::Meta::ArgumentExtractor&lt; FilterT, BaseArgs &gt;::ArrayT =  std::array&lt;FilterT, ArraySize&gt;</definition>
        <argsstring></argsstring>
        <name>ArrayT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/ArgumentExtractor.hpp" line="30" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/ArgumentExtractor.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="struct_raven_1_1_meta_1_1_argument_extractor_1a4e32e5d65c41800d1bef759e83bf1a8d" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto Raven::Meta::ArgumentExtractor&lt; FilterT, BaseArgs &gt;::ArraySize</definition>
        <argsstring></argsstring>
        <name>ArraySize</name>
        <initializer>=
        CountArgs&lt;FilterT, <ref refid="struct_raven_1_1_meta_1_1_type_list" kindref="compound">TypeList</ref>&lt;BaseArgs...&gt;&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/ArgumentExtractor.hpp" line="28" column="27" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/ArgumentExtractor.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_argument_extractor_1a7567429fc107985ba5051230702c3972" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ArrayT</type>
        <definition>static ArrayT Raven::Meta::ArgumentExtractor&lt; FilterT, BaseArgs &gt;::ToArray</definition>
        <argsstring>(BaseArgs &amp;&amp;... args)</argsstring>
        <name>ToArray</name>
        <param>
          <type>BaseArgs &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/ArgumentExtractor.hpp" line="32" column="19" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/ArgumentExtractor.hpp" bodystart="32" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_argument_extractor_1a5fd53a59a2bf48d2cdd3367090424106" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; FilterT &gt;</type>
        <definition>static std::vector&lt;FilterT&gt; Raven::Meta::ArgumentExtractor&lt; FilterT, BaseArgs &gt;::ToVector</definition>
        <argsstring>(BaseArgs &amp;&amp;... args)</argsstring>
        <name>ToVector</name>
        <param>
          <type>BaseArgs &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/ArgumentExtractor.hpp" line="38" column="24" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/ArgumentExtractor.hpp" bodystart="38" bodyend="43"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_argument_extractor_1a9bd010bd81a3661af8bc8d0653ae49e0" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ContainerT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void Raven::Meta::ArgumentExtractor&lt; FilterT, BaseArgs &gt;::ExtractRecursively</definition>
        <argsstring>(ContainerT &amp;container)</argsstring>
        <name>ExtractRecursively</name>
        <param>
          <type>ContainerT &amp;</type>
          <declname>container</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/ArgumentExtractor.hpp" line="47" column="17" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/ArgumentExtractor.hpp" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_argument_extractor_1a78384937cb868b9bc69bdd90bf8a6f18" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ContainerT</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt;!std::is_same_v&lt; FilterT, std::remove_cv_t&lt; U &gt; &gt;, void &gt;</type>
        <definition>static std::enable_if_t&lt;!std::is_same_v&lt;FilterT, std::remove_cv_t&lt;U&gt; &gt;, void&gt; Raven::Meta::ArgumentExtractor&lt; FilterT, BaseArgs &gt;::ExtractRecursively</definition>
        <argsstring>(ContainerT &amp;container, U &amp;&amp;val, Args &amp;&amp;... tail)</argsstring>
        <name>ExtractRecursively</name>
        <param>
          <type>ContainerT &amp;</type>
          <declname>container</declname>
        </param>
        <param>
          <type>U &amp;&amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>tail</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/ArgumentExtractor.hpp" line="52" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/ArgumentExtractor.hpp" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_argument_extractor_1a43aeaaf8befb15b0aa330f2515f3b608" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ContainerT</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; std::is_same_v&lt; FilterT, std::remove_cv_t&lt; U &gt; &gt;, void &gt;</type>
        <definition>static std::enable_if_t&lt;std::is_same_v&lt;FilterT, std::remove_cv_t&lt;U&gt; &gt;, void&gt; Raven::Meta::ArgumentExtractor&lt; FilterT, BaseArgs &gt;::ExtractRecursively</definition>
        <argsstring>(ContainerT &amp;container, U &amp;&amp;val, Args &amp;&amp;... tail)</argsstring>
        <name>ExtractRecursively</name>
        <param>
          <type>ContainerT &amp;</type>
          <declname>container</declname>
        </param>
        <param>
          <type>U &amp;&amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>tail</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/ArgumentExtractor.hpp" line="58" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/ArgumentExtractor.hpp" bodystart="58" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_argument_extractor_1a45a2dc38e3dd15f191aca2f589aef7ea" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; std::is_same_v&lt; FilterT, std::remove_cv_t&lt; U &gt; &gt;, void &gt;</type>
        <definition>static std::enable_if_t&lt;std::is_same_v&lt;FilterT, std::remove_cv_t&lt;U&gt; &gt;, void&gt; Raven::Meta::ArgumentExtractor&lt; FilterT, BaseArgs &gt;::ExtractRecursively</definition>
        <argsstring>(std::vector&lt; FilterT &gt; &amp;container, U &amp;&amp;val, Args &amp;&amp;... tail)</argsstring>
        <name>ExtractRecursively</name>
        <param>
          <type>std::vector&lt; FilterT &gt; &amp;</type>
          <declname>container</declname>
        </param>
        <param>
          <type>U &amp;&amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>tail</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/ArgumentExtractor.hpp" line="67" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/ArgumentExtractor.hpp" bodystart="67" bodyend="72"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/ArgumentExtractor.hpp" line="27" column="14" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/ArgumentExtractor.hpp" bodystart="27" bodyend="73"/>
    <listofallmembers>
      <member refid="struct_raven_1_1_meta_1_1_argument_extractor_1a4e32e5d65c41800d1bef759e83bf1a8d" prot="public" virt="non-virtual"><scope>Raven::Meta::ArgumentExtractor</scope><name>ArraySize</name></member>
      <member refid="struct_raven_1_1_meta_1_1_argument_extractor_1aaebf2584590b4bd365ee8a234a500acc" prot="public" virt="non-virtual"><scope>Raven::Meta::ArgumentExtractor</scope><name>ArrayT</name></member>
      <member refid="struct_raven_1_1_meta_1_1_argument_extractor_1a9bd010bd81a3661af8bc8d0653ae49e0" prot="private" virt="non-virtual"><scope>Raven::Meta::ArgumentExtractor</scope><name>ExtractRecursively</name></member>
      <member refid="struct_raven_1_1_meta_1_1_argument_extractor_1a78384937cb868b9bc69bdd90bf8a6f18" prot="private" virt="non-virtual"><scope>Raven::Meta::ArgumentExtractor</scope><name>ExtractRecursively</name></member>
      <member refid="struct_raven_1_1_meta_1_1_argument_extractor_1a43aeaaf8befb15b0aa330f2515f3b608" prot="private" virt="non-virtual"><scope>Raven::Meta::ArgumentExtractor</scope><name>ExtractRecursively</name></member>
      <member refid="struct_raven_1_1_meta_1_1_argument_extractor_1a45a2dc38e3dd15f191aca2f589aef7ea" prot="private" virt="non-virtual"><scope>Raven::Meta::ArgumentExtractor</scope><name>ExtractRecursively</name></member>
      <member refid="struct_raven_1_1_meta_1_1_argument_extractor_1a7567429fc107985ba5051230702c3972" prot="public" virt="non-virtual"><scope>Raven::Meta::ArgumentExtractor</scope><name>ToArray</name></member>
      <member refid="struct_raven_1_1_meta_1_1_argument_extractor_1a5fd53a59a2bf48d2cdd3367090424106" prot="public" virt="non-virtual"><scope>Raven::Meta::ArgumentExtractor</scope><name>ToVector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

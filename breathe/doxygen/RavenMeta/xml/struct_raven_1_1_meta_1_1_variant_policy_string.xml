<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_raven_1_1_meta_1_1_variant_policy_string" kind="struct" language="C++" prot="public">
    <compoundname>Raven::Meta::VariantPolicyString</compoundname>
    <basecompoundref refid="struct_raven_1_1_meta_1_1_variant_policy_big" prot="public" virt="non-virtual">Raven::Meta::VariantPolicyBig&lt; std::string, Detail::DefaultCaster&lt; std::string &gt; &gt;</basecompoundref>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_variant_policy_string_1ae6bc961b9ea7911d8370dc8a16065713" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void Raven::Meta::VariantPolicyString::Create</definition>
        <argsstring>(U &amp;&amp;value, VariantData &amp;dst)</argsstring>
        <name>Create</name>
        <param>
          <type>U &amp;&amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>VariantData &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/VariantPolicy.hpp" line="275" column="25" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/VariantPolicy.hpp" bodystart="275" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_variant_policy_string_1a5c545180ab4d3b19eaaa0647febea149" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void Raven::Meta::VariantPolicyString::Create</definition>
        <argsstring>(const char(&amp;value)[N], VariantData &amp;dst)</argsstring>
        <name>Create</name>
        <param>
          <type>const char(&amp;)</type>
          <declname>value</declname>
          <array>[N]</array>
        </param>
        <param>
          <type>VariantData &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/VariantPolicy.hpp" line="281" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/VariantPolicy.hpp" bodystart="281" bodyend="283"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>Raven::Meta::VariantDataPolicyBase&lt; T, DerrivedType, CasterT &gt;</label>
        <link refid="struct_raven_1_1_meta_1_1_variant_data_policy_base"/>
      </node>
      <node id="1">
        <label>Raven::Meta::VariantPolicyString</label>
        <link refid="struct_raven_1_1_meta_1_1_variant_policy_string"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Raven::Meta::VariantPolicyBig&lt; std::string, Detail::DefaultCaster&lt; std::string &gt; &gt;</label>
        <link refid="struct_raven_1_1_meta_1_1_variant_policy_big"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>Raven::Meta::VariantDataPolicyBase&lt; T, DerrivedType, CasterT &gt;</label>
        <link refid="struct_raven_1_1_meta_1_1_variant_data_policy_base"/>
      </node>
      <node id="1">
        <label>Raven::Meta::VariantPolicyString</label>
        <link refid="struct_raven_1_1_meta_1_1_variant_policy_string"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Raven::Meta::VariantPolicyBig&lt; std::string, Detail::DefaultCaster&lt; std::string &gt; &gt;</label>
        <link refid="struct_raven_1_1_meta_1_1_variant_policy_big"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/VariantPolicy.hpp" line="272" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/VariantPolicy.hpp" bodystart="273" bodyend="284"/>
    <listofallmembers>
      <member refid="struct_raven_1_1_meta_1_1_variant_policy_big_1a8bc2a478cd833ccdf9b80a650566e41c" prot="public" virt="non-virtual"><scope>Raven::Meta::VariantPolicyString</scope><name>Clone</name></member>
      <member refid="struct_raven_1_1_meta_1_1_variant_policy_string_1ae6bc961b9ea7911d8370dc8a16065713" prot="public" virt="non-virtual"><scope>Raven::Meta::VariantPolicyString</scope><name>Create</name></member>
      <member refid="struct_raven_1_1_meta_1_1_variant_policy_string_1a5c545180ab4d3b19eaaa0647febea149" prot="public" virt="non-virtual"><scope>Raven::Meta::VariantPolicyString</scope><name>Create</name></member>
      <member refid="struct_raven_1_1_meta_1_1_variant_policy_big_1a182892f1dc790264ad71e72ff18b4511" prot="public" virt="non-virtual"><scope>Raven::Meta::VariantPolicyString</scope><name>Destroy</name></member>
      <member refid="struct_raven_1_1_meta_1_1_variant_policy_big_1a54c50a3e999015dc8d60cf080b9f1f20" prot="public" virt="non-virtual"><scope>Raven::Meta::VariantPolicyString</scope><name>GetValue</name></member>
      <member refid="struct_raven_1_1_meta_1_1_variant_data_policy_base_1a796262ea365039bf52fd686097e6242a" prot="public" virt="non-virtual"><scope>Raven::Meta::VariantPolicyString</scope><name>Invoke</name></member>
      <member refid="struct_raven_1_1_meta_1_1_variant_policy_big_1aa117e4b88c4dd27a4ebef77e29ec12b9" prot="public" virt="non-virtual"><scope>Raven::Meta::VariantPolicyString</scope><name>Swap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

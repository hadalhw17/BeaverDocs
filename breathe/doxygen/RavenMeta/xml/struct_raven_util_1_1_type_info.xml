<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_raven_util_1_1_type_info" kind="struct" language="C++" prot="public">
    <compoundname>RavenUtil::TypeInfo</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_raven_util_1_1_type_info_1af27888e471c35afe36b757e9310342db" prot="private" static="no" mutable="no">
        <type>std::string_view</type>
        <definition>std::string_view RavenUtil::TypeInfo::m_typeName</definition>
        <argsstring></argsstring>
        <name>m_typeName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeInfo.hpp" line="160" column="18" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeInfo.hpp" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_raven_util_1_1_type_info_1a58990087e41bd4de8bb92e03bc80bf7e" prot="private" static="no" mutable="no">
        <type>RavenUtil::Hash</type>
        <definition>RavenUtil::Hash RavenUtil::TypeInfo::m_typeId</definition>
        <argsstring></argsstring>
        <name>m_typeId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeInfo.hpp" line="161" column="17" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeInfo.hpp" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_raven_util_1_1_type_info_1a6070aceeebecaea68510dcd75a71a6bd" prot="private" static="no" mutable="no">
        <type>RavenUtil::Hash</type>
        <definition>RavenUtil::Hash RavenUtil::TypeInfo::m_typeHash</definition>
        <argsstring></argsstring>
        <name>m_typeHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeInfo.hpp" line="162" column="17" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeInfo.hpp" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_raven_util_1_1_type_info_1a23b4a4cbe62155230cc422370a82bb9f" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t RavenUtil::TypeInfo::m_typeSize</definition>
        <argsstring></argsstring>
        <name>m_typeSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeInfo.hpp" line="163" column="17" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeInfo.hpp" bodystart="163" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_raven_util_1_1_type_info_1a099a7bd4a7206224a233c92d581542e8" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Type</type>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr RavenUtil::TypeInfo::TypeInfo</definition>
        <argsstring>(Internal::TypeConstructorProxy&lt; Type &gt;)</argsstring>
        <name>TypeInfo</name>
        <param>
          <type><ref refid="struct_raven_util_1_1_internal_1_1_type_constructor_proxy" kindref="compound">Internal::TypeConstructorProxy</ref>&lt; Type &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeInfo.hpp" line="131" column="11" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeInfo.hpp" bodystart="131" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_util_1_1_type_info_1a888a88b7933c7f5b1bd11b97f782e7a4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string_view</type>
        <definition>std::string_view RavenUtil::TypeInfo::GetName</definition>
        <argsstring>() const</argsstring>
        <name>GetName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeInfo.hpp" line="138" column="26" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeInfo.hpp" bodystart="138" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_util_1_1_type_info_1ad23005da0578157beaf833521b96fd6f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t RavenUtil::TypeInfo::GetSize</definition>
        <argsstring>() const</argsstring>
        <name>GetSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeInfo.hpp" line="143" column="21" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeInfo.hpp" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_util_1_1_type_info_1aa62bbb18210d953ceb242b93d3a9b077" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>RavenUtil::Hash</type>
        <definition>RavenUtil::Hash RavenUtil::TypeInfo::GetHash</definition>
        <argsstring>() const</argsstring>
        <name>GetHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeInfo.hpp" line="148" column="25" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeInfo.hpp" bodystart="148" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_util_1_1_type_info_1a433176ddcc887882c0b3ccb52841b17e" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool RavenUtil::TypeInfo::operator==</definition>
        <argsstring>(const TypeInfo &amp;info) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="struct_raven_util_1_1_type_info" kindref="compound">TypeInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeInfo.hpp" line="153" column="17" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeInfo.hpp" bodystart="153" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_util_1_1_type_info_1ac9778bbb9b2c2fd26fa036c934d8e141" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool RavenUtil::TypeInfo::operator&gt;</definition>
        <argsstring>(const TypeInfo &amp;info) const</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="struct_raven_util_1_1_type_info" kindref="compound">TypeInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeInfo.hpp" line="154" column="17" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeInfo.hpp" bodystart="154" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_util_1_1_type_info_1a5f84adbd4b8f9b84015724062abed5d5" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool RavenUtil::TypeInfo::operator&lt;</definition>
        <argsstring>(const TypeInfo &amp;info) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="struct_raven_util_1_1_type_info" kindref="compound">TypeInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeInfo.hpp" line="155" column="12" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeInfo.hpp" bodystart="155" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_util_1_1_type_info_1a0447b762039d75d7544d5269559ac6f0" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr RavenUtil::TypeInfo::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeInfo.hpp" line="157" column="12" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeInfo.hpp" bodystart="157" bodyend="157"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeInfo.hpp" line="128" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeInfo.hpp" bodystart="129" bodyend="164"/>
    <listofallmembers>
      <member refid="struct_raven_util_1_1_type_info_1aa62bbb18210d953ceb242b93d3a9b077" prot="public" virt="non-virtual"><scope>RavenUtil::TypeInfo</scope><name>GetHash</name></member>
      <member refid="struct_raven_util_1_1_type_info_1a888a88b7933c7f5b1bd11b97f782e7a4" prot="public" virt="non-virtual"><scope>RavenUtil::TypeInfo</scope><name>GetName</name></member>
      <member refid="struct_raven_util_1_1_type_info_1ad23005da0578157beaf833521b96fd6f" prot="public" virt="non-virtual"><scope>RavenUtil::TypeInfo</scope><name>GetSize</name></member>
      <member refid="struct_raven_util_1_1_type_info_1a6070aceeebecaea68510dcd75a71a6bd" prot="private" virt="non-virtual"><scope>RavenUtil::TypeInfo</scope><name>m_typeHash</name></member>
      <member refid="struct_raven_util_1_1_type_info_1a58990087e41bd4de8bb92e03bc80bf7e" prot="private" virt="non-virtual"><scope>RavenUtil::TypeInfo</scope><name>m_typeId</name></member>
      <member refid="struct_raven_util_1_1_type_info_1af27888e471c35afe36b757e9310342db" prot="private" virt="non-virtual"><scope>RavenUtil::TypeInfo</scope><name>m_typeName</name></member>
      <member refid="struct_raven_util_1_1_type_info_1a23b4a4cbe62155230cc422370a82bb9f" prot="private" virt="non-virtual"><scope>RavenUtil::TypeInfo</scope><name>m_typeSize</name></member>
      <member refid="struct_raven_util_1_1_type_info_1a0447b762039d75d7544d5269559ac6f0" prot="public" virt="non-virtual"><scope>RavenUtil::TypeInfo</scope><name>operator bool</name></member>
      <member refid="struct_raven_util_1_1_type_info_1a5f84adbd4b8f9b84015724062abed5d5" prot="public" virt="non-virtual"><scope>RavenUtil::TypeInfo</scope><name>operator&lt;</name></member>
      <member refid="struct_raven_util_1_1_type_info_1a433176ddcc887882c0b3ccb52841b17e" prot="public" virt="non-virtual"><scope>RavenUtil::TypeInfo</scope><name>operator==</name></member>
      <member refid="struct_raven_util_1_1_type_info_1ac9778bbb9b2c2fd26fa036c934d8e141" prot="public" virt="non-virtual"><scope>RavenUtil::TypeInfo</scope><name>operator&gt;</name></member>
      <member refid="struct_raven_util_1_1_type_info_1a099a7bd4a7206224a233c92d581542e8" prot="public" virt="non-virtual"><scope>RavenUtil::TypeInfo</scope><name>TypeInfo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

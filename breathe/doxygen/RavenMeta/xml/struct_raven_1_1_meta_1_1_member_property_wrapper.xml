<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_raven_1_1_meta_1_1_member_property_wrapper" kind="struct" language="C++" prot="public">
    <compoundname>Raven::Meta::MemberPropertyWrapper</compoundname>
    <basecompoundref refid="struct_raven_1_1_meta_1_1_property_wrapper_base" prot="public" virt="non-virtual">Raven::Meta::PropertyWrapperBase</basecompoundref>
    <basecompoundref refid="class_raven_1_1_meta_1_1_attribute_storage" prot="public" virt="non-virtual">Raven::Meta::AttributeStorage&lt; AttributeCount &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename PropType</type>
      </param>
      <param>
        <type>size_t</type>
        <declname>AttributeCount</declname>
        <defname>AttributeCount</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_raven_1_1_meta_1_1_member_property_wrapper_1afec6ed674802dd8f64f7e16fdbf73f2a" prot="public" static="no">
        <type>typename <ref refid="struct_raven_1_1_meta_1_1_property_traits" kindref="compound">PropertyTraits</ref>&lt; PropType &gt;::ObjectType</type>
        <definition>using Raven::Meta::MemberPropertyWrapper&lt; PropType, AttributeCount &gt;::DeclaringObjectT =  typename PropertyTraits&lt;PropType&gt;::ObjectType</definition>
        <argsstring></argsstring>
        <name>DeclaringObjectT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" line="43" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_raven_1_1_meta_1_1_member_property_wrapper_1a02a15de89886550537f53325fc4d669c" prot="public" static="no">
        <type>typename <ref refid="struct_raven_1_1_meta_1_1_property_traits" kindref="compound">PropertyTraits</ref>&lt; PropType &gt;::PropertyType</type>
        <definition>using Raven::Meta::MemberPropertyWrapper&lt; PropType, AttributeCount &gt;::PropertyTypeT =  typename PropertyTraits&lt;PropType&gt;::PropertyType</definition>
        <argsstring></argsstring>
        <name>PropertyTypeT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" line="44" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_raven_1_1_meta_1_1_member_property_wrapper_1a86d7cc9302eb017af7f67155a6ea2104" prot="public" static="no">
        <type>PropertyTypeT(DeclaringObjectT::*)</type>
        <definition>using Raven::Meta::MemberPropertyWrapper&lt; PropType, AttributeCount &gt;::Accessor =  PropertyTypeT(DeclaringObjectT::*)</definition>
        <argsstring></argsstring>
        <name>Accessor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" line="45" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_raven_1_1_meta_1_1_member_property_wrapper_1a70dc4f004ea9eade5a58ace4207889d4" prot="private" static="no" mutable="no">
        <type>Accessor</type>
        <definition>Accessor Raven::Meta::MemberPropertyWrapper&lt; PropType, AttributeCount &gt;::m_accessor</definition>
        <argsstring></argsstring>
        <name>m_accessor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" line="93" column="14" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_member_property_wrapper_1aeeda59ab73c4fbf5ecb7fa1ef73e2155" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Raven::Meta::MemberPropertyWrapper&lt; PropType, AttributeCount &gt;::MemberPropertyWrapper</definition>
        <argsstring>(NameT name, PropType prop, const std::array&lt; Attribute, AttributeCount &gt; &amp;attributes)</argsstring>
        <name>MemberPropertyWrapper</name>
        <param>
          <type>NameT</type>
          <declname>name</declname>
        </param>
        <param>
          <type>PropType</type>
          <declname>prop</declname>
        </param>
        <param>
          <type>const std::array&lt; <ref refid="class_raven_1_1_meta_1_1_attribute" kindref="compound">Attribute</ref>, AttributeCount &gt; &amp;</type>
          <declname>attributes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" line="48" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" bodystart="48" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_member_property_wrapper_1ad11da4981758a2634dc5913fc99d9cbb" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>std::size_t</type>
        <definition>std::size_t Raven::Meta::MemberPropertyWrapper&lt; PropType, AttributeCount &gt;::GetAttributeCount</definition>
        <argsstring>() const final</argsstring>
        <name>GetAttributeCount</name>
        <reimplements refid="struct_raven_1_1_meta_1_1_property_wrapper_base_1aeedbd5f9754ffbcc358aeb999f79d227">GetAttributeCount</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" line="54" column="18" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_member_property_wrapper_1a8f6971a01efe55ea370101770e129ea8" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="virtual">
        <type><ref refid="class_raven_1_1_meta_1_1_variant" kindref="compound">Variant</ref></type>
        <definition>Variant Raven::Meta::MemberPropertyWrapper&lt; PropType, AttributeCount &gt;::GetAttribute</definition>
        <argsstring>(const Variant &amp;key) const final</argsstring>
        <name>GetAttribute</name>
        <reimplements refid="struct_raven_1_1_meta_1_1_property_wrapper_base_1a042478da4de3edb317fde38f27b0d9dc">GetAttribute</reimplements>
        <param>
          <type>const <ref refid="class_raven_1_1_meta_1_1_variant" kindref="compound">Variant</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" line="57" column="14" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_member_property_wrapper_1a56cb9b2ace284b827603d64335d5afb3" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="virtual">
        <type><ref refid="class_raven_1_1_meta_1_1_type" kindref="compound">Type</ref></type>
        <definition>Type Raven::Meta::MemberPropertyWrapper&lt; PropType, AttributeCount &gt;::GetType</definition>
        <argsstring>() const final</argsstring>
        <name>GetType</name>
        <reimplements refid="struct_raven_1_1_meta_1_1_property_wrapper_base_1acea4f2679bb16d68354a31af82235a1d">GetType</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" line="61" column="11" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_member_property_wrapper_1a66c62862c83c9a76d9efd397e83bf6bd" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool Raven::Meta::MemberPropertyWrapper&lt; PropType, AttributeCount &gt;::IsValid</definition>
        <argsstring>() const final</argsstring>
        <name>IsValid</name>
        <reimplements refid="struct_raven_1_1_meta_1_1_property_wrapper_base_1a3d35abbcb3de5c16821fcc0661a39354">IsValid</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" line="64" column="11" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_member_property_wrapper_1a2192325f1f3d54287b631511b03563c2" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool Raven::Meta::MemberPropertyWrapper&lt; PropType, AttributeCount &gt;::SetValue</definition>
        <argsstring>(Instance &amp;instance, Argument arg) const final</argsstring>
        <name>SetValue</name>
        <reimplements refid="struct_raven_1_1_meta_1_1_property_wrapper_base_1ab99a76e5cfffe45f10af2d2a38be8724">SetValue</reimplements>
        <param>
          <type><ref refid="class_raven_1_1_meta_1_1_instance" kindref="compound">Instance</ref> &amp;</type>
          <declname>instance</declname>
        </param>
        <param>
          <type><ref refid="class_raven_1_1_meta_1_1_argument" kindref="compound">Argument</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" line="65" column="11" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" bodystart="65" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_member_property_wrapper_1ab673dab150e8f6b815acbeced3942774" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="virtual">
        <type><ref refid="class_raven_1_1_meta_1_1_variant" kindref="compound">Variant</ref></type>
        <definition>Variant Raven::Meta::MemberPropertyWrapper&lt; PropType, AttributeCount &gt;::GetValue</definition>
        <argsstring>(Instance &amp;instance) const final</argsstring>
        <name>GetValue</name>
        <reimplements refid="struct_raven_1_1_meta_1_1_property_wrapper_base_1af380d92f53ea99289df7ac873303af85">GetValue</reimplements>
        <param>
          <type><ref refid="class_raven_1_1_meta_1_1_instance" kindref="compound">Instance</ref> &amp;</type>
          <declname>instance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" line="80" column="14" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" bodystart="80" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_member_property_wrapper_1a639b6aeed7528697df3d64876ee2aef3" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>std::size_t</type>
        <definition>std::size_t Raven::Meta::MemberPropertyWrapper&lt; PropType, AttributeCount &gt;::OffsetOf</definition>
        <argsstring>() const final</argsstring>
        <name>OffsetOf</name>
        <reimplements refid="struct_raven_1_1_meta_1_1_property_wrapper_base_1a7c85f4ac74ac401e828338065ed1a87a">OffsetOf</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" line="87" column="18" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" bodystart="87" bodyend="90"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Raven::Meta::PropertyWrapperBase</label>
        <link refid="struct_raven_1_1_meta_1_1_property_wrapper_base"/>
      </node>
      <node id="3">
        <label>Raven::Meta::AttributeStorage&lt; AttributeCount &gt;</label>
        <link refid="class_raven_1_1_meta_1_1_attribute_storage"/>
      </node>
      <node id="1">
        <label>Raven::Meta::MemberPropertyWrapper&lt; PropType, AttributeCount &gt;</label>
        <link refid="struct_raven_1_1_meta_1_1_member_property_wrapper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Raven::Meta::PropertyWrapperBase</label>
        <link refid="struct_raven_1_1_meta_1_1_property_wrapper_base"/>
      </node>
      <node id="3">
        <label>Raven::Meta::AttributeStorage&lt; AttributeCount &gt;</label>
        <link refid="class_raven_1_1_meta_1_1_attribute_storage"/>
      </node>
      <node id="1">
        <label>Raven::Meta::MemberPropertyWrapper&lt; PropType, AttributeCount &gt;</label>
        <link refid="struct_raven_1_1_meta_1_1_member_property_wrapper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" line="41" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Property.hpp" bodystart="42" bodyend="94"/>
    <listofallmembers>
      <member refid="struct_raven_1_1_meta_1_1_member_property_wrapper_1a86d7cc9302eb017af7f67155a6ea2104" prot="public" virt="non-virtual"><scope>Raven::Meta::MemberPropertyWrapper</scope><name>Accessor</name></member>
      <member refid="class_raven_1_1_meta_1_1_attribute_storage_1afbc43c971ee42d694868cbaa93bb5d28" prot="public" virt="non-virtual"><scope>Raven::Meta::MemberPropertyWrapper</scope><name>AttributeStorage</name></member>
      <member refid="struct_raven_1_1_meta_1_1_member_property_wrapper_1afec6ed674802dd8f64f7e16fdbf73f2a" prot="public" virt="non-virtual"><scope>Raven::Meta::MemberPropertyWrapper</scope><name>DeclaringObjectT</name></member>
      <member refid="struct_raven_1_1_meta_1_1_member_property_wrapper_1a8f6971a01efe55ea370101770e129ea8" prot="public" virt="virtual"><scope>Raven::Meta::MemberPropertyWrapper</scope><name>GetAttribute</name></member>
      <member refid="struct_raven_1_1_meta_1_1_member_property_wrapper_1ad11da4981758a2634dc5913fc99d9cbb" prot="public" virt="virtual"><scope>Raven::Meta::MemberPropertyWrapper</scope><name>GetAttributeCount</name></member>
      <member refid="struct_raven_1_1_meta_1_1_property_wrapper_base_1ae4a06f0c66551e7adde85dad0934e56e" prot="public" virt="non-virtual"><scope>Raven::Meta::MemberPropertyWrapper</scope><name>GetName</name></member>
      <member refid="struct_raven_1_1_meta_1_1_property_wrapper_base_1af299125c7b9e3f13cbe08b997238c2a9" prot="public" virt="non-virtual"><scope>Raven::Meta::MemberPropertyWrapper</scope><name>GetParentObjectType</name></member>
      <member refid="struct_raven_1_1_meta_1_1_member_property_wrapper_1a56cb9b2ace284b827603d64335d5afb3" prot="public" virt="virtual"><scope>Raven::Meta::MemberPropertyWrapper</scope><name>GetType</name></member>
      <member refid="struct_raven_1_1_meta_1_1_member_property_wrapper_1ab673dab150e8f6b815acbeced3942774" prot="public" virt="virtual"><scope>Raven::Meta::MemberPropertyWrapper</scope><name>GetValue</name></member>
      <member refid="struct_raven_1_1_meta_1_1_member_property_wrapper_1a66c62862c83c9a76d9efd397e83bf6bd" prot="public" virt="virtual"><scope>Raven::Meta::MemberPropertyWrapper</scope><name>IsValid</name></member>
      <member refid="struct_raven_1_1_meta_1_1_member_property_wrapper_1a70dc4f004ea9eade5a58ace4207889d4" prot="private" virt="non-virtual"><scope>Raven::Meta::MemberPropertyWrapper</scope><name>m_accessor</name></member>
      <member refid="struct_raven_1_1_meta_1_1_member_property_wrapper_1aeeda59ab73c4fbf5ecb7fa1ef73e2155" prot="public" virt="non-virtual"><scope>Raven::Meta::MemberPropertyWrapper</scope><name>MemberPropertyWrapper</name></member>
      <member refid="struct_raven_1_1_meta_1_1_property_wrapper_base_1ad01f2d458239ed2a5998c2813ea616ec" prot="public" virt="non-virtual"><scope>Raven::Meta::MemberPropertyWrapper</scope><name>NameT</name></member>
      <member refid="struct_raven_1_1_meta_1_1_member_property_wrapper_1a639b6aeed7528697df3d64876ee2aef3" prot="public" virt="virtual"><scope>Raven::Meta::MemberPropertyWrapper</scope><name>OffsetOf</name></member>
      <member refid="struct_raven_1_1_meta_1_1_member_property_wrapper_1a02a15de89886550537f53325fc4d669c" prot="public" virt="non-virtual"><scope>Raven::Meta::MemberPropertyWrapper</scope><name>PropertyTypeT</name></member>
      <member refid="struct_raven_1_1_meta_1_1_property_wrapper_base_1af4083f830bb620aaad9706d869cd4234" prot="public" virt="non-virtual"><scope>Raven::Meta::MemberPropertyWrapper</scope><name>PropertyWrapperBase</name></member>
      <member refid="struct_raven_1_1_meta_1_1_member_property_wrapper_1a2192325f1f3d54287b631511b03563c2" prot="public" virt="virtual"><scope>Raven::Meta::MemberPropertyWrapper</scope><name>SetValue</name></member>
      <member refid="struct_raven_1_1_meta_1_1_property_wrapper_base_1a41e24deb63a2ad117c08d1970ce96a06" prot="public" virt="virtual"><scope>Raven::Meta::MemberPropertyWrapper</scope><name>~PropertyWrapperBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

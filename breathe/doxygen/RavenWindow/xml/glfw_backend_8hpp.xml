<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="glfw_backend_8hpp" kind="file" language="C++">
    <compoundname>glfwBackend.hpp</compoundname>
    <includes refid="_window_8hpp" local="yes">RavenWindow/Window.hpp</includes>
    <includes local="no">RavenGLFWExport.hpp</includes>
    <incdepgraph>
      <node id="2">
        <label>RavenWindow/Window.hpp</label>
        <link refid="_window_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>RavenGLFWExport.hpp</label>
      </node>
      <node id="3">
        <label>RavenCommon/BaseTypes.hpp</label>
      </node>
      <node id="4">
        <label>HandlePool.hpp</label>
      </node>
      <node id="1">
        <label>/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWindow/Platform/glfwBackend.hpp</label>
        <link refid="glfw_backend_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Events/EventBase.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_raven_1_1_window_1_1_g_l_f_w_1_1_s_window" prot="public">Raven::Window::GLFW::SWindow</innerclass>
    <innerclass refid="struct_raven_1_1_window_1_1_g_l_f_w_1_1_s_window_map" prot="public">Raven::Window::GLFW::SWindowMap</innerclass>
    <innerclass refid="struct_raven_1_1_window_1_1_g_l_f_w_1_1_plugin" prot="public">Raven::Window::GLFW::Plugin</innerclass>
    <innernamespace refid="namespace_raven">Raven</innernamespace>
    <innernamespace refid="namespace_raven_1_1_window">Raven::Window</innernamespace>
    <innernamespace refid="namespace_raven_1_1_window_1_1_g_l_f_w">Raven::Window::GLFW</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="glfw_backend_8hpp_1a88c8ef097b4bcc04ae509f1bfa6d1de1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void RAVENGLFW_API</type>
        <definition>void RAVENGLFW_API BuildRavenGLFW</definition>
        <argsstring>(Raven::App &amp;app)</argsstring>
        <name>BuildRavenGLFW</name>
        <param>
          <type>Raven::App &amp;</type>
          <declname>app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWindow/Platform/glfwBackend.hpp" line="29" column="31" declfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWindow/Platform/glfwBackend.hpp" declline="29" declcolumn="31"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;RavenWindow/Window.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">GLFWwindow;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">GLFWcursor;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Raven::Window::GLFW<sp/>{</highlight></codeline>
<codeline lineno="8" refid="struct_raven_1_1_window_1_1_g_l_f_w_1_1_s_window" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_raven_1_1_window_1_1_g_l_f_w_1_1_s_window" kindref="compound">SWindow</ref><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetWindowMode(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EWindowMode<sp/>eMode,<sp/><ref refid="class_raven_1_1_window_1_1_c_window" kindref="compound">CWindow</ref>&amp;<sp/>wnd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_raven_1_1_window_1_1_monitors" kindref="compound">Monitors</ref>&amp;<sp/>mons,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MonitorId<sp/>hMon<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CheckIsHovered();</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLFWwindow*<sp/>pWnd<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int2<sp/>oldPos{},<sp/>oldSize{};</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int2<sp/>CurrentSize{};</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int2<sp/>CurrentPosition{};</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsMinimised<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsHovered<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="20" refid="struct_raven_1_1_window_1_1_g_l_f_w_1_1_s_window_map" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_raven_1_1_window_1_1_g_l_f_w_1_1_s_window_map" kindref="compound">SWindowMap</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_map&lt;Window::Id,<sp/>GLFW::SWindow&gt;<sp/>map;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="23" refid="struct_raven_1_1_window_1_1_g_l_f_w_1_1_plugin" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_raven_1_1_window_1_1_g_l_f_w_1_1_plugin" kindref="compound">Plugin</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Build(App&amp;<sp/>app);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;RavenGLFWExport.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RAVENGLFW_API<sp/>BuildRavenGLFW(Raven::App&amp;<sp/>app);</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWindow/Platform/glfwBackend.hpp"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_raven_1_1_meta_1_1_enum" kind="class" language="C++" prot="public">
    <compoundname>Raven::Meta::Enum</compoundname>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_raven_1_1_meta_1_1_enum_1a0aeaeccaacfcfab608ca309d0585441d" prot="private" static="no">
        <type>typename Detail::EnumWrapperBase::NameT</type>
        <definition>using Raven::Meta::Enum::NameT =  typename Detail::EnumWrapperBase::NameT</definition>
        <argsstring></argsstring>
        <name>NameT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" line="128" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_raven_1_1_meta_1_1_enum_1af727c445f5289bf49d455eea333f5816" prot="private" static="no">
        <type>typename Detail::EnumWrapperBase::NamesT</type>
        <definition>using Raven::Meta::Enum::NamesT =  typename Detail::EnumWrapperBase::NamesT</definition>
        <argsstring></argsstring>
        <name>NamesT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" line="129" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_raven_1_1_meta_1_1_enum_1a841a5e5b4e0a7752ec07ff41b9eb62c8" prot="private" static="no">
        <type>typename Detail::EnumWrapperBase::ValuesT</type>
        <definition>using Raven::Meta::Enum::ValuesT =  typename Detail::EnumWrapperBase::ValuesT</definition>
        <argsstring></argsstring>
        <name>ValuesT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" line="130" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" bodystart="130" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_raven_1_1_meta_1_1_enum_1a0dc1665d2c402de29affa018b006e6f2" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_base" kindref="compound">Detail::EnumWrapperBase</ref> *</type>
        <definition>const Detail::EnumWrapperBase* Raven::Meta::Enum::m_pEnumWrapper</definition>
        <argsstring></argsstring>
        <name>m_pEnumWrapper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" line="144" column="31" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_enum_1a2e1cd425cbe8becf0357f281dcd16df2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Raven::Meta::Enum::Enum</definition>
        <argsstring>(const Detail::EnumWrapperBase *pWrapper)</argsstring>
        <name>Enum</name>
        <param>
          <type>const <ref refid="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_base" kindref="compound">Detail::EnumWrapperBase</ref> *</type>
          <declname>pWrapper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" line="132" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" bodystart="132" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_enum_1adb0db319098f785992b411c3769170e4" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_meta_1_1_type" kindref="compound">Type</ref></type>
        <definition>Type Raven::Meta::Enum::GetUnderlyingType</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetUnderlyingType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" line="135" column="7" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_enum_1a0803d608f79f7c5124c7eb6cf5cdd3b0" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>ValuesT</type>
        <definition>ValuesT Raven::Meta::Enum::GetValues</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetValues</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" line="136" column="10" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_enum_1a2481596a607383a602704bbac9b14b3d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>NamesT</type>
        <definition>NamesT Raven::Meta::Enum::GetNames</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetNames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" line="137" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_enum_1ae0c6c08d20ab3ac79c157dea602eb489" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_meta_1_1_type" kindref="compound">Type</ref></type>
        <definition>Type Raven::Meta::Enum::GetType</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" line="138" column="7" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_enum_1af10edb67b37a3ecdf819fe3a3bd820c4" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_meta_1_1_variant" kindref="compound">Variant</ref></type>
        <definition>Variant Raven::Meta::Enum::GetAttribute</definition>
        <argsstring>(const Variant &amp;key) const noexcept</argsstring>
        <name>GetAttribute</name>
        <param>
          <type>const <ref refid="class_raven_1_1_meta_1_1_variant" kindref="compound">Variant</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" line="140" column="10" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_enum_1aef6b9ff13e13c295d2297466d0d70ae2" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_meta_1_1_variant" kindref="compound">Variant</ref></type>
        <definition>Variant Raven::Meta::Enum::NameToValue</definition>
        <argsstring>(NameT name) const noexcept</argsstring>
        <name>NameToValue</name>
        <param>
          <type>NameT</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" line="141" column="10" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_enum_1a99e580726d4b49331c3565b257834e86" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>NameT</type>
        <definition>NameT Raven::Meta::Enum::ValueToName</definition>
        <argsstring>(Argument val) const noexcept</argsstring>
        <name>ValueToName</name>
        <param>
          <type><ref refid="class_raven_1_1_meta_1_1_argument" kindref="compound">Argument</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" line="142" column="8" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" bodystart="142" bodyend="142"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" line="126" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" bodystart="127" bodyend="145"/>
    <listofallmembers>
      <member refid="class_raven_1_1_meta_1_1_enum_1a2e1cd425cbe8becf0357f281dcd16df2" prot="public" virt="non-virtual"><scope>Raven::Meta::Enum</scope><name>Enum</name></member>
      <member refid="class_raven_1_1_meta_1_1_enum_1af10edb67b37a3ecdf819fe3a3bd820c4" prot="public" virt="non-virtual"><scope>Raven::Meta::Enum</scope><name>GetAttribute</name></member>
      <member refid="class_raven_1_1_meta_1_1_enum_1a2481596a607383a602704bbac9b14b3d" prot="public" virt="non-virtual"><scope>Raven::Meta::Enum</scope><name>GetNames</name></member>
      <member refid="class_raven_1_1_meta_1_1_enum_1ae0c6c08d20ab3ac79c157dea602eb489" prot="public" virt="non-virtual"><scope>Raven::Meta::Enum</scope><name>GetType</name></member>
      <member refid="class_raven_1_1_meta_1_1_enum_1adb0db319098f785992b411c3769170e4" prot="public" virt="non-virtual"><scope>Raven::Meta::Enum</scope><name>GetUnderlyingType</name></member>
      <member refid="class_raven_1_1_meta_1_1_enum_1a0803d608f79f7c5124c7eb6cf5cdd3b0" prot="public" virt="non-virtual"><scope>Raven::Meta::Enum</scope><name>GetValues</name></member>
      <member refid="class_raven_1_1_meta_1_1_enum_1a0dc1665d2c402de29affa018b006e6f2" prot="private" virt="non-virtual"><scope>Raven::Meta::Enum</scope><name>m_pEnumWrapper</name></member>
      <member refid="class_raven_1_1_meta_1_1_enum_1af727c445f5289bf49d455eea333f5816" prot="private" virt="non-virtual"><scope>Raven::Meta::Enum</scope><name>NamesT</name></member>
      <member refid="class_raven_1_1_meta_1_1_enum_1a0aeaeccaacfcfab608ca309d0585441d" prot="private" virt="non-virtual"><scope>Raven::Meta::Enum</scope><name>NameT</name></member>
      <member refid="class_raven_1_1_meta_1_1_enum_1aef6b9ff13e13c295d2297466d0d70ae2" prot="public" virt="non-virtual"><scope>Raven::Meta::Enum</scope><name>NameToValue</name></member>
      <member refid="class_raven_1_1_meta_1_1_enum_1a841a5e5b4e0a7752ec07ff41b9eb62c8" prot="private" virt="non-virtual"><scope>Raven::Meta::Enum</scope><name>ValuesT</name></member>
      <member refid="class_raven_1_1_meta_1_1_enum_1a99e580726d4b49331c3565b257834e86" prot="public" virt="non-virtual"><scope>Raven::Meta::Enum</scope><name>ValueToName</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

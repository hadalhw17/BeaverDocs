<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_raven_1_1_c_image" kind="class" language="C++" prot="public">
    <compoundname>Raven::CImage</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_raven_1_1_c_image_1ad0a5e15adff293eb0a4b965c13e82919" prot="public" static="no" strong="yes">
        <type>uint8</type>
        <name>EUsage</name>
        <enumvalue id="class_raven_1_1_c_image_1ad0a5e15adff293eb0a4b965c13e82919aa3e8ae43188ae76d38f414b2bdb0077b" prot="public">
          <name>Texture</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_raven_1_1_c_image_1ad0a5e15adff293eb0a4b965c13e82919a9b0bffda4bcb312168c0d6537cb04b4d" prot="public">
          <name>RenderTarget</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_raven_1_1_c_image_1ad0a5e15adff293eb0a4b965c13e82919af3c010256266268271a563d8363d4594" prot="public">
          <name>ComputeOutput</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>How image can be used by GPU. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="12" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="12" bodyend="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_raven_1_1_c_image_1a7c2a1e4664517a94c6e698666f600d66" prot="private" static="no" mutable="no">
        <type></type>
        <definition>Raven::CImage::RAVEN_REFLECTION_FRIEND</definition>
        <argsstring></argsstring>
        <name>RAVEN_REFLECTION_FRIEND</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="8" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_image_1a2ee8cc91bb9b7e8e7613a91d971c791c" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Raven::CImage::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="96" column="26" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_image_1a7e9a5f71d71df2f3641a049a980ac739" prot="private" static="no" mutable="no">
        <type>std::vector&lt; uint8 &gt;</type>
        <definition>std::vector&lt;uint8&gt; Raven::CImage::m_data</definition>
        <argsstring></argsstring>
        <name>m_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="97" column="19" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_image_1afe3b5a228897784048fff89f0a217da1" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Raven::CImage::m_width</definition>
        <argsstring></argsstring>
        <name>m_width</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="98" column="26" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_image_1a024e0836b158f9c5fabe295ba13ed149" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Raven::CImage::m_height</definition>
        <argsstring></argsstring>
        <name>m_height</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="99" column="26" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_image_1a6b733f5012f9035e66b5d7ddd7cbc1fa" prot="private" static="no" mutable="no">
        <type><ref refid="struct_raven_1_1_renderer_1_1_s_texture_format" kindref="compound">Renderer::STextureFormat</ref></type>
        <definition>Renderer::STextureFormat Raven::CImage::m_format</definition>
        <argsstring></argsstring>
        <name>m_format</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="100" column="26" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_image_1a7d4defdfff9f9e7f883cf87ff90e0993" prot="private" static="no" mutable="no">
        <type><ref refid="class_raven_1_1_c_image_1ad0a5e15adff293eb0a4b965c13e82919" kindref="member">CImage::EUsage</ref></type>
        <definition>CImage::EUsage Raven::CImage::m_eUsage</definition>
        <argsstring></argsstring>
        <name>m_eUsage</name>
        <initializer>= EUsage::Texture</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="101" column="26" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_raven_1_1_c_image_1a26d07b24727c56fd4f4e5908b33b3daf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Raven::CImage::CImage</definition>
        <argsstring>()=default</argsstring>
        <name>CImage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_image_1ac9f5b0af58dc59a8ddbec6ab491ef67d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Raven::CImage::CImage</definition>
        <argsstring>(int width, int height, Renderer::STextureFormat format, const EUsage eUsage=EUsage::Texture)</argsstring>
        <name>CImage</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type><ref refid="struct_raven_1_1_renderer_1_1_s_texture_format" kindref="compound">Renderer::STextureFormat</ref></type>
          <declname>format</declname>
        </param>
        <param>
          <type>const <ref refid="class_raven_1_1_c_image_1ad0a5e15adff293eb0a4b965c13e82919" kindref="member">EUsage</ref></type>
          <declname>eUsage</declname>
          <defval>EUsage::Texture</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="18" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="18" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_image_1aee55b0508e5a7a6ae9824607c5be541d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Raven::CImage::CImage</definition>
        <argsstring>(int width, int height, Renderer::STextureFormat format, std::span&lt; const uint8 &gt; data, const EUsage eUsage=EUsage::Texture)</argsstring>
        <name>CImage</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type><ref refid="struct_raven_1_1_renderer_1_1_s_texture_format" kindref="compound">Renderer::STextureFormat</ref></type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::span&lt; const uint8 &gt;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="class_raven_1_1_c_image_1ad0a5e15adff293eb0a4b965c13e82919" kindref="member">EUsage</ref></type>
          <declname>eUsage</declname>
          <defval>EUsage::Texture</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="23" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="23" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_image_1a7dc09be0bc9e51b753bedf9c926f73fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Raven::CImage::~CImage</definition>
        <argsstring>()=default</argsstring>
        <name>~CImage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_image_1a0f4a1e16b8c324b57c32ff96e2b7e888" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CImage::Resize</definition>
        <argsstring>(const int newWidth, const int newHeight)</argsstring>
        <name>Resize</name>
        <param>
          <type>const int</type>
          <declname>newWidth</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>newHeight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resize underlying buffer and its GPU representation Image contents are not going to be preserved <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>destination width </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newHeight</parametername>
</parameternamelist>
<parameterdescription>
<para>destination height </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="61" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_image_1abc0960ebf728ad450236c673e7568933" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_c_image" kindref="compound">CImage</ref> &amp;</type>
        <definition>CImage&amp; Raven::CImage::SetName</definition>
        <argsstring>(std::string_view name)</argsstring>
        <name>SetName</name>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="63" column="8" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_image_1aa0bb7814e9b719da64b6a6403aaff577" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string_view</type>
        <definition>const std::string_view Raven::CImage::GetName</definition>
        <argsstring>() const</argsstring>
        <name>GetName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="65" column="32" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_image_1a6743e9d6e2f65082a9fc93974d8d8bb9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Raven::CImage::GetWidth</definition>
        <argsstring>() const</argsstring>
        <name>GetWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="69" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_image_1a0492cacfbc508f1af728d663caf9a943" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Raven::CImage::GetHeight</definition>
        <argsstring>() const</argsstring>
        <name>GetHeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="70" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_image_1adf5cc41e05a2477a93bf56e366da9176" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_renderer_1_1_s_texture_format" kindref="compound">Renderer::STextureFormat</ref></type>
        <definition>Renderer::STextureFormat Raven::CImage::GetFormat</definition>
        <argsstring>() const</argsstring>
        <name>GetFormat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="72" column="34" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="72" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_image_1aa154c9a6cbc96201c2433d1d660a2c18" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; uint8 &gt; &amp;</type>
        <definition>const std::vector&lt;uint8&gt;&amp; Raven::CImage::GetData</definition>
        <argsstring>() const</argsstring>
        <name>GetData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="75" column="27" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_image_1a180e989cd012dc471f49715334a18b65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::span&lt; uint8 &gt;</type>
        <definition>std::span&lt;uint8&gt; Raven::CImage::GetData</definition>
        <argsstring>()</argsstring>
        <name>GetData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="79" column="19" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_image_1a9bce62176e551e13f53019c1f1d4e7b7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_c_image_1ad0a5e15adff293eb0a4b965c13e82919" kindref="member">EUsage</ref></type>
        <definition>EUsage Raven::CImage::GetUsage</definition>
        <argsstring>() const</argsstring>
        <name>GetUsage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="83" column="16" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_image_1ae17a42a02ceb2eca59678aaf5fcdbc4e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CImage::SetUsage</definition>
        <argsstring>(const EUsage eUsage)</argsstring>
        <name>SetUsage</name>
        <param>
          <type>const <ref refid="class_raven_1_1_c_image_1ad0a5e15adff293eb0a4b965c13e82919" kindref="member">EUsage</ref></type>
          <declname>eUsage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="84" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_image_1ac80fafce24e5297773ec9c265b4e044a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CImage::ClearData</definition>
        <argsstring>()</argsstring>
        <name>ClearData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="86" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="86" bodyend="86"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_raven_1_1_c_image_1a506e34488391243ef3374e0615bd5054" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_c_image" kindref="compound">CImage</ref></type>
        <definition>static CImage Raven::CImage::RenderTarget</definition>
        <argsstring>(const int width, const int height, const bool isHDR=false)</argsstring>
        <name>RenderTarget</name>
        <param>
          <type>const int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>isHDR</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create image to be used as render target <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>image width </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>image height </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isHDR</parametername>
</parameternamelist>
<parameterdescription>
<para>if true, then image is RGBA16F, RGB8sRGB otherwise </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>constructed image </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="37" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="37" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_image_1ab4d6a86c6be9c53da2faf9bf0b12a69e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_c_image" kindref="compound">CImage</ref></type>
        <definition>static CImage Raven::CImage::ComputeOutput</definition>
        <argsstring>(const int width, const int height, const Renderer::STextureFormat fmt)</argsstring>
        <name>ComputeOutput</name>
        <param>
          <type>const int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_renderer_1_1_s_texture_format" kindref="compound">Renderer::STextureFormat</ref></type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create image to be used as compute output(with storage/UAV flags) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>image width </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>image height </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>image format </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>constructed image </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="53" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="53" bodyend="55"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_raven_1_1_c_image_1a67dc1488a7a01965d8c5eb69e2508c9d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CImage::Initialise</definition>
        <argsstring>(int width, int height, Renderer::STextureFormat format)</argsstring>
        <name>Initialise</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type><ref refid="struct_raven_1_1_renderer_1_1_s_texture_format" kindref="compound">Renderer::STextureFormat</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="89" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_image_1a34f40d649ba7e189ead9cee1cc6abdb9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CImage::Initialise</definition>
        <argsstring>(int width, int height, Renderer::STextureFormat format, std::span&lt; const uint8 &gt; data)</argsstring>
        <name>Initialise</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type><ref refid="struct_raven_1_1_renderer_1_1_s_texture_format" kindref="compound">Renderer::STextureFormat</ref></type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::span&lt; const uint8 &gt;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="90" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_raven_1_1_c_image_1a70fbe44dee88983ba703b4cbc3cfb22c" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t Raven::CImage::CalculateImageSize</definition>
        <argsstring>(int w, int h, Renderer::STextureFormat f)</argsstring>
        <name>CalculateImageSize</name>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="struct_raven_1_1_renderer_1_1_s_texture_format" kindref="compound">Renderer::STextureFormat</ref></type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="92" column="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="7" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="7" bodyend="102"/>
    <listofallmembers>
      <member refid="class_raven_1_1_c_image_1a70fbe44dee88983ba703b4cbc3cfb22c" prot="private" virt="non-virtual"><scope>Raven::CImage</scope><name>CalculateImageSize</name></member>
      <member refid="class_raven_1_1_c_image_1a26d07b24727c56fd4f4e5908b33b3daf" prot="public" virt="non-virtual"><scope>Raven::CImage</scope><name>CImage</name></member>
      <member refid="class_raven_1_1_c_image_1ac9f5b0af58dc59a8ddbec6ab491ef67d" prot="public" virt="non-virtual"><scope>Raven::CImage</scope><name>CImage</name></member>
      <member refid="class_raven_1_1_c_image_1aee55b0508e5a7a6ae9824607c5be541d" prot="public" virt="non-virtual"><scope>Raven::CImage</scope><name>CImage</name></member>
      <member refid="class_raven_1_1_c_image_1ac80fafce24e5297773ec9c265b4e044a" prot="public" virt="non-virtual"><scope>Raven::CImage</scope><name>ClearData</name></member>
      <member refid="class_raven_1_1_c_image_1ab4d6a86c6be9c53da2faf9bf0b12a69e" prot="public" virt="non-virtual"><scope>Raven::CImage</scope><name>ComputeOutput</name></member>
      <member refid="class_raven_1_1_c_image_1ad0a5e15adff293eb0a4b965c13e82919" prot="public" virt="non-virtual"><scope>Raven::CImage</scope><name>EUsage</name></member>
      <member refid="class_raven_1_1_c_image_1aa154c9a6cbc96201c2433d1d660a2c18" prot="public" virt="non-virtual"><scope>Raven::CImage</scope><name>GetData</name></member>
      <member refid="class_raven_1_1_c_image_1a180e989cd012dc471f49715334a18b65" prot="public" virt="non-virtual"><scope>Raven::CImage</scope><name>GetData</name></member>
      <member refid="class_raven_1_1_c_image_1adf5cc41e05a2477a93bf56e366da9176" prot="public" virt="non-virtual"><scope>Raven::CImage</scope><name>GetFormat</name></member>
      <member refid="class_raven_1_1_c_image_1a0492cacfbc508f1af728d663caf9a943" prot="public" virt="non-virtual"><scope>Raven::CImage</scope><name>GetHeight</name></member>
      <member refid="class_raven_1_1_c_image_1aa0bb7814e9b719da64b6a6403aaff577" prot="public" virt="non-virtual"><scope>Raven::CImage</scope><name>GetName</name></member>
      <member refid="class_raven_1_1_c_image_1a9bce62176e551e13f53019c1f1d4e7b7" prot="public" virt="non-virtual"><scope>Raven::CImage</scope><name>GetUsage</name></member>
      <member refid="class_raven_1_1_c_image_1a6743e9d6e2f65082a9fc93974d8d8bb9" prot="public" virt="non-virtual"><scope>Raven::CImage</scope><name>GetWidth</name></member>
      <member refid="class_raven_1_1_c_image_1a67dc1488a7a01965d8c5eb69e2508c9d" prot="private" virt="non-virtual"><scope>Raven::CImage</scope><name>Initialise</name></member>
      <member refid="class_raven_1_1_c_image_1a34f40d649ba7e189ead9cee1cc6abdb9" prot="private" virt="non-virtual"><scope>Raven::CImage</scope><name>Initialise</name></member>
      <member refid="class_raven_1_1_c_image_1a7e9a5f71d71df2f3641a049a980ac739" prot="private" virt="non-virtual"><scope>Raven::CImage</scope><name>m_data</name></member>
      <member refid="class_raven_1_1_c_image_1a7d4defdfff9f9e7f883cf87ff90e0993" prot="private" virt="non-virtual"><scope>Raven::CImage</scope><name>m_eUsage</name></member>
      <member refid="class_raven_1_1_c_image_1a6b733f5012f9035e66b5d7ddd7cbc1fa" prot="private" virt="non-virtual"><scope>Raven::CImage</scope><name>m_format</name></member>
      <member refid="class_raven_1_1_c_image_1a024e0836b158f9c5fabe295ba13ed149" prot="private" virt="non-virtual"><scope>Raven::CImage</scope><name>m_height</name></member>
      <member refid="class_raven_1_1_c_image_1a2ee8cc91bb9b7e8e7613a91d971c791c" prot="private" virt="non-virtual"><scope>Raven::CImage</scope><name>m_name</name></member>
      <member refid="class_raven_1_1_c_image_1afe3b5a228897784048fff89f0a217da1" prot="private" virt="non-virtual"><scope>Raven::CImage</scope><name>m_width</name></member>
      <member refid="class_raven_1_1_c_image_1a7c2a1e4664517a94c6e698666f600d66" prot="private" virt="non-virtual"><scope>Raven::CImage</scope><name>RAVEN_REFLECTION_FRIEND</name></member>
      <member refid="class_raven_1_1_c_image_1a506e34488391243ef3374e0615bd5054" prot="public" virt="non-virtual"><scope>Raven::CImage</scope><name>RenderTarget</name></member>
      <member refid="class_raven_1_1_c_image_1a0f4a1e16b8c324b57c32ff96e2b7e888" prot="public" virt="non-virtual"><scope>Raven::CImage</scope><name>Resize</name></member>
      <member refid="class_raven_1_1_c_image_1abc0960ebf728ad450236c673e7568933" prot="public" virt="non-virtual"><scope>Raven::CImage</scope><name>SetName</name></member>
      <member refid="class_raven_1_1_c_image_1ae17a42a02ceb2eca59678aaf5fcdbc4e" prot="public" virt="non-virtual"><scope>Raven::CImage</scope><name>SetUsage</name></member>
      <member refid="class_raven_1_1_c_image_1a7dc09be0bc9e51b753bedf9c926f73fd" prot="public" virt="non-virtual"><scope>Raven::CImage</scope><name>~CImage</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

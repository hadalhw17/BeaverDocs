<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_raven_1_1_c_image" kind="class" language="C++" prot="public">
    <compoundname>Raven::CImage</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_raven_1_1_c_image_1a7c2a1e4664517a94c6e698666f600d66" prot="private" static="no" mutable="no">
        <type></type>
        <definition>Raven::CImage::RAVEN_REFLECTION_FRIEND</definition>
        <argsstring></argsstring>
        <name>RAVEN_REFLECTION_FRIEND</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="9" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_image_1a2ee8cc91bb9b7e8e7613a91d971c791c" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Raven::CImage::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="55" column="26" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_image_1a7e9a5f71d71df2f3641a049a980ac739" prot="private" static="no" mutable="no">
        <type>std::vector&lt; uint8 &gt;</type>
        <definition>std::vector&lt;uint8&gt; Raven::CImage::m_data</definition>
        <argsstring></argsstring>
        <name>m_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="56" column="19" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_image_1afe3b5a228897784048fff89f0a217da1" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Raven::CImage::m_width</definition>
        <argsstring></argsstring>
        <name>m_width</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="57" column="26" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_image_1a024e0836b158f9c5fabe295ba13ed149" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Raven::CImage::m_height</definition>
        <argsstring></argsstring>
        <name>m_height</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="58" column="26" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_image_1a6b733f5012f9035e66b5d7ddd7cbc1fa" prot="private" static="no" mutable="no">
        <type><ref refid="struct_raven_1_1_renderer_1_1_s_texture_format" kindref="compound">Renderer::STextureFormat</ref></type>
        <definition>Renderer::STextureFormat Raven::CImage::m_format</definition>
        <argsstring></argsstring>
        <name>m_format</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="59" column="26" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_image_1a28ea2521d7d9b90264cf763c09333f36" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Raven::CImage::m_isComputeOutput</definition>
        <argsstring></argsstring>
        <name>m_isComputeOutput</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="60" column="26" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_raven_1_1_c_image_1a26d07b24727c56fd4f4e5908b33b3daf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Raven::CImage::CImage</definition>
        <argsstring>()=default</argsstring>
        <name>CImage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_image_1a366455a41900a588646338be7c4b5457" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Raven::CImage::CImage</definition>
        <argsstring>(int width, int height, Renderer::STextureFormat format, const bool isCompute=false)</argsstring>
        <name>CImage</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type><ref refid="struct_raven_1_1_renderer_1_1_s_texture_format" kindref="compound">Renderer::STextureFormat</ref></type>
          <declname>format</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>isCompute</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="13" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="13" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_image_1a1dd701113b850ad892747b012130c6f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Raven::CImage::CImage</definition>
        <argsstring>(int width, int height, Renderer::STextureFormat format, std::span&lt; const uint8 &gt; data, const bool isCompute=false)</argsstring>
        <name>CImage</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type><ref refid="struct_raven_1_1_renderer_1_1_s_texture_format" kindref="compound">Renderer::STextureFormat</ref></type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::span&lt; const uint8 &gt;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>isCompute</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="18" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="18" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_image_1a7dc09be0bc9e51b753bedf9c926f73fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Raven::CImage::~CImage</definition>
        <argsstring>()=default</argsstring>
        <name>~CImage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_image_1a3ee047cf521c79bd195b0ada00dc0ae1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CImage::SetName</definition>
        <argsstring>(std::string_view name)</argsstring>
        <name>SetName</name>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="26" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_image_1aa0bb7814e9b719da64b6a6403aaff577" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string_view</type>
        <definition>const std::string_view Raven::CImage::GetName</definition>
        <argsstring>() const</argsstring>
        <name>GetName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="28" column="32" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_image_1a6743e9d6e2f65082a9fc93974d8d8bb9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Raven::CImage::GetWidth</definition>
        <argsstring>() const</argsstring>
        <name>GetWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="30" column="28" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_image_1a0492cacfbc508f1af728d663caf9a943" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Raven::CImage::GetHeight</definition>
        <argsstring>() const</argsstring>
        <name>GetHeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="31" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_image_1adf5cc41e05a2477a93bf56e366da9176" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_renderer_1_1_s_texture_format" kindref="compound">Renderer::STextureFormat</ref></type>
        <definition>Renderer::STextureFormat Raven::CImage::GetFormat</definition>
        <argsstring>() const</argsstring>
        <name>GetFormat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="33" column="34" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_image_1aa154c9a6cbc96201c2433d1d660a2c18" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; uint8 &gt; &amp;</type>
        <definition>const std::vector&lt;uint8&gt;&amp; Raven::CImage::GetData</definition>
        <argsstring>() const</argsstring>
        <name>GetData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="36" column="27" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="36" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_image_1a398b6c1dd1221bb76e3f74081ba52bc6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::CImage::GetIsComputeOutput</definition>
        <argsstring>() const</argsstring>
        <name>GetIsComputeOutput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="40" column="14" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="40" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_image_1a2dc3dc4a4ef293c26fa5373f183d79f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CImage::SetIsComputeOutput</definition>
        <argsstring>(const bool val)</argsstring>
        <name>SetIsComputeOutput</name>
        <param>
          <type>const bool</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="43" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_image_1ac80fafce24e5297773ec9c265b4e044a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CImage::ClearData</definition>
        <argsstring>()</argsstring>
        <name>ClearData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="45" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="45" bodyend="45"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_raven_1_1_c_image_1a67dc1488a7a01965d8c5eb69e2508c9d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CImage::Initialise</definition>
        <argsstring>(int width, int height, Renderer::STextureFormat format)</argsstring>
        <name>Initialise</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type><ref refid="struct_raven_1_1_renderer_1_1_s_texture_format" kindref="compound">Renderer::STextureFormat</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="48" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_image_1a34f40d649ba7e189ead9cee1cc6abdb9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CImage::Initialise</definition>
        <argsstring>(int width, int height, Renderer::STextureFormat format, std::span&lt; const uint8 &gt; data)</argsstring>
        <name>Initialise</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type><ref refid="struct_raven_1_1_renderer_1_1_s_texture_format" kindref="compound">Renderer::STextureFormat</ref></type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::span&lt; const uint8 &gt;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="49" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_raven_1_1_c_image_1a70fbe44dee88983ba703b4cbc3cfb22c" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t Raven::CImage::CalculateImageSize</definition>
        <argsstring>(int w, int h, Renderer::STextureFormat f)</argsstring>
        <name>CalculateImageSize</name>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="struct_raven_1_1_renderer_1_1_s_texture_format" kindref="compound">Renderer::STextureFormat</ref></type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="51" column="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" line="8" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/Image.hpp" bodystart="8" bodyend="61"/>
    <listofallmembers>
      <member refid="class_raven_1_1_c_image_1a70fbe44dee88983ba703b4cbc3cfb22c" prot="private" virt="non-virtual"><scope>Raven::CImage</scope><name>CalculateImageSize</name></member>
      <member refid="class_raven_1_1_c_image_1a26d07b24727c56fd4f4e5908b33b3daf" prot="public" virt="non-virtual"><scope>Raven::CImage</scope><name>CImage</name></member>
      <member refid="class_raven_1_1_c_image_1a366455a41900a588646338be7c4b5457" prot="public" virt="non-virtual"><scope>Raven::CImage</scope><name>CImage</name></member>
      <member refid="class_raven_1_1_c_image_1a1dd701113b850ad892747b012130c6f9" prot="public" virt="non-virtual"><scope>Raven::CImage</scope><name>CImage</name></member>
      <member refid="class_raven_1_1_c_image_1ac80fafce24e5297773ec9c265b4e044a" prot="public" virt="non-virtual"><scope>Raven::CImage</scope><name>ClearData</name></member>
      <member refid="class_raven_1_1_c_image_1aa154c9a6cbc96201c2433d1d660a2c18" prot="public" virt="non-virtual"><scope>Raven::CImage</scope><name>GetData</name></member>
      <member refid="class_raven_1_1_c_image_1adf5cc41e05a2477a93bf56e366da9176" prot="public" virt="non-virtual"><scope>Raven::CImage</scope><name>GetFormat</name></member>
      <member refid="class_raven_1_1_c_image_1a0492cacfbc508f1af728d663caf9a943" prot="public" virt="non-virtual"><scope>Raven::CImage</scope><name>GetHeight</name></member>
      <member refid="class_raven_1_1_c_image_1a398b6c1dd1221bb76e3f74081ba52bc6" prot="public" virt="non-virtual"><scope>Raven::CImage</scope><name>GetIsComputeOutput</name></member>
      <member refid="class_raven_1_1_c_image_1aa0bb7814e9b719da64b6a6403aaff577" prot="public" virt="non-virtual"><scope>Raven::CImage</scope><name>GetName</name></member>
      <member refid="class_raven_1_1_c_image_1a6743e9d6e2f65082a9fc93974d8d8bb9" prot="public" virt="non-virtual"><scope>Raven::CImage</scope><name>GetWidth</name></member>
      <member refid="class_raven_1_1_c_image_1a67dc1488a7a01965d8c5eb69e2508c9d" prot="private" virt="non-virtual"><scope>Raven::CImage</scope><name>Initialise</name></member>
      <member refid="class_raven_1_1_c_image_1a34f40d649ba7e189ead9cee1cc6abdb9" prot="private" virt="non-virtual"><scope>Raven::CImage</scope><name>Initialise</name></member>
      <member refid="class_raven_1_1_c_image_1a7e9a5f71d71df2f3641a049a980ac739" prot="private" virt="non-virtual"><scope>Raven::CImage</scope><name>m_data</name></member>
      <member refid="class_raven_1_1_c_image_1a6b733f5012f9035e66b5d7ddd7cbc1fa" prot="private" virt="non-virtual"><scope>Raven::CImage</scope><name>m_format</name></member>
      <member refid="class_raven_1_1_c_image_1a024e0836b158f9c5fabe295ba13ed149" prot="private" virt="non-virtual"><scope>Raven::CImage</scope><name>m_height</name></member>
      <member refid="class_raven_1_1_c_image_1a28ea2521d7d9b90264cf763c09333f36" prot="private" virt="non-virtual"><scope>Raven::CImage</scope><name>m_isComputeOutput</name></member>
      <member refid="class_raven_1_1_c_image_1a2ee8cc91bb9b7e8e7613a91d971c791c" prot="private" virt="non-virtual"><scope>Raven::CImage</scope><name>m_name</name></member>
      <member refid="class_raven_1_1_c_image_1afe3b5a228897784048fff89f0a217da1" prot="private" virt="non-virtual"><scope>Raven::CImage</scope><name>m_width</name></member>
      <member refid="class_raven_1_1_c_image_1a7c2a1e4664517a94c6e698666f600d66" prot="private" virt="non-virtual"><scope>Raven::CImage</scope><name>RAVEN_REFLECTION_FRIEND</name></member>
      <member refid="class_raven_1_1_c_image_1a2dc3dc4a4ef293c26fa5373f183d79f6" prot="public" virt="non-virtual"><scope>Raven::CImage</scope><name>SetIsComputeOutput</name></member>
      <member refid="class_raven_1_1_c_image_1a3ee047cf521c79bd195b0ada00dc0ae1" prot="public" virt="non-virtual"><scope>Raven::CImage</scope><name>SetName</name></member>
      <member refid="class_raven_1_1_c_image_1a7dc09be0bc9e51b753bedf9c926f73fd" prot="public" virt="non-virtual"><scope>Raven::CImage</scope><name>~CImage</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

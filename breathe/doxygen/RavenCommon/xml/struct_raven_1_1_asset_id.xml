<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_raven_1_1_asset_id" kind="struct" language="C++" prot="public">
    <compoundname>Raven::AssetId</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_raven_1_1_asset_id_1abf21343227e63a15b0448a1d25fc3dca" prot="public" static="no">
        <type>AssetIndexT</type>
        <definition>using Raven::AssetId::EntityT =  AssetIndexT</definition>
        <argsstring></argsstring>
        <name>EntityT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" line="32" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_raven_1_1_asset_id_1a5d17015934e9aa14649d31c79c6bdb15" prot="public" static="no" mutable="no">
        <type>RavenUtil::Hash</type>
        <definition>RavenUtil::Hash Raven::AssetId::m_typeHash</definition>
        <argsstring></argsstring>
        <name>m_typeHash</name>
        <initializer>= ~0ull</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" line="34" column="17" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_raven_1_1_asset_id_1a1ad2f5c5fe535fbbf478c68e24fb8193" prot="public" static="no" mutable="no">
        <type>EntityT</type>
        <definition>EntityT Raven::AssetId::m_index</definition>
        <argsstring></argsstring>
        <name>m_index</name>
        <initializer>= ~0u</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" line="35" column="17" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_raven_1_1_asset_id_1aee74860cabe5541e2f342945760b72c3" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_raven_1_1_asset_id" kindref="compound">AssetId</ref></type>
        <definition>static constexpr AssetId Raven::AssetId::Create</definition>
        <argsstring>(const AssetIndexT idx)</argsstring>
        <name>Create</name>
        <param>
          <type>const AssetIndexT</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" line="38" column="26" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_asset_id_1af9dcadfb754c3f60029eed2ead5f0a41" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr RavenUtil::Hash</type>
        <definition>static constexpr RavenUtil::Hash Raven::AssetId::Hash</definition>
        <argsstring>(const AssetId &amp;self)</argsstring>
        <name>Hash</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_asset_id" kindref="compound">AssetId</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" line="42" column="34" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" bodystart="42" bodyend="47"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_raven_1_1_asset_id_1ac8f6c8cb7affb3bafc51a87c32098c6f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto Raven::AssetId::operator&lt;=&gt;</definition>
        <argsstring>(const AssetId &amp;rhs) const =default</argsstring>
        <name>operator&lt;=&gt;</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_asset_id" kindref="compound">AssetId</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_asset_id_1abf6d0fffaddd995dcd134174cbe99402" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Raven::AssetId::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" line="49" column="10" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" bodystart="49" bodyend="51"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" line="31" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" bodystart="31" bodyend="52"/>
    <listofallmembers>
      <member refid="struct_raven_1_1_asset_id_1aee74860cabe5541e2f342945760b72c3" prot="public" virt="non-virtual"><scope>Raven::AssetId</scope><name>Create</name></member>
      <member refid="struct_raven_1_1_asset_id_1abf21343227e63a15b0448a1d25fc3dca" prot="public" virt="non-virtual"><scope>Raven::AssetId</scope><name>EntityT</name></member>
      <member refid="struct_raven_1_1_asset_id_1af9dcadfb754c3f60029eed2ead5f0a41" prot="public" virt="non-virtual"><scope>Raven::AssetId</scope><name>Hash</name></member>
      <member refid="struct_raven_1_1_asset_id_1a1ad2f5c5fe535fbbf478c68e24fb8193" prot="public" virt="non-virtual"><scope>Raven::AssetId</scope><name>m_index</name></member>
      <member refid="struct_raven_1_1_asset_id_1a5d17015934e9aa14649d31c79c6bdb15" prot="public" virt="non-virtual"><scope>Raven::AssetId</scope><name>m_typeHash</name></member>
      <member refid="struct_raven_1_1_asset_id_1abf6d0fffaddd995dcd134174cbe99402" prot="public" virt="non-virtual"><scope>Raven::AssetId</scope><name>operator bool</name></member>
      <member refid="struct_raven_1_1_asset_id_1ac8f6c8cb7affb3bafc51a87c32098c6f" prot="public" virt="non-virtual"><scope>Raven::AssetId</scope><name>operator&lt;=&gt;</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

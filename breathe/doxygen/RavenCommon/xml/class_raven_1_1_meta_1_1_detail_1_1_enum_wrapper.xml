<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper" kind="class" language="C++" prot="public">
    <compoundname>Raven::Meta::Detail::EnumWrapper</compoundname>
    <basecompoundref refid="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_base" prot="public" virt="non-virtual">Raven::Meta::Detail::EnumWrapperBase</basecompoundref>
    <basecompoundref refid="class_raven_1_1_meta_1_1_attribute_storage" prot="public" virt="non-virtual">Raven::Meta::AttributeStorage&lt; AttributeCount &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename EnumT</type>
      </param>
      <param>
        <type>std::size_t</type>
        <declname>N</declname>
        <defname>N</defname>
      </param>
      <param>
        <type>std::size_t</type>
        <declname>AttributeCount</declname>
        <defname>AttributeCount</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_1a5ee688cdce42820c5bec878fa9eb5782" prot="public" static="no">
        <type>typename EnumWrapperBase::NameT</type>
        <definition>using Raven::Meta::Detail::EnumWrapper&lt; EnumT, N, AttributeCount &gt;::NameT =  typename EnumWrapperBase::NameT</definition>
        <argsstring></argsstring>
        <name>NameT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" line="52" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_1aeda9509ddde916f7f9d20dfead7bfd67" prot="private" static="no" mutable="no">
        <type>std::array&lt; NameT, N &gt;</type>
        <definition>std::array&lt;NameT, N&gt; Raven::Meta::Detail::EnumWrapper&lt; EnumT, N, AttributeCount &gt;::m_names</definition>
        <argsstring></argsstring>
        <name>m_names</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" line="117" column="22" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_1a56747e16033a433751c6add9e3a403ff" prot="private" static="no" mutable="no">
        <type>std::array&lt; EnumT, N &gt;</type>
        <definition>std::array&lt;EnumT, N&gt; Raven::Meta::Detail::EnumWrapper&lt; EnumT, N, AttributeCount &gt;::m_values</definition>
        <argsstring></argsstring>
        <name>m_values</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" line="118" column="22" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_1a46325284f81650b11d917418c79cd188" prot="private" static="no" mutable="no">
        <type>std::array&lt; <ref refid="class_raven_1_1_meta_1_1_variant" kindref="compound">Variant</ref>, N &gt;</type>
        <definition>std::array&lt;Variant, N&gt; Raven::Meta::Detail::EnumWrapper&lt; EnumT, N, AttributeCount &gt;::m_variants</definition>
        <argsstring></argsstring>
        <name>m_variants</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" line="119" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_1a20a34dc78c3bbecf4306da80bdee0f87" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Raven::Meta::Detail::EnumWrapper&lt; EnumT, N, AttributeCount &gt;::EnumWrapper</definition>
        <argsstring>(std::array&lt; EnumData&lt; EnumT &gt;, N &gt; data, std::array&lt; Attribute, AttributeCount &gt; attributes)</argsstring>
        <name>EnumWrapper</name>
        <param>
          <type>std::array&lt; <ref refid="class_raven_1_1_meta_1_1_detail_1_1_enum_data" kindref="compound">EnumData</ref>&lt; EnumT &gt;, N &gt;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::array&lt; <ref refid="class_raven_1_1_meta_1_1_attribute" kindref="compound">Attribute</ref>, AttributeCount &gt;</type>
          <declname>attributes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" line="54" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" bodystart="54" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_1ad14a2292caf937ddb1e9e0d2090eb277" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" noexcept="yes" virt="virtual">
        <type><ref refid="class_raven_1_1_meta_1_1_type" kindref="compound">Type</ref></type>
        <definition>Type Raven::Meta::Detail::EnumWrapper&lt; EnumT, N, AttributeCount &gt;::GetType</definition>
        <argsstring>() const noexcept final</argsstring>
        <name>GetType</name>
        <reimplements refid="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_base_1a383c0d570f0fdb3548504b6a6cf673e3">GetType</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" line="64" column="15" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" bodystart="64" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_1a6aa3f0a85692f11d27f2aeadc6d3632c" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" noexcept="yes" virt="virtual">
        <type><ref refid="class_raven_1_1_meta_1_1_type" kindref="compound">Type</ref></type>
        <definition>Type Raven::Meta::Detail::EnumWrapper&lt; EnumT, N, AttributeCount &gt;::GetUnderlyingType</definition>
        <argsstring>() const noexcept final</argsstring>
        <name>GetUnderlyingType</name>
        <reimplements refid="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_base_1a1a5f403066e40f14352e5d0411808bcc">GetUnderlyingType</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" line="67" column="15" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_1ad34782e5073b6c630fd21505e3c1313b" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" noexcept="yes" virt="virtual">
        <type>EnumWrapperBase::NamesT</type>
        <definition>EnumWrapperBase::NamesT Raven::Meta::Detail::EnumWrapper&lt; EnumT, N, AttributeCount &gt;::GetNames</definition>
        <argsstring>() const noexcept final</argsstring>
        <name>GetNames</name>
        <reimplements refid="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_base_1a7267a54974b87877bce92d2890ce5455">GetNames</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" line="71" column="34" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" bodystart="71" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_1a2c133015f6217baf50257b782d79615b" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" noexcept="yes" virt="virtual">
        <type>EnumWrapperBase::ValuesT</type>
        <definition>EnumWrapperBase::ValuesT Raven::Meta::Detail::EnumWrapper&lt; EnumT, N, AttributeCount &gt;::GetValues</definition>
        <argsstring>() const noexcept final</argsstring>
        <name>GetValues</name>
        <reimplements refid="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_base_1a838810416aa1f686189378dca4760de5">GetValues</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" line="75" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_1af51179a14f122f77924e5625b022a362" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" noexcept="yes" virt="virtual">
        <type><ref refid="class_raven_1_1_meta_1_1_variant" kindref="compound">Variant</ref></type>
        <definition>Variant Raven::Meta::Detail::EnumWrapper&lt; EnumT, N, AttributeCount &gt;::GetAttribute</definition>
        <argsstring>(const Variant &amp;key) const noexcept final</argsstring>
        <name>GetAttribute</name>
        <reimplements refid="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_base_1adab70ddd2178964b6d6e07f24ba85f82">GetAttribute</reimplements>
        <param>
          <type>const <ref refid="class_raven_1_1_meta_1_1_variant" kindref="compound">Variant</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" line="80" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_1ad639cc35fd13e8b962531d120f4b5abd" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" noexcept="yes" virt="virtual">
        <type>NameT</type>
        <definition>NameT Raven::Meta::Detail::EnumWrapper&lt; EnumT, N, AttributeCount &gt;::ValueToName</definition>
        <argsstring>(Argument val) const noexcept final</argsstring>
        <name>ValueToName</name>
        <reimplements refid="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_base_1a84c30a7b81fe54d469f1d1221ab0dd3e">ValueToName</reimplements>
        <param>
          <type><ref refid="class_raven_1_1_meta_1_1_argument" kindref="compound">Argument</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" line="84" column="16" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" bodystart="84" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_1ae9c333ad2dfaa1e36534c9d04047fa55" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" noexcept="yes" virt="virtual">
        <type><ref refid="class_raven_1_1_meta_1_1_variant" kindref="compound">Variant</ref></type>
        <definition>Variant Raven::Meta::Detail::EnumWrapper&lt; EnumT, N, AttributeCount &gt;::NameToValue</definition>
        <argsstring>(NameT name) const noexcept final</argsstring>
        <name>NameToValue</name>
        <reimplements refid="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_base_1a64b7b11096ee6ddad67b13a6686bf090">NameToValue</reimplements>
        <param>
          <type>NameT</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" line="106" column="18" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" bodystart="106" bodyend="114"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Raven::Meta::Detail::EnumWrapperBase</label>
        <link refid="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_base"/>
      </node>
      <node id="3">
        <label>Raven::Meta::AttributeStorage&lt; AttributeCount &gt;</label>
        <link refid="class_raven_1_1_meta_1_1_attribute_storage"/>
      </node>
      <node id="1">
        <label>Raven::Meta::Detail::EnumWrapper&lt; EnumT, N, AttributeCount &gt;</label>
        <link refid="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Raven::Meta::Detail::EnumWrapperBase</label>
        <link refid="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_base"/>
      </node>
      <node id="3">
        <label>Raven::Meta::AttributeStorage&lt; AttributeCount &gt;</label>
        <link refid="class_raven_1_1_meta_1_1_attribute_storage"/>
      </node>
      <node id="1">
        <label>Raven::Meta::Detail::EnumWrapper&lt; EnumT, N, AttributeCount &gt;</label>
        <link refid="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" line="49" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Enum.hpp" bodystart="50" bodyend="120"/>
    <listofallmembers>
      <member refid="class_raven_1_1_meta_1_1_attribute_storage_1afbc43c971ee42d694868cbaa93bb5d28" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::EnumWrapper</scope><name>AttributeStorage</name></member>
      <member refid="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_1a20a34dc78c3bbecf4306da80bdee0f87" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::EnumWrapper</scope><name>EnumWrapper</name></member>
      <member refid="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_base_1a868a31503af4fada89738a65a3f6985f" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::EnumWrapper</scope><name>EnumWrapperBase</name></member>
      <member refid="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_1af51179a14f122f77924e5625b022a362" prot="public" virt="virtual"><scope>Raven::Meta::Detail::EnumWrapper</scope><name>GetAttribute</name></member>
      <member refid="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_1ad34782e5073b6c630fd21505e3c1313b" prot="public" virt="virtual"><scope>Raven::Meta::Detail::EnumWrapper</scope><name>GetNames</name></member>
      <member refid="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_1ad14a2292caf937ddb1e9e0d2090eb277" prot="public" virt="virtual"><scope>Raven::Meta::Detail::EnumWrapper</scope><name>GetType</name></member>
      <member refid="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_1a6aa3f0a85692f11d27f2aeadc6d3632c" prot="public" virt="virtual"><scope>Raven::Meta::Detail::EnumWrapper</scope><name>GetUnderlyingType</name></member>
      <member refid="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_1a2c133015f6217baf50257b782d79615b" prot="public" virt="virtual"><scope>Raven::Meta::Detail::EnumWrapper</scope><name>GetValues</name></member>
      <member refid="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_1aeda9509ddde916f7f9d20dfead7bfd67" prot="private" virt="non-virtual"><scope>Raven::Meta::Detail::EnumWrapper</scope><name>m_names</name></member>
      <member refid="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_1a56747e16033a433751c6add9e3a403ff" prot="private" virt="non-virtual"><scope>Raven::Meta::Detail::EnumWrapper</scope><name>m_values</name></member>
      <member refid="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_1a46325284f81650b11d917418c79cd188" prot="private" virt="non-virtual"><scope>Raven::Meta::Detail::EnumWrapper</scope><name>m_variants</name></member>
      <member refid="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_base_1a5357d9295003d2601dc18b2456441078" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::EnumWrapper</scope><name>NamesT</name></member>
      <member refid="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_1a5ee688cdce42820c5bec878fa9eb5782" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::EnumWrapper</scope><name>NameT</name></member>
      <member refid="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_1ae9c333ad2dfaa1e36534c9d04047fa55" prot="public" virt="virtual"><scope>Raven::Meta::Detail::EnumWrapper</scope><name>NameToValue</name></member>
      <member refid="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_base_1ab12b0734ae2fa0b65cc9f8d5aee7e13e" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::EnumWrapper</scope><name>ValuesT</name></member>
      <member refid="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_1ad639cc35fd13e8b962531d120f4b5abd" prot="public" virt="virtual"><scope>Raven::Meta::Detail::EnumWrapper</scope><name>ValueToName</name></member>
      <member refid="class_raven_1_1_meta_1_1_detail_1_1_enum_wrapper_base_1a75696b3ca8448bdc1ebe63b5dd130ce8" prot="public" virt="virtual"><scope>Raven::Meta::Detail::EnumWrapper</scope><name>~EnumWrapperBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int8__t_01_4" kind="struct" language="C++" prot="public">
    <compoundname>Raven::Meta::Detail::CastFrom&lt; std::int8_t &gt;</compoundname>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int8__t_01_4_1a0b3f3a309b255f22f12df404b1854451" prot="public" static="no">
        <type>std::int8_t</type>
        <definition>using Raven::Meta::Detail::CastFrom&lt; std::int8_t &gt;::SrcType =  std::int8_t</definition>
        <argsstring></argsstring>
        <name>SrcType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="414" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="414" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int8__t_01_4_1a4edcca24825de2357e5abe9f6dfd2a82" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; std::int8_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, bool &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="416" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="416" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int8__t_01_4_1adacd7620677cd9cecfc6e9f292a82353" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; std::int8_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, char &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>char &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="422" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="422" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int8__t_01_4_1a19aceee0211eb198ab180c196b07fffd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; std::int8_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int8_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int8_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="428" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="428" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int8__t_01_4_1a0ed8635f70b62a82fcb0b11c5d7717a5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; std::int8_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint8_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint8_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="434" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="434" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int8__t_01_4_1a0fea8d87a8d2504da4b4458a5de3774d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; std::int8_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int16_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int16_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="440" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="440" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int8__t_01_4_1a09bbb0fcec7f3c8f1b1ae49e2b2d0934" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; std::int8_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint16_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint16_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="446" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="446" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int8__t_01_4_1a61be25ad349014dff5daacf766e500c7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; std::int8_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int32_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int32_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="452" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="452" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int8__t_01_4_1a40cc9343ab0ed5e8f9421063d6f73a03" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; std::int8_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint32_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint32_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="458" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="458" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int8__t_01_4_1a00752194a58f23e64737d65fbe1cdaa3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; std::int8_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int64_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int64_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="464" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="464" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int8__t_01_4_1a97ce4ecaa884ba96242293b79194bd9c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; std::int8_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint64_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint64_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="470" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="470" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int8__t_01_4_1a2c2407a53da06fbe27710c12392c547c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; std::int8_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, float &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="476" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="476" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int8__t_01_4_1a98d35fe724b36f4756c25370c4b87b80" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; std::int8_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, double &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="482" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="482" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int8__t_01_4_1af46df0a34595385b5aee717e50a5fec0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; std::int8_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::string &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="488" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="488" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int8__t_01_4_1a1c333140ffe5498c90d98c2b7f70fe2d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; std::int8_t &gt;::ToEnum</definition>
        <argsstring>(const SrcType &amp;from, Argument &amp;to)</argsstring>
        <name>ToEnum</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="class_raven_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="494" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="494" bodyend="497"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="412" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="413" bodyend="498"/>
    <listofallmembers>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int8__t_01_4_1a0b3f3a309b255f22f12df404b1854451" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; std::int8_t &gt;</scope><name>SrcType</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int8__t_01_4_1a4edcca24825de2357e5abe9f6dfd2a82" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; std::int8_t &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int8__t_01_4_1adacd7620677cd9cecfc6e9f292a82353" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; std::int8_t &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int8__t_01_4_1a19aceee0211eb198ab180c196b07fffd" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; std::int8_t &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int8__t_01_4_1a0ed8635f70b62a82fcb0b11c5d7717a5" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; std::int8_t &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int8__t_01_4_1a0fea8d87a8d2504da4b4458a5de3774d" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; std::int8_t &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int8__t_01_4_1a09bbb0fcec7f3c8f1b1ae49e2b2d0934" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; std::int8_t &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int8__t_01_4_1a61be25ad349014dff5daacf766e500c7" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; std::int8_t &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int8__t_01_4_1a40cc9343ab0ed5e8f9421063d6f73a03" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; std::int8_t &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int8__t_01_4_1a00752194a58f23e64737d65fbe1cdaa3" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; std::int8_t &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int8__t_01_4_1a97ce4ecaa884ba96242293b79194bd9c" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; std::int8_t &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int8__t_01_4_1a2c2407a53da06fbe27710c12392c547c" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; std::int8_t &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int8__t_01_4_1a98d35fe724b36f4756c25370c4b87b80" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; std::int8_t &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int8__t_01_4_1af46df0a34595385b5aee717e50a5fec0" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; std::int8_t &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1int8__t_01_4_1a1c333140ffe5498c90d98c2b7f70fe2d" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; std::int8_t &gt;</scope><name>ToEnum</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

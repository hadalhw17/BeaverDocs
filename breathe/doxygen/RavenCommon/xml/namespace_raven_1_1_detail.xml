<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespace_raven_1_1_detail" kind="namespace" language="C++">
    <compoundname>Raven::Detail</compoundname>
    <innerclass refid="struct_raven_1_1_detail_1_1_s_vertex_stream_storage" prot="public">Raven::Detail::SVertexStreamStorage</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_handle_hash" prot="public">Raven::Detail::HandleHash</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1make__void" prot="public">Raven::Detail::make_void</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_helper" prot="public">Raven::Detail::Helper</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_composed_helper" prot="public">Raven::Detail::ComposedHelper</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_member_function_holder" prot="public">Raven::Detail::MemberFunctionHolder</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_is_functor_impl" prot="public">Raven::Detail::IsFunctorImpl</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_is_functor_impl_3_01_t_00_01_member_function_holder_3_6_composed_helaaafda7c7eae902e55ecf89a165aa765" prot="public">Raven::Detail::IsFunctorImpl&lt; T, MemberFunctionHolder&lt;&amp;ComposedHelper&lt; T &gt;::operator()&gt; &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_is_functor" prot="public">Raven::Detail::IsFunctor</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_is_functor_3_01_r_07_5_08_07_args_8_8_8_08_4" prot="public">Raven::Detail::IsFunctor&lt; R(*)(Args...)&gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_is_functor_3_01_r_07_5_08_07_args_8_8_8_08_01noexcept_01_4" prot="public">Raven::Detail::IsFunctor&lt; R(*)(Args...) noexcept &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_is_functor_3_01_r_07_6_08_07_args_8_8_8_08_4" prot="public">Raven::Detail::IsFunctor&lt; R(&amp;)(Args...)&gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_is_functor_3_01_r_07_6_08_07_args_8_8_8_08_01noexcept_01_4" prot="public">Raven::Detail::IsFunctor&lt; R(&amp;)(Args...) noexcept &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_function_traits" prot="public">Raven::Detail::TFunctionTraits</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_function_traits_3_01_r_07_args_8_8_8_08_4" prot="public">Raven::Detail::TFunctionTraits&lt; R(Args...)&gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_function_traits_3_01_r_07_c_1_1_5_08_07_args_8_8_8_08_4" prot="public">Raven::Detail::TFunctionTraits&lt; R(C::*)(Args...)&gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_function_traits_3_01_r_07_c_1_1_5_08_07_args_8_8_8_08_01const_01_4" prot="public">Raven::Detail::TFunctionTraits&lt; R(C::*)(Args...) const &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_function_traits_3_01_r_07_c_1_1_5_08_07_args_8_8_8_08_01volatile_01_4" prot="public">Raven::Detail::TFunctionTraits&lt; R(C::*)(Args...) volatile &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_function_traits_3_01_r_07_c_1_1_5_08_07_args_8_8_8_08_01const_01volatile_01_4" prot="public">Raven::Detail::TFunctionTraits&lt; R(C::*)(Args...) const volatile &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_function_traits_3_01_r_07_5_08_07_args_8_8_8_08_4" prot="public">Raven::Detail::TFunctionTraits&lt; R(*)(Args...)&gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_function_traits_3_01_r_07_6_08_07_args_8_8_8_08_4" prot="public">Raven::Detail::TFunctionTraits&lt; R(&amp;)(Args...)&gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_function_traits_3_01_r_07_c_1_1_5_08_07_args_8_8_8_08_01noexcept_01_4" prot="public">Raven::Detail::TFunctionTraits&lt; R(C::*)(Args...) noexcept &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_function_traits_3_01_r_07_c_1_1_5_08_07_args_8_8_8_08_01const_01noexcept_01_4" prot="public">Raven::Detail::TFunctionTraits&lt; R(C::*)(Args...) const noexcept &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_function_traits_3_01_r_07_c_1_1_5_08_07_args_8_8_8_08_01volatile_01noexcept_01_4" prot="public">Raven::Detail::TFunctionTraits&lt; R(C::*)(Args...) volatile noexcept &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_function_traits_3_01_r_07_c_1_1_5_08_07_args_8_8_8_08_01const_01volatile_01noexcept_01_4" prot="public">Raven::Detail::TFunctionTraits&lt; R(C::*)(Args...) const volatile noexcept &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_function_traits_3_01_r_07_5_08_07_args_8_8_8_08_01noexcept_01_4" prot="public">Raven::Detail::TFunctionTraits&lt; R(*)(Args...) noexcept &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_function_traits_3_01_r_07_6_08_07_args_8_8_8_08_01noexcept_01_4" prot="public">Raven::Detail::TFunctionTraits&lt; R(&amp;)(Args...) noexcept &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_void_member_fn" prot="public">Raven::Detail::VoidMemberFn</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_return_member_fn" prot="public">Raven::Detail::ReturnMemberFn</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_void_fn" prot="public">Raven::Detail::VoidFn</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_return_fn" prot="public">Raven::Detail::ReturnFn</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_function_type" prot="public">Raven::Detail::FunctionType</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_is_graph_node" prot="public">Raven::Detail::IsGraphNode</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_is_graph_node_3_01_i_graph_node_3_01_t_01_4_01_4" prot="public">Raven::Detail::IsGraphNode&lt; IGraphNode&lt; T &gt; &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_basic_hashed_string" prot="public">Raven::Detail::TBasicHashedString</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_hash_traits" prot="public">Raven::Detail::HashTraits</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_hash_traits_3_01std_1_1uint32__t_01_4" prot="public">Raven::Detail::HashTraits&lt; std::uint32_t &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_hash_traits_3_01std_1_1uint64__t_01_4" prot="public">Raven::Detail::HashTraits&lt; std::uint64_t &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_in_place_release" prot="public">Raven::Detail::TInPlaceRelease</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_in_place_release_3_01_t_01_4" prot="public">Raven::Detail::TInPlaceRelease&lt; T &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_page_size" prot="public">Raven::Detail::TPageSize</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_page_size_3_01_t_01_4" prot="public">Raven::Detail::TPageSize&lt; T &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_sparse_set_traits" prot="public">Raven::Detail::TSparseSetTraits</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_sparse_set_traits_3_01_t_00_01std_1_1enable__if__t_3_01std_1_1is__enum__v_3_01_t_01_4_01_4_01_4" prot="public">Raven::Detail::TSparseSetTraits&lt; T, std::enable_if_t&lt; std::is_enum_v&lt; T &gt; &gt; &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_sparse_set_traits_3_01_t_00_01std_1_1enable__if__t_3_01std_1_1is__class__v_3_01_t_01_4_01_4_01_4" prot="public">Raven::Detail::TSparseSetTraits&lt; T, std::enable_if_t&lt; std::is_class_v&lt; T &gt; &gt; &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_sparse_set_traits_3_01std_1_1uint32__t_01_4" prot="public">Raven::Detail::TSparseSetTraits&lt; std::uint32_t &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_sparse_set_traits_3_01std_1_1uint64__t_01_4" prot="public">Raven::Detail::TSparseSetTraits&lt; std::uint64_t &gt;</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_function_traits_8hpp_1ab668a961991f04bd07eed6f3338c4e26" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_raven_1_1_detail_1_1make__void" kindref="compound">make_void</ref>&lt; Ts... &gt;::type</type>
        <definition>using Raven::Detail::void_t = typedef typename make_void&lt;Ts...&gt;::type</definition>
        <argsstring></argsstring>
        <name>void_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/FunctionTraits.hpp" line="8" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/FunctionTraits.hpp" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_function_traits_8hpp_1a31491aa299e3c34f3da6c0160ce3afd2" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>std::integral_constant&lt; bool, std::is_member_function_pointer&lt; F &gt;::value||std::is_function&lt; F &gt;::value||<ref refid="struct_raven_1_1_detail_1_1_is_functor" kindref="compound">IsFunctor</ref>&lt; F &gt;::value &gt;</type>
        <definition>using Raven::Detail::IsFunction = typedef std::integral_constant&lt;bool, std::is_member_function_pointer&lt;F&gt;::value || std::is_function&lt;F&gt;::value || IsFunctor&lt;F&gt;::value&gt;</definition>
        <argsstring></argsstring>
        <name>IsFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/FunctionTraits.hpp" line="101" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/FunctionTraits.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_function_traits_8hpp_1a0407fcb4a5c09fb16cff05d41bc9064d" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>std::integral_constant&lt; bool, std::is_same_v&lt; typename <ref refid="struct_raven_1_1_detail_1_1_t_function_traits" kindref="compound">TFunctionTraits</ref>&lt; F &gt;::ReturnT, void &gt; &gt;</type>
        <definition>using Raven::Detail::IsVoidFunction = typedef std::integral_constant&lt; bool, std::is_same_v&lt;typename TFunctionTraits&lt;F&gt;::ReturnT, void&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>IsVoidFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/FunctionTraits.hpp" line="110" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/FunctionTraits.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_function_traits_8hpp_1a62035ada01ab743982edf39bd5e47d90" prot="public" static="no" mutable="no">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>concept</type>
        <definition>concept Raven::Detail::Invokable</definition>
        <argsstring></argsstring>
        <name>Invokable</name>
        <initializer>= IsFunction&lt;F&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/FunctionTraits.hpp" line="107" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/FunctionTraits.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_dense_storage_8hpp_1a730f6ff5957ddffcabb0a9aa72928c88" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static std::size_t</type>
        <definition>constexpr static std::size_t Raven::Detail::DefaultPageSize</definition>
        <argsstring></argsstring>
        <name>DefaultPageSize</name>
        <initializer>= 1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="7" column="30" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_dense_storage_8hpp_1aa0cd3af1a8b2a8fd41a1cdcf13f7f723" prot="public" static="no" mutable="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>concept</type>
        <definition>concept Raven::Detail::WithReleasePolicy</definition>
        <argsstring></argsstring>
        <name>WithReleasePolicy</name>
        <initializer>= requires(T) {
		{ T::InPlaceRelease } -&gt; std::convertible_to&lt;bool&gt;;
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="9" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_dense_storage_8hpp_1a4e22f1a7b626c10e4ccfd7527880092f" prot="public" static="no" mutable="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>concept</type>
        <definition>concept Raven::Detail::WithPageSizePolicy</definition>
        <argsstring></argsstring>
        <name>WithPageSizePolicy</name>
        <initializer>= requires(T) {
		{ T::PageSize } -&gt; std::convertible_to&lt;size_t&gt;;
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="13" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="8" column="1"/>
  </compounddef>
</doxygen>

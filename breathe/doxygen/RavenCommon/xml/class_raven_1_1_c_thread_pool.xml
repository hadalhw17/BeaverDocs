<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_raven_1_1_c_thread_pool" kind="class" language="C++" prot="public">
    <compoundname>Raven::CThreadPool</compoundname>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_raven_1_1_c_thread_pool_1a5a2df8914fea8e0a0511d9eaa62bfcbd" prot="private" static="no">
        <type><ref refid="class_raven_1_1_c_lambda_wrapper" kindref="compound">CLambdaWrapper</ref></type>
        <definition>using Raven::CThreadPool::WorkT =  CLambdaWrapper</definition>
        <argsstring></argsstring>
        <name>WorkT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/ThreadPool.hpp" line="52" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/ThreadPool.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_raven_1_1_c_thread_pool_1ac8328daa6fdd96bcd2d6508ea03296e2" prot="private" static="no">
        <type><ref refid="class_raven_1_1_c_single_producer_multi_consumer_queue" kindref="compound">CSingleProducerMultiConsumerQueue</ref>&lt; <ref refid="class_raven_1_1_c_lambda_wrapper" kindref="compound">CLambdaWrapper</ref> &gt;</type>
        <definition>using Raven::CThreadPool::WorkQueue =  CSingleProducerMultiConsumerQueue&lt;CLambdaWrapper&gt;</definition>
        <argsstring></argsstring>
        <name>WorkQueue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/ThreadPool.hpp" line="53" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/ThreadPool.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_raven_1_1_c_thread_pool_1a272b1085cbe0e7ca083b9f4d9ab43ac6" prot="private" static="no" mutable="no">
        <type><ref refid="class_raven_1_1_c_single_producer_multi_consumer_queue" kindref="compound">WorkQueue</ref></type>
        <definition>WorkQueue Raven::CThreadPool::m_workQueue</definition>
        <argsstring></argsstring>
        <name>m_workQueue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/ThreadPool.hpp" line="79" column="25" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/ThreadPool.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_thread_pool_1a330a5c3d398fde797e30a70bbf6158b9" prot="private" static="no" mutable="no">
        <type>std::condition_variable</type>
        <definition>std::condition_variable Raven::CThreadPool::m_wakeCondition</definition>
        <argsstring></argsstring>
        <name>m_wakeCondition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/ThreadPool.hpp" line="81" column="25" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/ThreadPool.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_thread_pool_1a13cac4f2156d15592757f612773ebc2a" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex Raven::CThreadPool::m_wakeMutex</definition>
        <argsstring></argsstring>
        <name>m_wakeMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/ThreadPool.hpp" line="82" column="25" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/ThreadPool.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_thread_pool_1a284fd0b7e2e36e383d9adba373eec41e" prot="private" static="no" mutable="no">
        <type>std::atomic&lt; uint64 &gt;</type>
        <definition>std::atomic&lt;uint64&gt; Raven::CThreadPool::m_currentLabel</definition>
        <argsstring></argsstring>
        <name>m_currentLabel</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/ThreadPool.hpp" line="84" column="17" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/ThreadPool.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_thread_pool_1a435b7c9ef5f1719d8c9bb069bacd5d3f" prot="private" static="no" mutable="no">
        <type>std::atomic&lt; uint64 &gt;</type>
        <definition>std::atomic&lt;uint64&gt; Raven::CThreadPool::m_finishedLabel</definition>
        <argsstring></argsstring>
        <name>m_finishedLabel</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/ThreadPool.hpp" line="85" column="17" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/ThreadPool.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_thread_pool_1a2af7356898a3128367eeb8addfdde8d6" prot="private" static="no" mutable="no">
        <type>std::atomic&lt; bool &gt;</type>
        <definition>std::atomic&lt;bool&gt; Raven::CThreadPool::m_bForceStop</definition>
        <argsstring></argsstring>
        <name>m_bForceStop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/ThreadPool.hpp" line="87" column="19" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/ThreadPool.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_raven_1_1_c_thread_pool_1a424febcfb15de034476853a618dc2f97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Raven::CThreadPool::CThreadPool</definition>
        <argsstring>(uint32 numThreads=~0u)</argsstring>
        <name>CThreadPool</name>
        <param>
          <type>uint32</type>
          <declname>numThreads</declname>
          <defval>~0u</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/ThreadPool.hpp" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_thread_pool_1a0144588206daf10aa758e10fde3a30e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Raven::CThreadPool::~CThreadPool</definition>
        <argsstring>()</argsstring>
        <name>~CThreadPool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/ThreadPool.hpp" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_thread_pool_1a9bf38f44d7a18870f5421a92cb9a7393" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CThreadPool::ForceStop</definition>
        <argsstring>()</argsstring>
        <name>ForceStop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/ThreadPool.hpp" line="58" column="28"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_thread_pool_1a739adaa7282f7c16711547f25cc2d33f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CThreadPool::Wait</definition>
        <argsstring>()</argsstring>
        <name>Wait</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/ThreadPool.hpp" line="59" column="28"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_thread_pool_1a3a3ddb690e80d75a38a85c6a6d2beab9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>uint64</type>
        <definition>uint64 Raven::CThreadPool::AddWork</definition>
        <argsstring>(T &amp;&amp;w)</argsstring>
        <name>AddWork</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/ThreadPool.hpp" line="61" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/ThreadPool.hpp" bodystart="61" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_thread_pool_1a57ebdc7025311e6e5550664dde2fb384" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::CThreadPool::IsBusy</definition>
        <argsstring>() const</argsstring>
        <name>IsBusy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/ThreadPool.hpp" line="68" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/ThreadPool.hpp" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_thread_pool_1a6fa16bd26fc9fdb92003566c9e35f8a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64</type>
        <definition>uint64 Raven::CThreadPool::Dispatch</definition>
        <argsstring>(uint32 jobCount, uint32 groupSize, std::function&lt; void(SDispatchArgs)&gt; job)</argsstring>
        <name>Dispatch</name>
        <param>
          <type>uint32</type>
          <declname>jobCount</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>groupSize</declname>
        </param>
        <param>
          <type>std::function&lt; void(<ref refid="struct_raven_1_1_s_dispatch_args" kindref="compound">SDispatchArgs</ref>)&gt;</type>
          <declname>job</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/ThreadPool.hpp" line="70" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_raven_1_1_c_thread_pool_1a1f7f94d275363da9e42da7e273c1148e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CThreadPool::Poll</definition>
        <argsstring>()</argsstring>
        <name>Poll</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/ThreadPool.hpp" line="74" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_thread_pool_1ae08a2ce60a55c22deea053009f90e4c2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CThreadPool::ThreadLoop</definition>
        <argsstring>()</argsstring>
        <name>ThreadLoop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/ThreadPool.hpp" line="75" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_thread_pool_1a2f71b35de7b6e8fb3b4d668a86f82802" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::CThreadPool::ProcessNextWork</definition>
        <argsstring>()</argsstring>
        <name>ProcessNextWork</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/ThreadPool.hpp" line="76" column="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/ThreadPool.hpp" line="51" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/ThreadPool.hpp" bodystart="51" bodyend="88"/>
    <listofallmembers>
      <member refid="class_raven_1_1_c_thread_pool_1a3a3ddb690e80d75a38a85c6a6d2beab9" prot="public" virt="non-virtual"><scope>Raven::CThreadPool</scope><name>AddWork</name></member>
      <member refid="class_raven_1_1_c_thread_pool_1a424febcfb15de034476853a618dc2f97" prot="public" virt="non-virtual"><scope>Raven::CThreadPool</scope><name>CThreadPool</name></member>
      <member refid="class_raven_1_1_c_thread_pool_1a6fa16bd26fc9fdb92003566c9e35f8a1" prot="public" virt="non-virtual"><scope>Raven::CThreadPool</scope><name>Dispatch</name></member>
      <member refid="class_raven_1_1_c_thread_pool_1a9bf38f44d7a18870f5421a92cb9a7393" prot="public" virt="non-virtual"><scope>Raven::CThreadPool</scope><name>ForceStop</name></member>
      <member refid="class_raven_1_1_c_thread_pool_1a57ebdc7025311e6e5550664dde2fb384" prot="public" virt="non-virtual"><scope>Raven::CThreadPool</scope><name>IsBusy</name></member>
      <member refid="class_raven_1_1_c_thread_pool_1a2af7356898a3128367eeb8addfdde8d6" prot="private" virt="non-virtual"><scope>Raven::CThreadPool</scope><name>m_bForceStop</name></member>
      <member refid="class_raven_1_1_c_thread_pool_1a284fd0b7e2e36e383d9adba373eec41e" prot="private" virt="non-virtual"><scope>Raven::CThreadPool</scope><name>m_currentLabel</name></member>
      <member refid="class_raven_1_1_c_thread_pool_1a435b7c9ef5f1719d8c9bb069bacd5d3f" prot="private" virt="non-virtual"><scope>Raven::CThreadPool</scope><name>m_finishedLabel</name></member>
      <member refid="class_raven_1_1_c_thread_pool_1a330a5c3d398fde797e30a70bbf6158b9" prot="private" virt="non-virtual"><scope>Raven::CThreadPool</scope><name>m_wakeCondition</name></member>
      <member refid="class_raven_1_1_c_thread_pool_1a13cac4f2156d15592757f612773ebc2a" prot="private" virt="non-virtual"><scope>Raven::CThreadPool</scope><name>m_wakeMutex</name></member>
      <member refid="class_raven_1_1_c_thread_pool_1a272b1085cbe0e7ca083b9f4d9ab43ac6" prot="private" virt="non-virtual"><scope>Raven::CThreadPool</scope><name>m_workQueue</name></member>
      <member refid="class_raven_1_1_c_thread_pool_1a1f7f94d275363da9e42da7e273c1148e" prot="private" virt="non-virtual"><scope>Raven::CThreadPool</scope><name>Poll</name></member>
      <member refid="class_raven_1_1_c_thread_pool_1a2f71b35de7b6e8fb3b4d668a86f82802" prot="private" virt="non-virtual"><scope>Raven::CThreadPool</scope><name>ProcessNextWork</name></member>
      <member refid="class_raven_1_1_c_thread_pool_1ae08a2ce60a55c22deea053009f90e4c2" prot="private" virt="non-virtual"><scope>Raven::CThreadPool</scope><name>ThreadLoop</name></member>
      <member refid="class_raven_1_1_c_thread_pool_1a739adaa7282f7c16711547f25cc2d33f" prot="public" virt="non-virtual"><scope>Raven::CThreadPool</scope><name>Wait</name></member>
      <member refid="class_raven_1_1_c_thread_pool_1ac8328daa6fdd96bcd2d6508ea03296e2" prot="private" virt="non-virtual"><scope>Raven::CThreadPool</scope><name>WorkQueue</name></member>
      <member refid="class_raven_1_1_c_thread_pool_1a5a2df8914fea8e0a0511d9eaa62bfcbd" prot="private" virt="non-virtual"><scope>Raven::CThreadPool</scope><name>WorkT</name></member>
      <member refid="class_raven_1_1_c_thread_pool_1a0144588206daf10aa758e10fde3a30e0" prot="public" virt="non-virtual"><scope>Raven::CThreadPool</scope><name>~CThreadPool</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

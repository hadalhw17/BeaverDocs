<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_raven_1_1_meta_1_1_type_registry_1_1_class__" kind="class" language="C++" prot="public">
    <compoundname>Raven::Meta::TypeRegistry::Class_</compoundname>
    <templateparamlist>
      <param>
        <type>typename ClassT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_raven_1_1_meta_1_1_type_registry_1_1_class___1a64ed4728d91d2ce4fbde1df7e913809c" prot="public" static="no" mutable="no">
        <type><ref refid="class_raven_1_1_meta_1_1_type_registry_1_1_bind" kindref="compound">TypeRegistry::Bind</ref>&lt; <ref refid="struct_raven_1_1_meta_1_1_detail_1_1_prop__" kindref="compound">Detail::Prop_</ref>, ClassT, AccessorT &gt;</type>
        <definition>TypeRegistry::Bind&lt;Detail::Prop_, ClassT, AccessorT&gt; Raven::Meta::TypeRegistry::Class_&lt; ClassT &gt;::AccessorT</definition>
        <argsstring></argsstring>
        <name>AccessorT</name>
        <initializer>{
				return {arg, name}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeReg.hpp" line="38" column="15" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeReg.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_type_registry_1_1_class___1acda23da7a0dbce1c6ec54b413a225bd8" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr Raven::Meta::TypeRegistry::Class_&lt; ClassT &gt;::Class_</definition>
        <argsstring>() noexcept</argsstring>
        <name>Class_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeReg.hpp" line="33" column="11" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeDesc.hpp" bodystart="210" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_type_registry_1_1_class___1a0a1aa30715c42ece33f89fb3ff62d6b6" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr Raven::Meta::TypeRegistry::Class_&lt; ClassT &gt;::Class_</definition>
        <argsstring>(const char *pName) noexcept</argsstring>
        <name>Class_</name>
        <param>
          <type>const char *</type>
          <declname>pName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeReg.hpp" line="34" column="11" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeDesc.hpp" bodystart="216" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_type_registry_1_1_class___1a0939c6e53879b659449cece9c64ef8d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AccessorT</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_raven_1_1_meta_1_1_type_registry_1_1_bind" kindref="compound">TypeRegistry::Bind</ref>&lt; <ref refid="struct_raven_1_1_meta_1_1_detail_1_1_prop__" kindref="compound">Detail::Prop_</ref>, ClassT, AccessorT &gt;</type>
        <definition>TypeRegistry::Bind&lt;Detail::Prop_, ClassT, AccessorT&gt; Raven::Meta::TypeRegistry::Class_&lt; ClassT &gt;::Property</definition>
        <argsstring>(AccessorT arg, std::string_view name) requires IsMember&lt; ClassT</argsstring>
        <name>Property</name>
        <param>
          <type>AccessorT</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeReg.hpp" line="38" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>Raven::Meta::TypeRegistry::Class_&lt; ClassT &gt;</label>
        <link refid="class_raven_1_1_meta_1_1_type_registry_1_1_class__"/>
        <childnode refid="2" relation="usage">
          <edgelabel>AccessorT</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Raven::Meta::TypeRegistry::Bind&lt; Raven::Meta::Detail::Prop_, ClassT, AccessorT &gt;</label>
        <link refid="class_raven_1_1_meta_1_1_type_registry_1_1_bind"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeReg.hpp" line="30" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeReg.hpp" bodystart="31" bodyend="42"/>
    <listofallmembers>
      <member refid="class_raven_1_1_meta_1_1_type_registry_1_1_class___1a64ed4728d91d2ce4fbde1df7e913809c" prot="public" virt="non-virtual"><scope>Raven::Meta::TypeRegistry::Class_</scope><name>AccessorT</name></member>
      <member refid="class_raven_1_1_meta_1_1_type_registry_1_1_class___1acda23da7a0dbce1c6ec54b413a225bd8" prot="public" virt="non-virtual"><scope>Raven::Meta::TypeRegistry::Class_</scope><name>Class_</name></member>
      <member refid="class_raven_1_1_meta_1_1_type_registry_1_1_class___1a0a1aa30715c42ece33f89fb3ff62d6b6" prot="public" virt="non-virtual"><scope>Raven::Meta::TypeRegistry::Class_</scope><name>Class_</name></member>
      <member refid="class_raven_1_1_meta_1_1_type_registry_1_1_class___1a0939c6e53879b659449cece9c64ef8d1" prot="public" virt="non-virtual"><scope>Raven::Meta::TypeRegistry::Class_</scope><name>Property</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

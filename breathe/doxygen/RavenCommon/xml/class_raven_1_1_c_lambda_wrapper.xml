<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_raven_1_1_c_lambda_wrapper" kind="class" language="C++" prot="public">
    <compoundname>Raven::CLambdaWrapper</compoundname>
    <innerclass refid="struct_raven_1_1_c_lambda_wrapper_1_1_deleter_impl" prot="private">Raven::CLambdaWrapper::DeleterImpl</innerclass>
    <innerclass refid="struct_raven_1_1_c_lambda_wrapper_1_1_member_function" prot="private">Raven::CLambdaWrapper::MemberFunction</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_raven_1_1_c_lambda_wrapper_1a257148010d493a39f69674b777acee3c" prot="private" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* Raven::CLambdaWrapper::func_) (void *)</definition>
        <argsstring>)(void *)</argsstring>
        <name>func_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/LambdaWrapper.hpp" line="59" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/LambdaWrapper.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_lambda_wrapper_1a851a2a5e454eb852f91a66184014a862" prot="private" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* Raven::CLambdaWrapper::deleter_) (void *)</definition>
        <argsstring>)(void *)</argsstring>
        <name>deleter_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/LambdaWrapper.hpp" line="60" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/LambdaWrapper.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_lambda_wrapper_1a0220fc0b88b32bd3d21dbb2ef280dc23" prot="private" static="no" mutable="no">
        <type>void *</type>
        <definition>void* Raven::CLambdaWrapper::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/LambdaWrapper.hpp" line="61" column="10" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/LambdaWrapper.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_raven_1_1_c_lambda_wrapper_1af6a212c5092f45987261ff5d5459979c" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>typename</type>
            <defval>std::is_invocable&lt;                           decltype(std::mem_fn(&amp;T::operator()))&gt;</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Raven::CLambdaWrapper::CLambdaWrapper</definition>
        <argsstring>(T &amp;&amp;lambda) noexcept</argsstring>
        <name>CLambdaWrapper</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>lambda</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/LambdaWrapper.hpp" line="8" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/LambdaWrapper.hpp" bodystart="8" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_lambda_wrapper_1a0d4d1de2cba62e8a802ec73bd7140df2" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Raven::CLambdaWrapper::~CLambdaWrapper</definition>
        <argsstring>() noexcept</argsstring>
        <name>~CLambdaWrapper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/LambdaWrapper.hpp" line="22" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/LambdaWrapper.hpp" bodystart="22" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_lambda_wrapper_1a2d63829fda0162aa5b2c19d68310ebeb" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CLambdaWrapper::operator()</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator()</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/LambdaWrapper.hpp" line="29" column="10" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/LambdaWrapper.hpp" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_lambda_wrapper_1a3fd6819547e5a07809be199de42fe2da" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Raven::CLambdaWrapper::CLambdaWrapper</definition>
        <argsstring>(CLambdaWrapper &amp;&amp;T) noexcept</argsstring>
        <name>CLambdaWrapper</name>
        <param>
          <type><ref refid="class_raven_1_1_c_lambda_wrapper" kindref="compound">CLambdaWrapper</ref> &amp;&amp;</type>
          <declname>T</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/LambdaWrapper.hpp" line="31" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/LambdaWrapper.hpp" bodystart="31" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_lambda_wrapper_1a1419ec975b38923e26c10b177ab27a0b" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_c_lambda_wrapper" kindref="compound">CLambdaWrapper</ref> &amp;</type>
        <definition>CLambdaWrapper&amp; Raven::CLambdaWrapper::operator=</definition>
        <argsstring>(CLambdaWrapper &amp;&amp;T) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_raven_1_1_c_lambda_wrapper" kindref="compound">CLambdaWrapper</ref> &amp;&amp;</type>
          <declname>T</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/LambdaWrapper.hpp" line="40" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/LambdaWrapper.hpp" bodystart="40" bodyend="50"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_raven_1_1_c_lambda_wrapper_1ac94e8f597ff916bdadfc0a2ea387b683" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Raven::CLambdaWrapper::CLambdaWrapper</definition>
        <argsstring>(const CLambdaWrapper &amp;)=delete</argsstring>
        <name>CLambdaWrapper</name>
        <param>
          <type>const <ref refid="class_raven_1_1_c_lambda_wrapper" kindref="compound">CLambdaWrapper</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/LambdaWrapper.hpp" line="53" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_lambda_wrapper_1a4174eaa54170f0b9996c8a6ed5bafdc8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_raven_1_1_c_lambda_wrapper" kindref="compound">CLambdaWrapper</ref> &amp;</type>
        <definition>CLambdaWrapper&amp; Raven::CLambdaWrapper::operator=</definition>
        <argsstring>(const CLambdaWrapper &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_raven_1_1_c_lambda_wrapper" kindref="compound">CLambdaWrapper</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/LambdaWrapper.hpp" line="54" column="20"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/LambdaWrapper.hpp" line="4" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/LambdaWrapper.hpp" bodystart="4" bodyend="65"/>
    <listofallmembers>
      <member refid="class_raven_1_1_c_lambda_wrapper_1af6a212c5092f45987261ff5d5459979c" prot="public" virt="non-virtual"><scope>Raven::CLambdaWrapper</scope><name>CLambdaWrapper</name></member>
      <member refid="class_raven_1_1_c_lambda_wrapper_1a3fd6819547e5a07809be199de42fe2da" prot="public" virt="non-virtual"><scope>Raven::CLambdaWrapper</scope><name>CLambdaWrapper</name></member>
      <member refid="class_raven_1_1_c_lambda_wrapper_1ac94e8f597ff916bdadfc0a2ea387b683" prot="private" virt="non-virtual"><scope>Raven::CLambdaWrapper</scope><name>CLambdaWrapper</name></member>
      <member refid="class_raven_1_1_c_lambda_wrapper_1a0220fc0b88b32bd3d21dbb2ef280dc23" prot="private" virt="non-virtual"><scope>Raven::CLambdaWrapper</scope><name>data_</name></member>
      <member refid="class_raven_1_1_c_lambda_wrapper_1a851a2a5e454eb852f91a66184014a862" prot="private" virt="non-virtual"><scope>Raven::CLambdaWrapper</scope><name>deleter_</name></member>
      <member refid="class_raven_1_1_c_lambda_wrapper_1a257148010d493a39f69674b777acee3c" prot="private" virt="non-virtual"><scope>Raven::CLambdaWrapper</scope><name>func_</name></member>
      <member refid="class_raven_1_1_c_lambda_wrapper_1a2d63829fda0162aa5b2c19d68310ebeb" prot="public" virt="non-virtual"><scope>Raven::CLambdaWrapper</scope><name>operator()</name></member>
      <member refid="class_raven_1_1_c_lambda_wrapper_1a1419ec975b38923e26c10b177ab27a0b" prot="public" virt="non-virtual"><scope>Raven::CLambdaWrapper</scope><name>operator=</name></member>
      <member refid="class_raven_1_1_c_lambda_wrapper_1a4174eaa54170f0b9996c8a6ed5bafdc8" prot="private" virt="non-virtual"><scope>Raven::CLambdaWrapper</scope><name>operator=</name></member>
      <member refid="class_raven_1_1_c_lambda_wrapper_1a0d4d1de2cba62e8a802ec73bd7140df2" prot="public" virt="non-virtual"><scope>Raven::CLambdaWrapper</scope><name>~CLambdaWrapper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

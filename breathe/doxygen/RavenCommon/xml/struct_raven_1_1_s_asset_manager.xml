<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_raven_1_1_s_asset_manager" kind="struct" language="C++" prot="public">
    <compoundname>Raven::SAssetManager</compoundname>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="struct_raven_1_1_s_asset_manager_1a7043f4fd4f9c7e9f659e10b8f0651327" prot="private" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_raven_util_1_1_type_hash" kindref="compound">RavenUtil::TypeHash</ref>&lt; T &gt;</type>
        <definition>using Raven::SAssetManager::TypeHash =  RavenUtil::TypeHash&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>TypeHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" line="771" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" bodystart="771" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_raven_1_1_s_asset_manager_1a3d2e1b9a58b5e9de57d6a0222c20bcb5" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; RavenUtil::Hash, <ref refid="struct_raven_1_1_asset_lifetime_event_1_1_interface" kindref="compound">AssetLifetimeEvent::Interface</ref> * &gt;</type>
        <definition>std::unordered_map&lt;RavenUtil::Hash, AssetLifetimeEvent::Interface*&gt; Raven::SAssetManager::m_lifetimeIO</definition>
        <argsstring></argsstring>
        <name>m_lifetimeIO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" line="762" column="4" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" bodystart="762" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_raven_1_1_s_asset_manager_1a135b50e41ec630a8c421368a7a583d5b" prot="private" static="no" mutable="no">
        <type><ref refid="struct_raven_1_1_s_asset_ref_counter" kindref="compound">SAssetRefCounter</ref></type>
        <definition>SAssetRefCounter Raven::SAssetManager::m_refCounter</definition>
        <argsstring></argsstring>
        <name>m_refCounter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" line="763" column="44" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" bodystart="763" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_raven_1_1_s_asset_manager_1a70fb1c477c9262b816853536326c6cd4" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="struct_raven_1_1_i_asset_loader" kindref="compound">IAssetLoader</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::unique_ptr&lt;IAssetLoader&gt; &gt; Raven::SAssetManager::m_loaders</definition>
        <argsstring></argsstring>
        <name>m_loaders</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" line="764" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" bodystart="764" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_raven_1_1_s_asset_manager_1a74b345aa398024c3ebb6fa58f4851ff6" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_raven_util_1_1_type_info" kindref="compound">RavenUtil::TypeInfo</ref> &gt;</type>
        <definition>std::vector&lt;RavenUtil::TypeInfo&gt; Raven::SAssetManager::m_loaderResourceTypeAssoc</definition>
        <argsstring></argsstring>
        <name>m_loaderResourceTypeAssoc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" line="765" column="23" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" bodystart="765" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_raven_1_1_s_asset_manager_1ad76a9ea6faee1b932128d7d9010195bb" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="class_raven_1_1_t_basic_hashed_string" kindref="compound">HashedString</ref>, uint32 &gt;</type>
        <definition>std::unordered_map&lt;HashedString, uint32&gt; Raven::SAssetManager::m_loaderRemap</definition>
        <argsstring></argsstring>
        <name>m_loaderRemap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" line="766" column="22" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" bodystart="766" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_raven_1_1_s_asset_manager_1a60ce01e09468f285ea5dfb784b6fdda6" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="struct_raven_1_1_i_asset_i_o" kindref="compound">IAssetIO</ref> &gt;</type>
        <definition>std::unique_ptr&lt;IAssetIO&gt; Raven::SAssetManager::m_pAssetIO</definition>
        <argsstring></argsstring>
        <name>m_pAssetIO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" line="767" column="34" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" bodystart="767" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_raven_1_1_s_asset_manager_1a72f2acfdaba11dc392f937ee760cab40" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; typename HashedString::HashT, <ref refid="struct_raven_1_1_s_asset_source_info" kindref="compound">SAssetSourceInfo</ref> &gt;</type>
        <definition>std::unordered_map&lt;typename HashedString::HashT, SAssetSourceInfo&gt; Raven::SAssetManager::m_assetSourceInfos</definition>
        <argsstring></argsstring>
        <name>m_assetSourceInfos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" line="769" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" bodystart="769" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_raven_1_1_s_asset_manager_1a81a9ac92179f4bbddb5f21541682d40e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Raven::SAssetManager::SAssetManager</definition>
        <argsstring>(std::unique_ptr&lt; IAssetIO &gt; assetIO)</argsstring>
        <name>SAssetManager</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="struct_raven_1_1_i_asset_i_o" kindref="compound">IAssetIO</ref> &gt;</type>
          <declname>assetIO</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" line="699" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" bodystart="699" bodyend="701"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_s_asset_manager_1a6bd84627ea5b475ab2412c0f63fd668c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::SAssetManager::SetAssetIO</definition>
        <argsstring>(std::unique_ptr&lt; IAssetIO &gt; assetIO)</argsstring>
        <name>SetAssetIO</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="struct_raven_1_1_i_asset_i_o" kindref="compound">IAssetIO</ref> &gt;</type>
          <declname>assetIO</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" line="703" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" bodystart="703" bodyend="705"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_s_asset_manager_1a8d44e8d7a0673c49b342e7482ce2c2cb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_i_asset_i_o" kindref="compound">IAssetIO</ref> *</type>
        <definition>IAssetIO* Raven::SAssetManager::GetAssetIO</definition>
        <argsstring>() const</argsstring>
        <name>GetAssetIO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" line="707" column="10" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" bodystart="707" bodyend="707"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_s_asset_manager_1a52af73cb7da69fca8f7a4c9bc385db2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Raven::SAssetManager::RegisterAssetType</definition>
        <argsstring>(Assets&lt; T &gt; &amp;assets)</argsstring>
        <name>RegisterAssetType</name>
        <param>
          <type><ref refid="class_raven_1_1_assets" kindref="compound">Assets</ref>&lt; T &gt; &amp;</type>
          <declname>assets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" line="709" column="18" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" bodystart="709" bodyend="714"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_s_asset_manager_1aceffd7b373d6c4d2184658ffc7f91cc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDL_NODISCARD <ref refid="struct_raven_1_1_t_loading_result" kindref="compound">IAssetLoader::Result</ref></type>
        <definition>HDL_NODISCARD IAssetLoader::Result Raven::SAssetManager::Load</definition>
        <argsstring>(App &amp;app, const std::string_view path)</argsstring>
        <name>Load</name>
        <param>
          <type>App &amp;</type>
          <declname>app</declname>
        </param>
        <param>
          <type>const std::string_view</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" line="716" column="36"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_s_asset_manager_1a6abf03e302ed887a8ea2f9fd6a10c416" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string_view</type>
        <definition>std::string_view Raven::SAssetManager::TryFindingAssetPath</definition>
        <argsstring>(const HandleUntyped &amp;hAsset) const</argsstring>
        <name>TryFindingAssetPath</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_handle_untyped" kindref="compound">HandleUntyped</ref> &amp;</type>
          <declname>hAsset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" line="719" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_s_asset_manager_1af43e6cddfddab69d013d14c2d24a61e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::SAssetManager::SetAssetPath</definition>
        <argsstring>(const HandleUntyped &amp;hAsset, const std::string_view path)</argsstring>
        <name>SetAssetPath</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_handle_untyped" kindref="compound">HandleUntyped</ref> &amp;</type>
          <declname>hAsset</declname>
        </param>
        <param>
          <type>const std::string_view</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" line="720" column="6"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_s_asset_manager_1a6face1b1f47be3857dfa6a55e8ff4d06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_i_asset_loader" kindref="compound">IAssetLoader</ref> *</type>
        <definition>IAssetLoader* Raven::SAssetManager::GetLoader</definition>
        <argsstring>(const std::string_view extension)</argsstring>
        <name>GetLoader</name>
        <param>
          <type>const std::string_view</type>
          <declname>extension</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" line="721" column="15"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_s_asset_manager_1a408eff8b70c9dca18406739345fdac54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_i_asset_loader" kindref="compound">IAssetLoader</ref> *</type>
        <definition>IAssetLoader* Raven::SAssetManager::GetLoaderForAssetType</definition>
        <argsstring>(const Meta::Type &amp;assetType)</argsstring>
        <name>GetLoaderForAssetType</name>
        <param>
          <type>const <ref refid="class_raven_1_1_meta_1_1_type" kindref="compound">Meta::Type</ref> &amp;</type>
          <declname>assetType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" line="722" column="15"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_s_asset_manager_1abb01c0fba573f64deb81208e2fb25c0a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_raven_util_1_1_type_info" kindref="compound">RavenUtil::TypeInfo</ref></type>
        <definition>RavenUtil::TypeInfo Raven::SAssetManager::GetAssetType</definition>
        <argsstring>(const std::string_view extension) const</argsstring>
        <name>GetAssetType</name>
        <param>
          <type>const std::string_view</type>
          <declname>extension</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" line="723" column="22"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_s_asset_manager_1a56a688982bf16c23f2068771d4782d23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename AssetT</type>
            <defval>typename T::AssetT</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Raven::SAssetManager::RegisterLoader</definition>
        <argsstring>()</argsstring>
        <name>RegisterLoader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" line="726" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" bodystart="726" bodyend="748"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_raven_1_1_s_asset_manager_1a27f30026c9d735e4a5575e20ab3b7502" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Raven::SAssetManager::FreeUnusedAssetsSystem</definition>
        <argsstring>(SAssetManager &amp;self)</argsstring>
        <name>FreeUnusedAssetsSystem</name>
        <param>
          <type><ref refid="struct_raven_1_1_s_asset_manager" kindref="compound">SAssetManager</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" line="752" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" bodystart="752" bodyend="754"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_s_asset_manager_1a79af2a8c5948d7dc9a6ba45b833aa999" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_s_decoded_path" kindref="compound">SDecodedPath</ref></type>
        <definition>static SDecodedPath Raven::SAssetManager::ResolvePath</definition>
        <argsstring>(App &amp;app, std::string_view fullPath)</argsstring>
        <name>ResolvePath</name>
        <param>
          <type>App &amp;</type>
          <declname>app</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>fullPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" line="756" column="21"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_s_asset_manager_1a96c0c5b0a6e54f9a9783645342bd450f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string Raven::SAssetManager::ForHashing</definition>
        <argsstring>(App &amp;app, std::string_view fullPath)</argsstring>
        <name>ForHashing</name>
        <param>
          <type>App &amp;</type>
          <declname>app</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>fullPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" line="757" column="20"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_s_asset_manager_1a876dc137134e85d4d09a95c0c73307d9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string_view</type>
        <definition>static std::string_view Raven::SAssetManager::PrepareExtension</definition>
        <argsstring>(const std::string_view path)</argsstring>
        <name>PrepareExtension</name>
        <param>
          <type>const std::string_view</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" line="759" column="25"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" line="698" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/IO/AssetSystem.hpp" bodystart="698" bodyend="772"/>
    <listofallmembers>
      <member refid="struct_raven_1_1_s_asset_manager_1a96c0c5b0a6e54f9a9783645342bd450f" prot="public" virt="non-virtual"><scope>Raven::SAssetManager</scope><name>ForHashing</name></member>
      <member refid="struct_raven_1_1_s_asset_manager_1a27f30026c9d735e4a5575e20ab3b7502" prot="public" virt="non-virtual"><scope>Raven::SAssetManager</scope><name>FreeUnusedAssetsSystem</name></member>
      <member refid="struct_raven_1_1_s_asset_manager_1a8d44e8d7a0673c49b342e7482ce2c2cb" prot="public" virt="non-virtual"><scope>Raven::SAssetManager</scope><name>GetAssetIO</name></member>
      <member refid="struct_raven_1_1_s_asset_manager_1abb01c0fba573f64deb81208e2fb25c0a" prot="public" virt="non-virtual"><scope>Raven::SAssetManager</scope><name>GetAssetType</name></member>
      <member refid="struct_raven_1_1_s_asset_manager_1a6face1b1f47be3857dfa6a55e8ff4d06" prot="public" virt="non-virtual"><scope>Raven::SAssetManager</scope><name>GetLoader</name></member>
      <member refid="struct_raven_1_1_s_asset_manager_1a408eff8b70c9dca18406739345fdac54" prot="public" virt="non-virtual"><scope>Raven::SAssetManager</scope><name>GetLoaderForAssetType</name></member>
      <member refid="struct_raven_1_1_s_asset_manager_1aceffd7b373d6c4d2184658ffc7f91cc9" prot="public" virt="non-virtual"><scope>Raven::SAssetManager</scope><name>Load</name></member>
      <member refid="struct_raven_1_1_s_asset_manager_1a72f2acfdaba11dc392f937ee760cab40" prot="private" virt="non-virtual"><scope>Raven::SAssetManager</scope><name>m_assetSourceInfos</name></member>
      <member refid="struct_raven_1_1_s_asset_manager_1a3d2e1b9a58b5e9de57d6a0222c20bcb5" prot="private" virt="non-virtual"><scope>Raven::SAssetManager</scope><name>m_lifetimeIO</name></member>
      <member refid="struct_raven_1_1_s_asset_manager_1ad76a9ea6faee1b932128d7d9010195bb" prot="private" virt="non-virtual"><scope>Raven::SAssetManager</scope><name>m_loaderRemap</name></member>
      <member refid="struct_raven_1_1_s_asset_manager_1a74b345aa398024c3ebb6fa58f4851ff6" prot="private" virt="non-virtual"><scope>Raven::SAssetManager</scope><name>m_loaderResourceTypeAssoc</name></member>
      <member refid="struct_raven_1_1_s_asset_manager_1a70fb1c477c9262b816853536326c6cd4" prot="private" virt="non-virtual"><scope>Raven::SAssetManager</scope><name>m_loaders</name></member>
      <member refid="struct_raven_1_1_s_asset_manager_1a60ce01e09468f285ea5dfb784b6fdda6" prot="private" virt="non-virtual"><scope>Raven::SAssetManager</scope><name>m_pAssetIO</name></member>
      <member refid="struct_raven_1_1_s_asset_manager_1a135b50e41ec630a8c421368a7a583d5b" prot="private" virt="non-virtual"><scope>Raven::SAssetManager</scope><name>m_refCounter</name></member>
      <member refid="struct_raven_1_1_s_asset_manager_1a876dc137134e85d4d09a95c0c73307d9" prot="public" virt="non-virtual"><scope>Raven::SAssetManager</scope><name>PrepareExtension</name></member>
      <member refid="struct_raven_1_1_s_asset_manager_1a52af73cb7da69fca8f7a4c9bc385db2e" prot="public" virt="non-virtual"><scope>Raven::SAssetManager</scope><name>RegisterAssetType</name></member>
      <member refid="struct_raven_1_1_s_asset_manager_1a56a688982bf16c23f2068771d4782d23" prot="public" virt="non-virtual"><scope>Raven::SAssetManager</scope><name>RegisterLoader</name></member>
      <member refid="struct_raven_1_1_s_asset_manager_1a79af2a8c5948d7dc9a6ba45b833aa999" prot="public" virt="non-virtual"><scope>Raven::SAssetManager</scope><name>ResolvePath</name></member>
      <member refid="struct_raven_1_1_s_asset_manager_1a81a9ac92179f4bbddb5f21541682d40e" prot="public" virt="non-virtual"><scope>Raven::SAssetManager</scope><name>SAssetManager</name></member>
      <member refid="struct_raven_1_1_s_asset_manager_1a6bd84627ea5b475ab2412c0f63fd668c" prot="public" virt="non-virtual"><scope>Raven::SAssetManager</scope><name>SetAssetIO</name></member>
      <member refid="struct_raven_1_1_s_asset_manager_1af43e6cddfddab69d013d14c2d24a61e2" prot="public" virt="non-virtual"><scope>Raven::SAssetManager</scope><name>SetAssetPath</name></member>
      <member refid="struct_raven_1_1_s_asset_manager_1a6abf03e302ed887a8ea2f9fd6a10c416" prot="public" virt="non-virtual"><scope>Raven::SAssetManager</scope><name>TryFindingAssetPath</name></member>
      <member refid="struct_raven_1_1_s_asset_manager_1a7043f4fd4f9c7e9f659e10b8f0651327" prot="private" virt="non-virtual"><scope>Raven::SAssetManager</scope><name>TypeHash</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_raven_1_1_t_handle_pool_1_1iterator" kind="struct" language="C++" prot="public">
    <compoundname>Raven::THandlePool::iterator</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_raven_1_1_t_handle_pool_1_1iterator_1aef861d902b161ac861f3cdb0b631de2d" prot="public" static="no">
        <type>std::forward_iterator_tag</type>
        <definition>using Raven::THandlePool&lt; T, TagT &gt;::iterator::iterator_category =  std::forward_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/HandlePool.hpp" line="27" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/HandlePool.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_raven_1_1_t_handle_pool_1_1iterator_1aa31cc0110a1adbd8bdfdf0a036c42018" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using Raven::THandlePool&lt; T, TagT &gt;::iterator::difference_type =  std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/HandlePool.hpp" line="28" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/HandlePool.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_raven_1_1_t_handle_pool_1_1iterator_1a910efb2c609fa52d90dba5006d55a778" prot="public" static="no">
        <type>T</type>
        <definition>using Raven::THandlePool&lt; T, TagT &gt;::iterator::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/HandlePool.hpp" line="29" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/HandlePool.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_raven_1_1_t_handle_pool_1_1iterator_1aa8dd66e7e0e1af9328e9291f6dbdf8e3" prot="public" static="no">
        <type>T *</type>
        <definition>using Raven::THandlePool&lt; T, TagT &gt;::iterator::pointer =  T*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/HandlePool.hpp" line="30" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/HandlePool.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_raven_1_1_t_handle_pool_1_1iterator_1a1406821fa1333d3a9128fa4473b8ef7a" prot="public" static="no">
        <type>T &amp;</type>
        <definition>using Raven::THandlePool&lt; T, TagT &gt;::iterator::reference =  T&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/HandlePool.hpp" line="31" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/HandlePool.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_raven_1_1_t_handle_pool_1_1iterator_1a81ee6bdc824916f2facad1b91300f3d9" prot="private" static="no" mutable="no">
        <type>pointer</type>
        <definition>pointer Raven::THandlePool&lt; T, TagT &gt;::iterator::m_ptr</definition>
        <argsstring></argsstring>
        <name>m_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/HandlePool.hpp" line="60" column="28" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/HandlePool.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_raven_1_1_t_handle_pool_1_1iterator_1add65226cc808d58186b8c3eaf6a2bd43" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_raven_1_1_t_handle_pool" kindref="compound">THandlePool</ref> *</type>
        <definition>const THandlePool* Raven::THandlePool&lt; T, TagT &gt;::iterator::m_pool</definition>
        <argsstring></argsstring>
        <name>m_pool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/HandlePool.hpp" line="61" column="27" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/HandlePool.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_raven_1_1_t_handle_pool_1_1iterator_1a37ddad119cf1f817cd818a2f88b541d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Raven::THandlePool&lt; T, TagT &gt;::iterator::iterator</definition>
        <argsstring>(pointer ptr, const THandlePool *pool)</argsstring>
        <name>iterator</name>
        <param>
          <type>pointer</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>const <ref refid="class_raven_1_1_t_handle_pool" kindref="compound">THandlePool</ref> *</type>
          <declname>pool</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/HandlePool.hpp" line="32" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/HandlePool.hpp" bodystart="32" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_t_handle_pool_1_1iterator_1a21cce458281951c0854960425ec1d5db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference Raven::THandlePool&lt; T, TagT &gt;::iterator::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/HandlePool.hpp" line="35" column="19" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/HandlePool.hpp" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_t_handle_pool_1_1iterator_1ad62cf3f04ae922942481f016734a70da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>pointer</type>
        <definition>pointer Raven::THandlePool&lt; T, TagT &gt;::iterator::operator-&gt;</definition>
        <argsstring>()</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/HandlePool.hpp" line="36" column="19" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/HandlePool.hpp" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_t_handle_pool_1_1iterator_1ade6a64b68abda2fda3e0d59fac0e53dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_t_handle_pool_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
        <definition>iterator&amp; Raven::THandlePool&lt; T, TagT &gt;::iterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/HandlePool.hpp" line="37" column="18" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/HandlePool.hpp" bodystart="37" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_t_handle_pool_1_1iterator_1a3a9e56d297378664a2d587f842877dfb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_t_handle_pool_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>iterator Raven::THandlePool&lt; T, TagT &gt;::iterator::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/HandlePool.hpp" line="47" column="18" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/HandlePool.hpp" bodystart="47" bodyend="51"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="struct_raven_1_1_t_handle_pool_1_1iterator_1a81d10d7799462c7ca5e7cf19119ca356" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const iterator &amp;a, const iterator &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_t_handle_pool_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_t_handle_pool_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/HandlePool.hpp" line="52" column="21" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/HandlePool.hpp" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="friend" id="struct_raven_1_1_t_handle_pool_1_1iterator_1a55a8ee0e80dad1a7da9d751c25bc0386" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const iterator &amp;a, const iterator &amp;b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_t_handle_pool_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_t_handle_pool_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/HandlePool.hpp" line="55" column="21" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/HandlePool.hpp" bodystart="55" bodyend="57"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/HandlePool.hpp" line="26" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/HandlePool.hpp" bodystart="26" bodyend="62"/>
    <listofallmembers>
      <member refid="struct_raven_1_1_t_handle_pool_1_1iterator_1aa31cc0110a1adbd8bdfdf0a036c42018" prot="public" virt="non-virtual"><scope>Raven::THandlePool::iterator</scope><name>difference_type</name></member>
      <member refid="struct_raven_1_1_t_handle_pool_1_1iterator_1a37ddad119cf1f817cd818a2f88b541d3" prot="public" virt="non-virtual"><scope>Raven::THandlePool::iterator</scope><name>iterator</name></member>
      <member refid="struct_raven_1_1_t_handle_pool_1_1iterator_1aef861d902b161ac861f3cdb0b631de2d" prot="public" virt="non-virtual"><scope>Raven::THandlePool::iterator</scope><name>iterator_category</name></member>
      <member refid="struct_raven_1_1_t_handle_pool_1_1iterator_1add65226cc808d58186b8c3eaf6a2bd43" prot="private" virt="non-virtual"><scope>Raven::THandlePool::iterator</scope><name>m_pool</name></member>
      <member refid="struct_raven_1_1_t_handle_pool_1_1iterator_1a81ee6bdc824916f2facad1b91300f3d9" prot="private" virt="non-virtual"><scope>Raven::THandlePool::iterator</scope><name>m_ptr</name></member>
      <member refid="struct_raven_1_1_t_handle_pool_1_1iterator_1a55a8ee0e80dad1a7da9d751c25bc0386" prot="public" virt="non-virtual"><scope>Raven::THandlePool::iterator</scope><name>operator!=</name></member>
      <member refid="struct_raven_1_1_t_handle_pool_1_1iterator_1a21cce458281951c0854960425ec1d5db" prot="public" virt="non-virtual"><scope>Raven::THandlePool::iterator</scope><name>operator*</name></member>
      <member refid="struct_raven_1_1_t_handle_pool_1_1iterator_1ade6a64b68abda2fda3e0d59fac0e53dc" prot="public" virt="non-virtual"><scope>Raven::THandlePool::iterator</scope><name>operator++</name></member>
      <member refid="struct_raven_1_1_t_handle_pool_1_1iterator_1a3a9e56d297378664a2d587f842877dfb" prot="public" virt="non-virtual"><scope>Raven::THandlePool::iterator</scope><name>operator++</name></member>
      <member refid="struct_raven_1_1_t_handle_pool_1_1iterator_1ad62cf3f04ae922942481f016734a70da" prot="public" virt="non-virtual"><scope>Raven::THandlePool::iterator</scope><name>operator-&gt;</name></member>
      <member refid="struct_raven_1_1_t_handle_pool_1_1iterator_1a81d10d7799462c7ca5e7cf19119ca356" prot="public" virt="non-virtual"><scope>Raven::THandlePool::iterator</scope><name>operator==</name></member>
      <member refid="struct_raven_1_1_t_handle_pool_1_1iterator_1aa8dd66e7e0e1af9328e9291f6dbdf8e3" prot="public" virt="non-virtual"><scope>Raven::THandlePool::iterator</scope><name>pointer</name></member>
      <member refid="struct_raven_1_1_t_handle_pool_1_1iterator_1a1406821fa1333d3a9128fa4473b8ef7a" prot="public" virt="non-virtual"><scope>Raven::THandlePool::iterator</scope><name>reference</name></member>
      <member refid="struct_raven_1_1_t_handle_pool_1_1iterator_1a910efb2c609fa52d90dba5006d55a778" prot="public" virt="non-virtual"><scope>Raven::THandlePool::iterator</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_raven_1_1_renderer_1_1_s_texture_format" kind="struct" language="C++" prot="public">
    <compoundname>Raven::Renderer::STextureFormat</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_raven_1_1_renderer_1_1_s_texture_format_1af0901de97461aad446ded0b32006e983" prot="public" static="no" mutable="no">
        <type>ETextureFormat</type>
        <definition>ETextureFormat Raven::Renderer::STextureFormat::eChannelSize</definition>
        <argsstring></argsstring>
        <name>eChannelSize</name>
        <initializer>= ETextureFormat::eTF_UNDEFINED</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/TextureFormats.hpp" line="57" column="16" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/TextureFormats.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_raven_1_1_renderer_1_1_s_texture_format_1a3f761ee781262f02701bb334bc40c3d8" prot="public" static="no" mutable="no">
        <type>EDataFormat</type>
        <definition>EDataFormat Raven::Renderer::STextureFormat::eDataFormat</definition>
        <argsstring></argsstring>
        <name>eDataFormat</name>
        <initializer>= EDataFormat::eDF_UNDEFINED</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/TextureFormats.hpp" line="58" column="16" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/TextureFormats.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_raven_1_1_renderer_1_1_s_texture_format_1aabb6309d56d331a9e45f24c0d579a043" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool Raven::Renderer::STextureFormat::IsUndefined</definition>
        <argsstring>() const</argsstring>
        <name>IsUndefined</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/TextureFormats.hpp" line="60" column="24" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/TextureFormats.hpp" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_renderer_1_1_s_texture_format_1a29f66b0a95899ed2c14bf10ddb9b93e5" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool Raven::Renderer::STextureFormat::operator==</definition>
        <argsstring>(const STextureFormat &amp;fmt) const noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_renderer_1_1_s_texture_format" kindref="compound">STextureFormat</ref> &amp;</type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/TextureFormats.hpp" line="65" column="17" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/TextureFormats.hpp" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_renderer_1_1_s_texture_format_1a667c52e5cabdd369d886c648af8a8b19" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool Raven::Renderer::STextureFormat::operator!=</definition>
        <argsstring>(const STextureFormat &amp;fmt) const noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_renderer_1_1_s_texture_format" kindref="compound">STextureFormat</ref> &amp;</type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/TextureFormats.hpp" line="70" column="17" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/TextureFormats.hpp" bodystart="70" bodyend="72"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_raven_1_1_renderer_1_1_s_texture_format_1a2aa9a266b8c6b490d6b489ebdbef6c94" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_raven_1_1_renderer_1_1_s_texture_format" kindref="compound">STextureFormat</ref></type>
        <definition>static constexpr STextureFormat Raven::Renderer::STextureFormat::Undefined</definition>
        <argsstring>()</argsstring>
        <name>Undefined</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/TextureFormats.hpp" line="74" column="33" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/TextureFormats.hpp" bodystart="74" bodyend="79"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/TextureFormats.hpp" line="56" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/TextureFormats.hpp" bodystart="56" bodyend="80"/>
    <listofallmembers>
      <member refid="struct_raven_1_1_renderer_1_1_s_texture_format_1af0901de97461aad446ded0b32006e983" prot="public" virt="non-virtual"><scope>Raven::Renderer::STextureFormat</scope><name>eChannelSize</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_s_texture_format_1a3f761ee781262f02701bb334bc40c3d8" prot="public" virt="non-virtual"><scope>Raven::Renderer::STextureFormat</scope><name>eDataFormat</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_s_texture_format_1aabb6309d56d331a9e45f24c0d579a043" prot="public" virt="non-virtual"><scope>Raven::Renderer::STextureFormat</scope><name>IsUndefined</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_s_texture_format_1a667c52e5cabdd369d886c648af8a8b19" prot="public" virt="non-virtual"><scope>Raven::Renderer::STextureFormat</scope><name>operator!=</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_s_texture_format_1a29f66b0a95899ed2c14bf10ddb9b93e5" prot="public" virt="non-virtual"><scope>Raven::Renderer::STextureFormat</scope><name>operator==</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_s_texture_format_1a2aa9a266b8c6b490d6b489ebdbef6c94" prot="public" virt="non-virtual"><scope>Raven::Renderer::STextureFormat</scope><name>Undefined</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

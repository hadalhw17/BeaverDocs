<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01double_01_4" kind="struct" language="C++" prot="public">
    <compoundname>Raven::Meta::Detail::CastFrom&lt; double &gt;</compoundname>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01double_01_4_1ac1c9344e713f24da1cbed36871a3d993" prot="public" static="no">
        <type>double</type>
        <definition>using Raven::Meta::Detail::CastFrom&lt; double &gt;::SrcType =  double</definition>
        <argsstring></argsstring>
        <name>SrcType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="1164" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="1164" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01double_01_4_1a3918357cd32d10d24ee9d01caa7df0ac" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; double &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, bool &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="1166" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="1166" bodyend="1170"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01double_01_4_1ae971a78790e1f1cd97d63cb18a7326ac" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; double &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, char &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>char &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="1172" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="1172" bodyend="1175"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01double_01_4_1aef61c671623a7178eea866d13ba5fff9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; double &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int8_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int8_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="1177" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="1177" bodyend="1180"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01double_01_4_1a3f654c0cf21e797f750466fe7cc02434" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; double &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint8_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint8_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="1182" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="1182" bodyend="1185"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01double_01_4_1a0ec54098889f5b471bcee096c7fbd2ff" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; double &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int16_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int16_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="1187" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="1187" bodyend="1190"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01double_01_4_1a07dfdf30361c58ba7011cc403df0065b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; double &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint16_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint16_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="1192" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="1192" bodyend="1195"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01double_01_4_1a6b295e768ee4883c2fb1c39ae7afb171" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; double &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int32_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int32_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="1197" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="1197" bodyend="1200"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01double_01_4_1a788568d4991f0abc6cfed1847df0e9be" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; double &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint32_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint32_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="1202" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="1202" bodyend="1205"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01double_01_4_1aad0aad1317977f7badfc1f7f14d17fba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; double &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int64_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int64_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="1207" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="1207" bodyend="1210"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01double_01_4_1a42fbee0a3b57d96cf3252cc8fb31b650" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; double &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint64_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint64_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="1212" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="1212" bodyend="1215"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01double_01_4_1a66787ccaefde5624cc90b4d15bfd34ee" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; double &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, float &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="1217" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="1217" bodyend="1227"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01double_01_4_1a4d72ea2ca11f1df7b8926dab37d75a25" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; double &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, double &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="1229" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="1229" bodyend="1233"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01double_01_4_1ac88c84df33fa3afece5b04a34b2eff56" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; double &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::string &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="1235" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="1235" bodyend="1239"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01double_01_4_1aaae09c28b382d55dd1e397d34506ba37" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; double &gt;::ToEnum</definition>
        <argsstring>(const SrcType &amp;from, Argument &amp;to)</argsstring>
        <name>ToEnum</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="class_raven_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="1241" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="1241" bodyend="1244"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="1162" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="1163" bodyend="1245"/>
    <listofallmembers>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01double_01_4_1ac1c9344e713f24da1cbed36871a3d993" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; double &gt;</scope><name>SrcType</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01double_01_4_1a3918357cd32d10d24ee9d01caa7df0ac" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; double &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01double_01_4_1ae971a78790e1f1cd97d63cb18a7326ac" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; double &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01double_01_4_1aef61c671623a7178eea866d13ba5fff9" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; double &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01double_01_4_1a3f654c0cf21e797f750466fe7cc02434" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; double &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01double_01_4_1a0ec54098889f5b471bcee096c7fbd2ff" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; double &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01double_01_4_1a07dfdf30361c58ba7011cc403df0065b" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; double &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01double_01_4_1a6b295e768ee4883c2fb1c39ae7afb171" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; double &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01double_01_4_1a788568d4991f0abc6cfed1847df0e9be" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; double &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01double_01_4_1aad0aad1317977f7badfc1f7f14d17fba" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; double &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01double_01_4_1a42fbee0a3b57d96cf3252cc8fb31b650" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; double &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01double_01_4_1a66787ccaefde5624cc90b4d15bfd34ee" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; double &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01double_01_4_1a4d72ea2ca11f1df7b8926dab37d75a25" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; double &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01double_01_4_1ac88c84df33fa3afece5b04a34b2eff56" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; double &gt;</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_3_01double_01_4_1aaae09c28b382d55dd1e397d34506ba37" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom&lt; double &gt;</scope><name>ToEnum</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

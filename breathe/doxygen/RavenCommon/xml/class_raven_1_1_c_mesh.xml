<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_raven_1_1_c_mesh" kind="class" language="C++" prot="public">
    <compoundname>Raven::CMesh</compoundname>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_raven_1_1_c_mesh_1a6f98252ef9f79d30abf4d4e75a9fe3f4" prot="public" static="yes" mutable="no">
        <type><ref refid="class_raven_1_1_c_thread_pool" kindref="compound">CThreadPool</ref></type>
        <definition>CThreadPool Raven::CMesh::s_loadingThread</definition>
        <argsstring></argsstring>
        <name>s_loadingThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="49" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_raven_1_1_c_mesh_1af7e59cbdf6dd382583c0db67bd122c1a" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Raven::CMesh::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="59" column="29" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_mesh_1a5f0a0778d8522e14cb98e9872084088e" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; SVertex &gt;</type>
        <definition>std::vector&lt;SVertex&gt; Raven::CMesh::m_geometry</definition>
        <argsstring></argsstring>
        <name>m_geometry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="60" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_mesh_1a25ea7af10184909c9b219daabee19a67" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; uint32 &gt;</type>
        <definition>std::vector&lt;uint32&gt; Raven::CMesh::m_indexBuffer</definition>
        <argsstring></argsstring>
        <name>m_indexBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="61" column="21" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_mesh_1a9df23720db608241534b8a0714cb4a2c" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; SRendPrimitive &gt;</type>
        <definition>std::vector&lt;SRendPrimitive&gt; Raven::CMesh::m_primitives</definition>
        <argsstring></argsstring>
        <name>m_primitives</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="62" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_mesh_1af8d87465202ac994db54c90fd1d39471" prot="protected" static="no" mutable="no">
        <type>AABB</type>
        <definition>AABB Raven::CMesh::m_bounds</definition>
        <argsstring></argsstring>
        <name>m_bounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="64" column="29" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_mesh_1a3bef0f7a196e2bfcc06f58622e98c481" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; IRenderMesh &gt;</type>
        <definition>std::shared_ptr&lt;IRenderMesh&gt; Raven::CMesh::m_pRenderMesh</definition>
        <argsstring></argsstring>
        <name>m_pRenderMesh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="66" column="17" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_raven_1_1_c_mesh_1a04d87e62c7a8c96693fff4dba4f24b95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Raven::CMesh::CMesh</definition>
        <argsstring>()</argsstring>
        <name>CMesh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_mesh_1ad04b9cc3964a13d98303e6adcbdd7f48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Raven::CMesh::CMesh</definition>
        <argsstring>(const char *pName)</argsstring>
        <name>CMesh</name>
        <param>
          <type>const char *</type>
          <declname>pName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_mesh_1a8633241bf5010bd5952fac8950074423" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Raven::CMesh::~CMesh</definition>
        <argsstring>()=default</argsstring>
        <name>~CMesh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="21" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_mesh_1a6665a41dc3bedb084d3c252242d937d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Raven::CMesh::CMesh</definition>
        <argsstring>(CMesh &amp;&amp;rhs)</argsstring>
        <name>CMesh</name>
        <param>
          <type><ref refid="class_raven_1_1_c_mesh" kindref="compound">CMesh</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_mesh_1ae8ef56e08820ec0619c885b67ef98b4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Raven::CMesh::CMesh</definition>
        <argsstring>(const CMesh &amp;rhs)</argsstring>
        <name>CMesh</name>
        <param>
          <type>const <ref refid="class_raven_1_1_c_mesh" kindref="compound">CMesh</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_mesh_1a4cfe9542d1458b29ecdd374e8b737d0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_raven_1_1_c_mesh" kindref="compound">CMesh</ref> &amp;</type>
        <definition>CMesh&amp; Raven::CMesh::operator=</definition>
        <argsstring>(const CMesh &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_raven_1_1_c_mesh" kindref="compound">CMesh</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="24" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_mesh_1ad6e6efb2084b1437a4f2fd79ab722411" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::CMesh::Load</definition>
        <argsstring>(ResourcePtr&lt; SglTFModel &gt; model, int meshId=-1)</argsstring>
        <name>Load</name>
        <param>
          <type>ResourcePtr&lt; <ref refid="struct_raven_1_1_sgl_t_f_model" kindref="compound">SglTFModel</ref> &gt;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>meshId</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="27" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_mesh_1a5661f8bb3a655e6dcea80058e52f371f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::CMesh::Load</definition>
        <argsstring>(SglTFModel *pSourceModel, int meshId=-1)</argsstring>
        <name>Load</name>
        <param>
          <type><ref refid="struct_raven_1_1_sgl_t_f_model" kindref="compound">SglTFModel</ref> *</type>
          <declname>pSourceModel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>meshId</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="28" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_mesh_1ad39f047bcaab195af688ad5222d80d25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::CMesh::LoadGeometry</definition>
        <argsstring>(const std::string_view sourcePath, const GLTF::SDocument &amp;doc, int meshIdx)</argsstring>
        <name>LoadGeometry</name>
        <param>
          <type>const std::string_view</type>
          <declname>sourcePath</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">GLTF::SDocument</ref> &amp;</type>
          <declname>doc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>meshIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="29" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_mesh_1aa84005122266061f1b0f07c94e585fb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::CMesh::LoadGeometry</definition>
        <argsstring>(std::vector&lt; SVertex &gt; &amp;&amp;geometry, std::vector&lt; uint32 &gt; &amp;&amp;indices, const HandleUntyped &amp;hMat={})</argsstring>
        <name>LoadGeometry</name>
        <param>
          <type>std::vector&lt; SVertex &gt; &amp;&amp;</type>
          <declname>geometry</declname>
        </param>
        <param>
          <type>std::vector&lt; uint32 &gt; &amp;&amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_handle_untyped" kindref="compound">HandleUntyped</ref> &amp;</type>
          <declname>hMat</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="31" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_mesh_1acc3c68ad1ba829bf356d9d2a3b4e1b2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CMesh::AppendGeometry</definition>
        <argsstring>(std::vector&lt; SVertex &gt; &amp;&amp;geometry, std::vector&lt; uint32 &gt; &amp;&amp;indices, const HandleUntyped &amp;hMat={})</argsstring>
        <name>AppendGeometry</name>
        <param>
          <type>std::vector&lt; SVertex &gt; &amp;&amp;</type>
          <declname>geometry</declname>
        </param>
        <param>
          <type>std::vector&lt; uint32 &gt; &amp;&amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_handle_untyped" kindref="compound">HandleUntyped</ref> &amp;</type>
          <declname>hMat</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="33" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_mesh_1a0a1496afabd945465fc3e6e7c7faba7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::CMesh::FlushToGPU</definition>
        <argsstring>()</argsstring>
        <name>FlushToGPU</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="34" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_mesh_1af35193b6e4869c166fd83221cac31c75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::CMesh::FlushMaterialsToGPU</definition>
        <argsstring>()</argsstring>
        <name>FlushMaterialsToGPU</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="35" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_mesh_1a4e920565b0662d8ed1d814f4c38fe320" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CMesh::SetIndexBuffer</definition>
        <argsstring>(IGPUBuffer *pBuffer)</argsstring>
        <name>SetIndexBuffer</name>
        <param>
          <type>IGPUBuffer *</type>
          <declname>pBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="36" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_mesh_1a93d7007b2e3898d88fec0937f7859410" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32</type>
        <definition>uint32 Raven::CMesh::AddInstance</definition>
        <argsstring>(int primitiveId, const HandleUntyped &amp;pMaterial={})</argsstring>
        <name>AddInstance</name>
        <param>
          <type>int</type>
          <declname>primitiveId</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_handle_untyped" kindref="compound">HandleUntyped</ref> &amp;</type>
          <declname>pMaterial</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="37" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_mesh_1aa436373406a016da922ae21c3aa7e290" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CMesh::SetMaterial</definition>
        <argsstring>(const Handle&lt; SMaterialData &gt; &amp;pMaterial, int primId=-1)</argsstring>
        <name>SetMaterial</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_handle" kindref="compound">Handle</ref>&lt; SMaterialData &gt; &amp;</type>
          <declname>pMaterial</declname>
        </param>
        <param>
          <type>int</type>
          <declname>primId</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="39" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_mesh_1a05b9f1ce3e8a754c37f33bc79cb75bd1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>AABB</type>
        <definition>AABB Raven::CMesh::GetBounds</definition>
        <argsstring>() const</argsstring>
        <name>GetBounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="41" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_mesh_1ad6e44bc84cfe220f9ea56bf45980c50f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Raven::CMesh::GetName</definition>
        <argsstring>() const</argsstring>
        <name>GetName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="43" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_mesh_1a76d68bd829d07227caef19dd9c67bca6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::span&lt; const SVertex &gt;</type>
        <definition>std::span&lt;const SVertex&gt; Raven::CMesh::GetVertexStream</definition>
        <argsstring>() const</argsstring>
        <name>GetVertexStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="44" column="11" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_mesh_1af8ee5f85422a43851de0a0177f49e6a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::span&lt; const uint32 &gt;</type>
        <definition>std::span&lt;const uint32&gt; Raven::CMesh::GetIndexStream</definition>
        <argsstring>() const</argsstring>
        <name>GetIndexStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="45" column="11" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_mesh_1aa5acafaf0bd065c5481ef86ce7ae71d6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const IRenderMesh *</type>
        <definition>const IRenderMesh* Raven::CMesh::GetRenderMesh</definition>
        <argsstring>() const</argsstring>
        <name>GetRenderMesh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="46" column="19" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_mesh_1a2b1913e1b4cd61941fab10f98d380a6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>IRenderMesh *</type>
        <definition>IRenderMesh* Raven::CMesh::GetRenderMesh</definition>
        <argsstring>()</argsstring>
        <name>GetRenderMesh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="47" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_mesh_1a6b2f4088b0a3afda482ec80043e5ffdd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CMesh::GetMaterialHashes</definition>
        <argsstring>(std::vector&lt; Handle&lt; SMaterialData &gt;&gt; &amp;hashes) const</argsstring>
        <name>GetMaterialHashes</name>
        <param>
          <type>std::vector&lt; <ref refid="struct_raven_1_1_handle" kindref="compound">Handle</ref>&lt; SMaterialData &gt;&gt; &amp;</type>
          <declname>hashes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="51" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_mesh_1a2a1d1a2291f56b0f55e9df69f4217405" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CMesh::Reset</definition>
        <argsstring>()</argsstring>
        <name>Reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="53" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_raven_1_1_c_mesh_1aacb8ffc3d419a7ceee1b9ef30efafcd6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::CMesh::FlushToGPU</definition>
        <argsstring>(const GLTF::SDocument &amp;doc, const uint32 meshIdx)</argsstring>
        <name>FlushToGPU</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_g_l_t_f_1_1_s_document" kindref="compound">GLTF::SDocument</ref> &amp;</type>
          <declname>doc</declname>
        </param>
        <param>
          <type>const uint32</type>
          <declname>meshIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="56" column="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>Raven::CMesh</label>
        <link refid="class_raven_1_1_c_mesh"/>
        <childnode refid="2" relation="usage">
          <edgelabel>s_loadingThread</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Raven::CThreadPool</label>
        <link refid="class_raven_1_1_c_thread_pool"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" line="16" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Mesh.hpp" bodystart="17" bodyend="67"/>
    <listofallmembers>
      <member refid="class_raven_1_1_c_mesh_1a93d7007b2e3898d88fec0937f7859410" prot="public" virt="non-virtual"><scope>Raven::CMesh</scope><name>AddInstance</name></member>
      <member refid="class_raven_1_1_c_mesh_1acc3c68ad1ba829bf356d9d2a3b4e1b2f" prot="public" virt="non-virtual"><scope>Raven::CMesh</scope><name>AppendGeometry</name></member>
      <member refid="class_raven_1_1_c_mesh_1a04d87e62c7a8c96693fff4dba4f24b95" prot="public" virt="non-virtual"><scope>Raven::CMesh</scope><name>CMesh</name></member>
      <member refid="class_raven_1_1_c_mesh_1ad04b9cc3964a13d98303e6adcbdd7f48" prot="public" virt="non-virtual"><scope>Raven::CMesh</scope><name>CMesh</name></member>
      <member refid="class_raven_1_1_c_mesh_1a6665a41dc3bedb084d3c252242d937d8" prot="public" virt="non-virtual"><scope>Raven::CMesh</scope><name>CMesh</name></member>
      <member refid="class_raven_1_1_c_mesh_1ae8ef56e08820ec0619c885b67ef98b4d" prot="public" virt="non-virtual"><scope>Raven::CMesh</scope><name>CMesh</name></member>
      <member refid="class_raven_1_1_c_mesh_1af35193b6e4869c166fd83221cac31c75" prot="public" virt="non-virtual"><scope>Raven::CMesh</scope><name>FlushMaterialsToGPU</name></member>
      <member refid="class_raven_1_1_c_mesh_1a0a1496afabd945465fc3e6e7c7faba7f" prot="public" virt="non-virtual"><scope>Raven::CMesh</scope><name>FlushToGPU</name></member>
      <member refid="class_raven_1_1_c_mesh_1aacb8ffc3d419a7ceee1b9ef30efafcd6" prot="private" virt="non-virtual"><scope>Raven::CMesh</scope><name>FlushToGPU</name></member>
      <member refid="class_raven_1_1_c_mesh_1a05b9f1ce3e8a754c37f33bc79cb75bd1" prot="public" virt="non-virtual"><scope>Raven::CMesh</scope><name>GetBounds</name></member>
      <member refid="class_raven_1_1_c_mesh_1af8ee5f85422a43851de0a0177f49e6a7" prot="public" virt="non-virtual"><scope>Raven::CMesh</scope><name>GetIndexStream</name></member>
      <member refid="class_raven_1_1_c_mesh_1a6b2f4088b0a3afda482ec80043e5ffdd" prot="public" virt="non-virtual"><scope>Raven::CMesh</scope><name>GetMaterialHashes</name></member>
      <member refid="class_raven_1_1_c_mesh_1ad6e44bc84cfe220f9ea56bf45980c50f" prot="public" virt="non-virtual"><scope>Raven::CMesh</scope><name>GetName</name></member>
      <member refid="class_raven_1_1_c_mesh_1aa5acafaf0bd065c5481ef86ce7ae71d6" prot="public" virt="non-virtual"><scope>Raven::CMesh</scope><name>GetRenderMesh</name></member>
      <member refid="class_raven_1_1_c_mesh_1a2b1913e1b4cd61941fab10f98d380a6e" prot="public" virt="non-virtual"><scope>Raven::CMesh</scope><name>GetRenderMesh</name></member>
      <member refid="class_raven_1_1_c_mesh_1a76d68bd829d07227caef19dd9c67bca6" prot="public" virt="non-virtual"><scope>Raven::CMesh</scope><name>GetVertexStream</name></member>
      <member refid="class_raven_1_1_c_mesh_1ad6e6efb2084b1437a4f2fd79ab722411" prot="public" virt="non-virtual"><scope>Raven::CMesh</scope><name>Load</name></member>
      <member refid="class_raven_1_1_c_mesh_1a5661f8bb3a655e6dcea80058e52f371f" prot="public" virt="non-virtual"><scope>Raven::CMesh</scope><name>Load</name></member>
      <member refid="class_raven_1_1_c_mesh_1ad39f047bcaab195af688ad5222d80d25" prot="public" virt="non-virtual"><scope>Raven::CMesh</scope><name>LoadGeometry</name></member>
      <member refid="class_raven_1_1_c_mesh_1aa84005122266061f1b0f07c94e585fb7" prot="public" virt="non-virtual"><scope>Raven::CMesh</scope><name>LoadGeometry</name></member>
      <member refid="class_raven_1_1_c_mesh_1af8d87465202ac994db54c90fd1d39471" prot="protected" virt="non-virtual"><scope>Raven::CMesh</scope><name>m_bounds</name></member>
      <member refid="class_raven_1_1_c_mesh_1a5f0a0778d8522e14cb98e9872084088e" prot="protected" virt="non-virtual"><scope>Raven::CMesh</scope><name>m_geometry</name></member>
      <member refid="class_raven_1_1_c_mesh_1a25ea7af10184909c9b219daabee19a67" prot="protected" virt="non-virtual"><scope>Raven::CMesh</scope><name>m_indexBuffer</name></member>
      <member refid="class_raven_1_1_c_mesh_1af7e59cbdf6dd382583c0db67bd122c1a" prot="protected" virt="non-virtual"><scope>Raven::CMesh</scope><name>m_name</name></member>
      <member refid="class_raven_1_1_c_mesh_1a3bef0f7a196e2bfcc06f58622e98c481" prot="protected" virt="non-virtual"><scope>Raven::CMesh</scope><name>m_pRenderMesh</name></member>
      <member refid="class_raven_1_1_c_mesh_1a9df23720db608241534b8a0714cb4a2c" prot="protected" virt="non-virtual"><scope>Raven::CMesh</scope><name>m_primitives</name></member>
      <member refid="class_raven_1_1_c_mesh_1a4cfe9542d1458b29ecdd374e8b737d0e" prot="public" virt="non-virtual"><scope>Raven::CMesh</scope><name>operator=</name></member>
      <member refid="class_raven_1_1_c_mesh_1a2a1d1a2291f56b0f55e9df69f4217405" prot="public" virt="non-virtual"><scope>Raven::CMesh</scope><name>Reset</name></member>
      <member refid="class_raven_1_1_c_mesh_1a6f98252ef9f79d30abf4d4e75a9fe3f4" prot="public" virt="non-virtual"><scope>Raven::CMesh</scope><name>s_loadingThread</name></member>
      <member refid="class_raven_1_1_c_mesh_1a4e920565b0662d8ed1d814f4c38fe320" prot="public" virt="non-virtual"><scope>Raven::CMesh</scope><name>SetIndexBuffer</name></member>
      <member refid="class_raven_1_1_c_mesh_1aa436373406a016da922ae21c3aa7e290" prot="public" virt="non-virtual"><scope>Raven::CMesh</scope><name>SetMaterial</name></member>
      <member refid="class_raven_1_1_c_mesh_1a8633241bf5010bd5952fac8950074423" prot="public" virt="virtual"><scope>Raven::CMesh</scope><name>~CMesh</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

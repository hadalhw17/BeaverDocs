<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_raven_1_1_t_basic_dense_storage" kind="class" language="C++" prot="public">
    <compoundname>Raven::TBasicDenseStorage</compoundname>
    <basecompoundref refid="class_raven_1_1_t_basic_sparse_set" prot="public" virt="non-virtual">Raven::TBasicSparseSet&lt; std::uint32_t, std::allocator_traits&lt; std::allocator&lt; ValueT &gt; &gt;::template rebind_alloc&lt; std::uint32_t &gt; &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename ValueT</type>
      </param>
      <param>
        <type>typename KeyT</type>
        <defval>std::uint32_t</defval>
      </param>
      <param>
        <type>typename AllocatorT</type>
        <defval>std::allocator&lt;ValueT&gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_raven_1_1_t_basic_dense_storage_1a2fa0efd806ae169d2d9ea4acab94eecf" prot="private" static="no">
        <type><ref refid="class_raven_1_1_t_basic_sparse_set" kindref="compound">TBasicSparseSet</ref>&lt; KeyT &gt;</type>
        <definition>using Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::BaseT =  TBasicSparseSet&lt;KeyT&gt;</definition>
        <argsstring></argsstring>
        <name>BaseT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="48" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_raven_1_1_t_basic_dense_storage_1aa6704a19a936b7b48d34efe0cf3cb87c" prot="private" static="no">
        <type>std::allocator_traits&lt; AllocatorT &gt;</type>
        <definition>using Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::AllocTraitsT =  std::allocator_traits&lt;AllocatorT&gt;</definition>
        <argsstring></argsstring>
        <name>AllocTraitsT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="49" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_raven_1_1_t_basic_dense_storage_1a536974d5cc134b0e52212be1ad5472f5" prot="private" static="no">
        <type>std::vector&lt; typename AllocTraitsT::pointer, typename AllocTraitsT::template rebind_alloc&lt; typename AllocTraitsT::pointer &gt; &gt;</type>
        <definition>using Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::StorageT =  std::vector&lt;typename AllocTraitsT::pointer, typename AllocTraitsT::template rebind_alloc&lt; typename AllocTraitsT::pointer&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>StorageT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="50" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_raven_1_1_t_basic_dense_storage_1a65a68f06224b89a5bf20f7fab9912548" prot="private" static="no">
        <type>typename BaseT::EntityT</type>
        <definition>using Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::EntT =  typename BaseT::EntityT</definition>
        <argsstring></argsstring>
        <name>EntT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="53" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_raven_1_1_t_basic_dense_storage_1a230eeebf935b1fa4803c0a69a492801c" prot="private" static="no">
        <type>typename StorageT::size_type</type>
        <definition>using Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::SizeT =  typename StorageT::size_type</definition>
        <argsstring></argsstring>
        <name>SizeT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="55" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_raven_1_1_t_basic_dense_storage_1a1c1ddfa5f34237277850732434d9c1b7" prot="private" static="no">
        <type>typename <ref refid="class_raven_1_1_t_basic_sparse_set_iterator" kindref="compound">BaseT::iterator</ref></type>
        <definition>using Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::IteratorT =  typename BaseT::iterator</definition>
        <argsstring></argsstring>
        <name>IteratorT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="57" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_raven_1_1_t_basic_dense_storage_1a783dc7548f5c1440a2ab39f4b825fbf8" prot="private" static="no">
        <type><ref refid="struct_raven_1_1_t_component_traits" kindref="compound">TComponentTraits</ref>&lt; ValueT &gt;</type>
        <definition>using Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::TraitsT =  TComponentTraits&lt;ValueT&gt;</definition>
        <argsstring></argsstring>
        <name>TraitsT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="58" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_raven_1_1_t_basic_dense_storage_1a0e4289df4cc29575e97d4da08a478179" prot="public" static="no">
        <type>AllocatorT</type>
        <definition>using Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::allocator_type =  AllocatorT</definition>
        <argsstring></argsstring>
        <name>allocator_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="158" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_raven_1_1_t_basic_dense_storage_1aee76623807bcebe771d8c10b338b3016" prot="public" static="no">
        <type>ValueT</type>
        <definition>using Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::value_type =  ValueT</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="159" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_raven_1_1_t_basic_dense_storage_1ab60dc49c31b0ee3d445a7d1b7578f926" prot="public" static="no">
        <type>IteratorT</type>
        <definition>using Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::iterator =  IteratorT</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="160" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_raven_1_1_t_basic_dense_storage_1ab5d11b83056cef3101f305b0a8bb160d" prot="public" static="no">
        <type>iterator</type>
        <definition>using Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::const_iterator =  iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="161" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_raven_1_1_t_basic_dense_storage_1a43edc1c7f44357ecf3f65015c126b79c" prot="public" static="no">
        <type>SizeT</type>
        <definition>using Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::size_type =  SizeT</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="162" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_raven_1_1_t_basic_dense_storage_1afa490f12a5565bc564aa9e3ce6517427" prot="public" static="no">
        <type>EntT</type>
        <definition>using Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::EntityT =  EntT</definition>
        <argsstring></argsstring>
        <name>EntityT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="163" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="163" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_raven_1_1_t_basic_dense_storage_1a028de45a7283e915a4fff4759a198984" prot="private" static="no" mutable="no">
        <type>std::pair&lt; StorageT, allocator_type &gt;</type>
        <definition>std::pair&lt;StorageT, allocator_type&gt; Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::m_dense</definition>
        <argsstring></argsstring>
        <name>m_dense</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="210" column="11" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="210" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_raven_1_1_t_basic_dense_storage_1a3cbb91af5e58aab9f2a36ad2c1ba66be" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::PagePos</definition>
        <argsstring>(const SizeT idx) const</argsstring>
        <name>PagePos</name>
        <param>
          <type>const SizeT</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="60" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_t_basic_dense_storage_1a8bec64bfb43b5918f1bcf0d20621fa1f" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::GetElement</definition>
        <argsstring>(const SizeT idx) const</argsstring>
        <name>GetElement</name>
        <param>
          <type>const SizeT</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="65" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_t_basic_dense_storage_1a9ac0820b31e1843185d31e3d4c886739" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto *</type>
        <definition>auto* Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::AssureFor</definition>
        <argsstring>(const std::size_t idx)</argsstring>
        <name>AssureFor</name>
        <param>
          <type>const std::size_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="70" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="70" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_t_basic_dense_storage_1a2b43df5aaa93d3aab653720fb184acaa" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::EmplaceElem</definition>
        <argsstring>(const EntT ent, Args &amp;&amp;... args)</argsstring>
        <name>EmplaceElem</name>
        <param>
          <type>const EntT</type>
          <declname>ent</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="88" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="88" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_t_basic_dense_storage_1aa0546385083808b540ebf3c05d8dff40" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::CleanUpDense</definition>
        <argsstring>()</argsstring>
        <name>CleanUpDense</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="96" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="96" bodyend="104"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_raven_1_1_t_basic_dense_storage_1a164f0cdbd99c93a69c920d05afdc8033" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::ElemAt</definition>
        <argsstring>(const SizeT idx) override</argsstring>
        <name>ElemAt</name>
        <param>
          <type>const SizeT</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="107" column="12" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="107" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_t_basic_dense_storage_1a546e42855746b143a848a96730761805" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::SwapAndPop</definition>
        <argsstring>(typename BaseT::iterator first, typename BaseT::iterator last) override</argsstring>
        <name>SwapAndPop</name>
        <reimplements refid="class_raven_1_1_t_basic_sparse_set_1a27f77e0b1795324b6ee792b5af568c88">SwapAndPop</reimplements>
        <param>
          <type>typename <ref refid="class_raven_1_1_t_basic_sparse_set_iterator" kindref="compound">BaseT::iterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type>typename <ref refid="class_raven_1_1_t_basic_sparse_set_iterator" kindref="compound">BaseT::iterator</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="111" column="14" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="111" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_t_basic_dense_storage_1a62975b48e2a547935ca4e8db0314dd26" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::InPlacePop</definition>
        <argsstring>(typename BaseT::iterator first, typename BaseT::iterator last) override</argsstring>
        <name>InPlacePop</name>
        <reimplements refid="class_raven_1_1_t_basic_sparse_set_1a268bd1565dad7d4204959371f3c2bd11">InPlacePop</reimplements>
        <param>
          <type>typename <ref refid="class_raven_1_1_t_basic_sparse_set_iterator" kindref="compound">BaseT::iterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type>typename <ref refid="class_raven_1_1_t_basic_sparse_set_iterator" kindref="compound">BaseT::iterator</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="120" column="14" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="120" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_t_basic_dense_storage_1ae6b8e13e80c09999499b5d1809f20101" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_raven_1_1_t_basic_sparse_set_iterator" kindref="compound">BaseT::iterator</ref></type>
        <definition>virtual BaseT::iterator Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::try_emplace</definition>
        <argsstring>(EntT ent, const void *pData) override</argsstring>
        <name>try_emplace</name>
        <param>
          <type>EntT</type>
          <declname>ent</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>pData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="128" column="34" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_t_basic_dense_storage_1a89444890352328adaa214d2a5d3dbcfa" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::shrink_to_size</definition>
        <argsstring>(const std::size_t sz)</argsstring>
        <name>shrink_to_size</name>
        <param>
          <type>const std::size_t</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="134" column="10" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="134" bodyend="155"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_raven_1_1_t_basic_dense_storage_1a2dd8a1dd214c3e194b13ab2310ba3ce7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::TBasicDenseStorage</definition>
        <argsstring>(allocator_type allocator={})</argsstring>
        <name>TBasicDenseStorage</name>
        <param>
          <type>allocator_type</type>
          <declname>allocator</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="165" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="165" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_t_basic_dense_storage_1a3a751ab2e2b665b44d3b2d55819f8c55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::~TBasicDenseStorage</definition>
        <argsstring>()</argsstring>
        <name>~TBasicDenseStorage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="171" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="171" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_t_basic_dense_storage_1aa805e6254d197a13e51d9abd5b26bae0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>value_type &amp;</type>
        <definition>value_type&amp; Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::emplace</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>emplace</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="175" column="24" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="175" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_t_basic_dense_storage_1ab1b685cdb6643482e8e929444e8a7708" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::begin</definition>
        <argsstring>() const noexcept</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="180" column="17" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="180" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_t_basic_dense_storage_1a50dcd1cb0134dc10aa649a91fb54aed1" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::end</definition>
        <argsstring>() const noexcept</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="187" column="17" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="187" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_t_basic_dense_storage_1a2da3692f2b00e9233b331b89758f6850" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const value_type &amp;</type>
        <definition>const value_type&amp; Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::get</definition>
        <argsstring>(const EntityT ent) const</argsstring>
        <name>get</name>
        <param>
          <type>const EntityT</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="192" column="19" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="192" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_t_basic_dense_storage_1a24adfce2f41bdd969de6028096948e7d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>value_type &amp;</type>
        <definition>value_type&amp; Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::get</definition>
        <argsstring>(const EntityT ent)</argsstring>
        <name>get</name>
        <param>
          <type>const EntityT</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="196" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="196" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_t_basic_dense_storage_1ab9a9025b3a7415373fd40157c245e832" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::capacity</definition>
        <argsstring>() const noexcept</argsstring>
        <name>capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="200" column="12" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="200" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_t_basic_dense_storage_1aa81361866e0a1f120039c7ac0df281f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;::reserve</definition>
        <argsstring>(const size_type size)</argsstring>
        <name>reserve</name>
        <param>
          <type>const size_type</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="204" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="204" bodyend="207"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Raven::TBasicSparseSet&lt; std::uint32_t, std::allocator_traits&lt; std::allocator&lt; ValueT &gt; &gt;::template rebind_alloc&lt; std::uint32_t &gt; &gt;</label>
        <link refid="class_raven_1_1_t_basic_sparse_set"/>
      </node>
      <node id="1">
        <label>Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;</label>
        <link refid="class_raven_1_1_t_basic_dense_storage"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Raven::TBasicSparseSet&lt; std::uint32_t, std::allocator_traits&lt; std::allocator&lt; ValueT &gt; &gt;::template rebind_alloc&lt; std::uint32_t &gt; &gt;</label>
        <link refid="class_raven_1_1_t_basic_sparse_set"/>
      </node>
      <node id="1">
        <label>Raven::TBasicDenseStorage&lt; ValueT, KeyT, AllocatorT &gt;</label>
        <link refid="class_raven_1_1_t_basic_dense_storage"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" line="45" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Utils/DenseStorage.hpp" bodystart="47" bodyend="211"/>
    <listofallmembers>
      <member refid="class_raven_1_1_t_basic_dense_storage_1a0e4289df4cc29575e97d4da08a478179" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>allocator_type</name></member>
      <member refid="class_raven_1_1_t_basic_dense_storage_1aa6704a19a936b7b48d34efe0cf3cb87c" prot="private" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>AllocTraitsT</name></member>
      <member refid="class_raven_1_1_t_basic_dense_storage_1a9ac0820b31e1843185d31e3d4c886739" prot="private" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>AssureFor</name></member>
      <member refid="class_raven_1_1_t_basic_sparse_set_1a7b421088056dc551fd829791b4e17a37" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>at</name></member>
      <member refid="class_raven_1_1_t_basic_dense_storage_1a2fa0efd806ae169d2d9ea4acab94eecf" prot="private" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>BaseT</name></member>
      <member refid="class_raven_1_1_t_basic_dense_storage_1ab1b685cdb6643482e8e929444e8a7708" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>begin</name></member>
      <member refid="class_raven_1_1_t_basic_sparse_set_1a52dcbf79de27a43adc6dc5a4edf13e69" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>Bump</name></member>
      <member refid="class_raven_1_1_t_basic_dense_storage_1ab9a9025b3a7415373fd40157c245e832" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>capacity</name></member>
      <member refid="class_raven_1_1_t_basic_sparse_set_1a065ef567b59e908df58f30e332ca2a05" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>cbegin</name></member>
      <member refid="class_raven_1_1_t_basic_sparse_set_1a9043495855bc3eb43de84fc04fa2e99a" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>cend</name></member>
      <member refid="class_raven_1_1_t_basic_dense_storage_1aa0546385083808b540ebf3c05d8dff40" prot="private" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>CleanUpDense</name></member>
      <member refid="class_raven_1_1_t_basic_sparse_set_1ae2fe668905d0a1252144477b8ab4e511" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>clear</name></member>
      <member refid="class_raven_1_1_t_basic_dense_storage_1ab5d11b83056cef3101f305b0a8bb160d" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>const_iterator</name></member>
      <member refid="class_raven_1_1_t_basic_sparse_set_1ac2887cce18b8cd66dbbdef76825325d3" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>contains</name></member>
      <member refid="class_raven_1_1_t_basic_dense_storage_1a164f0cdbd99c93a69c920d05afdc8033" prot="protected" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>ElemAt</name></member>
      <member refid="class_raven_1_1_t_basic_dense_storage_1aa805e6254d197a13e51d9abd5b26bae0" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>emplace</name></member>
      <member refid="class_raven_1_1_t_basic_sparse_set_1a73ce8b4b5deb91248ec9ff9b8774dac5" prot="public" virt="non-virtual" ambiguityscope="TBasicSparseSet&lt; std::uint32_t, std::allocator_traits&lt; std::allocator&lt; ValueT &gt; &gt;::template rebind_alloc&lt; std::uint32_t &gt; &gt;::"><scope>Raven::TBasicDenseStorage</scope><name>emplace</name></member>
      <member refid="class_raven_1_1_t_basic_dense_storage_1a2b43df5aaa93d3aab653720fb184acaa" prot="private" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>EmplaceElem</name></member>
      <member refid="class_raven_1_1_t_basic_sparse_set_1ad7f55a852ce22aeb8f303b37e88e6e12" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>empty</name></member>
      <member refid="class_raven_1_1_t_basic_dense_storage_1a50dcd1cb0134dc10aa649a91fb54aed1" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>end</name></member>
      <member refid="class_raven_1_1_t_basic_dense_storage_1afa490f12a5565bc564aa9e3ce6517427" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>EntityT</name></member>
      <member refid="class_raven_1_1_t_basic_dense_storage_1a65a68f06224b89a5bf20f7fab9912548" prot="private" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>EntT</name></member>
      <member refid="class_raven_1_1_t_basic_sparse_set_1a6ed693b44355ea15446cd5b332059cf1" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>erase</name></member>
      <member refid="class_raven_1_1_t_basic_sparse_set_1a4665ff59693f3f58ec4bd4adc235a2be" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>EReleasePolicy</name></member>
      <member refid="class_raven_1_1_t_basic_sparse_set_1ac124ad426a188301fe2eaaadef2cc3ee" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>find</name></member>
      <member refid="class_raven_1_1_t_basic_sparse_set_1aa825858dbaad5139701da8bc0a45cfb0" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>Generation</name></member>
      <member refid="class_raven_1_1_t_basic_sparse_set_1ae1a3af57a3d86c70ae15647bfc359651" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>GenerationT</name></member>
      <member refid="class_raven_1_1_t_basic_dense_storage_1a2da3692f2b00e9233b331b89758f6850" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>get</name></member>
      <member refid="class_raven_1_1_t_basic_dense_storage_1a24adfce2f41bdd969de6028096948e7d" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>get</name></member>
      <member refid="class_raven_1_1_t_basic_sparse_set_1abb58822df038e51435faf4e2253027fb" prot="public" virt="non-virtual" ambiguityscope="TBasicSparseSet&lt; std::uint32_t, std::allocator_traits&lt; std::allocator&lt; ValueT &gt; &gt;::template rebind_alloc&lt; std::uint32_t &gt; &gt;::"><scope>Raven::TBasicDenseStorage</scope><name>get</name></member>
      <member refid="class_raven_1_1_t_basic_sparse_set_1adcdf8fce293cbbb710009a45ab842247" prot="public" virt="non-virtual" ambiguityscope="TBasicSparseSet&lt; std::uint32_t, std::allocator_traits&lt; std::allocator&lt; ValueT &gt; &gt;::template rebind_alloc&lt; std::uint32_t &gt; &gt;::"><scope>Raven::TBasicDenseStorage</scope><name>get</name></member>
      <member refid="class_raven_1_1_t_basic_dense_storage_1a8bec64bfb43b5918f1bcf0d20621fa1f" prot="private" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>GetElement</name></member>
      <member refid="class_raven_1_1_t_basic_sparse_set_1a4786a6e6aeba6bf56123e9fc2245b172" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>index</name></member>
      <member refid="class_raven_1_1_t_basic_dense_storage_1a62975b48e2a547935ca4e8db0314dd26" prot="protected" virt="virtual"><scope>Raven::TBasicDenseStorage</scope><name>InPlacePop</name></member>
      <member refid="class_raven_1_1_t_basic_dense_storage_1ab60dc49c31b0ee3d445a7d1b7578f926" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>iterator</name></member>
      <member refid="class_raven_1_1_t_basic_dense_storage_1a1c1ddfa5f34237277850732434d9c1b7" prot="private" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>IteratorT</name></member>
      <member refid="class_raven_1_1_t_basic_dense_storage_1a028de45a7283e915a4fff4759a198984" prot="private" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>m_dense</name></member>
      <member refid="class_raven_1_1_t_basic_sparse_set_1aaa99171d81573e687b37c4e219ccdfe1" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>Null</name></member>
      <member refid="class_raven_1_1_t_basic_sparse_set_1adce84c6bf47dd5b1cd7e3533376b6b58" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>operator[]</name></member>
      <member refid="class_raven_1_1_t_basic_dense_storage_1a3cbb91af5e58aab9f2a36ad2c1ba66be" prot="private" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>PagePos</name></member>
      <member refid="class_raven_1_1_t_basic_sparse_set_1a681e687b37abc7f3c085448e44ecbd8a" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>remove</name></member>
      <member refid="class_raven_1_1_t_basic_dense_storage_1aa81361866e0a1f120039c7ac0df281f5" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>reserve</name></member>
      <member refid="class_raven_1_1_t_basic_sparse_set_1a5f43f086a2466527b4cfddaa9ad92729" prot="public" virt="non-virtual" ambiguityscope="TBasicSparseSet&lt; std::uint32_t, std::allocator_traits&lt; std::allocator&lt; ValueT &gt; &gt;::template rebind_alloc&lt; std::uint32_t &gt; &gt;::"><scope>Raven::TBasicDenseStorage</scope><name>reserve</name></member>
      <member refid="class_raven_1_1_t_basic_dense_storage_1a89444890352328adaa214d2a5d3dbcfa" prot="protected" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>shrink_to_size</name></member>
      <member refid="class_raven_1_1_t_basic_sparse_set_1a101b77c56eec3fb02803babfaeb194e6" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>size</name></member>
      <member refid="class_raven_1_1_t_basic_dense_storage_1a43edc1c7f44357ecf3f65015c126b79c" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>size_type</name></member>
      <member refid="class_raven_1_1_t_basic_dense_storage_1a230eeebf935b1fa4803c0a69a492801c" prot="private" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>SizeT</name></member>
      <member refid="class_raven_1_1_t_basic_dense_storage_1a536974d5cc134b0e52212be1ad5472f5" prot="private" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>StorageT</name></member>
      <member refid="class_raven_1_1_t_basic_dense_storage_1a546e42855746b143a848a96730761805" prot="protected" virt="virtual"><scope>Raven::TBasicDenseStorage</scope><name>SwapAndPop</name></member>
      <member refid="class_raven_1_1_t_basic_dense_storage_1a2dd8a1dd214c3e194b13ab2310ba3ce7" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>TBasicDenseStorage</name></member>
      <member refid="class_raven_1_1_t_basic_sparse_set_1a828b85db78e34ea9c5a626a550e0ab95" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>TBasicSparseSet</name></member>
      <member refid="class_raven_1_1_t_basic_sparse_set_1a9ac4f0b78654f6346d2a4843ecf1706e" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>Tombstone</name></member>
      <member refid="class_raven_1_1_t_basic_dense_storage_1a783dc7548f5c1440a2ab39f4b825fbf8" prot="private" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>TraitsT</name></member>
      <member refid="class_raven_1_1_t_basic_dense_storage_1ae6b8e13e80c09999499b5d1809f20101" prot="protected" virt="virtual"><scope>Raven::TBasicDenseStorage</scope><name>try_emplace</name></member>
      <member refid="class_raven_1_1_t_basic_sparse_set_1af537c9dc125e4b1372a6949298f4e4b5" prot="protected" virt="virtual" ambiguityscope="TBasicSparseSet&lt; std::uint32_t, std::allocator_traits&lt; std::allocator&lt; ValueT &gt; &gt;::template rebind_alloc&lt; std::uint32_t &gt; &gt;::"><scope>Raven::TBasicDenseStorage</scope><name>try_emplace</name></member>
      <member refid="class_raven_1_1_t_basic_dense_storage_1aee76623807bcebe771d8c10b338b3016" prot="public" virt="non-virtual"><scope>Raven::TBasicDenseStorage</scope><name>value_type</name></member>
      <member refid="class_raven_1_1_t_basic_dense_storage_1a3a751ab2e2b665b44d3b2d55819f8c55" prot="public" virt="virtual"><scope>Raven::TBasicDenseStorage</scope><name>~TBasicDenseStorage</name></member>
      <member refid="class_raven_1_1_t_basic_sparse_set_1a5659949c0f5786b96440a41a5531027b" prot="public" virt="virtual"><scope>Raven::TBasicDenseStorage</scope><name>~TBasicSparseSet</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

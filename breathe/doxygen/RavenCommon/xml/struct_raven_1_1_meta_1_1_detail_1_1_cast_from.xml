<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from" kind="struct" language="C++" prot="public">
    <compoundname>Raven::Meta::Detail::CastFrom</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_1acb10fa7abb636abfbb9380b7bb18286a" prot="public" static="no">
        <type>T</type>
        <definition>using Raven::Meta::Detail::CastFrom&lt; T &gt;::SrcType =  T</definition>
        <argsstring></argsstring>
        <name>SrcType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="212" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="212" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_1a6c1dba7432020507139f713ea38fa802" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, bool &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="214" column="28" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="214" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_1a15fbe326c37bf485a9322ae52e4b7880" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, char &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>char &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="215" column="28" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="215" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_1a1ab13175f7d7607d8388ba92cfcccfe9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int8_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int8_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="216" column="28" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="216" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_1afda3ca3f8aa111eec1a349c7d3ddb653" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint8_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint8_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="219" column="28" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="219" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_1a82c14dca021be185449540c9a50f1edc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int16_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int16_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="222" column="28" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="222" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_1ad3ee9a86b526df3835f75fb05f3b2e4a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint16_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint16_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="225" column="28" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="225" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_1ac63992115657abd9c9f9efff148e9c36" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int32_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int32_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="228" column="28" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="228" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_1a73fa8a4f58a50ea535ae3d6c7990bd72" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint32_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint32_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="231" column="28" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="231" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_1abd1c40acf25f27ff92d3b09d5ba65413" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int64_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int64_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="234" column="28" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="234" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_1a355e5a4f4b28e17da5a056d9d4dd102f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint64_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint64_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="237" column="28" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="237" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_1af8ef47d61dff5d01eebe006511b2066e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, float &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="240" column="28" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="240" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_1ae2951108b784d41295bc83a3c789562a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, double &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="241" column="28" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="241" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_1a7a7da8d1877c254f3fe604767ea53f7c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::string &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="242" column="28" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="242" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_1aeea2d082e03e031b2819319d86dcc042" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::Detail::CastFrom&lt; T &gt;::ToEnum</definition>
        <argsstring>(const SrcType &amp;from, Argument &amp;to)</argsstring>
        <name>ToEnum</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="class_raven_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="245" column="28" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="245" bodyend="247"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" line="211" column="16" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/TypeCasting.hpp" bodystart="211" bodyend="248"/>
    <listofallmembers>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_1acb10fa7abb636abfbb9380b7bb18286a" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom</scope><name>SrcType</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_1a6c1dba7432020507139f713ea38fa802" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_1a15fbe326c37bf485a9322ae52e4b7880" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_1a1ab13175f7d7607d8388ba92cfcccfe9" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_1afda3ca3f8aa111eec1a349c7d3ddb653" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_1a82c14dca021be185449540c9a50f1edc" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_1ad3ee9a86b526df3835f75fb05f3b2e4a" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_1ac63992115657abd9c9f9efff148e9c36" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_1a73fa8a4f58a50ea535ae3d6c7990bd72" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_1abd1c40acf25f27ff92d3b09d5ba65413" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_1a355e5a4f4b28e17da5a056d9d4dd102f" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_1af8ef47d61dff5d01eebe006511b2066e" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_1ae2951108b784d41295bc83a3c789562a" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_1a7a7da8d1877c254f3fe604767ea53f7c" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_raven_1_1_meta_1_1_detail_1_1_cast_from_1aeea2d082e03e031b2819319d86dcc042" prot="public" virt="non-virtual"><scope>Raven::Meta::Detail::CastFrom</scope><name>ToEnum</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

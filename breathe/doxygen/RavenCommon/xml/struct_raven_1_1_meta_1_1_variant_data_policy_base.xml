<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_raven_1_1_meta_1_1_variant_data_policy_base" kind="struct" language="C++" prot="public">
    <compoundname>Raven::Meta::VariantDataPolicyBase</compoundname>
    <derivedcompoundref refid="struct_raven_1_1_meta_1_1_variant_policy_big" prot="public" virt="non-virtual">Raven::Meta::VariantPolicyBig&lt; std::string, Detail::DefaultCaster&lt; std::string &gt; &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename DerrivedType</type>
      </param>
      <param>
        <type>typename CasterT</type>
        <defval><ref refid="struct_raven_1_1_meta_1_1_detail_1_1_empty_caster" kindref="compound">Detail::EmptyCaster</ref>&lt;T&gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_raven_1_1_meta_1_1_variant_data_policy_base_1a796262ea365039bf52fd686097e6242a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Meta::VariantDataPolicyBase&lt; T, DerrivedType, CasterT &gt;::Invoke</definition>
        <argsstring>(EVariantPolicyOP eOp, const VariantData &amp;data, ArgumentWrapper argumentWrapper)</argsstring>
        <name>Invoke</name>
        <param>
          <type>EVariantPolicyOP</type>
          <declname>eOp</declname>
        </param>
        <param>
          <type>const VariantData &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="struct_raven_1_1_meta_1_1_argument_wrapper" kindref="compound">ArgumentWrapper</ref></type>
          <declname>argumentWrapper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/VariantPolicy.hpp" line="137" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/VariantPolicy.hpp" bodystart="137" bodyend="205"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Raven::Meta::VariantDataPolicyBase&lt; T, DerrivedType, CasterT &gt;</label>
        <link refid="struct_raven_1_1_meta_1_1_variant_data_policy_base"/>
      </node>
      <node id="3">
        <label>Raven::Meta::VariantPolicyString</label>
        <link refid="struct_raven_1_1_meta_1_1_variant_policy_string"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Raven::Meta::VariantPolicyBig&lt; std::string, Detail::DefaultCaster&lt; std::string &gt; &gt;</label>
        <link refid="struct_raven_1_1_meta_1_1_variant_policy_big"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/VariantPolicy.hpp" line="135" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/VariantPolicy.hpp" bodystart="136" bodyend="206"/>
    <listofallmembers>
      <member refid="struct_raven_1_1_meta_1_1_variant_data_policy_base_1a796262ea365039bf52fd686097e6242a" prot="public" virt="non-virtual"><scope>Raven::Meta::VariantDataPolicyBase</scope><name>Invoke</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

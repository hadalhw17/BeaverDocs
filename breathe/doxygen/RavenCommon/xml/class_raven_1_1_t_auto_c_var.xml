<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_raven_1_1_t_auto_c_var" kind="class" language="C++" prot="public">
    <compoundname>Raven::TAutoCVar</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_raven_1_1_t_auto_c_var_1aa7146683a7d1eef98fd3f0f860604a76" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t Raven::TAutoCVar&lt; T &gt;::m_index</definition>
        <argsstring></argsstring>
        <name>m_index</name>
        <initializer>= ~0u</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/CVar.hpp" line="38" column="10" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/CVar.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_raven_1_1_t_auto_c_var_1a3f969647c7cda1c9cab9a15b72fa2a78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Raven::TAutoCVar&lt; T &gt;::TAutoCVar</definition>
        <argsstring>()=default</argsstring>
        <name>TAutoCVar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/CVar.hpp" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_t_auto_c_var_1a2bb4ab94e3e14a108035e48d51500e3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Raven::TAutoCVar&lt; T &gt;::TAutoCVar</definition>
        <argsstring>(std::string_view name, std::string_view description, T defaultValue, ECVarFlags eFlags=ECVarFlags::None)</argsstring>
        <name>TAutoCVar</name>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>description</declname>
        </param>
        <param>
          <type>T</type>
          <declname>defaultValue</declname>
        </param>
        <param>
          <type>ECVarFlags</type>
          <declname>eFlags</declname>
          <defval>ECVarFlags::None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/CVar.hpp" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_t_auto_c_var_1a31725e4ab5fc9c7200db79652d6f1c4c" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>T</type>
        <definition>T Raven::TAutoCVar&lt; T &gt;::GetValue</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/CVar.hpp" line="35" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_t_auto_c_var_1a997729a6b7f51bb308bcc2bffb7d8c78" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::TAutoCVar&lt; T &gt;::SetValue</definition>
        <argsstring>(const T &amp;val) const noexcept</argsstring>
        <name>SetValue</name>
        <param>
          <type>const T &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/CVar.hpp" line="36" column="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/CVar.hpp" line="29" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/CVar.hpp" bodystart="30" bodyend="39"/>
    <listofallmembers>
      <member refid="class_raven_1_1_t_auto_c_var_1a31725e4ab5fc9c7200db79652d6f1c4c" prot="public" virt="non-virtual"><scope>Raven::TAutoCVar</scope><name>GetValue</name></member>
      <member refid="class_raven_1_1_t_auto_c_var_1aa7146683a7d1eef98fd3f0f860604a76" prot="private" virt="non-virtual"><scope>Raven::TAutoCVar</scope><name>m_index</name></member>
      <member refid="class_raven_1_1_t_auto_c_var_1a997729a6b7f51bb308bcc2bffb7d8c78" prot="public" virt="non-virtual"><scope>Raven::TAutoCVar</scope><name>SetValue</name></member>
      <member refid="class_raven_1_1_t_auto_c_var_1a3f969647c7cda1c9cab9a15b72fa2a78" prot="public" virt="non-virtual"><scope>Raven::TAutoCVar</scope><name>TAutoCVar</name></member>
      <member refid="class_raven_1_1_t_auto_c_var_1a2bb4ab94e3e14a108035e48d51500e3a" prot="public" virt="non-virtual"><scope>Raven::TAutoCVar</scope><name>TAutoCVar</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

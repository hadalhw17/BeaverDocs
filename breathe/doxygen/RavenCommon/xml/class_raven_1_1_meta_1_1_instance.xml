<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_raven_1_1_meta_1_1_instance" kind="class" language="C++" prot="public">
    <compoundname>Raven::Meta::Instance</compoundname>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_raven_1_1_meta_1_1_instance_1a386f5a9cf65610cb62143865e5637272" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Property</definition>
        <argsstring></argsstring>
        <name>Property</name>
        <param>
          <type><ref refid="class_raven_1_1_meta_1_1_property" kindref="compound">Property</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" line="14" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_raven_1_1_meta_1_1_instance_1afdb0ec8044193350e3b30d7f83881310" prot="private" static="no" mutable="no">
        <type><ref refid="class_raven_1_1_meta_1_1_type" kindref="compound">Type</ref></type>
        <definition>Type Raven::Meta::Instance::m_type</definition>
        <argsstring></argsstring>
        <name>m_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" line="103" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_meta_1_1_instance_1a2b0c726870d7ac1ed2b65b62b1a1c628" prot="private" static="no" mutable="no">
        <type>ptr_t</type>
        <definition>ptr_t Raven::Meta::Instance::m_dataPtr</definition>
        <argsstring></argsstring>
        <name>m_dataPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" line="104" column="7" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_instance_1afd89beeecd79f3d083bc1793b3bc03c7" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Raven::Meta::Instance::Instance</definition>
        <argsstring>() noexcept</argsstring>
        <name>Instance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" line="16" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" bodystart="16" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_instance_1a00acdd2fac7662152480959f88535522" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Raven::Meta::Instance::Instance</definition>
        <argsstring>(const Type &amp;t, ptr_t ptr) noexcept</argsstring>
        <name>Instance</name>
        <param>
          <type>const <ref refid="class_raven_1_1_meta_1_1_type" kindref="compound">Type</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>ptr_t</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" line="21" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" bodystart="21" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_instance_1a7c19a4f78e34f48f343be9d3543c53a2" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Raven::Meta::Instance::Instance</definition>
        <argsstring>(T &amp;obj) noexcept requires Instanceable&lt; T &gt;</argsstring>
        <name>Instance</name>
        <param>
          <type>T &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" line="27" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" bodystart="27" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_instance_1ade7f7012c0c01d69ade2bb279f9daf84" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Raven::Meta::Instance::Instance</definition>
        <argsstring>(const Instance &amp;obj) noexcept</argsstring>
        <name>Instance</name>
        <param>
          <type>const <ref refid="class_raven_1_1_meta_1_1_instance" kindref="compound">Instance</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" line="34" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" bodystart="34" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_instance_1af51414865e9f31b7965733b821a9a160" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Raven::Meta::Instance::Instance</definition>
        <argsstring>(Instance &amp;&amp;obj) noexcept</argsstring>
        <name>Instance</name>
        <param>
          <type><ref refid="class_raven_1_1_meta_1_1_instance" kindref="compound">Instance</ref> &amp;&amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" line="39" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" bodystart="39" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_instance_1a8a3b9591ab42afc07f016649fadd6f20" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Raven::Meta::Instance::Instance</definition>
        <argsstring>(const Variant &amp;var) noexcept</argsstring>
        <name>Instance</name>
        <param>
          <type>const <ref refid="class_raven_1_1_meta_1_1_variant" kindref="compound">Variant</ref> &amp;</type>
          <declname>var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" line="45" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" bodystart="45" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_instance_1a818bd71040935c31956c33e6600ae721" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_meta_1_1_instance" kindref="compound">Instance</ref> &amp;</type>
        <definition>Instance&amp; Raven::Meta::Instance::operator=</definition>
        <argsstring>(const Instance &amp;rhs) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_raven_1_1_meta_1_1_instance" kindref="compound">Instance</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" line="51" column="10" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" bodystart="51" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_instance_1a604d6214b91a0fc6a002357d685843a6" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_meta_1_1_instance" kindref="compound">Instance</ref> &amp;</type>
        <definition>Instance&amp; Raven::Meta::Instance::operator=</definition>
        <argsstring>(Instance &amp;&amp;rhs) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_raven_1_1_meta_1_1_instance" kindref="compound">Instance</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" line="59" column="10" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" bodystart="59" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_instance_1a04ae415f3bf7b830b51e8664940a5498" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Raven::Meta::Instance::Get</definition>
        <argsstring>(T &amp;dst)</argsstring>
        <name>Get</name>
        <param>
          <type>T &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" line="71" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" bodystart="71" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_instance_1aac12a9a91ba86bd243e469071bfd2eb6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Raven::Meta::Instance::Set</definition>
        <argsstring>(T &amp;val)</argsstring>
        <name>Set</name>
        <param>
          <type>T &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" line="79" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" bodystart="79" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_instance_1a8731a9f98318c2f52d6fb76e05c73c8b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ptr_t</type>
        <definition>ptr_t Raven::Meta::Instance::GetPtr</definition>
        <argsstring>() const</argsstring>
        <name>GetPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" line="89" column="15" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_instance_1abef4ef478526a6123764dfb78141ca67" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_meta_1_1_type" kindref="compound">Type</ref></type>
        <definition>Type Raven::Meta::Instance::GetType</definition>
        <argsstring>() const</argsstring>
        <name>GetType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" line="90" column="14" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_instance_1ab2aa4bef7294ae208799da8418a4d735" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::Meta::Instance::IsValid</definition>
        <argsstring>() const</argsstring>
        <name>IsValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" line="91" column="14" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_meta_1_1_instance_1ab80bbba269f1dc9d369f8946948db270" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* Raven::Meta::Instance::TryGet</definition>
        <argsstring>()</argsstring>
        <name>TryGet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" line="94" column="4" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" bodystart="94" bodyend="100"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" line="12" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenCommon/Meta/Instance.hpp" bodystart="13" bodyend="105"/>
    <listofallmembers>
      <member refid="class_raven_1_1_meta_1_1_instance_1a04ae415f3bf7b830b51e8664940a5498" prot="public" virt="non-virtual"><scope>Raven::Meta::Instance</scope><name>Get</name></member>
      <member refid="class_raven_1_1_meta_1_1_instance_1a8731a9f98318c2f52d6fb76e05c73c8b" prot="public" virt="non-virtual"><scope>Raven::Meta::Instance</scope><name>GetPtr</name></member>
      <member refid="class_raven_1_1_meta_1_1_instance_1abef4ef478526a6123764dfb78141ca67" prot="public" virt="non-virtual"><scope>Raven::Meta::Instance</scope><name>GetType</name></member>
      <member refid="class_raven_1_1_meta_1_1_instance_1afd89beeecd79f3d083bc1793b3bc03c7" prot="public" virt="non-virtual"><scope>Raven::Meta::Instance</scope><name>Instance</name></member>
      <member refid="class_raven_1_1_meta_1_1_instance_1a00acdd2fac7662152480959f88535522" prot="public" virt="non-virtual"><scope>Raven::Meta::Instance</scope><name>Instance</name></member>
      <member refid="class_raven_1_1_meta_1_1_instance_1a7c19a4f78e34f48f343be9d3543c53a2" prot="public" virt="non-virtual"><scope>Raven::Meta::Instance</scope><name>Instance</name></member>
      <member refid="class_raven_1_1_meta_1_1_instance_1ade7f7012c0c01d69ade2bb279f9daf84" prot="public" virt="non-virtual"><scope>Raven::Meta::Instance</scope><name>Instance</name></member>
      <member refid="class_raven_1_1_meta_1_1_instance_1af51414865e9f31b7965733b821a9a160" prot="public" virt="non-virtual"><scope>Raven::Meta::Instance</scope><name>Instance</name></member>
      <member refid="class_raven_1_1_meta_1_1_instance_1a8a3b9591ab42afc07f016649fadd6f20" prot="public" virt="non-virtual"><scope>Raven::Meta::Instance</scope><name>Instance</name></member>
      <member refid="class_raven_1_1_meta_1_1_instance_1ab2aa4bef7294ae208799da8418a4d735" prot="public" virt="non-virtual"><scope>Raven::Meta::Instance</scope><name>IsValid</name></member>
      <member refid="class_raven_1_1_meta_1_1_instance_1a2b0c726870d7ac1ed2b65b62b1a1c628" prot="private" virt="non-virtual"><scope>Raven::Meta::Instance</scope><name>m_dataPtr</name></member>
      <member refid="class_raven_1_1_meta_1_1_instance_1afdb0ec8044193350e3b30d7f83881310" prot="private" virt="non-virtual"><scope>Raven::Meta::Instance</scope><name>m_type</name></member>
      <member refid="class_raven_1_1_meta_1_1_instance_1a818bd71040935c31956c33e6600ae721" prot="public" virt="non-virtual"><scope>Raven::Meta::Instance</scope><name>operator=</name></member>
      <member refid="class_raven_1_1_meta_1_1_instance_1a604d6214b91a0fc6a002357d685843a6" prot="public" virt="non-virtual"><scope>Raven::Meta::Instance</scope><name>operator=</name></member>
      <member refid="class_raven_1_1_meta_1_1_instance_1a386f5a9cf65610cb62143865e5637272" prot="private" virt="non-virtual"><scope>Raven::Meta::Instance</scope><name>Property</name></member>
      <member refid="class_raven_1_1_meta_1_1_instance_1aac12a9a91ba86bd243e469071bfd2eb6" prot="public" virt="non-virtual"><scope>Raven::Meta::Instance</scope><name>Set</name></member>
      <member refid="class_raven_1_1_meta_1_1_instance_1ab80bbba269f1dc9d369f8946948db270" prot="public" virt="non-virtual"><scope>Raven::Meta::Instance</scope><name>TryGet</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

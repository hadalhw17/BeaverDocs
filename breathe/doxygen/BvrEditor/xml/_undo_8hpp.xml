<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_undo_8hpp" kind="file" language="C++">
    <compoundname>Undo.hpp</compoundname>
    <includes local="no">Meta/Meta.hpp</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/Editor/Private/Undo.hpp</label>
        <link refid="_undo_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Meta/Meta.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_bvr_1_1_c_undo" prot="public">Bvr::CUndo</innerclass>
    <innernamespace refid="namespace_bvr">Bvr</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>&lt;Meta/Meta.hpp&gt;;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Bvr<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IUndoTransaction;</highlight></codeline>
<codeline lineno="7" refid="class_bvr_1_1_c_undo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_bvr_1_1_c_undo" kindref="compound">CUndo</ref><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bvr_1_1_c_undo" kindref="compound">CUndo</ref>();</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_bvr_1_1_c_undo" kindref="compound">~CUndo</ref>();</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Track(T&amp;<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)<sp/>{<sp/>AddObject(std::ref(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">));<sp/>}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Track(T*<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)<sp/>{<sp/>Track(*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AbortOperation();</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddObject(Meta::Variant<sp/>var);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;IUndoTransaction&gt;<sp/>m_transaction;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Bvr</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/Editor/Private/Undo.hpp"/>
  </compounddef>
</doxygen>

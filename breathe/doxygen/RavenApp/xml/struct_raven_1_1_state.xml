<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_raven_1_1_state" kind="struct" language="C++" prot="public">
    <compoundname>Raven::State</compoundname>
    <innerclass refid="struct_raven_1_1_state_1_1_operation" prot="public">Raven::State::Operation</innerclass>
    <innerclass refid="struct_raven_1_1_state_1_1_transition" prot="public">Raven::State::Transition</innerclass>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_raven_1_1_state_1ab549651137d9aa68bfaeae40027874fc" prot="public" static="no">
        <type>T</type>
        <definition>using Raven::State&lt; T &gt;::Type =  T</definition>
        <argsstring></argsstring>
        <name>Type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" line="22" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_raven_1_1_state_1a9e19a35f611ee2734f6087e63746d88e" prot="public" static="no" mutable="no">
        <type><ref refid="struct_raven_1_1_state_1_1_transition" kindref="compound">Transition</ref></type>
        <definition>Transition Raven::State&lt; T &gt;::m_transition</definition>
        <argsstring></argsstring>
        <name>m_transition</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" line="223" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_raven_1_1_state_1ad6a9559d94b991085ee420d314345dc4" prot="public" static="no" mutable="no">
        <type><ref refid="struct_raven_1_1_state_1_1_operation" kindref="compound">Operation</ref></type>
        <definition>Operation Raven::State&lt; T &gt;::m_operation</definition>
        <argsstring></argsstring>
        <name>m_operation</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" line="224" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_raven_1_1_state_1a3670ee40918bc9799048f123328c59bc" prot="public" static="no" mutable="no">
        <type>std::vector&lt; T &gt;</type>
        <definition>std::vector&lt;T&gt; Raven::State&lt; T &gt;::m_stack</definition>
        <argsstring></argsstring>
        <name>m_stack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" line="225" column="17" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_raven_1_1_state_1a17b30cd24cdfd77a8bf1de0ef0893e30" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Raven::State&lt; T &gt;::m_shouldExit</definition>
        <argsstring></argsstring>
        <name>m_shouldExit</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" line="226" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_raven_1_1_state_1a9637d3ab9ece7ff62b3221af9389ffb2" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Raven::State&lt; T &gt;::m_prepareToExit</definition>
        <argsstring></argsstring>
        <name>m_prepareToExit</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" line="227" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" bodystart="227" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_raven_1_1_state_1a6b0db0e18a9543f6f883dffac3eb232b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr Raven::State&lt; T &gt;::State</definition>
        <argsstring>(const T defaultState={}) noexcept</argsstring>
        <name>State</name>
        <param>
          <type>const T</type>
          <declname>defaultState</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" line="87" column="15" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" bodystart="87" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_state_1a901ae666d6a48b1dcc1779b685f9cf1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Raven::State&lt; T &gt;::~State</definition>
        <argsstring>()=default</argsstring>
        <name>~State</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" line="90" column="5"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_state_1a5eaed3556bb8e0c5e5e6d41edc81eb31" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T Raven::State&lt; T &gt;::CurrentState</definition>
        <argsstring>() const</argsstring>
        <name>CurrentState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" line="92" column="8" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_state_1a46ad96cd8afeb6d004434a5dfb1a8dd8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::State&lt; T &gt;::IsState</definition>
        <argsstring>(const T state) const</argsstring>
        <name>IsState</name>
        <param>
          <type>const T</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" line="96" column="11" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" bodystart="96" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_state_1aaaaf4707999ba42451a700de57fc98c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::State&lt; T &gt;::Set</definition>
        <argsstring>(const T state)</argsstring>
        <name>Set</name>
        <param>
          <type>const T</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" line="100" column="10" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" bodystart="100" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_state_1aebc2148051edac829bbf052922620564" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::State&lt; T &gt;::Push</definition>
        <argsstring>(const T state)</argsstring>
        <name>Push</name>
        <param>
          <type>const T</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" line="106" column="10" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_state_1a8d196a0a271d29eaf89f38015807ff13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::State&lt; T &gt;::Pop</definition>
        <argsstring>()</argsstring>
        <name>Pop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" line="108" column="10" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" bodystart="108" bodyend="112"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_raven_1_1_state_1af20c60a17ca2b8f75d5955df5ead424c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_condition_desc" kindref="compound">ConditionDesc</ref></type>
        <definition>static ConditionDesc Raven::State&lt; T &gt;::OnEnter</definition>
        <argsstring>(const T eState)</argsstring>
        <name>OnEnter</name>
        <param>
          <type>const T</type>
          <declname>eState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" line="114" column="26" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" bodystart="114" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_state_1a27272e5721dfb2cba5951d211cfbeb0e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_condition_desc" kindref="compound">ConditionDesc</ref></type>
        <definition>static ConditionDesc Raven::State&lt; T &gt;::OnExit</definition>
        <argsstring>(const T eState)</argsstring>
        <name>OnExit</name>
        <param>
          <type>const T</type>
          <declname>eState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" line="123" column="26" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" bodystart="123" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_state_1a563dba110e7c1575c590d8a8695dc253" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_condition_desc" kindref="compound">ConditionDesc</ref></type>
        <definition>static ConditionDesc Raven::State&lt; T &gt;::OnUpdate</definition>
        <argsstring>(const T eState)</argsstring>
        <name>OnUpdate</name>
        <param>
          <type>const T</type>
          <declname>eState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" line="132" column="26" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" bodystart="132" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_state_1a9790e0873ed0a05ca9768e6a8168c93f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_condition_desc" kindref="compound">ConditionDesc</ref></type>
        <definition>static ConditionDesc Raven::State&lt; T &gt;::OnPause</definition>
        <argsstring>(const T eState)</argsstring>
        <name>OnPause</name>
        <param>
          <type>const T</type>
          <declname>eState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" line="141" column="26" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" bodystart="141" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_state_1a7f293fe82b07cc7d7564440536663f95" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_condition_desc" kindref="compound">ConditionDesc</ref></type>
        <definition>static ConditionDesc Raven::State&lt; T &gt;::OnResume</definition>
        <argsstring>(const T eState)</argsstring>
        <name>OnResume</name>
        <param>
          <type>const T</type>
          <declname>eState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" line="150" column="26" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" bodystart="150" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_state_1af39e8843a77406acd8a932f69b63dfc7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_system_desc" kindref="compound">SystemDesc</ref></type>
        <definition>static SystemDesc Raven::State&lt; T &gt;::MachineSystem</definition>
        <argsstring>()</argsstring>
        <name>MachineSystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" line="159" column="23" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_state_1aeedde193efab8844be924bd896300ea8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>EShouldRun</type>
        <definition>static EShouldRun Raven::State&lt; T &gt;::Machine</definition>
        <argsstring>(State &amp;self)</argsstring>
        <name>Machine</name>
        <param>
          <type><ref refid="struct_raven_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" line="163" column="23" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" bodystart="163" bodyend="221"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="struct_raven_1_1_state_1a4ecbb0aa59be55fd0599282b478f806d" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>EStateTransition</type>
            <declname>eState</declname>
            <defname>eState</defname>
          </param>
          <param>
            <type>typename TFn</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_raven_1_1_condition_desc" kindref="compound">ConditionDesc</ref></type>
        <definition>static ConditionDesc Raven::State&lt; T &gt;::OnTransition</definition>
        <argsstring>(const TFn &amp;fn)</argsstring>
        <name>OnTransition</name>
        <param>
          <type>const TFn &amp;</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" line="231" column="26" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" bodystart="231" bodyend="242"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>Raven::State&lt; T &gt;</label>
        <link refid="struct_raven_1_1_state"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_operation</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_transition</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Raven::State&lt; T &gt;::Operation</label>
        <link refid="struct_raven_1_1_state_1_1_operation"/>
      </node>
      <node id="3">
        <label>Raven::State&lt; T &gt;::Transition</label>
        <link refid="struct_raven_1_1_state_1_1_transition"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" line="21" column="12" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" bodystart="21" bodyend="243"/>
    <listofallmembers>
      <member refid="struct_raven_1_1_state_1a5eaed3556bb8e0c5e5e6d41edc81eb31" prot="public" virt="non-virtual"><scope>Raven::State</scope><name>CurrentState</name></member>
      <member refid="struct_raven_1_1_state_1a46ad96cd8afeb6d004434a5dfb1a8dd8" prot="public" virt="non-virtual"><scope>Raven::State</scope><name>IsState</name></member>
      <member refid="struct_raven_1_1_state_1ad6a9559d94b991085ee420d314345dc4" prot="public" virt="non-virtual"><scope>Raven::State</scope><name>m_operation</name></member>
      <member refid="struct_raven_1_1_state_1a9637d3ab9ece7ff62b3221af9389ffb2" prot="public" virt="non-virtual"><scope>Raven::State</scope><name>m_prepareToExit</name></member>
      <member refid="struct_raven_1_1_state_1a17b30cd24cdfd77a8bf1de0ef0893e30" prot="public" virt="non-virtual"><scope>Raven::State</scope><name>m_shouldExit</name></member>
      <member refid="struct_raven_1_1_state_1a3670ee40918bc9799048f123328c59bc" prot="public" virt="non-virtual"><scope>Raven::State</scope><name>m_stack</name></member>
      <member refid="struct_raven_1_1_state_1a9e19a35f611ee2734f6087e63746d88e" prot="public" virt="non-virtual"><scope>Raven::State</scope><name>m_transition</name></member>
      <member refid="struct_raven_1_1_state_1aeedde193efab8844be924bd896300ea8" prot="public" virt="non-virtual"><scope>Raven::State</scope><name>Machine</name></member>
      <member refid="struct_raven_1_1_state_1af39e8843a77406acd8a932f69b63dfc7" prot="public" virt="non-virtual"><scope>Raven::State</scope><name>MachineSystem</name></member>
      <member refid="struct_raven_1_1_state_1af20c60a17ca2b8f75d5955df5ead424c" prot="public" virt="non-virtual"><scope>Raven::State</scope><name>OnEnter</name></member>
      <member refid="struct_raven_1_1_state_1a27272e5721dfb2cba5951d211cfbeb0e" prot="public" virt="non-virtual"><scope>Raven::State</scope><name>OnExit</name></member>
      <member refid="struct_raven_1_1_state_1a9790e0873ed0a05ca9768e6a8168c93f" prot="public" virt="non-virtual"><scope>Raven::State</scope><name>OnPause</name></member>
      <member refid="struct_raven_1_1_state_1a7f293fe82b07cc7d7564440536663f95" prot="public" virt="non-virtual"><scope>Raven::State</scope><name>OnResume</name></member>
      <member refid="struct_raven_1_1_state_1a4ecbb0aa59be55fd0599282b478f806d" prot="private" virt="non-virtual"><scope>Raven::State</scope><name>OnTransition</name></member>
      <member refid="struct_raven_1_1_state_1a563dba110e7c1575c590d8a8695dc253" prot="public" virt="non-virtual"><scope>Raven::State</scope><name>OnUpdate</name></member>
      <member refid="struct_raven_1_1_state_1a8d196a0a271d29eaf89f38015807ff13" prot="public" virt="non-virtual"><scope>Raven::State</scope><name>Pop</name></member>
      <member refid="struct_raven_1_1_state_1aebc2148051edac829bbf052922620564" prot="public" virt="non-virtual"><scope>Raven::State</scope><name>Push</name></member>
      <member refid="struct_raven_1_1_state_1aaaaf4707999ba42451a700de57fc98c0" prot="public" virt="non-virtual"><scope>Raven::State</scope><name>Set</name></member>
      <member refid="struct_raven_1_1_state_1a6b0db0e18a9543f6f883dffac3eb232b" prot="public" virt="non-virtual"><scope>Raven::State</scope><name>State</name></member>
      <member refid="struct_raven_1_1_state_1ab549651137d9aa68bfaeae40027874fc" prot="public" virt="non-virtual"><scope>Raven::State</scope><name>Type</name></member>
      <member refid="struct_raven_1_1_state_1a901ae666d6a48b1dcc1779b685f9cf1b" prot="public" virt="non-virtual"><scope>Raven::State</scope><name>~State</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

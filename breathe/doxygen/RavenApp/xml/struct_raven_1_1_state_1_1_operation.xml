<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_raven_1_1_state_1_1_operation" kind="struct" language="C++" prot="public">
    <compoundname>Raven::State::Operation</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_raven_1_1_state_1_1_operation_1a302ad72bfa01de0616e7c81a0893c5f2" prot="public" static="no" mutable="no">
        <type>EStateOperation</type>
        <definition>EStateOperation Raven::State&lt; T &gt;::Operation::m_eOp</definition>
        <argsstring></argsstring>
        <name>m_eOp</name>
        <initializer>= EStateOperation::None</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" line="84" column="25" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_raven_1_1_state_1_1_operation_1a7dc078b3e8a74edf8f6aff840156e33c" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T Raven::State&lt; T &gt;::Operation::m_eState</definition>
        <argsstring></argsstring>
        <name>m_eState</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" line="85" column="25" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_raven_1_1_state_1_1_operation_1a1a1ac0dc801bf1bf698609d42da58a80" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>EStateOperation</type>
            <declname>Op</declname>
            <defname>Op</defname>
          </param>
        </templateparamlist>
        <type>constexpr static <ref refid="struct_raven_1_1_state_1_1_operation" kindref="compound">Operation</ref></type>
        <definition>constexpr static Operation Raven::State&lt; T &gt;::Operation::ForOp</definition>
        <argsstring>(const T state) noexcept</argsstring>
        <name>ForOp</name>
        <param>
          <type>const T</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" line="70" column="36" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_state_1_1_operation_1a3b9578214d356530e846cc9ef828ae5e" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr static <ref refid="struct_raven_1_1_state_1_1_operation" kindref="compound">Operation</ref></type>
        <definition>constexpr static Operation Raven::State&lt; T &gt;::Operation::Set</definition>
        <argsstring>(const T state) noexcept</argsstring>
        <name>Set</name>
        <param>
          <type>const T</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" line="74" column="36" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_state_1_1_operation_1a615b962b174bdb2de6bdb1ec44c0f9bc" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr static <ref refid="struct_raven_1_1_state_1_1_operation" kindref="compound">Operation</ref></type>
        <definition>constexpr static Operation Raven::State&lt; T &gt;::Operation::Push</definition>
        <argsstring>(const T state) noexcept</argsstring>
        <name>Push</name>
        <param>
          <type>const T</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" line="77" column="36" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_state_1_1_operation_1a9e00dd14ab3b420d0a19dac3edfa8f0d" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr static <ref refid="struct_raven_1_1_state_1_1_operation" kindref="compound">Operation</ref></type>
        <definition>constexpr static Operation Raven::State&lt; T &gt;::Operation::Pop</definition>
        <argsstring>() noexcept</argsstring>
        <name>Pop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" line="80" column="36" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" bodystart="80" bodyend="82"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" line="68" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/State.hpp" bodystart="68" bodyend="86"/>
    <listofallmembers>
      <member refid="struct_raven_1_1_state_1_1_operation_1a1a1ac0dc801bf1bf698609d42da58a80" prot="public" virt="non-virtual"><scope>Raven::State::Operation</scope><name>ForOp</name></member>
      <member refid="struct_raven_1_1_state_1_1_operation_1a302ad72bfa01de0616e7c81a0893c5f2" prot="public" virt="non-virtual"><scope>Raven::State::Operation</scope><name>m_eOp</name></member>
      <member refid="struct_raven_1_1_state_1_1_operation_1a7dc078b3e8a74edf8f6aff840156e33c" prot="public" virt="non-virtual"><scope>Raven::State::Operation</scope><name>m_eState</name></member>
      <member refid="struct_raven_1_1_state_1_1_operation_1a9e00dd14ab3b420d0a19dac3edfa8f0d" prot="public" virt="non-virtual"><scope>Raven::State::Operation</scope><name>Pop</name></member>
      <member refid="struct_raven_1_1_state_1_1_operation_1a615b962b174bdb2de6bdb1ec44c0f9bc" prot="public" virt="non-virtual"><scope>Raven::State::Operation</scope><name>Push</name></member>
      <member refid="struct_raven_1_1_state_1_1_operation_1a3b9578214d356530e846cc9ef828ae5e" prot="public" virt="non-virtual"><scope>Raven::State::Operation</scope><name>Set</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

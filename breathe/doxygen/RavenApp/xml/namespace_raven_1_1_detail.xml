<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespace_raven_1_1_detail" kind="namespace" language="C++">
    <compoundname>Raven::Detail</compoundname>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_system_arg_traits" prot="public">Raven::Detail::TSystemArgTraits</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_system_arg_traits_3_01_t_01_4" prot="public">Raven::Detail::TSystemArgTraits&lt; T &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_system_arg_traits_3_01std_1_1tuple_3_01_t_8_8_8_01_4_01_4" prot="public">Raven::Detail::TSystemArgTraits&lt; std::tuple&lt; T... &gt; &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_system_arg_traits_3_01std_1_1tuple_3_01_t_8_8_8_01_4_01_6_01_4" prot="public">Raven::Detail::TSystemArgTraits&lt; std::tuple&lt; T... &gt; &amp; &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_system_arg_traits_3_01const_01std_1_1tuple_3_01_t_8_8_8_01_4_01_6_01_4" prot="public">Raven::Detail::TSystemArgTraits&lt; const std::tuple&lt; T... &gt; &amp; &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_checked_helper" prot="public">Raven::Detail::TCheckedHelper</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_checked_helper_3_01std_1_1tuple_3_01_args_8_8_8_01_4_01_4" prot="public">Raven::Detail::TCheckedHelper&lt; std::tuple&lt; Args... &gt; &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_args_helper" prot="public">Raven::Detail::TArgsHelper</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_args_helper_3_01std_1_1tuple_3_01_args_8_8_8_01_4_01_4" prot="public">Raven::Detail::TArgsHelper&lt; std::tuple&lt; Args... &gt; &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_system_traits_t" prot="public">Raven::Detail::SystemTraitsT</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_args_count" prot="public">Raven::Detail::TArgsCount</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_args_count_3_01std_1_1tuple_3_4_01_4" prot="public">Raven::Detail::TArgsCount&lt; std::tuple&lt;&gt; &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_args_count_3_01std_1_1tuple_3_01_ts_8_8_8_01_4_01_4" prot="public">Raven::Detail::TArgsCount&lt; std::tuple&lt; Ts... &gt; &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_args_count_3_01_t_query_3_01_entity_00_01_with_3_01_component_t_8_ecabd5a5faba6d3d8f3e607f3c61074a" prot="public">Raven::Detail::TArgsCount&lt; TQuery&lt; Entity, With&lt; ComponentT... &gt;, WithOut&lt; ExcludeT... &gt; &gt; &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_is_tuple" prot="public">Raven::Detail::IsTuple</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_is_tuple_3_01_t_01_4" prot="public">Raven::Detail::IsTuple&lt; T &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_is_tuple_3_01_head_00_01_tail_8_8_8_01_4" prot="public">Raven::Detail::IsTuple&lt; Head, Tail... &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_is_tuple_3_01std_1_1tuple_3_01_t_8_8_8_01_4_01_4" prot="public">Raven::Detail::IsTuple&lt; std::tuple&lt; T... &gt; &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_any_tuple" prot="public">Raven::Detail::TAnyTuple</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_none_tuple" prot="public">Raven::Detail::TNoneTuple</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_arg_concat" prot="public">Raven::Detail::TArgConcat</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_arg_concat_3_01_head_00_01_tail_8_8_8_01_4" prot="public">Raven::Detail::TArgConcat&lt; Head, Tail... &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_arg_concat_3_01_t_01_4" prot="public">Raven::Detail::TArgConcat&lt; T &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_arg_concat_3_01_t_00_01_u_01_4" prot="public">Raven::Detail::TArgConcat&lt; T, U &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_arg_concat_3_01std_1_1tuple_3_01_t_01_4_01_4" prot="public">Raven::Detail::TArgConcat&lt; std::tuple&lt; T &gt; &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_arg_concat_3_01std_1_1tuple_3_01_t_8_8_8_01_4_01_4" prot="public">Raven::Detail::TArgConcat&lt; std::tuple&lt; T... &gt; &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_arg_concat_3_01std_1_1tuple_3_01_v0_8_8_8_01_4_00_01_t_01_4" prot="public">Raven::Detail::TArgConcat&lt; std::tuple&lt; V0... &gt;, T &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_arg_concat_3_01_t_00_01std_1_1tuple_3_01_v0_8_8_8_01_4_01_4" prot="public">Raven::Detail::TArgConcat&lt; T, std::tuple&lt; V0... &gt; &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_arg_concat_3_01std_1_1tuple_3_01_v0_8_8_8_01_4_00_01std_1_1tuple_3_01_v1_8_8_8_01_4_01_4" prot="public">Raven::Detail::TArgConcat&lt; std::tuple&lt; V0... &gt;, std::tuple&lt; V1... &gt; &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_arg_concat_3_01std_1_1tuple_3_01_v0_8_8_8_01_4_00_01std_1_1tuple_382141a30557057a640e138250b6b773a" prot="public">Raven::Detail::TArgConcat&lt; std::tuple&lt; V0... &gt;, std::tuple&lt; V1... &gt;, Ts... &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_arg_concat_3_01_t_query_3_01_t_ent0_00_01_with_3_01_comp0_8_8_8_017e82f1a15ff2d6d86752c27325198c67" prot="public">Raven::Detail::TArgConcat&lt; TQuery&lt; TEnt0, With&lt; Comp0... &gt;, WithOut&lt; Exclude0... &gt; &gt; &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_arg_concat_3_01_t_query_3_01_t_ent0_00_01_with_3_01_comp0_8_8_8_013f3b9417a0173dc6e6e8312be09c20a3" prot="public">Raven::Detail::TArgConcat&lt; TQuery&lt; TEnt0, With&lt; Comp0... &gt;, WithOut&lt; Exclude0... &gt; &gt;, T &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_arg_concat_3_01_t_query_3_01_t_ent0_00_01_with_3_01_comp0_8_8_8_0113c2d68d25a7a07b03f39f30c62c8f60" prot="public">Raven::Detail::TArgConcat&lt; TQuery&lt; TEnt0, With&lt; Comp0... &gt;, WithOut&lt; Exclude0... &gt; &gt;, T... &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_arg_concat_3_01_t_query_3_01_t_ent0_00_01_with_3_01_comp0_8_8_8_01c534534d293cbc693d4fd6a2abac50cd" prot="public">Raven::Detail::TArgConcat&lt; TQuery&lt; TEnt0, With&lt; Comp0... &gt;, WithOut&lt; Exclude0... &gt; &gt;, TQuery&lt; TEnt1, With&lt; Comp1... &gt;, WithOut&lt; Exclude1... &gt; &gt; &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_arg_concat_3_01_t_query_3_01_t_ent0_00_01_with_3_01_comp0_8_8_8_01cd9de7c1d6989902d1421f0894acdfae" prot="public">Raven::Detail::TArgConcat&lt; TQuery&lt; TEnt0, With&lt; Comp0... &gt;, WithOut&lt; Exclude0... &gt; &gt;, TQuery&lt; TEnt1, With&lt; Comp1... &gt;, WithOut&lt; Exclude1... &gt; &gt;, Ts... &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_arg_concat_3_01_t_00_01_t_query_3_01_t_ent0_00_01_with_3_01_comp0_cc0c12488b65f1cd791029f3c010fc3e" prot="public">Raven::Detail::TArgConcat&lt; T, TQuery&lt; TEnt0, With&lt; Comp0... &gt;, WithOut&lt; Exclude0... &gt; &gt;, Ts... &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_arg_concat_3_01std_1_1tuple_3_01_v0_8_8_8_01_4_00_01_t_query_3_01_7bc723f7700206f228c83580605b8a30" prot="public">Raven::Detail::TArgConcat&lt; std::tuple&lt; V0... &gt;, TQuery&lt; TEnt0, With&lt; Comp0... &gt;, WithOut&lt; Exclude0... &gt; &gt; &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_has_type" prot="public">Raven::Detail::THasType</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_has_type_3_01_t_00_01std_1_1tuple_3_01_us_8_8_8_01_4_01_4" prot="public">Raven::Detail::THasType&lt; T, std::tuple&lt; Us... &gt; &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_unique" prot="public">Raven::Detail::TUnique</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_unique_3_01std_1_1tuple_3_01_ts_8_8_8_01_4_00_01_u_00_01_us_8_8_8_01_4" prot="public">Raven::Detail::TUnique&lt; std::tuple&lt; Ts... &gt;, U, Us... &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_unique_tuple" prot="public">Raven::Detail::TUniqueTuple</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_unique_tuple_3_01std_1_1tuple_3_01_t_8_8_8_01_4_01_4" prot="public">Raven::Detail::TUniqueTuple&lt; std::tuple&lt; T... &gt; &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_remove_duplicate_constants" prot="public">Raven::Detail::TRemoveDuplicateConstants</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_remove_duplicate_constants_3_01std_1_1tuple_3_01_ts_8_8_8_01_4_01_4" prot="public">Raven::Detail::TRemoveDuplicateConstants&lt; std::tuple&lt; Ts... &gt; &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_are_tuple_args_world" prot="public">Raven::Detail::TAreTupleArgsWorld</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_are_tuple_args_world_3_01std_1_1tuple_3_01_t_8_8_8_01_4_01_4" prot="public">Raven::Detail::TAreTupleArgsWorld&lt; std::tuple&lt; T... &gt; &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_are_tuple_args_world_3_01_t_checked_helper_3_01std_1_1tuple_3_01_t_8_8_8_01_4_01_4_01_4" prot="public">Raven::Detail::TAreTupleArgsWorld&lt; TCheckedHelper&lt; std::tuple&lt; T... &gt; &gt; &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_detail_1_1_t_system_function" prot="public">Raven::Detail::TSystemFunction</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_raven_app_8hpp_1a1b4db4c849eeef9fe1a6365f92949915" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>typename std::remove_pointer_t&lt; std::remove_cvref_t&lt; T &gt; &gt;</type>
        <definition>using Raven::Detail::SysArgDecayT = typedef typename std::remove_pointer_t&lt;std::remove_cvref_t&lt;T&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>SysArgDecayT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="32" column="16" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_label_8hpp_1a64bc69b6357c2e348745bfe3bde9daef" prot="public" static="no" mutable="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>concept</type>
        <definition>concept Raven::Detail::IsPointer</definition>
        <argsstring></argsstring>
        <name>IsPointer</name>
        <initializer>= std::is_pointer_v&lt;T&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/Label.hpp" line="7" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/Label.hpp" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_label_8hpp_1a4c2ee93980b9b358d86e12b2287858f3" prot="public" static="no" mutable="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>concept</type>
        <definition>concept Raven::Detail::IsEnum</definition>
        <argsstring></argsstring>
        <name>IsEnum</name>
        <initializer>= std::is_enum_v&lt;T&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/Label.hpp" line="10" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/Label.hpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_label_8hpp_1a8bda3d8e6feb44842df1f08762a5b012" prot="public" static="no" mutable="no">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>concept</type>
        <definition>concept Raven::Detail::StringLike</definition>
        <argsstring></argsstring>
        <name>StringLike</name>
        <initializer>= std::is_convertible_v&lt;T, std::string_view&gt; ||
		std::is_convertible_v&lt;T, std::basic_string_view&lt;wchar_t&gt;&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/Label.hpp" line="13" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/Label.hpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_raven_app_8hpp_1a411bc63c00539548ab85fbc6c2ef9b1f" prot="public" static="no" mutable="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Ty</type>
            <defval>Detail::SysArgDecayT&lt;T&gt;</defval>
          </param>
        </templateparamlist>
        <type>concept</type>
        <definition>concept Raven::Detail::IsWorldArgument</definition>
        <argsstring></argsstring>
        <name>IsWorldArgument</name>
        <initializer>=
		IsWorldQuery&lt;Ty&gt; || std::is_same_v&lt;Ty, Raven::CWorld&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="821" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="821" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_raven_app_8hpp_1a2eee162b04f4ffd1d2d1e0421bb6220b" prot="public" static="no" mutable="no">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>concept</type>
        <definition>concept Raven::Detail::AreWorldArguments</definition>
        <argsstring></argsstring>
        <name>AreWorldArguments</name>
        <initializer>= (IsWorldArgument&lt;T&gt; || ...)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="825" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="825" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_raven_app_8hpp_1a4317fa45339a2e167596d2fd80732ce6" prot="public" static="no" mutable="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename SysTraitsT</type>
            <defval>Detail::SystemTraitsT&lt;T&gt;</defval>
          </param>
        </templateparamlist>
        <type>concept</type>
        <definition>concept Raven::Detail::IsWorldSystem</definition>
        <argsstring></argsstring>
        <name>IsWorldSystem</name>
        <initializer>=
		<ref refid="struct_raven_1_1_detail_1_1_t_are_tuple_args_world" kindref="compound">TAreTupleArgsWorld</ref>&lt;typename SysTraitsT::CheckT&gt;::Value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="839" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="839" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_raven_app_8hpp_1ac5a6e49e37410707901a4fbb17d363e4" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr size_t</type>
        <definition>static constexpr size_t Raven::Detail::GetArgCount</definition>
        <argsstring>()</argsstring>
        <name>GetArgCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="99" column="37" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="_raven_app_8hpp_1a59dcec3a55150f7ce5db0b053b05b0d8" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool Raven::Detail::AreAnyVariant</definition>
        <argsstring>()</argsstring>
        <name>AreAnyVariant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="122" column="28" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="122" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="_raven_app_8hpp_1aa4d2d4a9798fe7389e92e8ed61fa133b" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr static bool</type>
        <definition>constexpr static bool Raven::Detail::IsValid</definition>
        <argsstring>(const T &amp;item) noexcept</argsstring>
        <name>IsValid</name>
        <param>
          <type>const T &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="843" column="24" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="843" bodyend="845"/>
      </memberdef>
      <memberdef kind="function" id="_raven_app_8hpp_1a69262a72fb28ebd4c2a45c468c687430" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Tp</declname>
            <defname>Tp</defname>
          </param>
        </templateparamlist>
        <type>constexpr static bool</type>
        <definition>constexpr static bool Raven::Detail::IsValid</definition>
        <argsstring>(const std::tuple&lt; Tp... &gt; &amp;args) noexcept</argsstring>
        <name>IsValid</name>
        <param>
          <type>const std::tuple&lt; Tp... &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="867" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="867" bodyend="869"/>
      </memberdef>
      <memberdef kind="function" id="_raven_app_8hpp_1a9f535b9eb0230b39ef592bc77bb54dfc" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Raven::Detail::ExtractToTuple</definition>
        <argsstring>(App &amp;app, CWorld *, T &amp;out) noexcept</argsstring>
        <name>ExtractToTuple</name>
        <param>
          <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
          <declname>app</declname>
        </param>
        <param>
          <type>CWorld *</type>
          <defname>pWorld</defname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="872" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="872" bodyend="878"/>
      </memberdef>
      <memberdef kind="function" id="_raven_app_8hpp_1a2190960bfe00c3ce95f7b86dd95395b0" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>CompT</declname>
            <defname>CompT</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>ExcludeT</declname>
            <defname>ExcludeT</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Raven::Detail::ExtractQuery</definition>
        <argsstring>(CWorld &amp;pWorld, Query&lt; With&lt; CompT... &gt;, WithOut&lt; ExcludeT... &gt;&gt; &amp;out) noexcept</argsstring>
        <name>ExtractQuery</name>
        <param>
          <type>CWorld &amp;</type>
          <declname>pWorld</declname>
        </param>
        <param>
          <type>Query&lt; With&lt; CompT... &gt;, WithOut&lt; ExcludeT... &gt;&gt; &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="882" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="882" bodyend="885"/>
      </memberdef>
      <memberdef kind="function" id="_raven_app_8hpp_1aa60a709f7401a737f25fa935f0ac5f06" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Tpl</declname>
            <defname>Tpl</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Raven::Detail::ExtractToTuple</definition>
        <argsstring>(App &amp;app, CWorld *pWorld, std::tuple&lt; Tpl... &gt; &amp;out) noexcept</argsstring>
        <name>ExtractToTuple</name>
        <param>
          <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
          <declname>app</declname>
        </param>
        <param>
          <type>CWorld *</type>
          <declname>pWorld</declname>
        </param>
        <param>
          <type>std::tuple&lt; Tpl... &gt; &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="903" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="903" bodyend="906"/>
      </memberdef>
      <memberdef kind="function" id="_raven_app_8hpp_1a315c4e95fb339c1544963310216b8904" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Tp</declname>
            <defname>Tp</defname>
          </param>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void Raven::Detail::ApplyDefault</definition>
        <argsstring>(std::tuple&lt; Tp... &gt; &amp;out, const D &amp;def)</argsstring>
        <name>ApplyDefault</name>
        <param>
          <type>std::tuple&lt; Tp... &gt; &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const D &amp;</type>
          <declname>def</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="909" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="909" bodyend="913"/>
      </memberdef>
      <memberdef kind="function" id="_raven_app_8hpp_1ad9045fdc53941f3380c07507cccbf505" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Tp</declname>
            <defname>Tp</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>Defaults</declname>
            <defname>Defaults</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void Raven::Detail::ApplyDefaults</definition>
        <argsstring>(std::tuple&lt; Tp... &gt; &amp;out, const std::tuple&lt; Defaults... &gt; &amp;defaults={})</argsstring>
        <name>ApplyDefaults</name>
        <param>
          <type>std::tuple&lt; Tp... &gt; &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const std::tuple&lt; Defaults... &gt; &amp;</type>
          <declname>defaults</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="916" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="916" bodyend="919"/>
      </memberdef>
      <memberdef kind="function" id="_raven_app_8hpp_1aed0a624f6aa57c9c96242a88d640214c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Tp</declname>
            <defname>Tp</defname>
          </param>
        </templateparamlist>
        <type>auto &amp;</type>
        <definition>static auto&amp; Raven::Detail::Get</definition>
        <argsstring>(std::tuple&lt; Tp... &gt; &amp;args)</argsstring>
        <name>Get</name>
        <param>
          <type>std::tuple&lt; Tp... &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="922" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="922" bodyend="927"/>
      </memberdef>
      <memberdef kind="function" id="_raven_app_8hpp_1a83552d5d12183a560425fd3dcd3e1623" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Fn</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Tp</declname>
            <defname>Tp</defname>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) Raven::Detail::Invoke</definition>
        <argsstring>(const Fn &amp;fn, std::tuple&lt; Tp... &gt; &amp;args)</argsstring>
        <name>Invoke</name>
        <param>
          <type>const Fn &amp;</type>
          <declname>fn</declname>
        </param>
        <param>
          <type>std::tuple&lt; Tp... &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="930" column="10" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="930" bodyend="932"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/Label.hpp" line="5" column="1"/>
  </compounddef>
</doxygen>

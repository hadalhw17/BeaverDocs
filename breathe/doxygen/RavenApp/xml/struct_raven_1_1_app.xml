<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_raven_1_1_app" kind="struct" language="C++" prot="public">
    <compoundname>Raven::App</compoundname>
    <includes refid="_raven_app_8hpp" local="no">RavenApp.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_raven_1_1_app_1a40b72b849a2cb10696cd537d69beace9" prot="public" static="no" mutable="no">
        <type><ref refid="class_raven_1_1_c_schedule" kindref="compound">CSchedule</ref> *</type>
        <definition>CSchedule* Raven::App::pSchedule</definition>
        <argsstring></argsstring>
        <name>pSchedule</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="466" column="11" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="466" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_raven_1_1_app_1abfcb1bc28ab743db98fcccea66058358" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_raven_1_1_sub_app" kindref="compound">SubApp</ref> &gt;</type>
        <definition>std::vector&lt;SubApp&gt; Raven::App::subApps</definition>
        <argsstring></argsstring>
        <name>subApps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="467" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="467" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_raven_1_1_app_1a9fdac92d3beeb16d2ed61a6790888481" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; uint64_t, Meta::Variant &gt;</type>
        <definition>std::unordered_map&lt;uint64_t, Meta::Variant&gt; Raven::App::m_resources</definition>
        <argsstring></argsstring>
        <name>m_resources</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="468" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="468" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_raven_1_1_app_1a640e296bf1fe973ac22141bf4b960c05" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Raven::App::ShouldRun</definition>
        <argsstring></argsstring>
        <name>ShouldRun</name>
        <initializer>= true</initializer>
        <briefdescription>
<para>Controls weather the app runs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="470" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="470" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_raven_1_1_app_1ad165ed72adaf71909f1d7da092277e6e" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Raven::App::App</definition>
        <argsstring>(App &amp;&amp;app) noexcept</argsstring>
        <name>App</name>
        <param>
          <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;&amp;</type>
          <declname>app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="284" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="284" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a23194d32923e497aa0038c8931f8de0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Raven::App::~App</definition>
        <argsstring>()</argsstring>
        <name>~App</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="292" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a16a35c33dcbff88670a3cbc3c569ece2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::App::RunOnce</definition>
        <argsstring>()</argsstring>
        <name>RunOnce</name>
        <briefdescription>
<para>Runs the application schedule and its sub apps once. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="306" column="6"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a390234b2b2e7700fb689ebbc37ca2eb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::App::Run</definition>
        <argsstring>()</argsstring>
        <name>Run</name>
        <briefdescription>
<para>Runs the application while <ref refid="struct_raven_1_1_app_1a640e296bf1fe973ac22141bf4b960c05" kindref="member">App::ShouldRun</ref> is true. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="308" column="6"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1ad74cdfaa2bddbbfd58f4c0fa55465d75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>App &amp; Raven::App::AddSubApp</definition>
        <argsstring>(App &amp;&amp;app)</argsstring>
        <name>AddSubApp</name>
        <param>
          <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;&amp;</type>
          <declname>app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="311" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="662" bodyend="670"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a0358b242168e0e71825f81b7b8b06c9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* Raven::App::GetResource</definition>
        <argsstring>()</argsstring>
        <name>GetResource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the resource of type T that was added to the application</para>
<para>Finds the instance of the resource and return it if it is present, nullptr otherwise <simplesect kind="return"><para>pointer to the resource </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="317" column="3" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="317" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1aa973e04a3f61cd059eda0bab754e6d3c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>App&amp; Raven::App::InsertResource</definition>
        <argsstring>(T &amp;resource)</argsstring>
        <name>InsertResource</name>
        <param>
          <type>T &amp;</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inserts the resource of type T into an app instance</para>
<para>Inserts previously constructed instance of the resource without claiming its ownership Does nothing if resource of type T already exists <simplesect kind="return"><para>instance of an app into which the resource was inserted </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="329" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="329" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a08225d3d6df218135c428b1ac63529ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>App&amp; Raven::App::CreateResource</definition>
        <argsstring>()</argsstring>
        <name>CreateResource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs the resource of type T in an app instance</para>
<para>Inserts previously constructed instance of the resource without claiming its ownership Does nothing if resource of type T already exists <simplesect kind="return"><para>instance of an app into which the resource was inserted </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="342" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="342" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a59d66576ed1145e197856d57e01bd98c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>App&amp; Raven::App::RemoveResource</definition>
        <argsstring>()</argsstring>
        <name>RemoveResource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove the resource from the application</para>
<para>Does nothing if resource wasn&apos;t created <simplesect kind="return"><para>instance of an app into which the resource was inserted </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="354" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="354" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a26ec63882be2fb7401d7119dbe3f70c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>App&amp; Raven::App::AddSystem</definition>
        <argsstring>(const char *stageName, T &amp;&amp;fn)</argsstring>
        <name>AddSystem</name>
        <param>
          <type>const char *</type>
          <declname>stageName</declname>
        </param>
        <param>
          <type>T &amp;&amp;</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds system to a specified stage</para>
<para>Internally constructs <ref refid="struct_raven_1_1_system_desc" kindref="compound">Raven::SystemDesc</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stageName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the stage into which system is added </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fn</parametername>
</parameternamelist>
<parameterdescription>
<para>System to execute or <ref refid="struct_raven_1_1_system_desc" kindref="compound">Raven::SystemDesc</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>instance of an app into which the resource was inserted </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="368" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="368" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a89d19ef6c2fd97a52daae0bfc3e0b57d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>App&amp; Raven::App::AddStage</definition>
        <argsstring>(const char *name)</argsstring>
        <name>AddStage</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a stage to the app schedule <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the stage to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="375" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="375" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a765a05d45584b606a6e131e5d33209d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>App&amp; Raven::App::AddStageBefore</definition>
        <argsstring>(const char *name, const char *before)</argsstring>
        <name>AddStageBefore</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>before</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a stage to the app schedule before specified stage <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the stage to add </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>before</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the stage before which stage is inserted </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="384" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="384" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a7860dc5f89ff4fd5f05e38c131d311b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>App&amp; Raven::App::AddStageAfter</definition>
        <argsstring>(const char *name, const char *after)</argsstring>
        <name>AddStageAfter</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>after</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a stage to the app schedule before specified stage <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the stage to add </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>after</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the stage after which stage is inserted </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="393" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="393" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a6365e791dd29bdc0688a4ff39e6d6bb1" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>Plugin</type>
            <declname>Plug</declname>
            <defname>Plug</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>constexpr App&amp; Raven::App::AddPlugin</definition>
        <argsstring>(Plug &amp;plug)</argsstring>
        <name>AddPlugin</name>
        <param>
          <type>Plug &amp;</type>
          <declname>plug</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a plugin to the application No ownership of the plugin is taken! <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>plug</parametername>
</parameternamelist>
<parameterdescription>
<para>Plugin to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="403" column="15" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="403" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a0b4917d6c84c8efa0e4aeb6482ce58ed" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>Plugin</type>
            <declname>Plug</declname>
            <defname>Plug</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>constexpr App&amp; Raven::App::AddPlugin</definition>
        <argsstring>()</argsstring>
        <name>AddPlugin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a plugin to the application No ownership of the plugin is taken! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="412" column="15" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="412" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a0a83674ad6dff1e2473defc2328ea20e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>EventC</type>
            <declname>E</declname>
            <defname>E</defname>
          </param>
        </templateparamlist>
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>App&amp; Raven::App::RegisterEvent</definition>
        <argsstring>()</argsstring>
        <name>RegisterEvent</name>
        <briefdescription>
<para>Sets up all of the resources and systems needed for event dispatching. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="421" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="421" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1af952a9816c911f376a43ac0b8d22a0ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>App&amp; Raven::App::AddAsset</definition>
        <argsstring>()</argsstring>
        <name>AddAsset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets up all of the resources and systems needed for asset management</para>
<para><itemizedlist>
<listitem><para>Lifetime management system</para>
</listitem><listitem><para>Ref counting</para>
</listitem><listitem><para>Asset events </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="433" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="433" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a4f47909d07eb271948e73f57f16a93d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>App&amp; Raven::App::AddComponent</definition>
        <argsstring>()</argsstring>
        <name>AddComponent</name>
        <briefdescription>
<para>Sets up component type T description needed for runtime ecs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="445" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="445" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a936dbd3fb45e0b6e6babe0473302f2d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>App&amp; Raven::App::AddLoader</definition>
        <argsstring>()</argsstring>
        <name>AddLoader</name>
        <briefdescription>
<para>Registers a loader of type T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="452" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="452" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1af7ecb3f58fa2cd485664f3364c79261a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>App&amp; Raven::App::AddState</definition>
        <argsstring>()</argsstring>
        <name>AddState</name>
        <briefdescription>
<para>Sets up state at state DefaultStages::FIRST. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="461" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="461" bodyend="464"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_raven_1_1_app_1aa8de4ddaefe182c8dd1d4ab89ae49816" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>static App&amp; Raven::App::Get</definition>
        <argsstring>()</argsstring>
        <name>Get</name>
        <briefdescription>
<para>Static instance of the main application. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="295" column="12" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="295" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a2c874c76257c56c642d0981c31e4d886" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref></type>
        <definition>static App Raven::App::Default</definition>
        <argsstring>()</argsstring>
        <name>Default</name>
        <briefdescription>
<para>Constructs default application. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="301" column="12"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1aa82434edaf1fe7997f4e8f0f4cdb2be6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref></type>
        <definition>static App Raven::App::Raw</definition>
        <argsstring>()</argsstring>
        <name>Raw</name>
        <briefdescription>
<para>Constructs empty application(not really safe to use) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="303" column="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="struct_raven_1_1_app_1a6f3f6e95aac2a2c9c475c8272b6c8020" prot="private" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Raven::App::App</definition>
        <argsstring>() noexcept</argsstring>
        <name>App</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="473" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a074c783e0aae8b7ecaba62444cbe4366" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Raven::App::App</definition>
        <argsstring>(const App &amp;)=delete</argsstring>
        <name>App</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="474" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Main instance of Raven. </para>
    </briefdescription>
    <detaileddescription>
<para>Main instance of the application that constrols all resources and systems Use <ref refid="struct_raven_1_1_app_1a2c874c76257c56c642d0981c31e4d886" kindref="member">App::Default</ref> or <ref refid="struct_raven_1_1_app_1aa82434edaf1fe7997f4e8f0f4cdb2be6" kindref="member">App::Raw</ref> to create configured or unconfigured insrances of the application It is possible to access it as <ref refid="struct_raven_1_1_app_1aa8de4ddaefe182c8dd1d4ab89ae49816" kindref="member">App::Get</ref> </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>Raven::App</label>
        <link refid="struct_raven_1_1_app"/>
        <childnode refid="2" relation="usage">
          <edgelabel>pSchedule</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Raven::CSchedule</label>
        <link refid="class_raven_1_1_c_schedule"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="282" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="283" bodyend="476"/>
    <listofallmembers>
      <member refid="struct_raven_1_1_app_1af952a9816c911f376a43ac0b8d22a0ff" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>AddAsset</name></member>
      <member refid="struct_raven_1_1_app_1a4f47909d07eb271948e73f57f16a93d7" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>AddComponent</name></member>
      <member refid="struct_raven_1_1_app_1a936dbd3fb45e0b6e6babe0473302f2d5" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>AddLoader</name></member>
      <member refid="struct_raven_1_1_app_1a6365e791dd29bdc0688a4ff39e6d6bb1" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>AddPlugin</name></member>
      <member refid="struct_raven_1_1_app_1a0b4917d6c84c8efa0e4aeb6482ce58ed" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>AddPlugin</name></member>
      <member refid="struct_raven_1_1_app_1a89d19ef6c2fd97a52daae0bfc3e0b57d" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>AddStage</name></member>
      <member refid="struct_raven_1_1_app_1a7860dc5f89ff4fd5f05e38c131d311b3" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>AddStageAfter</name></member>
      <member refid="struct_raven_1_1_app_1a765a05d45584b606a6e131e5d33209d9" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>AddStageBefore</name></member>
      <member refid="struct_raven_1_1_app_1af7ecb3f58fa2cd485664f3364c79261a" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>AddState</name></member>
      <member refid="struct_raven_1_1_app_1ad74cdfaa2bddbbfd58f4c0fa55465d75" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>AddSubApp</name></member>
      <member refid="struct_raven_1_1_app_1a26ec63882be2fb7401d7119dbe3f70c3" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>AddSystem</name></member>
      <member refid="struct_raven_1_1_app_1ad165ed72adaf71909f1d7da092277e6e" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>App</name></member>
      <member refid="struct_raven_1_1_app_1a6f3f6e95aac2a2c9c475c8272b6c8020" prot="private" virt="non-virtual"><scope>Raven::App</scope><name>App</name></member>
      <member refid="struct_raven_1_1_app_1a074c783e0aae8b7ecaba62444cbe4366" prot="private" virt="non-virtual"><scope>Raven::App</scope><name>App</name></member>
      <member refid="struct_raven_1_1_app_1a08225d3d6df218135c428b1ac63529ab" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>CreateResource</name></member>
      <member refid="struct_raven_1_1_app_1a2c874c76257c56c642d0981c31e4d886" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>Default</name></member>
      <member refid="struct_raven_1_1_app_1aa8de4ddaefe182c8dd1d4ab89ae49816" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>Get</name></member>
      <member refid="struct_raven_1_1_app_1a0358b242168e0e71825f81b7b8b06c9c" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>GetResource</name></member>
      <member refid="struct_raven_1_1_app_1aa973e04a3f61cd059eda0bab754e6d3c" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>InsertResource</name></member>
      <member refid="struct_raven_1_1_app_1a9fdac92d3beeb16d2ed61a6790888481" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>m_resources</name></member>
      <member refid="struct_raven_1_1_app_1a40b72b849a2cb10696cd537d69beace9" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>pSchedule</name></member>
      <member refid="struct_raven_1_1_app_1aa82434edaf1fe7997f4e8f0f4cdb2be6" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>Raw</name></member>
      <member refid="struct_raven_1_1_app_1a0a83674ad6dff1e2473defc2328ea20e" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>RegisterEvent</name></member>
      <member refid="struct_raven_1_1_app_1a59d66576ed1145e197856d57e01bd98c" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>RemoveResource</name></member>
      <member refid="struct_raven_1_1_app_1a390234b2b2e7700fb689ebbc37ca2eb2" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>Run</name></member>
      <member refid="struct_raven_1_1_app_1a16a35c33dcbff88670a3cbc3c569ece2" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>RunOnce</name></member>
      <member refid="struct_raven_1_1_app_1a640e296bf1fe973ac22141bf4b960c05" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>ShouldRun</name></member>
      <member refid="struct_raven_1_1_app_1abfcb1bc28ab743db98fcccea66058358" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>subApps</name></member>
      <member refid="struct_raven_1_1_app_1a23194d32923e497aa0038c8931f8de0b" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>~App</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

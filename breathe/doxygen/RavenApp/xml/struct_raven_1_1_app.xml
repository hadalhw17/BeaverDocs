<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_raven_1_1_app" kind="struct" language="C++" prot="public">
    <compoundname>Raven::App</compoundname>
    <includes refid="_raven_app_8hpp" local="no">RavenApp.hpp</includes>
    <innerclass refid="struct_raven_1_1_app_1_1_created_resource" prot="private">Raven::App::CreatedResource</innerclass>
    <innerclass refid="struct_raven_1_1_app_1_1_created_resource_3_01std_1_1shared__ptr_3_01_t_01_4_01_4" prot="private">Raven::App::CreatedResource&lt; std::shared_ptr&lt; T &gt; &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_app_1_1_created_resource_3_01_t_01_5_01_4" prot="private">Raven::App::CreatedResource&lt; T * &gt;</innerclass>
    <innerclass refid="struct_raven_1_1_app_1_1_i_created_resource" prot="private">Raven::App::ICreatedResource</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_raven_1_1_app_1abfcb1bc28ab743db98fcccea66058358" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_raven_1_1_sub_app" kindref="compound">SubApp</ref> &gt;</type>
        <definition>std::vector&lt;SubApp&gt; Raven::App::subApps</definition>
        <argsstring></argsstring>
        <name>subApps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="572" column="17" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="572" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_raven_1_1_app_1a640e296bf1fe973ac22141bf4b960c05" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Raven::App::ShouldRun</definition>
        <argsstring></argsstring>
        <name>ShouldRun</name>
        <initializer>= true</initializer>
        <briefdescription>
<para>Controls weather the app runs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="574" column="10" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="574" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="struct_raven_1_1_app_1a75759a3e5ede998520dffcf94ccef8e0" prot="private" static="yes" mutable="no">
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> *</type>
        <definition>App * Raven::App::s_Instance</definition>
        <argsstring></argsstring>
        <name>s_Instance</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="580" column="16" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="580" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_raven_1_1_app_1a8d01df3b2b4dd633a1190399d61f3844" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; uint64, std::unique_ptr&lt; ICreatedResource &gt; &gt;</type>
        <definition>std::unordered_map&lt;uint64, std::unique_ptr&lt;ICreatedResource&gt; &gt; Raven::App::m_resources</definition>
        <argsstring></argsstring>
        <name>m_resources</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="626" column="24" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="626" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_raven_1_1_app_1a40f78b4adefc9095e632962d60444ebf" prot="private" static="no" mutable="no">
        <type>std::vector&lt; uint64 &gt;</type>
        <definition>std::vector&lt;uint64&gt; Raven::App::m_resourceReleaseOrder</definition>
        <argsstring></argsstring>
        <name>m_resourceReleaseOrder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="627" column="17" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="627" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_raven_1_1_app_1a98d7fb2ceea2c480006c46ede8c6ecb0" prot="private" static="no" mutable="no">
        <type><ref refid="class_raven_1_1_c_schedule" kindref="compound">CSchedule</ref> *</type>
        <definition>CSchedule* Raven::App::m_pSchedule</definition>
        <argsstring></argsstring>
        <name>m_pSchedule</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="628" column="24" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="628" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="struct_raven_1_1_app_1ab4f61d0ea0cfca618d9c6780f8e13b2b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class CAppBuildReplayer</definition>
        <argsstring></argsstring>
        <name>CAppBuildReplayer</name>
        <param>
          <type><ref refid="class_raven_1_1_c_app_build_replayer" kindref="compound">CAppBuildReplayer</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="630" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="630" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_raven_1_1_app_1ad165ed72adaf71909f1d7da092277e6e" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Raven::App::App</definition>
        <argsstring>(App &amp;&amp;app) noexcept</argsstring>
        <name>App</name>
        <param>
          <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;&amp;</type>
          <declname>app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="346" column="5"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a23194d32923e497aa0038c8931f8de0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Raven::App::~App</definition>
        <argsstring>()</argsstring>
        <name>~App</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="347" column="5"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a16a35c33dcbff88670a3cbc3c569ece2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::App::RunOnce</definition>
        <argsstring>()</argsstring>
        <name>RunOnce</name>
        <briefdescription>
<para>Runs the application schedule and its sub apps once. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="363" column="10"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a390234b2b2e7700fb689ebbc37ca2eb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::App::Run</definition>
        <argsstring>()</argsstring>
        <name>Run</name>
        <briefdescription>
<para>Runs the application while <ref refid="struct_raven_1_1_app_1a640e296bf1fe973ac22141bf4b960c05" kindref="member">App::ShouldRun</ref> is true. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="366" column="10"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a0535c8eab1f6e5c0e56b2e914ce107ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>App&amp; Raven::App::RunStartupSchedule</definition>
        <argsstring>()</argsstring>
        <name>RunStartupSchedule</name>
        <briefdescription>
<para>Runs once the startup schedule. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="369" column="9"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1ad74cdfaa2bddbbfd58f4c0fa55465d75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>App &amp; Raven::App::AddSubApp</definition>
        <argsstring>(App &amp;&amp;app)</argsstring>
        <name>AddSubApp</name>
        <param>
          <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;&amp;</type>
          <declname>app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a sub application to the application that runs Independently from the main application </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="373" column="21" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="864" bodyend="872"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a0358b242168e0e71825f81b7b8b06c9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* Raven::App::GetResource</definition>
        <argsstring>()</argsstring>
        <name>GetResource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the resource of type T that was added to the application. Finds the instance of the resource and return it if it is present, nullptr otherwise <simplesect kind="return"><para>pointer to the resource </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="378" column="19" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="378" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1aaadf1b10b2d9cd7ad6bbd164c81f1f92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>App&amp; Raven::App::InsertResource</definition>
        <argsstring>(U &amp;&amp;resource)</argsstring>
        <name>InsertResource</name>
        <param>
          <type>U &amp;&amp;</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inserts the resource of type T into an app instance. Inserts previously constructed instance of the resource without claiming its ownership Does nothing if resource of type T already exists <simplesect kind="return"><para>instance of an app into which the resource was inserted </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="389" column="23" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="389" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1aeddc5ac5cc965ba9f805bfc8f0118ba2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>App&amp; Raven::App::CreateResource</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>CreateResource</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs the resource of type T with specified arguments in an app instance. Does nothing if resource of type T already exists <simplesect kind="return"><para>instance of an app into which the resource was inserted </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="404" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="404" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a59d66576ed1145e197856d57e01bd98c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>App&amp; Raven::App::RemoveResource</definition>
        <argsstring>()</argsstring>
        <name>RemoveResource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove the resource from the application. Does nothing if resource wasn&apos;t created <simplesect kind="return"><para>instance of an app into which the resource was inserted </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="418" column="21" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="418" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a26ec63882be2fb7401d7119dbe3f70c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>App&amp; Raven::App::AddSystem</definition>
        <argsstring>(const char *stageName, T &amp;&amp;fn)</argsstring>
        <name>AddSystem</name>
        <param>
          <type>const char *</type>
          <declname>stageName</declname>
        </param>
        <param>
          <type>T &amp;&amp;</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds system to a specified stage. Internally constructs <ref refid="struct_raven_1_1_system_desc" kindref="compound">Raven::SystemDesc</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stageName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the stage into which system is added </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fn</parametername>
</parameternamelist>
<parameterdescription>
<para>System to execute or <ref refid="struct_raven_1_1_system_desc" kindref="compound">Raven::SystemDesc</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>instance of an app into which the system was inserted </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="436" column="21" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="436" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a6ffc4d0f5862a653976d01fe33863064" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>App&amp; Raven::App::AddStartupSystem</definition>
        <argsstring>(T &amp;&amp;fn)</argsstring>
        <name>AddStartupSystem</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a system into the startup schedule. Internally constructs <ref refid="struct_raven_1_1_system_desc" kindref="compound">Raven::SystemDesc</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fn</parametername>
</parameternamelist>
<parameterdescription>
<para>System to execute or <ref refid="struct_raven_1_1_system_desc" kindref="compound">Raven::SystemDesc</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>instance of an app into which the system was inserted </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="446" column="21" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="446" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1ac891afbe59de1ab93f6908359478282a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>App&amp; Raven::App::AddStage</definition>
        <argsstring>(const char *name, EStageFlags eFlags=EStageFlags::SingleThreaded)</argsstring>
        <name>AddStage</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>EStageFlags</type>
          <declname>eFlags</declname>
          <defval>EStageFlags::SingleThreaded</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a stage to the app schedule. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the stage to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="454" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="454" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a5ce1ce6966a335cd3d27525c99e75162" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>App&amp; Raven::App::AddStageBefore</definition>
        <argsstring>(const char *name, const char *before, EStageFlags eFlags=EStageFlags::SingleThreaded)</argsstring>
        <name>AddStageBefore</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>before</declname>
        </param>
        <param>
          <type>EStageFlags</type>
          <declname>eFlags</declname>
          <defval>EStageFlags::SingleThreaded</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a stage to the app schedule before specified stage. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the stage to add </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>before</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the stage before which stage is inserted </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="464" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="464" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1ad48cf9d2aa96fc04562deaa12bc7653b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>App&amp; Raven::App::AddStageAfter</definition>
        <argsstring>(const char *name, const char *after, EStageFlags eFlags=EStageFlags::SingleThreaded)</argsstring>
        <name>AddStageAfter</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>after</declname>
        </param>
        <param>
          <type>EStageFlags</type>
          <declname>eFlags</declname>
          <defval>EStageFlags::SingleThreaded</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a stage to the app schedule before specified stage <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the stage to add </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>after</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the stage after which stage is inserted </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="474" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="474" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1aa7e320f351a9b043a47ae8a39db916d1" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>Plugin</type>
            <declname>Plug</declname>
            <defname>Plug</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>constexpr App&amp; Raven::App::AddPlugin</definition>
        <argsstring>(Plug &amp;&amp;plug={})</argsstring>
        <name>AddPlugin</name>
        <param>
          <type>Plug &amp;&amp;</type>
          <declname>plug</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a plugin to the application No ownership of the plugin is taken! <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>plug</parametername>
</parameternamelist>
<parameterdescription>
<para>Plugin to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="484" column="31" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="484" bodyend="488"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a0a83674ad6dff1e2473defc2328ea20e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename E</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>App&amp; Raven::App::RegisterEvent</definition>
        <argsstring>()</argsstring>
        <name>RegisterEvent</name>
        <briefdescription>
<para>Sets up all of the resources and systems needed for event dispatching. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="491" column="21" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="491" bodyend="497"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1af952a9816c911f376a43ac0b8d22a0ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>App&amp; Raven::App::AddAsset</definition>
        <argsstring>()</argsstring>
        <name>AddAsset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets up all of the resources and systems needed for asset management. Such as:<itemizedlist>
<listitem><para>Lifetime management system</para>
</listitem><listitem><para>Ref counting</para>
</listitem><listitem><para>Asset events </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="504" column="21" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="504" bodyend="529"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a4f47909d07eb271948e73f57f16a93d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>App&amp; Raven::App::AddComponent</definition>
        <argsstring>()</argsstring>
        <name>AddComponent</name>
        <briefdescription>
<para>Sets up component type T description needed for runtime ecs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="532" column="21" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="532" bodyend="551"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a14a3bed01b4d9e4952825edcff8b9d13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename AssetT</type>
            <defval>typename T::AssetT</defval>
          </param>
        </templateparamlist>
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>App&amp; Raven::App::AddLoader</definition>
        <argsstring>()</argsstring>
        <name>AddLoader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Registers a loader of type T. Optionally possible to provide a loaded resource type Either as a template argument or by providing AssetT typedef inside of the loader class AssetT defaults to std::nullptr_t </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="558" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="558" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a25232b03d95db8561132f2e90b33a772" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>App&amp; Raven::App::AddState</definition>
        <argsstring>(const char *stage=DefaultStages::FIRST)</argsstring>
        <name>AddState</name>
        <param>
          <type>const char *</type>
          <declname>stage</declname>
          <defval><ref refid="namespace_raven_1_1_default_stages_1a9515a01c5d0fcdb08bb989d464f71263" kindref="member">DefaultStages::FIRST</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets up state at state <ref refid="namespace_raven_1_1_default_stages_1a9515a01c5d0fcdb08bb989d464f71263" kindref="member">DefaultStages::FIRST</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stage</parametername>
</parameternamelist>
<parameterdescription>
<para>stage to which the state will be added (by default FIRST) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="567" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="567" bodyend="570"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_raven_1_1_app_1aa8de4ddaefe182c8dd1d4ab89ae49816" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        <definition>static App&amp; Raven::App::Get</definition>
        <argsstring>()</argsstring>
        <name>Get</name>
        <briefdescription>
<para>Static instance of the main application. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="350" column="16"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a5e5dc32bfa9bd370a6062b99cd069062" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Raven::App::Set</definition>
        <argsstring>(App *app)</argsstring>
        <name>Set</name>
        <param>
          <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref> *</type>
          <declname>app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allows setting custom instance of the application. Usually should be used if library is statically linked against the dll </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="354" column="17"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a2c874c76257c56c642d0981c31e4d886" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref></type>
        <definition>static App Raven::App::Default</definition>
        <argsstring>()</argsstring>
        <name>Default</name>
        <briefdescription>
<para>Constructs default application. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="357" column="16"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1aa82434edaf1fe7997f4e8f0f4cdb2be6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_app" kindref="compound">App</ref></type>
        <definition>static App Raven::App::Raw</definition>
        <argsstring>()</argsstring>
        <name>Raw</name>
        <briefdescription>
<para>Constructs empty application(not really safe to use) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="360" column="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="struct_raven_1_1_app_1a6f3f6e95aac2a2c9c475c8272b6c8020" prot="private" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Raven::App::App</definition>
        <argsstring>() noexcept</argsstring>
        <name>App</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="577" column="5"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_app_1a074c783e0aae8b7ecaba62444cbe4366" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Raven::App::App</definition>
        <argsstring>(const App &amp;)=delete</argsstring>
        <name>App</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_app" kindref="compound">App</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="578" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="struct_raven_1_1_app_1aaa000ec7565e547fed2834cd0c99ca57" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr RavenUtil::Hash</type>
        <definition>static constexpr RavenUtil::Hash Raven::App::ResourceHash</definition>
        <argsstring>()</argsstring>
        <name>ResourceHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="583" column="50" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="583" bodyend="585"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Main instance of Raven. Main instance of the application that constrols all resources and systems Use <ref refid="struct_raven_1_1_app_1a2c874c76257c56c642d0981c31e4d886" kindref="member">App::Default</ref> or <ref refid="struct_raven_1_1_app_1aa82434edaf1fe7997f4e8f0f4cdb2be6" kindref="member">App::Raw</ref> to create configured or unconfigured insrances of the application It is possible to access it as <ref refid="struct_raven_1_1_app_1aa8de4ddaefe182c8dd1d4ab89ae49816" kindref="member">App::Get</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" line="345" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenApp/RavenApp.hpp" bodystart="345" bodyend="631"/>
    <listofallmembers>
      <member refid="struct_raven_1_1_app_1af952a9816c911f376a43ac0b8d22a0ff" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>AddAsset</name></member>
      <member refid="struct_raven_1_1_app_1a4f47909d07eb271948e73f57f16a93d7" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>AddComponent</name></member>
      <member refid="struct_raven_1_1_app_1a14a3bed01b4d9e4952825edcff8b9d13" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>AddLoader</name></member>
      <member refid="struct_raven_1_1_app_1aa7e320f351a9b043a47ae8a39db916d1" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>AddPlugin</name></member>
      <member refid="struct_raven_1_1_app_1ac891afbe59de1ab93f6908359478282a" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>AddStage</name></member>
      <member refid="struct_raven_1_1_app_1ad48cf9d2aa96fc04562deaa12bc7653b" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>AddStageAfter</name></member>
      <member refid="struct_raven_1_1_app_1a5ce1ce6966a335cd3d27525c99e75162" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>AddStageBefore</name></member>
      <member refid="struct_raven_1_1_app_1a6ffc4d0f5862a653976d01fe33863064" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>AddStartupSystem</name></member>
      <member refid="struct_raven_1_1_app_1a25232b03d95db8561132f2e90b33a772" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>AddState</name></member>
      <member refid="struct_raven_1_1_app_1ad74cdfaa2bddbbfd58f4c0fa55465d75" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>AddSubApp</name></member>
      <member refid="struct_raven_1_1_app_1a26ec63882be2fb7401d7119dbe3f70c3" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>AddSystem</name></member>
      <member refid="struct_raven_1_1_app_1ad165ed72adaf71909f1d7da092277e6e" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>App</name></member>
      <member refid="struct_raven_1_1_app_1a6f3f6e95aac2a2c9c475c8272b6c8020" prot="private" virt="non-virtual"><scope>Raven::App</scope><name>App</name></member>
      <member refid="struct_raven_1_1_app_1a074c783e0aae8b7ecaba62444cbe4366" prot="private" virt="non-virtual"><scope>Raven::App</scope><name>App</name></member>
      <member refid="struct_raven_1_1_app_1ab4f61d0ea0cfca618d9c6780f8e13b2b" prot="private" virt="non-virtual"><scope>Raven::App</scope><name>CAppBuildReplayer</name></member>
      <member refid="struct_raven_1_1_app_1aeddc5ac5cc965ba9f805bfc8f0118ba2" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>CreateResource</name></member>
      <member refid="struct_raven_1_1_app_1a2c874c76257c56c642d0981c31e4d886" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>Default</name></member>
      <member refid="struct_raven_1_1_app_1aa8de4ddaefe182c8dd1d4ab89ae49816" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>Get</name></member>
      <member refid="struct_raven_1_1_app_1a0358b242168e0e71825f81b7b8b06c9c" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>GetResource</name></member>
      <member refid="struct_raven_1_1_app_1aaadf1b10b2d9cd7ad6bbd164c81f1f92" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>InsertResource</name></member>
      <member refid="struct_raven_1_1_app_1a98d7fb2ceea2c480006c46ede8c6ecb0" prot="private" virt="non-virtual"><scope>Raven::App</scope><name>m_pSchedule</name></member>
      <member refid="struct_raven_1_1_app_1a40f78b4adefc9095e632962d60444ebf" prot="private" virt="non-virtual"><scope>Raven::App</scope><name>m_resourceReleaseOrder</name></member>
      <member refid="struct_raven_1_1_app_1a8d01df3b2b4dd633a1190399d61f3844" prot="private" virt="non-virtual"><scope>Raven::App</scope><name>m_resources</name></member>
      <member refid="struct_raven_1_1_app_1aa82434edaf1fe7997f4e8f0f4cdb2be6" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>Raw</name></member>
      <member refid="struct_raven_1_1_app_1a0a83674ad6dff1e2473defc2328ea20e" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>RegisterEvent</name></member>
      <member refid="struct_raven_1_1_app_1a59d66576ed1145e197856d57e01bd98c" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>RemoveResource</name></member>
      <member refid="struct_raven_1_1_app_1aaa000ec7565e547fed2834cd0c99ca57" prot="private" virt="non-virtual"><scope>Raven::App</scope><name>ResourceHash</name></member>
      <member refid="struct_raven_1_1_app_1a390234b2b2e7700fb689ebbc37ca2eb2" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>Run</name></member>
      <member refid="struct_raven_1_1_app_1a16a35c33dcbff88670a3cbc3c569ece2" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>RunOnce</name></member>
      <member refid="struct_raven_1_1_app_1a0535c8eab1f6e5c0e56b2e914ce107ae" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>RunStartupSchedule</name></member>
      <member refid="struct_raven_1_1_app_1a75759a3e5ede998520dffcf94ccef8e0" prot="private" virt="non-virtual"><scope>Raven::App</scope><name>s_Instance</name></member>
      <member refid="struct_raven_1_1_app_1a5e5dc32bfa9bd370a6062b99cd069062" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>Set</name></member>
      <member refid="struct_raven_1_1_app_1a640e296bf1fe973ac22141bf4b960c05" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>ShouldRun</name></member>
      <member refid="struct_raven_1_1_app_1abfcb1bc28ab743db98fcccea66058358" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>subApps</name></member>
      <member refid="struct_raven_1_1_app_1a23194d32923e497aa0038c8931f8de0b" prot="public" virt="non-virtual"><scope>Raven::App</scope><name>~App</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

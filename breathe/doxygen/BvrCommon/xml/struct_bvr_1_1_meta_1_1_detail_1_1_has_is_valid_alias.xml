<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_bvr_1_1_meta_1_1_detail_1_1_has_is_valid_alias" kind="struct" language="C++" prot="public">
    <compoundname>Bvr::Meta::Detail::HasIsValidAlias</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_bvr_1_1_meta_1_1_detail_1_1_has_is_valid_alias_1a97a3e30d2875a0b1f7dab8cf781801bb" prot="public" static="no">
        <type>char[1]</type>
        <definition>using Bvr::Meta::Detail::HasIsValidAlias&lt; T &gt;::YesType =  char[1]</definition>
        <argsstring></argsstring>
        <name>YesType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/PropertyTraits.hpp" line="14" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/PropertyTraits.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_meta_1_1_detail_1_1_has_is_valid_alias_1a39707795993979fba169c5cdaee5ceca" prot="public" static="no">
        <type>char[2]</type>
        <definition>using Bvr::Meta::Detail::HasIsValidAlias&lt; T &gt;::NoType =  char[2]</definition>
        <argsstring></argsstring>
        <name>NoType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/PropertyTraits.hpp" line="15" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/PropertyTraits.hpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="struct_bvr_1_1_meta_1_1_detail_1_1_has_is_valid_alias_1a69243d7d79cb467a1504aaf9d50dd9d0" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Bvr::Meta::Detail::HasIsValidAlias&lt; T &gt;::Value</definition>
        <argsstring></argsstring>
        <name>Value</name>
        <initializer>= (sizeof(Check&lt;T&gt;(0)) == sizeof(YesType))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/PropertyTraits.hpp" line="20" column="31" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/PropertyTraits.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_has_is_valid_alias_1a95fb5f8ce73f9dd34392b97a07e78fc1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>YesType &amp;</type>
        <definition>static YesType&amp; Bvr::Meta::Detail::HasIsValidAlias&lt; T &gt;::Check</definition>
        <argsstring>(typename U::IsValid *)</argsstring>
        <name>Check</name>
        <param>
          <type>typename U::IsValid *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/PropertyTraits.hpp" line="17" column="36"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_has_is_valid_alias_1ad7d8b918f4ec71e13266507c5ac6f913" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>NoType &amp;</type>
        <definition>static NoType&amp; Bvr::Meta::Detail::HasIsValidAlias&lt; T &gt;::Check</definition>
        <argsstring>(...)</argsstring>
        <name>Check</name>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/PropertyTraits.hpp" line="18" column="36"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/PropertyTraits.hpp" line="13" column="16" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/PropertyTraits.hpp" bodystart="13" bodyend="21"/>
    <listofallmembers>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_has_is_valid_alias_1a95fb5f8ce73f9dd34392b97a07e78fc1" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::HasIsValidAlias</scope><name>Check</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_has_is_valid_alias_1ad7d8b918f4ec71e13266507c5ac6f913" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::HasIsValidAlias</scope><name>Check</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_has_is_valid_alias_1a39707795993979fba169c5cdaee5ceca" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::HasIsValidAlias</scope><name>NoType</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_has_is_valid_alias_1a69243d7d79cb467a1504aaf9d50dd9d0" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::HasIsValidAlias</scope><name>Value</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_has_is_valid_alias_1a97a3e30d2875a0b1f7dab8cf781801bb" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::HasIsValidAlias</scope><name>YesType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

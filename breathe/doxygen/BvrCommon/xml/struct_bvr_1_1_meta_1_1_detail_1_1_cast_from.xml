<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from" kind="struct" language="C++" prot="public">
    <compoundname>Bvr::Meta::Detail::CastFrom</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1a7c2bc3f83f6e616d0c319058668c4a9c" prot="public" static="no">
        <type>T</type>
        <definition>using Bvr::Meta::Detail::CastFrom&lt; T &gt;::SrcType =  T</definition>
        <argsstring></argsstring>
        <name>SrcType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="56" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1ad37f724ab34a76737390e18fe3f893f5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;, bool &amp;)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
        </param>
        <param>
          <type>bool &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="58" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1ac48365b2a984f88e34b292ac61b769cc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;, char &amp;)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
        </param>
        <param>
          <type>char &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="59" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1adb9db3c4d985df7f94df01f194dcea59" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;, std::int8_t &amp;)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
        </param>
        <param>
          <type>std::int8_t &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="60" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1addd31fa39645936709591039144a3c95" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;, std::uint8_t &amp;)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
        </param>
        <param>
          <type>std::uint8_t &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="63" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1a6f701242637388b3ede5fdcfb8ab457b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;, std::int16_t &amp;)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
        </param>
        <param>
          <type>std::int16_t &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="66" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1af0355e186a843b2a48dd62123bac32a1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;, std::uint16_t &amp;)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
        </param>
        <param>
          <type>std::uint16_t &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="69" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1a7f7a10409ad1923da7c8790f7fb3fa2b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;, std::int32_t &amp;)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
        </param>
        <param>
          <type>std::int32_t &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="72" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="72" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1a053f4f2c84295d0f3015d26d8be530d3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;, std::uint32_t &amp;)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
        </param>
        <param>
          <type>std::uint32_t &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="75" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1ad308cbf832e45d3c31432e9e53860215" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;, std::int64_t &amp;)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
        </param>
        <param>
          <type>std::int64_t &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="78" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1abaf2c55eb0688187a9ca34daa8ce856e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;, std::uint64_t &amp;)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
        </param>
        <param>
          <type>std::uint64_t &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="81" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="81" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1aa5b03673599637126eda50fb692cf238" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;, float &amp;)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
        </param>
        <param>
          <type>float &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="84" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1af71e60370314f7d47ae6a0bd55cc8fd8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;, double &amp;)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
        </param>
        <param>
          <type>double &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="85" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1abfbd48dd7681eb572435dfa8bb71f8d0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; T &gt;::To</definition>
        <argsstring>(const SrcType &amp;, std::string &amp;)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
        </param>
        <param>
          <type>std::string &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="86" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="86" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1a1b748f6f23fbfcad4aee1af8858daf39" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; T &gt;::ToEnum</definition>
        <argsstring>(const SrcType &amp;, Argument &amp;)</argsstring>
        <name>ToEnum</name>
        <param>
          <type>const SrcType &amp;</type>
        </param>
        <param>
          <type><ref refid="class_bvr_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="89" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="89" bodyend="91"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="55" column="12" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="55" bodyend="92"/>
    <listofallmembers>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1a7c2bc3f83f6e616d0c319058668c4a9c" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom</scope><name>SrcType</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1ad37f724ab34a76737390e18fe3f893f5" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1ac48365b2a984f88e34b292ac61b769cc" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1adb9db3c4d985df7f94df01f194dcea59" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1addd31fa39645936709591039144a3c95" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1a6f701242637388b3ede5fdcfb8ab457b" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1af0355e186a843b2a48dd62123bac32a1" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1a7f7a10409ad1923da7c8790f7fb3fa2b" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1a053f4f2c84295d0f3015d26d8be530d3" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1ad308cbf832e45d3c31432e9e53860215" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1abaf2c55eb0688187a9ca34daa8ce856e" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1aa5b03673599637126eda50fb692cf238" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1af71e60370314f7d47ae6a0bd55cc8fd8" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1abfbd48dd7681eb572435dfa8bb71f8d0" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_1a1b748f6f23fbfcad4aee1af8858daf39" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom</scope><name>ToEnum</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

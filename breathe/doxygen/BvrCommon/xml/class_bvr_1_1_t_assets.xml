<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_bvr_1_1_t_assets" kind="class" language="C++" prot="public">
    <compoundname>Bvr::TAssets</compoundname>
    <basecompoundref refid="struct_bvr_1_1_i_assets" prot="public" virt="non-virtual">Bvr::IAssets</basecompoundref>
    <basecompoundref refid="class_bvr_1_1_e_c_s_1_1_t_basic_dense_storage" prot="private" virt="non-virtual">Bvr::ECS::TBasicDenseStorage&lt; T, typename Handle&lt; T &gt;::EntityT &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename IndexT</type>
        <defval>typename <ref refid="struct_bvr_1_1_handle" kindref="compound">Handle</ref>&lt;T&gt;::EntityT</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_bvr_1_1_t_assets_1a1e466b7214f298849f4802883b80669a" prot="private" static="no">
        <type><ref refid="class_bvr_1_1_e_c_s_1_1_t_basic_dense_storage" kindref="compound">ECS::TBasicDenseStorage</ref>&lt; T, IndexT &gt;</type>
        <definition>using Bvr::TAssets&lt; T, IndexT &gt;::BaseT =  ECS::TBasicDenseStorage&lt;T, IndexT&gt;</definition>
        <argsstring></argsstring>
        <name>BaseT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="107" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_bvr_1_1_t_assets_1a0a52f0119b17e1b4c22467e5b678b4b3" prot="public" static="no">
        <type><ref refid="struct_bvr_1_1_handle" kindref="compound">Handle</ref>&lt; T &gt;</type>
        <definition>using Bvr::TAssets&lt; T, IndexT &gt;::HandleT =  Handle&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>HandleT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="111" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_t_assets_1aae360186b613c2ba631c405282db8881" prot="public" static="no">
        <type>typename <ref refid="class_bvr_1_1_e_c_s_1_1_t_sparse_set_traits" kindref="compound">HandleT::TraitsT</ref></type>
        <definition>using Bvr::TAssets&lt; T, IndexT &gt;::EntityTraitsT =  typename HandleT::TraitsT</definition>
        <argsstring></argsstring>
        <name>EntityTraitsT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="113" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_t_assets_1ad82fdb9492c9b8876aaa87f707450cec" prot="public" static="no">
        <type>typename EntityTraitsT::ValueT</type>
        <definition>using Bvr::TAssets&lt; T, IndexT &gt;::EntityT =  typename EntityTraitsT::ValueT</definition>
        <argsstring></argsstring>
        <name>EntityT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="115" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_t_assets_1a42ea7db6b08f177fcb0017498d4e7042" prot="public" static="no">
        <type>typename <ref refid="struct_bvr_1_1_asset_id" kindref="compound">HandleT::IdT</ref></type>
        <definition>using Bvr::TAssets&lt; T, IndexT &gt;::HandleIdT =  typename HandleT::IdT</definition>
        <argsstring></argsstring>
        <name>HandleIdT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="117" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_t_assets_1a134d0726ea2689c23db7c11068a88a55" prot="public" static="no">
        <type><ref refid="class_bvr_1_1_t_asset_iterator" kindref="compound">TAssetIterator</ref>&lt; <ref refid="class_bvr_1_1_t_assets" kindref="compound">TAssets</ref> &gt;</type>
        <definition>using Bvr::TAssets&lt; T, IndexT &gt;::iterator =  TAssetIterator&lt;TAssets&gt;</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="119" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_t_assets_1a64bc2c6ca5dee9be925d6521769f2eff" prot="public" static="no">
        <type><ref refid="class_bvr_1_1_e_c_s_1_1_t_basic_sparse_set_iterator" kindref="compound">iterator</ref></type>
        <definition>using Bvr::TAssets&lt; T, IndexT &gt;::const_iterator =  iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="120" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_t_assets_1a92d4c2540abcf72b80844f5febe1f08f" prot="public" static="no">
        <type>typename BaseT::difference_type</type>
        <definition>using Bvr::TAssets&lt; T, IndexT &gt;::difference_type =  typename BaseT::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="121" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_t_assets_1a29feeb99eecb9cf65f32a0151370420d" prot="public" static="no">
        <type>typename BaseT::size_type</type>
        <definition>using Bvr::TAssets&lt; T, IndexT &gt;::size_type =  typename BaseT::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="122" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_t_assets_1a4b7a48d596b6c2235501fc6fae4cd303" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend Bvr::TAssets&lt; T, IndexT &gt;::TAssetIterator&lt; TAssets &gt;</definition>
        <argsstring></argsstring>
        <name>TAssetIterator&lt; TAssets &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="109" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_t_assets_1a5c561c20c8f0d72544cdc2040c2ecce6" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_bvr_1_1_asset_lifetime_event" kindref="compound">AssetLifetimeEvent</ref> &gt;</type>
        <definition>std::vector&lt;AssetLifetimeEvent&gt; Bvr::TAssets&lt; T, IndexT &gt;::m_lifetimeEvents</definition>
        <argsstring></argsstring>
        <name>m_lifetimeEvents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="289" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_t_assets_1adc93fe61060d19284aa496c55cd8b885" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_bvr_1_1_asset_event" kindref="compound">AssetEvent</ref>&lt; T &gt; &gt;</type>
        <definition>std::vector&lt;AssetEvent&lt;T&gt; &gt; Bvr::TAssets&lt; T, IndexT &gt;::m_tempAssetEventQueue</definition>
        <argsstring></argsstring>
        <name>m_tempAssetEventQueue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="291" column="20" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_t_assets_1afe76c13891111e6599d4082e6f7555da" prot="private" static="no" mutable="no">
        <type>std::vector&lt; EntityT &gt;</type>
        <definition>std::vector&lt;EntityT&gt; Bvr::TAssets&lt; T, IndexT &gt;::m_entities</definition>
        <argsstring></argsstring>
        <name>m_entities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="292" column="26" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_t_assets_1a5db64100d446dd7da0f52e8127f05261" prot="private" static="no" mutable="no">
        <type>EntityT</type>
        <definition>EntityT Bvr::TAssets&lt; T, IndexT &gt;::m_freeList</definition>
        <argsstring></argsstring>
        <name>m_freeList</name>
        <initializer>= Null</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="293" column="35" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="293" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_t_assets_1a19437e6595abb040662b336fb18722fb" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static auto</type>
        <definition>constexpr static auto Bvr::TAssets&lt; T, IndexT &gt;::Null</definition>
        <argsstring></argsstring>
        <name>Null</name>
        <initializer>= ECS::Null</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="153" column="27" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_t_assets_1a0121d57fbac224acc8a9445f19bf528d" prot="public" static="no" mutable="no">
        <type>SAssetRefCounter::SendFnT</type>
        <definition>SAssetRefCounter::SendFnT Bvr::TAssets&lt; T, IndexT &gt;::m_pSendFn</definition>
        <argsstring></argsstring>
        <name>m_pSendFn</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="286" column="31" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="286" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_bvr_1_1_t_assets_1a037985a90ea1ab8d4be6967d7305e194" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>EntityT</type>
        <definition>EntityT Bvr::TAssets&lt; T, IndexT &gt;::GenerateIdx</definition>
        <argsstring>()</argsstring>
        <name>GenerateIdx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="125" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="125" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_assets_1a082e26a41e834a46013081716cebdbe5" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>EntityT</type>
        <definition>EntityT Bvr::TAssets&lt; T, IndexT &gt;::CreateIdx</definition>
        <argsstring>(const size_type idx)</argsstring>
        <name>CreateIdx</name>
        <param>
          <type>const size_type</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="130" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="130" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_assets_1aef1b977d66e30287b519e65d74f9c633" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>EntityT</type>
        <definition>EntityT Bvr::TAssets&lt; T, IndexT &gt;::RecycleIdx</definition>
        <argsstring>()</argsstring>
        <name>RecycleIdx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="134" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="134" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_assets_1a15c4097b381ccda817dedcde2f3ab910" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::TAssets&lt; T, IndexT &gt;::ReleaseIdx</definition>
        <argsstring>(const EntityT ent)</argsstring>
        <name>ReleaseIdx</name>
        <param>
          <type>const EntityT</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="142" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="142" bodyend="150"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_bvr_1_1_t_assets_1a778f1079ac2f47b03047cb1bee5462b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::TAssets&lt; T, IndexT &gt;::TAssets</definition>
        <argsstring>()</argsstring>
        <name>TAssets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="155" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="155" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_assets_1ad2214374e6108f9c0d1403fdf0d3fb70" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::TAssets&lt; T, IndexT &gt;::~TAssets</definition>
        <argsstring>()</argsstring>
        <name>~TAssets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="157" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="157" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_assets_1a072d54e7eaaae0f766c4909f3276c228" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HDL_NODISCARD <ref refid="struct_bvr_1_1_handle" kindref="compound">HandleT</ref></type>
        <definition>HDL_NODISCARD HandleT Bvr::TAssets&lt; T, IndexT &gt;::WrapHandle</definition>
        <argsstring>(const EntityT hEnt) const</argsstring>
        <name>WrapHandle</name>
        <param>
          <type>const EntityT</type>
          <declname>hEnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="166" column="33" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="166" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_assets_1abb46c56f9d0d5674880ed633a1b0c57e" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>HDL_NODISCARD <ref refid="struct_bvr_1_1_handle_untyped" kindref="compound">HandleUntyped</ref></type>
        <definition>HDL_NODISCARD HandleUntyped Bvr::TAssets&lt; T, IndexT &gt;::ReserveHandle</definition>
        <argsstring>() final</argsstring>
        <name>ReserveHandle</name>
        <reimplements refid="struct_bvr_1_1_i_assets_1a6cd18b31d0ca11663326bd27f40356fc">ReserveHandle</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="172" column="33" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="172" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_assets_1af8372c76b4e8a5f43f59d9795597d572" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Bvr::TAssets&lt; T, IndexT &gt;::Emplace</definition>
        <argsstring>(const HandleUntyped &amp;hDst, void *pVal, bool isUpdate) final</argsstring>
        <name>Emplace</name>
        <reimplements refid="struct_bvr_1_1_i_assets_1a710e5206471dacc47ffafbe0b25f4c6f">Emplace</reimplements>
        <param>
          <type>const <ref refid="struct_bvr_1_1_handle_untyped" kindref="compound">HandleUntyped</ref> &amp;</type>
          <declname>hDst</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pVal</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isUpdate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="177" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="177" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_assets_1afb0db75f1b23f98cf51c4ff49a6d7953" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>HDL_NODISCARD <ref refid="struct_bvr_1_1_handle" kindref="compound">HandleT</ref></type>
        <definition>HDL_NODISCARD HandleT Bvr::TAssets&lt; T, IndexT &gt;::Create</definition>
        <argsstring>()</argsstring>
        <name>Create</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="192" column="27" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="192" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_assets_1a77be37ad6ce6fd80530917379acef830" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>HDL_NODISCARD <ref refid="struct_bvr_1_1_handle" kindref="compound">HandleT</ref></type>
        <definition>HDL_NODISCARD HandleT Bvr::TAssets&lt; T, IndexT &gt;::Create</definition>
        <argsstring>(U &amp;&amp;val)</argsstring>
        <name>Create</name>
        <param>
          <type>U &amp;&amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="204" column="27" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="204" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_assets_1a22256cc6f20625f225b9e43c61ee9099" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>IsAssetHandle</type>
            <declname>Handle</declname>
            <defname>Handle</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Bvr::TAssets&lt; T, IndexT &gt;::Remove</definition>
        <argsstring>(const Handle &amp;h)</argsstring>
        <name>Remove</name>
        <param>
          <type>const <ref refid="struct_bvr_1_1_handle" kindref="compound">Handle</ref> &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="216" column="22" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="216" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_assets_1a86414395701a84e54d04e08db5069abc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::TAssets&lt; T, IndexT &gt;::Remove</definition>
        <argsstring>(const EntityT ent)</argsstring>
        <name>Remove</name>
        <param>
          <type>const EntityT</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="222" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="222" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_assets_1a778c8133f276764c81a52c3a719272b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>IsAssetHandle</type>
            <declname>Handle</declname>
            <defname>Handle</defname>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* Bvr::TAssets&lt; T, IndexT &gt;::GetMut</definition>
        <argsstring>(const Handle &amp;h)</argsstring>
        <name>GetMut</name>
        <param>
          <type>const <ref refid="struct_bvr_1_1_handle" kindref="compound">Handle</ref> &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="228" column="20" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="228" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_assets_1a2b3cfcd5641adb0a19b1580dbd7574fe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>IsAssetHandle</type>
            <declname>Handle</declname>
            <defname>Handle</defname>
          </param>
        </templateparamlist>
        <type>const T *</type>
        <definition>const T* Bvr::TAssets&lt; T, IndexT &gt;::Get</definition>
        <argsstring>(const Handle &amp;h) const</argsstring>
        <name>Get</name>
        <param>
          <type>const <ref refid="struct_bvr_1_1_handle" kindref="compound">Handle</ref> &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="238" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="238" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_assets_1a4ac949cf8377edce45a1f19654c12899" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::TAssets&lt; T, IndexT &gt;::Contains</definition>
        <argsstring>(const HandleT &amp;h) const</argsstring>
        <name>Contains</name>
        <param>
          <type>const <ref refid="struct_bvr_1_1_handle" kindref="compound">HandleT</ref> &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="245" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="245" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_assets_1a0aea0a3b9cb583649ebdf73e629af0a0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::TAssets&lt; T, IndexT &gt;::Contains</definition>
        <argsstring>(const HandleUntyped &amp;h) const</argsstring>
        <name>Contains</name>
        <param>
          <type>const <ref refid="struct_bvr_1_1_handle_untyped" kindref="compound">HandleUntyped</ref> &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="249" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="249" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_assets_1a24cf5faf3a457e1d46a1a01a15cbd66d" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type><ref refid="struct_bvr_1_1_asset_lifetime_event_1_1_interface" kindref="compound">AssetLifetimeEvent::Interface</ref></type>
        <definition>AssetLifetimeEvent::Interface Bvr::TAssets&lt; T, IndexT &gt;::GetLifetimeInterface</definition>
        <argsstring>() final</argsstring>
        <name>GetLifetimeInterface</name>
        <reimplements refid="struct_bvr_1_1_i_assets_1a6a0964119d2d5bbbc38d9974aa2d2459">GetLifetimeInterface</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="256" column="36" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="256" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_assets_1af9b9545da0ebbb75b74c0259228970fc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type Bvr::TAssets&lt; T, IndexT &gt;::Size</definition>
        <argsstring>() const</argsstring>
        <name>Size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="279" column="16" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="279" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_assets_1a83b1840e1f24e8fde5de913ac99ed484" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_e_c_s_1_1_t_basic_sparse_set_iterator" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator Bvr::TAssets&lt; T, IndexT &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="281" column="29" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="281" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_assets_1a4432068dba5de8c667461aa5fcd43a48" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_e_c_s_1_1_t_basic_sparse_set_iterator" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator Bvr::TAssets&lt; T, IndexT &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="284" column="31" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="284" bodyend="284"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_bvr_1_1_t_assets_1a314587539c988c4a5f8169cb84fed8de" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Bvr::TAssets&lt; T, IndexT &gt;::FlushAssetEventsToGlobalQueue</definition>
        <argsstring>(TAssets &amp;self, Events&lt; AssetEvent&lt; T &gt;&gt; &amp;globalQueue)</argsstring>
        <name>FlushAssetEventsToGlobalQueue</name>
        <param>
          <type><ref refid="class_bvr_1_1_t_assets" kindref="compound">TAssets</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">Events</ref>&lt; <ref refid="struct_bvr_1_1_asset_event" kindref="compound">AssetEvent</ref>&lt; T &gt;&gt; &amp;</type>
          <declname>globalQueue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="162" column="33"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_assets_1abbd487752947efbab29ac465eec5f420" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Bvr::TAssets&lt; T, IndexT &gt;::PumpLifetimeEvents</definition>
        <argsstring>(TAssets &amp;self)</argsstring>
        <name>PumpLifetimeEvents</name>
        <param>
          <type><ref refid="class_bvr_1_1_t_assets" kindref="compound">TAssets</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="164" column="33"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Bvr::IAssets</label>
        <link refid="struct_bvr_1_1_i_assets"/>
      </node>
      <node id="3">
        <label>Bvr::ECS::TBasicDenseStorage&lt; T, typename Handle&lt; T &gt;::EntityT &gt;</label>
        <link refid="class_bvr_1_1_e_c_s_1_1_t_basic_dense_storage"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Bvr::TAssets&lt; T, IndexT &gt;</label>
        <link refid="class_bvr_1_1_t_assets"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="private-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Bvr::ECS::TBasicSparseSet&lt; EntT, AllocatorT &gt;</label>
        <link refid="class_bvr_1_1_e_c_s_1_1_t_basic_sparse_set"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Bvr::IAssets</label>
        <link refid="struct_bvr_1_1_i_assets"/>
      </node>
      <node id="3">
        <label>Bvr::ECS::TBasicDenseStorage&lt; T, typename Handle&lt; T &gt;::EntityT &gt;</label>
        <link refid="class_bvr_1_1_e_c_s_1_1_t_basic_dense_storage"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Bvr::TAssets&lt; T, IndexT &gt;</label>
        <link refid="class_bvr_1_1_t_assets"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="private-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Bvr::ECS::TBasicSparseSet&lt; EntT, AllocatorT &gt;</label>
        <link refid="class_bvr_1_1_e_c_s_1_1_t_basic_sparse_set"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="106" column="1" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="106" bodyend="294"/>
    <listofallmembers>
      <member refid="class_bvr_1_1_t_assets_1a1e466b7214f298849f4802883b80669a" prot="private" virt="non-virtual"><scope>Bvr::TAssets</scope><name>BaseT</name></member>
      <member refid="class_bvr_1_1_t_assets_1a83b1840e1f24e8fde5de913ac99ed484" prot="public" virt="non-virtual"><scope>Bvr::TAssets</scope><name>begin</name></member>
      <member refid="class_bvr_1_1_t_assets_1a64bc2c6ca5dee9be925d6521769f2eff" prot="public" virt="non-virtual"><scope>Bvr::TAssets</scope><name>const_iterator</name></member>
      <member refid="class_bvr_1_1_t_assets_1a4ac949cf8377edce45a1f19654c12899" prot="public" virt="non-virtual"><scope>Bvr::TAssets</scope><name>Contains</name></member>
      <member refid="class_bvr_1_1_t_assets_1a0aea0a3b9cb583649ebdf73e629af0a0" prot="public" virt="non-virtual"><scope>Bvr::TAssets</scope><name>Contains</name></member>
      <member refid="class_bvr_1_1_t_assets_1afb0db75f1b23f98cf51c4ff49a6d7953" prot="public" virt="non-virtual"><scope>Bvr::TAssets</scope><name>Create</name></member>
      <member refid="class_bvr_1_1_t_assets_1a77be37ad6ce6fd80530917379acef830" prot="public" virt="non-virtual"><scope>Bvr::TAssets</scope><name>Create</name></member>
      <member refid="class_bvr_1_1_t_assets_1a082e26a41e834a46013081716cebdbe5" prot="private" virt="non-virtual"><scope>Bvr::TAssets</scope><name>CreateIdx</name></member>
      <member refid="class_bvr_1_1_t_assets_1a92d4c2540abcf72b80844f5febe1f08f" prot="public" virt="non-virtual"><scope>Bvr::TAssets</scope><name>difference_type</name></member>
      <member refid="class_bvr_1_1_t_assets_1af8372c76b4e8a5f43f59d9795597d572" prot="public" virt="virtual"><scope>Bvr::TAssets</scope><name>Emplace</name></member>
      <member refid="class_bvr_1_1_t_assets_1a4432068dba5de8c667461aa5fcd43a48" prot="public" virt="non-virtual"><scope>Bvr::TAssets</scope><name>end</name></member>
      <member refid="class_bvr_1_1_t_assets_1ad82fdb9492c9b8876aaa87f707450cec" prot="public" virt="non-virtual"><scope>Bvr::TAssets</scope><name>EntityT</name></member>
      <member refid="class_bvr_1_1_t_assets_1aae360186b613c2ba631c405282db8881" prot="public" virt="non-virtual"><scope>Bvr::TAssets</scope><name>EntityTraitsT</name></member>
      <member refid="class_bvr_1_1_t_assets_1a314587539c988c4a5f8169cb84fed8de" prot="public" virt="non-virtual"><scope>Bvr::TAssets</scope><name>FlushAssetEventsToGlobalQueue</name></member>
      <member refid="class_bvr_1_1_t_assets_1a037985a90ea1ab8d4be6967d7305e194" prot="private" virt="non-virtual"><scope>Bvr::TAssets</scope><name>GenerateIdx</name></member>
      <member refid="class_bvr_1_1_t_assets_1a2b3cfcd5641adb0a19b1580dbd7574fe" prot="public" virt="non-virtual"><scope>Bvr::TAssets</scope><name>Get</name></member>
      <member refid="class_bvr_1_1_t_assets_1a24cf5faf3a457e1d46a1a01a15cbd66d" prot="public" virt="virtual"><scope>Bvr::TAssets</scope><name>GetLifetimeInterface</name></member>
      <member refid="class_bvr_1_1_t_assets_1a778c8133f276764c81a52c3a719272b3" prot="public" virt="non-virtual"><scope>Bvr::TAssets</scope><name>GetMut</name></member>
      <member refid="class_bvr_1_1_t_assets_1a42ea7db6b08f177fcb0017498d4e7042" prot="public" virt="non-virtual"><scope>Bvr::TAssets</scope><name>HandleIdT</name></member>
      <member refid="class_bvr_1_1_t_assets_1a0a52f0119b17e1b4c22467e5b678b4b3" prot="public" virt="non-virtual"><scope>Bvr::TAssets</scope><name>HandleT</name></member>
      <member refid="class_bvr_1_1_t_assets_1a134d0726ea2689c23db7c11068a88a55" prot="public" virt="non-virtual"><scope>Bvr::TAssets</scope><name>iterator</name></member>
      <member refid="class_bvr_1_1_t_assets_1afe76c13891111e6599d4082e6f7555da" prot="private" virt="non-virtual"><scope>Bvr::TAssets</scope><name>m_entities</name></member>
      <member refid="class_bvr_1_1_t_assets_1a5db64100d446dd7da0f52e8127f05261" prot="private" virt="non-virtual"><scope>Bvr::TAssets</scope><name>m_freeList</name></member>
      <member refid="class_bvr_1_1_t_assets_1a5c561c20c8f0d72544cdc2040c2ecce6" prot="private" virt="non-virtual"><scope>Bvr::TAssets</scope><name>m_lifetimeEvents</name></member>
      <member refid="class_bvr_1_1_t_assets_1a0121d57fbac224acc8a9445f19bf528d" prot="public" virt="non-virtual"><scope>Bvr::TAssets</scope><name>m_pSendFn</name></member>
      <member refid="class_bvr_1_1_t_assets_1adc93fe61060d19284aa496c55cd8b885" prot="private" virt="non-virtual"><scope>Bvr::TAssets</scope><name>m_tempAssetEventQueue</name></member>
      <member refid="class_bvr_1_1_t_assets_1a19437e6595abb040662b336fb18722fb" prot="public" virt="non-virtual"><scope>Bvr::TAssets</scope><name>Null</name></member>
      <member refid="class_bvr_1_1_t_assets_1abbd487752947efbab29ac465eec5f420" prot="public" virt="non-virtual"><scope>Bvr::TAssets</scope><name>PumpLifetimeEvents</name></member>
      <member refid="class_bvr_1_1_t_assets_1aef1b977d66e30287b519e65d74f9c633" prot="private" virt="non-virtual"><scope>Bvr::TAssets</scope><name>RecycleIdx</name></member>
      <member refid="class_bvr_1_1_t_assets_1a15c4097b381ccda817dedcde2f3ab910" prot="private" virt="non-virtual"><scope>Bvr::TAssets</scope><name>ReleaseIdx</name></member>
      <member refid="class_bvr_1_1_t_assets_1a22256cc6f20625f225b9e43c61ee9099" prot="public" virt="non-virtual"><scope>Bvr::TAssets</scope><name>Remove</name></member>
      <member refid="class_bvr_1_1_t_assets_1a86414395701a84e54d04e08db5069abc" prot="public" virt="non-virtual"><scope>Bvr::TAssets</scope><name>Remove</name></member>
      <member refid="class_bvr_1_1_t_assets_1abb46c56f9d0d5674880ed633a1b0c57e" prot="public" virt="virtual"><scope>Bvr::TAssets</scope><name>ReserveHandle</name></member>
      <member refid="class_bvr_1_1_t_assets_1af9b9545da0ebbb75b74c0259228970fc" prot="public" virt="non-virtual"><scope>Bvr::TAssets</scope><name>Size</name></member>
      <member refid="class_bvr_1_1_t_assets_1a29feeb99eecb9cf65f32a0151370420d" prot="public" virt="non-virtual"><scope>Bvr::TAssets</scope><name>size_type</name></member>
      <member refid="class_bvr_1_1_t_assets_1a4b7a48d596b6c2235501fc6fae4cd303" prot="private" virt="non-virtual"><scope>Bvr::TAssets</scope><name>TAssetIterator&lt; TAssets &gt;</name></member>
      <member refid="class_bvr_1_1_t_assets_1a778f1079ac2f47b03047cb1bee5462b2" prot="public" virt="non-virtual"><scope>Bvr::TAssets</scope><name>TAssets</name></member>
      <member refid="class_bvr_1_1_t_assets_1a072d54e7eaaae0f766c4909f3276c228" prot="public" virt="non-virtual"><scope>Bvr::TAssets</scope><name>WrapHandle</name></member>
      <member refid="class_bvr_1_1_t_assets_1ad2214374e6108f9c0d1403fdf0d3fb70" prot="public" virt="non-virtual"><scope>Bvr::TAssets</scope><name>~TAssets</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

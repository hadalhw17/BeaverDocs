<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_bvr_1_1_e_c_s_1_1_reg" kind="class" language="C++" prot="public">
    <compoundname>Bvr::ECS::Reg</compoundname>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_bvr_1_1_e_c_s_1_1_reg_1a27d51d751bd65087de39ca4d194de104" prot="public" static="no">
        <type>ECS::TEntity</type>
        <definition>using Bvr::ECS::Reg::TEntity =  ECS::TEntity</definition>
        <argsstring></argsstring>
        <name>TEntity</name>
        <qualifiedname>Bvr::ECS::Reg::TEntity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="451" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="451" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_e_c_s_1_1_reg_1afff99f4e3039ec80c62fec93260d9e28" prot="public" static="no">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">ECS::TEntityTraits</ref></type>
        <definition>using Bvr::ECS::Reg::TEntityTraits =  ECS::TEntityTraits</definition>
        <argsstring></argsstring>
        <name>TEntityTraits</name>
        <qualifiedname>Bvr::ECS::Reg::TEntityTraits</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="452" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="452" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_e_c_s_1_1_reg_1abf229a41012bb00a94ff9c848805db77" prot="public" static="no">
        <type>size_t</type>
        <definition>using Bvr::ECS::Reg::size_type =  size_t</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <qualifiedname>Bvr::ECS::Reg::size_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="490" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="490" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_bvr_1_1_e_c_s_1_1_reg_1a8326df569603fdae026ad10cfc267ba4" prot="private" static="no">
        <type><ref refid="class_bvr_1_1_e_c_s_1_1_t_basic_sparse_set" kindref="compound">TBasicSparseSet</ref>&lt; TEntity &gt;</type>
        <definition>using Bvr::ECS::Reg::TBasePool =  TBasicSparseSet&lt;TEntity&gt;</definition>
        <argsstring></argsstring>
        <name>TBasePool</name>
        <qualifiedname>Bvr::ECS::Reg::TBasePool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="455" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="455" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_e_c_s_1_1_reg_1add32728f4c04f8c1cc2805fbf394651f" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="struct_bvr_1_1_type_info" kindref="compound">TypeInfo</ref>, std::unique_ptr&lt; <ref refid="struct_bvr_1_1_events" kindref="compound">TBasePool</ref> &gt; &gt;</type>
        <definition>std::unordered_map&lt;TypeInfo, std::unique_ptr&lt;TBasePool&gt; &gt; Bvr::ECS::Reg::m_pools</definition>
        <argsstring></argsstring>
        <name>m_pools</name>
        <qualifiedname>Bvr::ECS::Reg::m_pools</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="638" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="638" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_e_c_s_1_1_reg_1ae3fc38386b9f88ac1735591b4494109c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; TEntity &gt;</type>
        <definition>std::vector&lt;TEntity&gt; Bvr::ECS::Reg::m_entities</definition>
        <argsstring></argsstring>
        <name>m_entities</name>
        <qualifiedname>Bvr::ECS::Reg::m_entities</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="639" column="53" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="639" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_e_c_s_1_1_reg_1ae7835674bd471a388d6032fc902a1aee" prot="private" static="no" mutable="no">
        <type>TEntity</type>
        <definition>TEntity Bvr::ECS::Reg::m_freeList</definition>
        <argsstring></argsstring>
        <name>m_freeList</name>
        <qualifiedname>Bvr::ECS::Reg::m_freeList</qualifiedname>
        <initializer>= Null</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="640" column="62" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="640" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1a691ee7c477d3947daa16f7b119582629" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TEntity</type>
        <definition>TEntity Bvr::ECS::Reg::GenerateIdx</definition>
        <argsstring>()</argsstring>
        <name>GenerateIdx</name>
        <qualifiedname>Bvr::ECS::Reg::GenerateIdx</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="457" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="457" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1a71561ea3822c11217da801be14622d66" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TEntity</type>
        <definition>TEntity Bvr::ECS::Reg::CreateIdx</definition>
        <argsstring>(const size_t idx)</argsstring>
        <name>CreateIdx</name>
        <qualifiedname>Bvr::ECS::Reg::CreateIdx</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> size_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="462" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="462" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1ad751a88e53ba801a2aae6b34e959034c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TEntity</type>
        <definition>TEntity Bvr::ECS::Reg::RecycleIdx</definition>
        <argsstring>()</argsstring>
        <name>RecycleIdx</name>
        <qualifiedname>Bvr::ECS::Reg::RecycleIdx</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="467" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="467" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1af0ec805d1b410e5963832555ae97bac4" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">void</ref></type>
        <definition>void Bvr::ECS::Reg::ReleaseIdx</definition>
        <argsstring>(const TEntity ent)</argsstring>
        <name>ReleaseIdx</name>
        <qualifiedname>Bvr::ECS::Reg::ReleaseIdx</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> TEntity</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="476" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="476" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1a3997f0a599c986ff25279a1b433fe7ac" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Reqs</declname>
            <defname>Reqs</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>Wo</declname>
            <defname>Wo</defname>
          </param>
        </templateparamlist>
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">auto</ref></type>
        <definition>auto Bvr::ECS::Reg::MakeQuery</definition>
        <argsstring>(With&lt; Reqs... &gt; with={}, WithOut&lt; Wo... &gt; wo={})</argsstring>
        <name>MakeQuery</name>
        <qualifiedname>Bvr::ECS::Reg::MakeQuery</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_e_c_s_1_1_with" kindref="compound">With</ref>&lt; Reqs... &gt;</type>
          <declname>with</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_e_c_s_1_1_with_out" kindref="compound">WithOut</ref>&lt; Wo... &gt;</type>
          <declname>wo</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="616" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="616" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1aa62e4c6a333697f133a6a5a3e71b5399" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_bvr_1_1_e_c_s_1_1_t_pool" kindref="compound">TPool</ref>&lt; T &gt; &amp;</type>
        <definition>TPool&lt; T &gt; &amp; Bvr::ECS::Reg::Assure</definition>
        <argsstring>()</argsstring>
        <name>Assure</name>
        <qualifiedname>Bvr::ECS::Reg::Assure</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="622" column="23" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="622" bodyend="629"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1a1a5496adc5e5e9827fac444034b84971" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">void</ref></type>
        <definition>void Bvr::ECS::Reg::Rebind</definition>
        <argsstring>()</argsstring>
        <name>Rebind</name>
        <qualifiedname>Bvr::ECS::Reg::Rebind</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="631" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="631" bodyend="635"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1a680e2a643b53da208400cff0edbf4965" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::ECS::Reg::Reg</definition>
        <argsstring>()=default</argsstring>
        <name>Reg</name>
        <qualifiedname>Bvr::ECS::Reg::Reg</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="492" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1a8df710bc361526b9b4df220f1c5db32b" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::ECS::Reg::Reg</definition>
        <argsstring>(Reg &amp;&amp;other) noexcept</argsstring>
        <name>Reg</name>
        <qualifiedname>Bvr::ECS::Reg::Reg</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_e_c_s_1_1_reg" kindref="compound">Reg</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="494" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="494" bodyend="499"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1a20ac84fbd5643dd2c8f5a164bf98acab" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_e_c_s_1_1_reg" kindref="compound">Reg</ref> &amp;</type>
        <definition>Reg &amp; Bvr::ECS::Reg::operator=</definition>
        <argsstring>(Reg &amp;&amp;other) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>Bvr::ECS::Reg::operator=</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_e_c_s_1_1_reg" kindref="compound">Reg</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="501" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="501" bodyend="512"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1a80bd442d870b770083215103fb1a08fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::ECS::Reg::~Reg</definition>
        <argsstring>()=default</argsstring>
        <name>~Reg</name>
        <qualifiedname>Bvr::ECS::Reg::~Reg</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="514" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1a63ae84b32d197ed58167cd63f9f15185" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TEntity</type>
        <definition>TEntity Bvr::ECS::Reg::Create</definition>
        <argsstring>()</argsstring>
        <name>Create</name>
        <qualifiedname>Bvr::ECS::Reg::Create</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="516" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="516" bodyend="516"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1acaa240ef9b7898819cc88f72e1d6369f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">void</ref></type>
        <definition>void Bvr::ECS::Reg::Release</definition>
        <argsstring>(const TEntity ent)</argsstring>
        <name>Release</name>
        <qualifiedname>Bvr::ECS::Reg::Release</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> TEntity</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="518" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="518" bodyend="523"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1aa7b4b0f1f3d7bd7fe105b0b3b69d0028" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">TBasePool</ref> *</type>
        <definition>TBasePool * Bvr::ECS::Reg::FindPool</definition>
        <argsstring>(const TypeInfo &amp;typeInfo) const</argsstring>
        <name>FindPool</name>
        <qualifiedname>Bvr::ECS::Reg::FindPool</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_type_info" kindref="compound">TypeInfo</ref> &amp;</type>
          <declname>typeInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="525" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="525" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1a84525fb21b6c8769aff326fa5870b7e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>bool Bvr::ECS::Reg::Contains</definition>
        <argsstring>(const TEntity ent) const</argsstring>
        <name>Contains</name>
        <qualifiedname>Bvr::ECS::Reg::Contains</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> TEntity</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="532" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="532" bodyend="535"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1a54e561c73c9c6e77fab78f8edf5fea52" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">decltype</ref>(<ref refid="struct_bvr_1_1_events" kindref="compound">auto</ref>)</type>
        <definition>decltype(auto) Bvr::ECS::Reg::AddComonent</definition>
        <argsstring>(const TEntity ent, Ts &amp;&amp;... args)</argsstring>
        <name>AddComonent</name>
        <qualifiedname>Bvr::ECS::Reg::AddComonent</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> TEntity</type>
          <declname>ent</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">Ts</ref> &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="538" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="538" bodyend="540"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1a12afcab6bce703bd52b216eb24f4f606" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">decltype</ref>(<ref refid="struct_bvr_1_1_events" kindref="compound">auto</ref>)</type>
        <definition>decltype(auto) Bvr::ECS::Reg::GetComponent</definition>
        <argsstring>(const TEntity ent, Ts &amp;&amp;... args)</argsstring>
        <name>GetComponent</name>
        <qualifiedname>Bvr::ECS::Reg::GetComponent</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> TEntity</type>
          <declname>ent</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">Ts</ref> &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="543" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="543" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1a3254da20805484e9bd5762131b4bdb3c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>bool Bvr::ECS::Reg::Has</definition>
        <argsstring>(const TEntity ent) const</argsstring>
        <name>Has</name>
        <qualifiedname>Bvr::ECS::Reg::Has</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> TEntity</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="547" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="547" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1a23bcdc8ea0503d169ca79872b93b5997" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> <ref refid="struct_bvr_1_1_events" kindref="compound">Comp</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">void</ref></type>
        <definition>void Bvr::ECS::Reg::OnUpdate</definition>
        <argsstring>(TSignalFn signal)</argsstring>
        <name>OnUpdate</name>
        <qualifiedname>Bvr::ECS::Reg::OnUpdate</qualifiedname>
        <param>
          <type>TSignalFn</type>
          <declname>signal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="554" column="22" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="554" bodyend="556"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1aed8fdfdef685e18cff5a4bfbe8a08236" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> <ref refid="struct_bvr_1_1_events" kindref="compound">Comp</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">void</ref></type>
        <definition>void Bvr::ECS::Reg::OnInit</definition>
        <argsstring>(TSignalFn signal)</argsstring>
        <name>OnInit</name>
        <qualifiedname>Bvr::ECS::Reg::OnInit</qualifiedname>
        <param>
          <type>TSignalFn</type>
          <declname>signal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="558" column="22" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="558" bodyend="560"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1a8696f2dfd8a13444dbf91948789d10ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> <ref refid="struct_bvr_1_1_events" kindref="compound">Comp</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">void</ref></type>
        <definition>void Bvr::ECS::Reg::OnRemove</definition>
        <argsstring>(TSignalFn signal)</argsstring>
        <name>OnRemove</name>
        <qualifiedname>Bvr::ECS::Reg::OnRemove</qualifiedname>
        <param>
          <type>TSignalFn</type>
          <declname>signal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="562" column="22" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="562" bodyend="564"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1a5f09fa0dd3742831997c5c25b6017d33" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> <ref refid="struct_bvr_1_1_events" kindref="compound">TWith</ref></type>
          </param>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> <ref refid="struct_bvr_1_1_events" kindref="compound">TWithOut</ref></type>
            <defval><ref refid="struct_bvr_1_1_e_c_s_1_1_with_out" kindref="compound">WithOut</ref>&lt;&gt;</defval>
          </param>
        </templateparamlist>
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">auto</ref></type>
        <definition>auto Bvr::ECS::Reg::Query</definition>
        <argsstring>()</argsstring>
        <name>Query</name>
        <qualifiedname>Bvr::ECS::Reg::Query</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="566" column="26" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="566" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1a530c5072e44cd007437db8f55d36a53e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_bvr_1_1_e_c_s_1_1_t_pool" kindref="compound">TPool</ref>&lt; T &gt; &amp;</type>
        <definition>TPool&lt; T &gt; &amp; Bvr::ECS::Reg::Storage</definition>
        <argsstring>()</argsstring>
        <name>Storage</name>
        <qualifiedname>Bvr::ECS::Reg::Storage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="570" column="23" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="570" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1a4e81cb1ec132a8a172f2764c2a433192" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>bool Bvr::ECS::Reg::valid</definition>
        <argsstring>(const TEntity ent) const</argsstring>
        <name>valid</name>
        <qualifiedname>Bvr::ECS::Reg::valid</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> TEntity</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="571" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="571" bodyend="571"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1a3e3322b0d3570879a224e3e95fc9572a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TEntity</type>
        <definition>TEntity Bvr::ECS::Reg::create</definition>
        <argsstring>()</argsstring>
        <name>create</name>
        <qualifiedname>Bvr::ECS::Reg::create</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="574" column="37" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="574" bodyend="574"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1abfff49560f5e5ae26d94e65aeabe913c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> <ref refid="struct_bvr_1_1_events" kindref="compound">Comp</ref></type>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>size_t Bvr::ECS::Reg::remove</definition>
        <argsstring>(const TEntity ent)</argsstring>
        <name>remove</name>
        <qualifiedname>Bvr::ECS::Reg::remove</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> TEntity</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="575" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="575" bodyend="577"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1a980b1c72c00bd7738e6636096ae694ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> <ref refid="struct_bvr_1_1_events" kindref="compound">Comp</ref></type>
          </param>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> <ref refid="struct_bvr_1_1_events" kindref="compound">Iterator</ref></type>
          </param>
        </templateparamlist>
        <type>size_type</type>
        <definition>size_type Bvr::ECS::Reg::remove</definition>
        <argsstring>(Iterator begin, Iterator end)</argsstring>
        <name>remove</name>
        <qualifiedname>Bvr::ECS::Reg::remove</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">Iterator</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">Iterator</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="579" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="579" bodyend="581"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1a487805eeab802ccc48d5179108cf42fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> <ref refid="struct_bvr_1_1_events" kindref="compound">Comp</ref></type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">decltype</ref>(<ref refid="struct_bvr_1_1_events" kindref="compound">auto</ref>)</type>
        <definition>decltype(auto) Bvr::ECS::Reg::patch</definition>
        <argsstring>(const TEntity ent, Args &amp;&amp;... args)</argsstring>
        <name>patch</name>
        <qualifiedname>Bvr::ECS::Reg::patch</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> TEntity</type>
          <declname>ent</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">Args</ref> &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="584" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="584" bodyend="586"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1af9f4a99191ee22abf899d225f4f35b05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> <ref refid="struct_bvr_1_1_events" kindref="compound">Comp</ref></type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">decltype</ref>(<ref refid="struct_bvr_1_1_events" kindref="compound">auto</ref>)</type>
        <definition>decltype(auto) Bvr::ECS::Reg::emplace_or_replace</definition>
        <argsstring>(const TEntity ent, Args &amp;&amp;... args)</argsstring>
        <name>emplace_or_replace</name>
        <qualifiedname>Bvr::ECS::Reg::emplace_or_replace</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> TEntity</type>
          <declname>ent</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">Args</ref> &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="589" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="589" bodyend="597"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1ae9f90a0cb856eb07ab3996df380711c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">decltype</ref>(<ref refid="struct_bvr_1_1_events" kindref="compound">auto</ref>)</type>
        <definition>decltype(auto) Bvr::ECS::Reg::emplace</definition>
        <argsstring>(const TEntity ent, Args &amp;&amp;... args)</argsstring>
        <name>emplace</name>
        <qualifiedname>Bvr::ECS::Reg::emplace</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> TEntity</type>
          <declname>ent</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">Args</ref> &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="600" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="600" bodyend="602"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1a6b6c60a190d1bf585206d86413e72f43" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> T</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">decltype</ref>(<ref refid="struct_bvr_1_1_events" kindref="compound">auto</ref>)</type>
        <definition>decltype(auto) Bvr::ECS::Reg::get</definition>
        <argsstring>(const TEntity ent)</argsstring>
        <name>get</name>
        <qualifiedname>Bvr::ECS::Reg::get</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> TEntity</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="603" column="26" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="603" bodyend="605"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1aaff93625e8a6e7adb0786670024a9936" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> T</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">decltype</ref>(<ref refid="struct_bvr_1_1_events" kindref="compound">auto</ref>)</type>
        <definition>decltype(auto) Bvr::ECS::Reg::get</definition>
        <argsstring>(const TEntity ent) const</argsstring>
        <name>get</name>
        <qualifiedname>Bvr::ECS::Reg::get</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> TEntity</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="606" column="26" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="606" bodyend="608"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_e_c_s_1_1_reg_1a0155eefcf891803453f8435be053644c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> <ref refid="struct_bvr_1_1_events" kindref="compound">Comp</ref></type>
          </param>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> <ref refid="struct_bvr_1_1_events" kindref="compound">Pred</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">void</ref></type>
        <definition>void Bvr::ECS::Reg::sort</definition>
        <argsstring>(Pred pred={})</argsstring>
        <name>sort</name>
        <qualifiedname>Bvr::ECS::Reg::sort</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">Pred</ref></type>
          <declname>pred</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="610" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="610" bodyend="612"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" line="449" column="1" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/Registry.hpp" bodystart="449" bodyend="641"/>
    <listofallmembers>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1a54e561c73c9c6e77fab78f8edf5fea52" prot="public" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>AddComonent</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1aa62e4c6a333697f133a6a5a3e71b5399" prot="private" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>Assure</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1a84525fb21b6c8769aff326fa5870b7e7" prot="public" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>Contains</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1a63ae84b32d197ed58167cd63f9f15185" prot="public" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>Create</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1a3e3322b0d3570879a224e3e95fc9572a" prot="public" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>create</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1a71561ea3822c11217da801be14622d66" prot="private" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>CreateIdx</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1ae9f90a0cb856eb07ab3996df380711c5" prot="public" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>emplace</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1af9f4a99191ee22abf899d225f4f35b05" prot="public" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>emplace_or_replace</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1aa7b4b0f1f3d7bd7fe105b0b3b69d0028" prot="public" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>FindPool</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1a691ee7c477d3947daa16f7b119582629" prot="private" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>GenerateIdx</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1a6b6c60a190d1bf585206d86413e72f43" prot="public" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>get</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1aaff93625e8a6e7adb0786670024a9936" prot="public" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>get</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1a12afcab6bce703bd52b216eb24f4f606" prot="public" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>GetComponent</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1a3254da20805484e9bd5762131b4bdb3c" prot="public" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>Has</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1ae3fc38386b9f88ac1735591b4494109c" prot="private" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>m_entities</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1ae7835674bd471a388d6032fc902a1aee" prot="private" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>m_freeList</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1add32728f4c04f8c1cc2805fbf394651f" prot="private" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>m_pools</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1a3997f0a599c986ff25279a1b433fe7ac" prot="private" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>MakeQuery</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1aed8fdfdef685e18cff5a4bfbe8a08236" prot="public" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>OnInit</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1a8696f2dfd8a13444dbf91948789d10ac" prot="public" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>OnRemove</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1a23bcdc8ea0503d169ca79872b93b5997" prot="public" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>OnUpdate</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1a20ac84fbd5643dd2c8f5a164bf98acab" prot="public" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>operator=</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1a487805eeab802ccc48d5179108cf42fa" prot="public" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>patch</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1a5f09fa0dd3742831997c5c25b6017d33" prot="public" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>Query</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1a1a5496adc5e5e9827fac444034b84971" prot="private" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>Rebind</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1ad751a88e53ba801a2aae6b34e959034c" prot="private" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>RecycleIdx</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1a680e2a643b53da208400cff0edbf4965" prot="public" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>Reg</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1a8df710bc361526b9b4df220f1c5db32b" prot="public" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>Reg</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1acaa240ef9b7898819cc88f72e1d6369f" prot="public" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>Release</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1af0ec805d1b410e5963832555ae97bac4" prot="private" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>ReleaseIdx</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1abfff49560f5e5ae26d94e65aeabe913c" prot="public" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>remove</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1a980b1c72c00bd7738e6636096ae694ff" prot="public" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>remove</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1abf229a41012bb00a94ff9c848805db77" prot="public" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>size_type</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1a0155eefcf891803453f8435be053644c" prot="public" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>sort</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1a530c5072e44cd007437db8f55d36a53e" prot="public" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>Storage</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1a8326df569603fdae026ad10cfc267ba4" prot="private" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>TBasePool</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1a27d51d751bd65087de39ca4d194de104" prot="public" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>TEntity</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1afff99f4e3039ec80c62fec93260d9e28" prot="public" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>TEntityTraits</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1a4e81cb1ec132a8a172f2764c2a433192" prot="public" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>valid</name></member>
      <member refid="class_bvr_1_1_e_c_s_1_1_reg_1a80bd442d870b770083215103fb1a08fc" prot="public" virt="non-virtual"><scope>Bvr::ECS::Reg</scope><name>~Reg</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_bvr_1_1_meta_1_1_variant_associative_view" kind="class" language="C++" prot="public">
    <compoundname>Bvr::Meta::VariantAssociativeView</compoundname>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_bvr_1_1_meta_1_1_variant_associative_view_1a42c32a9f61dcd90e073dd6f1aae481ad" prot="private" static="no">
        <templateparamlist>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> <ref refid="struct_bvr_1_1_events" kindref="compound">ConstT</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_bvr_1_1_meta_1_1_detail_1_1_associative_container_binder_wrapper" kindref="compound">Detail::AssociativeContainerBinderWrapper</ref>&lt; T, <ref refid="struct_bvr_1_1_events" kindref="compound">ConstT</ref> &gt;</type>
        <definition>using Bvr::Meta::VariantAssociativeView::TWrapper =  Detail::AssociativeContainerBinderWrapper&lt;T, ConstT&gt;</definition>
        <argsstring></argsstring>
        <name>TWrapper</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::TWrapper</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="8" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_meta_1_1_variant_associative_view_1a00b56a9a37467040d9071c0bfc809e9c" prot="private" static="no">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref>(*)(<ref refid="struct_bvr_1_1_events" kindref="compound">void</ref> *<ref refid="struct_bvr_1_1_events" kindref="compound">pContainer</ref>)</type>
        <definition>using Bvr::Meta::VariantAssociativeView::EmptyFn =  bool (*)(void* pContainer)</definition>
        <argsstring></argsstring>
        <name>EmptyFn</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::EmptyFn</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="94" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_meta_1_1_variant_associative_view_1a83bdd2bdbfacbc9649656490ac1a25e8" prot="private" static="no">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">void</ref>(*)(<ref refid="struct_bvr_1_1_events" kindref="compound">void</ref> *<ref refid="struct_bvr_1_1_events" kindref="compound">pContainer</ref>)</type>
        <definition>using Bvr::Meta::VariantAssociativeView::ClearFn =  void (*)(void* pContainer)</definition>
        <argsstring></argsstring>
        <name>ClearFn</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::ClearFn</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="95" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_meta_1_1_variant_associative_view_1a25fafe4b38be16098dbc622c7389801e" prot="private" static="no">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">void</ref>(*)(<ref refid="struct_bvr_1_1_events" kindref="compound">void</ref> *<ref refid="struct_bvr_1_1_events" kindref="compound">pContainer</ref>, Detail::IteratorData &amp;<ref refid="struct_bvr_1_1_events" kindref="compound">itr</ref>)</type>
        <definition>using Bvr::Meta::VariantAssociativeView::BeginFn =  void (*)(void* pContainer, Detail::IteratorData&amp; itr)</definition>
        <argsstring></argsstring>
        <name>BeginFn</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::BeginFn</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="96" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_meta_1_1_variant_associative_view_1aa16b0afbec57bcb232377e41e29d37a6" prot="private" static="no">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">void</ref>(*)(<ref refid="struct_bvr_1_1_events" kindref="compound">void</ref> *<ref refid="struct_bvr_1_1_events" kindref="compound">pContainer</ref>, Detail::IteratorData &amp;<ref refid="struct_bvr_1_1_events" kindref="compound">itr</ref>)</type>
        <definition>using Bvr::Meta::VariantAssociativeView::EndFn =  void (*)(void* pContainer, Detail::IteratorData&amp; itr)</definition>
        <argsstring></argsstring>
        <name>EndFn</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::EndFn</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="97" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_meta_1_1_variant_associative_view_1aba417b427dbbb4f787669ec965713af3" prot="private" static="no">
        <type>std::size_t(*)(<ref refid="struct_bvr_1_1_events" kindref="compound">void</ref> *<ref refid="struct_bvr_1_1_events" kindref="compound">pContainer</ref>)</type>
        <definition>using Bvr::Meta::VariantAssociativeView::SizeFn =  std::size_t (*)(void* pContainer)</definition>
        <argsstring></argsstring>
        <name>SizeFn</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::SizeFn</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="98" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_meta_1_1_variant_associative_view_1a48230c660154388004684a8b72988b41" prot="private" static="no">
        <type>std::size_t(*)(<ref refid="struct_bvr_1_1_events" kindref="compound">void</ref> *<ref refid="struct_bvr_1_1_events" kindref="compound">pContainer</ref>, <ref refid="class_bvr_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &amp;<ref refid="struct_bvr_1_1_events" kindref="compound">key</ref>)</type>
        <definition>using Bvr::Meta::VariantAssociativeView::EraseFn =  std::size_t (*)(void* pContainer, Argument&amp; key)</definition>
        <argsstring></argsstring>
        <name>EraseFn</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::EraseFn</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="99" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_meta_1_1_variant_associative_view_1a39774475227e4af4e51fc4aab19a7b34" prot="private" static="no">
        <type><ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref>(*)(Detail::IteratorData &amp;<ref refid="struct_bvr_1_1_events" kindref="compound">posIt</ref>)</type>
        <definition>using Bvr::Meta::VariantAssociativeView::GetKeyFn =  Variant (*)(Detail::IteratorData&amp; posIt)</definition>
        <argsstring></argsstring>
        <name>GetKeyFn</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::GetKeyFn</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="100" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_meta_1_1_variant_associative_view_1a9279b6deb9e7cc2c6d623d884ceebe4a" prot="private" static="no">
        <type><ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref>(*)(Detail::IteratorData &amp;<ref refid="struct_bvr_1_1_events" kindref="compound">posIt</ref>)</type>
        <definition>using Bvr::Meta::VariantAssociativeView::GetValueFn =  Variant (*)(Detail::IteratorData&amp; posIt)</definition>
        <argsstring></argsstring>
        <name>GetValueFn</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::GetValueFn</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="101" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_meta_1_1_variant_associative_view_1aa9649ec28bac8c81051df8b25ef055ca" prot="private" static="no">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref>(*)(<ref refid="struct_bvr_1_1_events" kindref="compound">void</ref> *<ref refid="struct_bvr_1_1_events" kindref="compound">pContainer</ref>, <ref refid="class_bvr_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &amp;<ref refid="struct_bvr_1_1_events" kindref="compound">key</ref>, Detail::IteratorData &amp;<ref refid="struct_bvr_1_1_events" kindref="compound">outIt</ref>)</type>
        <definition>using Bvr::Meta::VariantAssociativeView::InsertKeyFn =  bool (*)(void* pContainer, Argument&amp; key, Detail::IteratorData&amp; outIt)</definition>
        <argsstring></argsstring>
        <name>InsertKeyFn</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::InsertKeyFn</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="102" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_meta_1_1_variant_associative_view_1aa4984f16132d70cd72801be5e2c9362c" prot="private" static="no">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref>(*)(<ref refid="struct_bvr_1_1_events" kindref="compound">void</ref> *<ref refid="struct_bvr_1_1_events" kindref="compound">pContainer</ref>, <ref refid="class_bvr_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &amp;<ref refid="struct_bvr_1_1_events" kindref="compound">key</ref>, <ref refid="class_bvr_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &amp;value, Detail::IteratorData &amp;<ref refid="struct_bvr_1_1_events" kindref="compound">outIt</ref>)</type>
        <definition>using Bvr::Meta::VariantAssociativeView::InsertKeyValueFn =  bool (*)(void* pContainer, Argument&amp; key, Argument&amp; value, Detail::IteratorData&amp; outIt)</definition>
        <argsstring></argsstring>
        <name>InsertKeyValueFn</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::InsertKeyValueFn</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="104" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_meta_1_1_variant_associative_view_1a7d180e88e257ad1373a258b905eed8b2" prot="private" static="no">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">void</ref>(*)(<ref refid="struct_bvr_1_1_events" kindref="compound">void</ref> *<ref refid="struct_bvr_1_1_events" kindref="compound">pContainer</ref>, <ref refid="class_bvr_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &amp;<ref refid="struct_bvr_1_1_events" kindref="compound">key</ref>, Detail::IteratorData &amp;<ref refid="struct_bvr_1_1_events" kindref="compound">outIt</ref>)</type>
        <definition>using Bvr::Meta::VariantAssociativeView::FindFn =  void (*)(void* pContainer, Argument&amp; key, Detail::IteratorData&amp; outIt)</definition>
        <argsstring></argsstring>
        <name>FindFn</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::FindFn</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="107" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_meta_1_1_variant_associative_view_1a33438525dfe86f3b0283bae7f4fc185b" prot="private" static="no">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref>(*)(<ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> Detail::IteratorData &amp;<ref refid="struct_bvr_1_1_events" kindref="compound">rhs</ref>, <ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> Detail::IteratorData &amp;<ref refid="struct_bvr_1_1_events" kindref="compound">lhs</ref>)</type>
        <definition>using Bvr::Meta::VariantAssociativeView::EqualFn =  bool (*)(const Detail::IteratorData&amp; rhs, const Detail::IteratorData&amp; lhs)</definition>
        <argsstring></argsstring>
        <name>EqualFn</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::EqualFn</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="109" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_meta_1_1_variant_associative_view_1a6ac16c91cfabdb00b1b2815cde0d1f05" prot="private" static="no">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">void</ref>(*)(Detail::IteratorData &amp;<ref refid="struct_bvr_1_1_events" kindref="compound">outIt</ref>, std::ptrdiff_t index)</type>
        <definition>using Bvr::Meta::VariantAssociativeView::AdvanceFn =  void (*)(Detail::IteratorData&amp; outIt, std::ptrdiff_t index)</definition>
        <argsstring></argsstring>
        <name>AdvanceFn</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::AdvanceFn</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="111" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_meta_1_1_variant_associative_view_1aa1a3b27e1dc5529c8e325ec2b747a548" prot="private" static="no" mutable="no">
        <type><ref refid="class_bvr_1_1_meta_1_1_type" kindref="compound">Type</ref></type>
        <definition>Type Bvr::Meta::VariantAssociativeView::m_type</definition>
        <argsstring></argsstring>
        <name>m_type</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::m_type</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="114" column="35" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_meta_1_1_variant_associative_view_1a840838cd7c244519613cf21ab4a05bfe" prot="private" static="no" mutable="no">
        <type><ref refid="class_bvr_1_1_meta_1_1_type" kindref="compound">Type</ref></type>
        <definition>Type Bvr::Meta::VariantAssociativeView::m_keyType</definition>
        <argsstring></argsstring>
        <name>m_keyType</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::m_keyType</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="115" column="35" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_meta_1_1_variant_associative_view_1a7912192ec4e282163d4e6e5abcfbcc95" prot="private" static="no" mutable="no">
        <type><ref refid="class_bvr_1_1_meta_1_1_type" kindref="compound">Type</ref></type>
        <definition>Type Bvr::Meta::VariantAssociativeView::m_valueType</definition>
        <argsstring></argsstring>
        <name>m_valueType</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::m_valueType</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="116" column="35" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_meta_1_1_variant_associative_view_1a5d470e813f65183aadf76461dadc737e" prot="private" static="no" mutable="no">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">void</ref> *</type>
        <definition>void* Bvr::Meta::VariantAssociativeView::m_pContainer</definition>
        <argsstring></argsstring>
        <name>m_pContainer</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::m_pContainer</qualifiedname>
        <initializer>{<ref refid="struct_bvr_1_1_events" kindref="compound">nullptr</ref>}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="117" column="34" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_meta_1_1_variant_associative_view_1a6fd14d04ab0a7764f26d156dd12669de" prot="private" static="no" mutable="no">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">EmptyFn</ref></type>
        <definition>EmptyFn Bvr::Meta::VariantAssociativeView::m_emptyFn</definition>
        <argsstring></argsstring>
        <name>m_emptyFn</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::m_emptyFn</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="119" column="35" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_meta_1_1_variant_associative_view_1af61fd47ec007441f03f79ec605bea458" prot="private" static="no" mutable="no">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">ClearFn</ref></type>
        <definition>ClearFn Bvr::Meta::VariantAssociativeView::m_clearFn</definition>
        <argsstring></argsstring>
        <name>m_clearFn</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::m_clearFn</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="120" column="35" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_meta_1_1_variant_associative_view_1ab347644d8660afafeb27efef0b99a2c1" prot="private" static="no" mutable="no">
        <type>BeginFn</type>
        <definition>BeginFn Bvr::Meta::VariantAssociativeView::m_beginFn</definition>
        <argsstring></argsstring>
        <name>m_beginFn</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::m_beginFn</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="121" column="35" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="121" bodyend="121"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_meta_1_1_variant_associative_view_1a05bdafeea2d0579b807bb2169dcf7334" prot="private" static="no" mutable="no">
        <type>EndFn</type>
        <definition>EndFn Bvr::Meta::VariantAssociativeView::m_endFn</definition>
        <argsstring></argsstring>
        <name>m_endFn</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::m_endFn</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="122" column="35" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_meta_1_1_variant_associative_view_1a043525d61f4992217405bb7e3aafee59" prot="private" static="no" mutable="no">
        <type>EqualFn</type>
        <definition>EqualFn Bvr::Meta::VariantAssociativeView::m_equalFn</definition>
        <argsstring></argsstring>
        <name>m_equalFn</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::m_equalFn</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="123" column="35" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_meta_1_1_variant_associative_view_1af82470da6fd89fa1cc1192a47f7f77b4" prot="private" static="no" mutable="no">
        <type>SizeFn</type>
        <definition>SizeFn Bvr::Meta::VariantAssociativeView::m_sizeFn</definition>
        <argsstring></argsstring>
        <name>m_sizeFn</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::m_sizeFn</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="124" column="35" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_meta_1_1_variant_associative_view_1a290bcd193a435c6a8645b709d21d3c33" prot="private" static="no" mutable="no">
        <type>EraseFn</type>
        <definition>EraseFn Bvr::Meta::VariantAssociativeView::m_eraseFn</definition>
        <argsstring></argsstring>
        <name>m_eraseFn</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::m_eraseFn</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="125" column="35" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_meta_1_1_variant_associative_view_1a9f1a7fc7c132387b3583e7cba14536ea" prot="private" static="no" mutable="no">
        <type>GetKeyFn</type>
        <definition>GetKeyFn Bvr::Meta::VariantAssociativeView::m_getKeyFn</definition>
        <argsstring></argsstring>
        <name>m_getKeyFn</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::m_getKeyFn</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="126" column="35" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_meta_1_1_variant_associative_view_1a24826cf8fb17ec3749e91da82e99fc3e" prot="private" static="no" mutable="no">
        <type>GetValueFn</type>
        <definition>GetValueFn Bvr::Meta::VariantAssociativeView::m_getValueFn</definition>
        <argsstring></argsstring>
        <name>m_getValueFn</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::m_getValueFn</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="127" column="35" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_meta_1_1_variant_associative_view_1acb6b2ba64054ae278136105abbea81bc" prot="private" static="no" mutable="no">
        <type>InsertKeyFn</type>
        <definition>InsertKeyFn Bvr::Meta::VariantAssociativeView::m_insertKeyFn</definition>
        <argsstring></argsstring>
        <name>m_insertKeyFn</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::m_insertKeyFn</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="128" column="35" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_meta_1_1_variant_associative_view_1a84500ce91e3d06d39f36e64d38d3ed23" prot="private" static="no" mutable="no">
        <type>InsertKeyValueFn</type>
        <definition>InsertKeyValueFn Bvr::Meta::VariantAssociativeView::m_insertKeyValueFn</definition>
        <argsstring></argsstring>
        <name>m_insertKeyValueFn</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::m_insertKeyValueFn</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="129" column="35" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_meta_1_1_variant_associative_view_1a26a5cc17bd110fd1625d1fc4ade4f9b2" prot="private" static="no" mutable="no">
        <type>FindFn</type>
        <definition>FindFn Bvr::Meta::VariantAssociativeView::m_findFn</definition>
        <argsstring></argsstring>
        <name>m_findFn</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::m_findFn</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="130" column="35" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_meta_1_1_variant_associative_view_1afa9bccba77cf437da1ef9dbc7a392cc1" prot="private" static="no" mutable="no">
        <type>AdvanceFn</type>
        <definition>AdvanceFn Bvr::Meta::VariantAssociativeView::m_advanceFn</definition>
        <argsstring></argsstring>
        <name>m_advanceFn</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::m_advanceFn</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="131" column="35" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="131" bodyend="131"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_associative_view_1a17dfcfcae9199f86e1e891db5497ac62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::Meta::VariantAssociativeView::VariantAssociativeView</definition>
        <argsstring>()=default</argsstring>
        <name>VariantAssociativeView</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::VariantAssociativeView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="10" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_associative_view_1a807d1e13f6d34a995e3d8d60567cdbe2" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> T</type>
          </param>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> <ref refid="struct_bvr_1_1_events" kindref="compound">TRaw</ref></type>
            <defval>Detail::RawTypeT&lt;T&gt;</defval>
          </param>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> <ref refid="struct_bvr_1_1_events" kindref="compound">ConstT</ref></type>
            <defval>std::remove_pointer_t&lt;T&gt;</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Bvr::Meta::VariantAssociativeView::VariantAssociativeView</definition>
        <argsstring>(const T &amp;container) noexcept</argsstring>
        <name>VariantAssociativeView</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::VariantAssociativeView</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> T &amp;</type>
          <declname>container</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="14" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="14" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_associative_view_1af0656a635880e9dea8fc31b9a6457d0d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_type" kindref="compound">Type</ref></type>
        <definition>Type Bvr::Meta::VariantAssociativeView::GetType</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetType</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::GetType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="35" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_associative_view_1a593bae9a94651e23d71d4e34333c2b86" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_type" kindref="compound">Type</ref></type>
        <definition>Type Bvr::Meta::VariantAssociativeView::GetKeyType</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetKeyType</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::GetKeyType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="37" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_associative_view_1ae13c1b0f7446f4b78dfe6069ed20c17f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_type" kindref="compound">Type</ref></type>
        <definition>Type Bvr::Meta::VariantAssociativeView::GetValueType</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetValueType</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::GetValueType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="39" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_associative_view_1ae8341a1fbc2dd02a115f54e1ffcb68d1" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>bool Bvr::Meta::VariantAssociativeView::empty</definition>
        <argsstring>() const noexcept</argsstring>
        <name>empty</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="41" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_associative_view_1add2bc3415fc22fc35c736a996175e132" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">void</ref></type>
        <definition>void Bvr::Meta::VariantAssociativeView::clear</definition>
        <argsstring>() const noexcept</argsstring>
        <name>clear</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::clear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="43" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_associative_view_1af146877fd7db172ef02793be8efd001a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">void</ref></type>
        <definition>void Bvr::Meta::VariantAssociativeView::begin</definition>
        <argsstring>(Detail::IteratorData &amp;it) const noexcept</argsstring>
        <name>begin</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::begin</qualifiedname>
        <param>
          <type>Detail::IteratorData &amp;</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="45" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="45" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_associative_view_1a61a225c8f94809b66d49ef576e25b9d8" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">void</ref></type>
        <definition>void Bvr::Meta::VariantAssociativeView::end</definition>
        <argsstring>(Detail::IteratorData &amp;it) const noexcept</argsstring>
        <name>end</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::end</qualifiedname>
        <param>
          <type>Detail::IteratorData &amp;</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="49" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_associative_view_1a90ae0d328ddc9e09ad41b20645ee8d7a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t Bvr::Meta::VariantAssociativeView::size</definition>
        <argsstring>() const noexcept</argsstring>
        <name>size</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="53" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_associative_view_1ae1516966fd58e5b4c35d5c044a710aa2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t Bvr::Meta::VariantAssociativeView::erase</definition>
        <argsstring>(Argument &amp;key)</argsstring>
        <name>erase</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::erase</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="55" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="55" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_associative_view_1ac03e1ee2c3ee3551bd9e0d922a986eb9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref></type>
        <definition>Variant Bvr::Meta::VariantAssociativeView::GetKey</definition>
        <argsstring>(Detail::IteratorData &amp;posIt)</argsstring>
        <name>GetKey</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::GetKey</qualifiedname>
        <param>
          <type>Detail::IteratorData &amp;</type>
          <declname>posIt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="59" column="20" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_associative_view_1a5fbbbe3dc1cb28949042b366fc00b2c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref></type>
        <definition>Variant Bvr::Meta::VariantAssociativeView::GetValue</definition>
        <argsstring>(Detail::IteratorData &amp;posIt)</argsstring>
        <name>GetValue</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::GetValue</qualifiedname>
        <param>
          <type>Detail::IteratorData &amp;</type>
          <declname>posIt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="63" column="20" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_associative_view_1ab48b26486de2ca4ad94cc587afd3c438" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::pair&lt; <ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref>, <ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref> &gt;</type>
        <definition>std::pair&lt; Variant, Variant &gt; Bvr::Meta::VariantAssociativeView::GetKeyValue</definition>
        <argsstring>(Detail::IteratorData &amp;posIt)</argsstring>
        <name>GetKeyValue</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::GetKeyValue</qualifiedname>
        <param>
          <type>Detail::IteratorData &amp;</type>
          <declname>posIt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="68" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_associative_view_1a17abf207398acfda5a0b9b5b61083f3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>bool Bvr::Meta::VariantAssociativeView::Insert</definition>
        <argsstring>(Argument &amp;key, Detail::IteratorData &amp;outIt)</argsstring>
        <name>Insert</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::Insert</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>Detail::IteratorData &amp;</type>
          <declname>outIt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="72" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="72" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_associative_view_1a2753ec3d581a91129a1ef1da5dc1b7a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>bool Bvr::Meta::VariantAssociativeView::Insert</definition>
        <argsstring>(Argument &amp;key, Argument &amp;value, Detail::IteratorData &amp;outIt)</argsstring>
        <name>Insert</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::Insert</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="class_bvr_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>Detail::IteratorData &amp;</type>
          <declname>outIt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="76" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_associative_view_1aae38b2aec99d2f62b572b6b9fb6fa81b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">void</ref></type>
        <definition>void Bvr::Meta::VariantAssociativeView::find</definition>
        <argsstring>(Argument &amp;key, Detail::IteratorData &amp;outIt)</argsstring>
        <name>find</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::find</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>Detail::IteratorData &amp;</type>
          <declname>outIt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="81" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="81" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_associative_view_1a69d2c398d90ef07a0e25b0606a8bee69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">void</ref></type>
        <definition>void Bvr::Meta::VariantAssociativeView::advance</definition>
        <argsstring>(Detail::IteratorData &amp;it, std::ptrdiff_t index)</argsstring>
        <name>advance</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::advance</qualifiedname>
        <param>
          <type>Detail::IteratorData &amp;</type>
          <declname>it</declname>
        </param>
        <param>
          <type>std::ptrdiff_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="85" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="85" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_variant_associative_view_1a71261be21c13a88385a06c8d97dc6f5e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>bool Bvr::Meta::VariantAssociativeView::equal</definition>
        <argsstring>(const Detail::IteratorData &amp;lhs, const Detail::IteratorData &amp;rhs)</argsstring>
        <name>equal</name>
        <qualifiedname>Bvr::Meta::VariantAssociativeView::equal</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> Detail::IteratorData &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> Detail::IteratorData &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="89" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="89" bodyend="91"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" line="6" column="1" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/AssociativeContainerViewImpl.hpp" bodystart="6" bodyend="132"/>
    <listofallmembers>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1a69d2c398d90ef07a0e25b0606a8bee69" prot="public" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>advance</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1a6ac16c91cfabdb00b1b2815cde0d1f05" prot="private" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>AdvanceFn</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1af146877fd7db172ef02793be8efd001a" prot="public" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>begin</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1a25fafe4b38be16098dbc622c7389801e" prot="private" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>BeginFn</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1add2bc3415fc22fc35c736a996175e132" prot="public" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>clear</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1a83bdd2bdbfacbc9649656490ac1a25e8" prot="private" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>ClearFn</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1ae8341a1fbc2dd02a115f54e1ffcb68d1" prot="public" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>empty</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1a00b56a9a37467040d9071c0bfc809e9c" prot="private" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>EmptyFn</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1a61a225c8f94809b66d49ef576e25b9d8" prot="public" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>end</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1aa16b0afbec57bcb232377e41e29d37a6" prot="private" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>EndFn</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1a71261be21c13a88385a06c8d97dc6f5e" prot="public" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>equal</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1a33438525dfe86f3b0283bae7f4fc185b" prot="private" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>EqualFn</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1ae1516966fd58e5b4c35d5c044a710aa2" prot="public" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>erase</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1a48230c660154388004684a8b72988b41" prot="private" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>EraseFn</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1aae38b2aec99d2f62b572b6b9fb6fa81b" prot="public" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>find</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1a7d180e88e257ad1373a258b905eed8b2" prot="private" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>FindFn</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1ac03e1ee2c3ee3551bd9e0d922a986eb9" prot="public" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>GetKey</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1a39774475227e4af4e51fc4aab19a7b34" prot="private" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>GetKeyFn</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1a593bae9a94651e23d71d4e34333c2b86" prot="public" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>GetKeyType</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1ab48b26486de2ca4ad94cc587afd3c438" prot="public" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>GetKeyValue</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1af0656a635880e9dea8fc31b9a6457d0d" prot="public" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>GetType</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1a5fbbbe3dc1cb28949042b366fc00b2c9" prot="public" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>GetValue</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1a9279b6deb9e7cc2c6d623d884ceebe4a" prot="private" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>GetValueFn</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1ae13c1b0f7446f4b78dfe6069ed20c17f" prot="public" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>GetValueType</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1a17abf207398acfda5a0b9b5b61083f3e" prot="public" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>Insert</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1a2753ec3d581a91129a1ef1da5dc1b7a8" prot="public" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>Insert</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1aa9649ec28bac8c81051df8b25ef055ca" prot="private" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>InsertKeyFn</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1aa4984f16132d70cd72801be5e2c9362c" prot="private" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>InsertKeyValueFn</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1afa9bccba77cf437da1ef9dbc7a392cc1" prot="private" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>m_advanceFn</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1ab347644d8660afafeb27efef0b99a2c1" prot="private" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>m_beginFn</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1af61fd47ec007441f03f79ec605bea458" prot="private" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>m_clearFn</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1a6fd14d04ab0a7764f26d156dd12669de" prot="private" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>m_emptyFn</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1a05bdafeea2d0579b807bb2169dcf7334" prot="private" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>m_endFn</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1a043525d61f4992217405bb7e3aafee59" prot="private" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>m_equalFn</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1a290bcd193a435c6a8645b709d21d3c33" prot="private" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>m_eraseFn</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1a26a5cc17bd110fd1625d1fc4ade4f9b2" prot="private" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>m_findFn</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1a9f1a7fc7c132387b3583e7cba14536ea" prot="private" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>m_getKeyFn</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1a24826cf8fb17ec3749e91da82e99fc3e" prot="private" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>m_getValueFn</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1acb6b2ba64054ae278136105abbea81bc" prot="private" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>m_insertKeyFn</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1a84500ce91e3d06d39f36e64d38d3ed23" prot="private" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>m_insertKeyValueFn</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1a840838cd7c244519613cf21ab4a05bfe" prot="private" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>m_keyType</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1a5d470e813f65183aadf76461dadc737e" prot="private" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>m_pContainer</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1af82470da6fd89fa1cc1192a47f7f77b4" prot="private" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>m_sizeFn</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1aa1a3b27e1dc5529c8e325ec2b747a548" prot="private" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>m_type</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1a7912192ec4e282163d4e6e5abcfbcc95" prot="private" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>m_valueType</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1a90ae0d328ddc9e09ad41b20645ee8d7a" prot="public" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>size</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1aba417b427dbbb4f787669ec965713af3" prot="private" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>SizeFn</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1a42c32a9f61dcd90e073dd6f1aae481ad" prot="private" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>TWrapper</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1a17dfcfcae9199f86e1e891db5497ac62" prot="public" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>VariantAssociativeView</name></member>
      <member refid="class_bvr_1_1_meta_1_1_variant_associative_view_1a807d1e13f6d34a995e3d8d60567cdbe2" prot="public" virt="non-virtual"><scope>Bvr::Meta::VariantAssociativeView</scope><name>VariantAssociativeView</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_bvr_1_1_s_asset_manager" kind="struct" language="C++" prot="public">
    <compoundname>Bvr::SAssetManager</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_bvr_1_1_s_asset_manager_1a4e269aaef03f3a9736cfc54f9cd5bbce" prot="public" static="no">
        <type>typename <ref refid="struct_bvr_1_1_i_asset_loader_1a633f0d522205cc50e67935a49ea4e2a5" kindref="member">IAssetLoader::Result</ref></type>
        <definition>using Bvr::SAssetManager::Result =  typename IAssetLoader::Result</definition>
        <argsstring></argsstring>
        <name>Result</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" line="100" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="struct_bvr_1_1_s_asset_manager_1a2078a5d092a1dd834a2dc287bed90882" prot="private" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>TypeHash&lt; T &gt;</type>
        <definition>using Bvr::SAssetManager::TypeHash =  TypeHash&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>TypeHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" line="164" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" bodystart="164" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_bvr_1_1_s_asset_manager_1af177747b734dc711d421c537e4c660d8" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; Impl &gt;</type>
        <definition>std::shared_ptr&lt;Impl&gt; Bvr::SAssetManager::m_pImpl</definition>
        <argsstring></argsstring>
        <name>m_pImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" line="163" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" bodystart="163" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1af86561471a08fb35dc6a0d09d5b3bb30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::SAssetManager::SAssetManager</definition>
        <argsstring>(std::unique_ptr&lt; IAssetIO &gt; assetIO)</argsstring>
        <name>SAssetManager</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="struct_bvr_1_1_i_asset_i_o" kindref="compound">IAssetIO</ref> &gt;</type>
          <declname>assetIO</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" line="102" column="5"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1a8ae4816f10a5472fad82ab1b366fb5ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::SAssetManager::SetAssetIO</definition>
        <argsstring>(std::unique_ptr&lt; IAssetIO &gt; assetIO)</argsstring>
        <name>SetAssetIO</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="struct_bvr_1_1_i_asset_i_o" kindref="compound">IAssetIO</ref> &gt;</type>
          <declname>assetIO</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" line="104" column="32"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1a9dff918ddf53fcd272c4a4a5d29ab631" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_i_asset_i_o" kindref="compound">IAssetIO</ref> *</type>
        <definition>IAssetIO* Bvr::SAssetManager::GetAssetIO</definition>
        <argsstring>() const</argsstring>
        <name>GetAssetIO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" line="105" column="31"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1af60d996ad8caa3d6d53668114ae20911" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Bvr::SAssetManager::RegisterAssetType</definition>
        <argsstring>(Assets&lt; T &gt; &amp;assets)</argsstring>
        <name>RegisterAssetType</name>
        <param>
          <type><ref refid="class_bvr_1_1_t_assets" kindref="compound">Assets</ref>&lt; T &gt; &amp;</type>
          <declname>assets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" line="107" column="22" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" bodystart="107" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1a04f43432e6769abb3d82e821e4b37061" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDL_NODISCARD Result</type>
        <definition>HDL_NODISCARD Result Bvr::SAssetManager::Load</definition>
        <argsstring>(App &amp;app, std::string_view path)</argsstring>
        <name>Load</name>
        <param>
          <type>App &amp;</type>
          <declname>app</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" line="111" column="26"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1a9fa04c1e0a2d24b12452adcbad4ac061" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDL_NODISCARD Result</type>
        <definition>HDL_NODISCARD Result Bvr::SAssetManager::LoadAsync</definition>
        <argsstring>(App &amp;app, std::string_view path, MT::TaskContext *pState=nullptr)</argsstring>
        <name>LoadAsync</name>
        <param>
          <type>App &amp;</type>
          <declname>app</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_m_t_1_1_task_context" kindref="compound">MT::TaskContext</ref> *</type>
          <declname>pState</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" line="112" column="26"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1a0da0ee0290af76fbd791a3554d893b27" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::SAssetManager::IsFromFile</definition>
        <argsstring>(const HandleUntyped &amp;hAsset) const</argsstring>
        <name>IsFromFile</name>
        <param>
          <type>const <ref refid="struct_bvr_1_1_handle_untyped" kindref="compound">HandleUntyped</ref> &amp;</type>
          <declname>hAsset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" line="114" column="13"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1ac57d59837092c1b378ab655be45c136f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Bvr::SAssetManager::TryFindingAssetPath</definition>
        <argsstring>(const HandleUntyped &amp;hAsset) const</argsstring>
        <name>TryFindingAssetPath</name>
        <param>
          <type>const <ref refid="struct_bvr_1_1_handle_untyped" kindref="compound">HandleUntyped</ref> &amp;</type>
          <declname>hAsset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" line="116" column="17"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1a5bbceeb91f652da160c91a3106aba894" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::SAssetManager::SetAssetPath</definition>
        <argsstring>(App &amp;app, const HandleUntyped &amp;hAsset, const std::string_view path)</argsstring>
        <name>SetAssetPath</name>
        <param>
          <type>App &amp;</type>
          <declname>app</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_handle_untyped" kindref="compound">HandleUntyped</ref> &amp;</type>
          <declname>hAsset</declname>
        </param>
        <param>
          <type>const std::string_view</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" line="117" column="17"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1a8d793aa997e80814a35a75696aa6d12d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_i_asset_loader" kindref="compound">IAssetLoader</ref> *</type>
        <definition>IAssetLoader* Bvr::SAssetManager::GetLoader</definition>
        <argsstring>(const std::string_view extension)</argsstring>
        <name>GetLoader</name>
        <param>
          <type>const std::string_view</type>
          <declname>extension</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" line="121" column="19"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1a748b230a99006bde13a3cd83ec9c3379" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_i_asset_loader" kindref="compound">IAssetLoader</ref> *</type>
        <definition>IAssetLoader* Bvr::SAssetManager::GetLoaderForAssetType</definition>
        <argsstring>(const Meta::Type &amp;assetType)</argsstring>
        <name>GetLoaderForAssetType</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_type" kindref="compound">Meta::Type</ref> &amp;</type>
          <declname>assetType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" line="123" column="5"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1a9f65894aea7e418202c8e9e0fc34679f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_i_asset_loader" kindref="compound">IAssetLoader</ref> *</type>
        <definition>IAssetLoader* Bvr::SAssetManager::GetLoaderForAssetType</definition>
        <argsstring>(const TypeInfo &amp;assetType)</argsstring>
        <name>GetLoaderForAssetType</name>
        <param>
          <type>const <ref refid="struct_bvr_1_1_type_info" kindref="compound">TypeInfo</ref> &amp;</type>
          <declname>assetType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" line="125" column="5"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1ad7f092de4dd4513b0f45c228a8a34f4b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_type_info" kindref="compound">Bvr::TypeInfo</ref></type>
        <definition>Bvr::TypeInfo Bvr::SAssetManager::GetAssetType</definition>
        <argsstring>(const std::string_view extension) const</argsstring>
        <name>GetAssetType</name>
        <param>
          <type>const std::string_view</type>
          <declname>extension</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" line="127" column="5"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1a9c041ba07de96d767ef34b358c39cc1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename AssetT</type>
            <defval>typename T::AssetT</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Bvr::SAssetManager::RegisterLoader</definition>
        <argsstring>()</argsstring>
        <name>RegisterLoader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" line="130" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" bodystart="130" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1a2717b7cdbd733ab1936e9047e4001ea0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TAsset</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Bvr::SAssetManager::IsAssetLoaded</definition>
        <argsstring>(const Handle&lt; TAsset &gt; &amp;hAsset) const</argsstring>
        <name>IsAssetLoaded</name>
        <param>
          <type>const <ref refid="struct_bvr_1_1_handle" kindref="compound">Handle</ref>&lt; TAsset &gt; &amp;</type>
          <declname>hAsset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" line="148" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" bodystart="148" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1a5b8b8628b2b9847595e5ae89b693ae25" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::SAssetManager::IsAssetLoaded</definition>
        <argsstring>(const HandleUntyped &amp;hAsset) const</argsstring>
        <name>IsAssetLoaded</name>
        <param>
          <type>const <ref refid="struct_bvr_1_1_handle_untyped" kindref="compound">HandleUntyped</ref> &amp;</type>
          <declname>hAsset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" line="151" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" bodystart="151" bodyend="153"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1a3f4e7965eb3f36203f43de24cf926881" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Bvr::SAssetManager::SetAssetPathIfUnset</definition>
        <argsstring>(App &amp;app, const HandleUntyped &amp;hAsset, const std::string_view path)</argsstring>
        <name>SetAssetPathIfUnset</name>
        <param>
          <type>App &amp;</type>
          <declname>app</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_handle_untyped" kindref="compound">HandleUntyped</ref> &amp;</type>
          <declname>hAsset</declname>
        </param>
        <param>
          <type>const std::string_view</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" line="119" column="17"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1afda8089e185e977b1efe28c360df1d6d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Bvr::SAssetManager::FreeUnusedAssetsSystem</definition>
        <argsstring>(SAssetManager &amp;self)</argsstring>
        <name>FreeUnusedAssetsSystem</name>
        <param>
          <type><ref refid="struct_bvr_1_1_s_asset_manager" kindref="compound">SAssetManager</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" line="138" column="29"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1a2b19e79df2acc2761339abbd12b14f10" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Bvr::SAssetManager::FlushDeferredUploads</definition>
        <argsstring>(SAssetManager &amp;mgr)</argsstring>
        <name>FlushDeferredUploads</name>
        <param>
          <type><ref refid="struct_bvr_1_1_s_asset_manager" kindref="compound">SAssetManager</ref> &amp;</type>
          <declname>mgr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" line="140" column="29"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1ae9417c68ee3bdac367a7e6663b05c224" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_s_decoded_path" kindref="compound">SDecodedPath</ref></type>
        <definition>static SDecodedPath Bvr::SAssetManager::ResolvePath</definition>
        <argsstring>(App &amp;app, std::string_view fullPath)</argsstring>
        <name>ResolvePath</name>
        <param>
          <type>App &amp;</type>
          <declname>app</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>fullPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" line="142" column="29"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1a1d10d7b96632437dd1512c5afbe45012" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string Bvr::SAssetManager::ForHashing</definition>
        <argsstring>(App &amp;app, std::string_view fullPath)</argsstring>
        <name>ForHashing</name>
        <param>
          <type>App &amp;</type>
          <declname>app</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>fullPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" line="143" column="29"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1aa7a487e8016635b4e15c082092dcb067" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string_view</type>
        <definition>static std::string_view Bvr::SAssetManager::PrepareExtension</definition>
        <argsstring>(const std::string_view path)</argsstring>
        <name>PrepareExtension</name>
        <param>
          <type>const std::string_view</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" line="145" column="29"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1a577b0218f5ccfb2ff5c5fe616154fb6d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::SAssetManager::RegisterLoader</definition>
        <argsstring>(std::unique_ptr&lt; IAssetLoader &gt; &amp;&amp;pLoader, const TypeInfo &amp;assetType)</argsstring>
        <name>RegisterLoader</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="struct_bvr_1_1_i_asset_loader" kindref="compound">IAssetLoader</ref> &gt; &amp;&amp;</type>
          <declname>pLoader</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_type_info" kindref="compound">TypeInfo</ref> &amp;</type>
          <declname>assetType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" line="156" column="10"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1acecb9b206f96b98e51908ff72853dbba" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::SAssetManager::RegisterAssetType</definition>
        <argsstring>(IAssets *pAssets, const TypeInfo &amp;type, SAssetRefCounter::SendFnT &amp;channel)</argsstring>
        <name>RegisterAssetType</name>
        <param>
          <type><ref refid="struct_bvr_1_1_i_assets" kindref="compound">IAssets</ref> *</type>
          <declname>pAssets</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_type_info" kindref="compound">TypeInfo</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>SAssetRefCounter::SendFnT &amp;</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" line="158" column="10"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1ab3cb9128323291e4b8038073162a2237" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::SAssetManager::IsAssetLoaded</definition>
        <argsstring>(const AssetId &amp;hAsset) const</argsstring>
        <name>IsAssetLoaded</name>
        <param>
          <type>const <ref refid="struct_bvr_1_1_asset_id" kindref="compound">AssetId</ref> &amp;</type>
          <declname>hAsset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" line="160" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" line="97" column="1" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetManager.hpp" bodystart="97" bodyend="165"/>
    <listofallmembers>
      <member refid="struct_bvr_1_1_s_asset_manager_1a2b19e79df2acc2761339abbd12b14f10" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>FlushDeferredUploads</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1a1d10d7b96632437dd1512c5afbe45012" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>ForHashing</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1afda8089e185e977b1efe28c360df1d6d" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>FreeUnusedAssetsSystem</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1a9dff918ddf53fcd272c4a4a5d29ab631" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>GetAssetIO</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1ad7f092de4dd4513b0f45c228a8a34f4b" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>GetAssetType</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1a8d793aa997e80814a35a75696aa6d12d" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>GetLoader</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1a748b230a99006bde13a3cd83ec9c3379" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>GetLoaderForAssetType</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1a9f65894aea7e418202c8e9e0fc34679f" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>GetLoaderForAssetType</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1a2717b7cdbd733ab1936e9047e4001ea0" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>IsAssetLoaded</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1a5b8b8628b2b9847595e5ae89b693ae25" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>IsAssetLoaded</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1ab3cb9128323291e4b8038073162a2237" prot="private" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>IsAssetLoaded</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1a0da0ee0290af76fbd791a3554d893b27" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>IsFromFile</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1a04f43432e6769abb3d82e821e4b37061" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>Load</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1a9fa04c1e0a2d24b12452adcbad4ac061" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>LoadAsync</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1af177747b734dc711d421c537e4c660d8" prot="private" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>m_pImpl</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1aa7a487e8016635b4e15c082092dcb067" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>PrepareExtension</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1af60d996ad8caa3d6d53668114ae20911" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>RegisterAssetType</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1acecb9b206f96b98e51908ff72853dbba" prot="private" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>RegisterAssetType</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1a9c041ba07de96d767ef34b358c39cc1a" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>RegisterLoader</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1a577b0218f5ccfb2ff5c5fe616154fb6d" prot="private" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>RegisterLoader</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1ae9417c68ee3bdac367a7e6663b05c224" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>ResolvePath</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1a4e269aaef03f3a9736cfc54f9cd5bbce" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>Result</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1af86561471a08fb35dc6a0d09d5b3bb30" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>SAssetManager</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1a8ae4816f10a5472fad82ab1b366fb5ff" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>SetAssetIO</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1a5bbceeb91f652da160c91a3106aba894" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>SetAssetPath</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1a3f4e7965eb3f36203f43de24cf926881" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>SetAssetPathIfUnset</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1ac57d59837092c1b378ab655be45c136f" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>TryFindingAssetPath</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1a2078a5d092a1dd834a2dc287bed90882" prot="private" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>TypeHash</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

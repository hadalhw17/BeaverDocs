<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_bvr_1_1_s_asset_manager" kind="struct" language="C++" prot="public">
    <compoundname>Bvr::SAssetManager</compoundname>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="struct_bvr_1_1_s_asset_manager_1a2078a5d092a1dd834a2dc287bed90882" prot="private" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>TypeHash&lt; T &gt;</type>
        <definition>using Bvr::SAssetManager::TypeHash =  TypeHash&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>TypeHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="785" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="785" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_bvr_1_1_s_asset_manager_1a55d4055fd1322414f73a532c093bc5a7" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; BvrUtil::Hash, <ref refid="struct_bvr_1_1_asset_lifetime_event_1_1_interface" kindref="compound">AssetLifetimeEvent::Interface</ref> * &gt;</type>
        <definition>std::unordered_map&lt;BvrUtil::Hash, AssetLifetimeEvent::Interface*&gt; Bvr::SAssetManager::m_lifetimeIO</definition>
        <argsstring></argsstring>
        <name>m_lifetimeIO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="776" column="48" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="776" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_bvr_1_1_s_asset_manager_1a71af9b52b3b601780282f7de714001fe" prot="private" static="no" mutable="no">
        <type><ref refid="struct_bvr_1_1_s_asset_ref_counter" kindref="compound">SAssetRefCounter</ref></type>
        <definition>SAssetRefCounter Bvr::SAssetManager::m_refCounter</definition>
        <argsstring></argsstring>
        <name>m_refCounter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="777" column="48" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="777" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_bvr_1_1_s_asset_manager_1abb32bc4b78bc5177aba4571a43993302" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="struct_bvr_1_1_i_asset_loader" kindref="compound">IAssetLoader</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::unique_ptr&lt;IAssetLoader&gt; &gt; Bvr::SAssetManager::m_loaders</definition>
        <argsstring></argsstring>
        <name>m_loaders</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="778" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="778" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_bvr_1_1_s_asset_manager_1aead1544429fac53e83df2c751f71e283" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_bvr_1_1_type_info" kindref="compound">Bvr::TypeInfo</ref> &gt;</type>
        <definition>std::vector&lt;Bvr::TypeInfo&gt; Bvr::SAssetManager::m_loaderResourceTypeAssoc</definition>
        <argsstring></argsstring>
        <name>m_loaderResourceTypeAssoc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="779" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="779" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_bvr_1_1_s_asset_manager_1af85341df0398c96749c7cff24d87195d" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="class_bvr_1_1_t_basic_hashed_string" kindref="compound">HashedString</ref>, uint32 &gt;</type>
        <definition>std::unordered_map&lt;HashedString, uint32&gt; Bvr::SAssetManager::m_loaderRemap</definition>
        <argsstring></argsstring>
        <name>m_loaderRemap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="780" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="780" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_bvr_1_1_s_asset_manager_1ad7a75101b64aee70ad906a3432606288" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="struct_bvr_1_1_i_asset_i_o" kindref="compound">IAssetIO</ref> &gt;</type>
        <definition>std::unique_ptr&lt;IAssetIO&gt; Bvr::SAssetManager::m_pAssetIO</definition>
        <argsstring></argsstring>
        <name>m_pAssetIO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="781" column="36" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="781" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_bvr_1_1_s_asset_manager_1addb12575d5afcbe35879738e8ec61d4c" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; typename HashedString::HashT, <ref refid="struct_bvr_1_1_s_asset_source_info" kindref="compound">SAssetSourceInfo</ref> &gt;</type>
        <definition>std::unordered_map&lt;typename HashedString::HashT, SAssetSourceInfo&gt; Bvr::SAssetManager::m_assetSourceInfos</definition>
        <argsstring></argsstring>
        <name>m_assetSourceInfos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="783" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="783" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1af86561471a08fb35dc6a0d09d5b3bb30" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::SAssetManager::SAssetManager</definition>
        <argsstring>(std::unique_ptr&lt; IAssetIO &gt; assetIO)</argsstring>
        <name>SAssetManager</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="struct_bvr_1_1_i_asset_i_o" kindref="compound">IAssetIO</ref> &gt;</type>
          <declname>assetIO</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="709" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="709" bodyend="711"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1a8ae4816f10a5472fad82ab1b366fb5ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::SAssetManager::SetAssetIO</definition>
        <argsstring>(std::unique_ptr&lt; IAssetIO &gt; assetIO)</argsstring>
        <name>SetAssetIO</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="struct_bvr_1_1_i_asset_i_o" kindref="compound">IAssetIO</ref> &gt;</type>
          <declname>assetIO</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="713" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="713" bodyend="715"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1a9dff918ddf53fcd272c4a4a5d29ab631" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_i_asset_i_o" kindref="compound">IAssetIO</ref> *</type>
        <definition>IAssetIO* Bvr::SAssetManager::GetAssetIO</definition>
        <argsstring>() const</argsstring>
        <name>GetAssetIO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="717" column="31" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="717" bodyend="717"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1af60d996ad8caa3d6d53668114ae20911" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Bvr::SAssetManager::RegisterAssetType</definition>
        <argsstring>(Assets&lt; T &gt; &amp;assets)</argsstring>
        <name>RegisterAssetType</name>
        <param>
          <type><ref refid="class_bvr_1_1_t_assets" kindref="compound">Assets</ref>&lt; T &gt; &amp;</type>
          <declname>assets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="719" column="22" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="719" bodyend="724"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1a8145fb9b6364ba305dce3f1565c47f20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDL_NODISCARD <ref refid="struct_bvr_1_1_t_loading_result" kindref="compound">IAssetLoader::Result</ref></type>
        <definition>HDL_NODISCARD IAssetLoader::Result Bvr::SAssetManager::Load</definition>
        <argsstring>(App &amp;app, std::string_view path)</argsstring>
        <name>Load</name>
        <param>
          <type>App &amp;</type>
          <declname>app</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="726" column="40"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1a3c9e7d80ae6e54ae1a267fa054114509" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string_view</type>
        <definition>std::string_view Bvr::SAssetManager::TryFindingAssetPath</definition>
        <argsstring>(const HandleUntyped &amp;hAsset) const</argsstring>
        <name>TryFindingAssetPath</name>
        <param>
          <type>const <ref refid="struct_bvr_1_1_handle_untyped" kindref="compound">HandleUntyped</ref> &amp;</type>
          <declname>hAsset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="728" column="10"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1ac9ca1415cdadab732605dd3e657f49c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::SAssetManager::SetAssetPath</definition>
        <argsstring>(const HandleUntyped &amp;hAsset, const std::string_view path)</argsstring>
        <name>SetAssetPath</name>
        <param>
          <type>const <ref refid="struct_bvr_1_1_handle_untyped" kindref="compound">HandleUntyped</ref> &amp;</type>
          <declname>hAsset</declname>
        </param>
        <param>
          <type>const std::string_view</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="729" column="10"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1a8d793aa997e80814a35a75696aa6d12d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_i_asset_loader" kindref="compound">IAssetLoader</ref> *</type>
        <definition>IAssetLoader* Bvr::SAssetManager::GetLoader</definition>
        <argsstring>(const std::string_view extension)</argsstring>
        <name>GetLoader</name>
        <param>
          <type>const std::string_view</type>
          <declname>extension</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="732" column="19"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1a748b230a99006bde13a3cd83ec9c3379" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_i_asset_loader" kindref="compound">IAssetLoader</ref> *</type>
        <definition>IAssetLoader* Bvr::SAssetManager::GetLoaderForAssetType</definition>
        <argsstring>(const Meta::Type &amp;assetType)</argsstring>
        <name>GetLoaderForAssetType</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_type" kindref="compound">Meta::Type</ref> &amp;</type>
          <declname>assetType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="734" column="5"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1ad7f092de4dd4513b0f45c228a8a34f4b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_type_info" kindref="compound">Bvr::TypeInfo</ref></type>
        <definition>Bvr::TypeInfo Bvr::SAssetManager::GetAssetType</definition>
        <argsstring>(const std::string_view extension) const</argsstring>
        <name>GetAssetType</name>
        <param>
          <type>const std::string_view</type>
          <declname>extension</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="736" column="5"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1a9c041ba07de96d767ef34b358c39cc1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename AssetT</type>
            <defval>typename T::AssetT</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Bvr::SAssetManager::RegisterLoader</definition>
        <argsstring>()</argsstring>
        <name>RegisterLoader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="739" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="739" bodyend="761"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1a3f4e7965eb3f36203f43de24cf926881" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Bvr::SAssetManager::SetAssetPathIfUnset</definition>
        <argsstring>(App &amp;app, const HandleUntyped &amp;hAsset, const std::string_view path)</argsstring>
        <name>SetAssetPathIfUnset</name>
        <param>
          <type>App &amp;</type>
          <declname>app</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_handle_untyped" kindref="compound">HandleUntyped</ref> &amp;</type>
          <declname>hAsset</declname>
        </param>
        <param>
          <type>const std::string_view</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="730" column="17"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1afda8089e185e977b1efe28c360df1d6d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Bvr::SAssetManager::FreeUnusedAssetsSystem</definition>
        <argsstring>(SAssetManager &amp;self)</argsstring>
        <name>FreeUnusedAssetsSystem</name>
        <param>
          <type><ref refid="struct_bvr_1_1_s_asset_manager" kindref="compound">SAssetManager</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="765" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="765" bodyend="767"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1ae9417c68ee3bdac367a7e6663b05c224" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_s_decoded_path" kindref="compound">SDecodedPath</ref></type>
        <definition>static SDecodedPath Bvr::SAssetManager::ResolvePath</definition>
        <argsstring>(App &amp;app, std::string_view fullPath)</argsstring>
        <name>ResolvePath</name>
        <param>
          <type>App &amp;</type>
          <declname>app</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>fullPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="769" column="29"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1a1d10d7b96632437dd1512c5afbe45012" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string Bvr::SAssetManager::ForHashing</definition>
        <argsstring>(App &amp;app, std::string_view fullPath)</argsstring>
        <name>ForHashing</name>
        <param>
          <type>App &amp;</type>
          <declname>app</declname>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>fullPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="770" column="29"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_s_asset_manager_1aa7a487e8016635b4e15c082092dcb067" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string_view</type>
        <definition>static std::string_view Bvr::SAssetManager::PrepareExtension</definition>
        <argsstring>(const std::string_view path)</argsstring>
        <name>PrepareExtension</name>
        <param>
          <type>const std::string_view</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="772" column="29"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" line="708" column="1" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetSystem.hpp" bodystart="708" bodyend="786"/>
    <listofallmembers>
      <member refid="struct_bvr_1_1_s_asset_manager_1a1d10d7b96632437dd1512c5afbe45012" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>ForHashing</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1afda8089e185e977b1efe28c360df1d6d" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>FreeUnusedAssetsSystem</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1a9dff918ddf53fcd272c4a4a5d29ab631" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>GetAssetIO</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1ad7f092de4dd4513b0f45c228a8a34f4b" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>GetAssetType</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1a8d793aa997e80814a35a75696aa6d12d" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>GetLoader</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1a748b230a99006bde13a3cd83ec9c3379" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>GetLoaderForAssetType</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1a8145fb9b6364ba305dce3f1565c47f20" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>Load</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1addb12575d5afcbe35879738e8ec61d4c" prot="private" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>m_assetSourceInfos</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1a55d4055fd1322414f73a532c093bc5a7" prot="private" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>m_lifetimeIO</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1af85341df0398c96749c7cff24d87195d" prot="private" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>m_loaderRemap</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1aead1544429fac53e83df2c751f71e283" prot="private" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>m_loaderResourceTypeAssoc</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1abb32bc4b78bc5177aba4571a43993302" prot="private" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>m_loaders</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1ad7a75101b64aee70ad906a3432606288" prot="private" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>m_pAssetIO</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1a71af9b52b3b601780282f7de714001fe" prot="private" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>m_refCounter</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1aa7a487e8016635b4e15c082092dcb067" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>PrepareExtension</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1af60d996ad8caa3d6d53668114ae20911" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>RegisterAssetType</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1a9c041ba07de96d767ef34b358c39cc1a" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>RegisterLoader</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1ae9417c68ee3bdac367a7e6663b05c224" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>ResolvePath</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1af86561471a08fb35dc6a0d09d5b3bb30" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>SAssetManager</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1a8ae4816f10a5472fad82ab1b366fb5ff" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>SetAssetIO</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1ac9ca1415cdadab732605dd3e657f49c2" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>SetAssetPath</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1a3f4e7965eb3f36203f43de24cf926881" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>SetAssetPathIfUnset</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1a3c9e7d80ae6e54ae1a267fa054114509" prot="public" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>TryFindingAssetPath</name></member>
      <member refid="struct_bvr_1_1_s_asset_manager_1a2078a5d092a1dd834a2dc287bed90882" prot="private" virt="non-virtual"><scope>Bvr::SAssetManager</scope><name>TypeHash</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

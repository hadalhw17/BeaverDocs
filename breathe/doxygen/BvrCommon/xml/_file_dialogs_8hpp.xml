<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_file_dialogs_8hpp" kind="file" language="C++">
    <compoundname>FileDialogs.hpp</compoundname>
    <innernamespace refid="namespace_bvr">Bvr</innernamespace>
    <innernamespace refid="namespace_bvr_1_1_meta">Bvr::Meta</innernamespace>
    <innernamespace refid="namespace_bvr_1_1_file_dialog">Bvr::FileDialog</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Bvr::Meta<sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Type;</highlight></codeline>
<codeline lineno="5"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Bvr::FileDialog<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>EFileType<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>Mesh,</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>Texture,</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>All</highlight></codeline>
<codeline lineno="12"><highlight class="normal">};</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>Type<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>Open,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>Save,</highlight></codeline>
<codeline lineno="17"><highlight class="normal">};</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">[[nodiscard]]<sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::string<sp/>Open(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Meta::Type&amp;<sp/>assetType);</highlight></codeline>
<codeline lineno="21"><highlight class="normal">[[nodiscard]]<sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::string</highlight></codeline>
<codeline lineno="22"><highlight class="normal">Open(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Type<sp/>type,<sp/>std::span&lt;Meta::Type<sp/>const&gt;<sp/>typeMask<sp/>=<sp/>{});</highlight></codeline>
<codeline lineno="23"><highlight class="normal">[[nodiscard]]<sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::string</highlight></codeline>
<codeline lineno="24"><highlight class="normal">Open(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Type<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EFileType<sp/>eFileType<sp/>=<sp/>EFileType::All);</highlight></codeline>
<codeline lineno="25"><highlight class="normal">[[nodiscard]]<sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::string</highlight></codeline>
<codeline lineno="26"><highlight class="normal">Open(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Type<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>makeName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fileMask);</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Bvr::FileDialog</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/MessageBox/FileDialogs.hpp"/>
  </compounddef>
</doxygen>

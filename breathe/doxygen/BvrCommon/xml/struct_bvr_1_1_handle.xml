<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="struct_bvr_1_1_handle" kind="struct" language="C++" prot="public">
    <compoundname>Bvr::Handle</compoundname>
    <basecompoundref refid="struct_bvr_1_1_handle_lifetime" prot="public" virt="non-virtual">Bvr::HandleLifetime</basecompoundref>
    <templateparamlist>
      <param>
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_bvr_1_1_handle_1a9293cc6e54820e8372a23de2ca907c95" prot="public" static="no">
        <type><ref refid="struct_bvr_1_1_asset_id" kindref="compound">HandleIdT</ref></type>
        <definition>using Bvr::Handle&lt; T &gt;::IdT =  HandleIdT</definition>
        <argsstring></argsstring>
        <name>IdT</name>
        <qualifiedname>Bvr::Handle::IdT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="290" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_handle_1a0c86c9c999a44bef1f97a48c94cee400" prot="public" static="no">
        <type>IdT::EntityT</type>
        <definition>using Bvr::Handle&lt; T &gt;::EntityT =  IdT::EntityT</definition>
        <argsstring></argsstring>
        <name>EntityT</name>
        <qualifiedname>Bvr::Handle::EntityT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="291" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_handle_1ac19afa2fa049c349370c7de9cd55d4dd" prot="public" static="no">
        <type><ref refid="class_bvr_1_1_e_c_s_1_1_t_sparse_set_traits" kindref="compound">ECS::TSparseSetTraits</ref>&lt; EntityT &gt;</type>
        <definition>using Bvr::Handle&lt; T &gt;::TraitsT =  ECS::TSparseSetTraits&lt;EntityT&gt;</definition>
        <argsstring></argsstring>
        <name>TraitsT</name>
        <qualifiedname>Bvr::Handle::TraitsT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="292" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="292" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_bvr_1_1_handle_1ad17f374d9200ce09888cbfafdf754177" prot="public" static="no" mutable="no">
        <type>EntityT</type>
        <definition>EntityT Bvr::Handle&lt; T &gt;::m_index</definition>
        <argsstring></argsstring>
        <name>m_index</name>
        <qualifiedname>Bvr::Handle::m_index</qualifiedname>
        <initializer>= ECS::Null</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="397" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="397" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_bvr_1_1_handle_1ae313ca16050faf7129e5c945321c76f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::Handle&lt; T &gt;::Handle</definition>
        <argsstring>()=default</argsstring>
        <name>Handle</name>
        <qualifiedname>Bvr::Handle::Handle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="294" column="5"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_handle_1ae6a5cd657988da47664cd079dc8e6c8c" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::Handle&lt; T &gt;::~Handle</definition>
        <argsstring>() noexcept</argsstring>
        <name>~Handle</name>
        <qualifiedname>Bvr::Handle::~Handle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="296" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="296" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_handle_1ac4bd4f7d12dde94ccf46cbdf8d7f9842" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::Handle&lt; T &gt;::Handle</definition>
        <argsstring>(HandleType type, EntityT idx)</argsstring>
        <name>Handle</name>
        <qualifiedname>Bvr::Handle::Handle</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_handle_type" kindref="compound">HandleType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>EntityT</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="298" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="298" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_handle_1ab5ff1ef58189f0af8fea59a1b153f217" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::Handle&lt; T &gt;::Handle</definition>
        <argsstring>(EntityT idx)</argsstring>
        <name>Handle</name>
        <qualifiedname>Bvr::Handle::Handle</qualifiedname>
        <param>
          <type>EntityT</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="301" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="301" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_handle_1a2a0ac03c4f0106ce64b9c7ededcdc793" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::Handle&lt; T &gt;::Handle</definition>
        <argsstring>(const Handle &amp;h) noexcept</argsstring>
        <name>Handle</name>
        <qualifiedname>Bvr::Handle::Handle</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_handle" kindref="compound">Handle</ref> &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="303" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="303" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_handle_1a9a91bb2af68480a419537af6784d22d6" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::Handle&lt; T &gt;::Handle</definition>
        <argsstring>(Handle &amp;&amp;h) noexcept</argsstring>
        <name>Handle</name>
        <qualifiedname>Bvr::Handle::Handle</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_handle" kindref="compound">Handle</ref> &amp;&amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="307" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="307" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_handle_1ab5a023df5f13c5814b7e41ab10267fa0" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_handle" kindref="compound">Handle</ref> &amp;</type>
        <definition>Handle &amp; Bvr::Handle&lt; T &gt;::operator=</definition>
        <argsstring>(const Handle &amp;rhs) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>Bvr::Handle::operator=</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_handle" kindref="compound">Handle</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="311" column="12" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="311" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_handle_1afbd7dfa0e6029f5c786a7a700c9333a5" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_handle" kindref="compound">Handle</ref> &amp;</type>
        <definition>Handle &amp; Bvr::Handle&lt; T &gt;::operator=</definition>
        <argsstring>(Handle &amp;&amp;rhs) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>Bvr::Handle::operator=</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_handle" kindref="compound">Handle</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="325" column="12" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="325" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_handle_1a6bf78d1d078e005758b68a9f003bfb44" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>HDL_NODISCARD <ref refid="struct_bvr_1_1_handle_untyped" kindref="compound">HandleUntyped</ref></type>
        <definition>HDL_NODISCARD HandleUntyped Bvr::Handle&lt; T &gt;::Untyped</definition>
        <argsstring>() const noexcept</argsstring>
        <name>Untyped</name>
        <qualifiedname>Bvr::Handle::Untyped</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="340" column="33" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="340" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_handle_1ae8f5fda393a783727475c1e6db121d5c" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> U</type>
          </param>
        </templateparamlist>
        <type>HDL_NODISCARD <ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_handle" kindref="compound">Handle</ref>&lt; U &gt; &amp;</type>
        <definition>HDL_NODISCARD const Handle&lt; U &gt; &amp; Bvr::Handle&lt; T &gt;::Typed</definition>
        <argsstring>() const noexcept</argsstring>
        <name>Typed</name>
        <qualifiedname>Bvr::Handle::Typed</qualifiedname>
    <requiresclause>std::same_as&lt;U, T&gt;    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="346" column="53" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="346" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_handle_1ae3e70f8b311bcc2997489abb38c87a03" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">void</ref></type>
        <definition>void Bvr::Handle&lt; T &gt;::AsStrong</definition>
        <argsstring>()</argsstring>
        <name>AsStrong</name>
        <qualifiedname>Bvr::Handle::AsStrong</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="350" column="19" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="350" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_handle_1a940581f79b51f584062ba731a29997a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">void</ref></type>
        <definition>void Bvr::Handle&lt; T &gt;::AsWeak</definition>
        <argsstring>()</argsstring>
        <name>AsWeak</name>
        <qualifiedname>Bvr::Handle::AsWeak</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="352" column="19" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="352" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_handle_1a1e72a60a431a82d7bb03dbd1493ccf53" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HDL_NODISCARD <ref refid="struct_bvr_1_1_handle" kindref="compound">Handle</ref></type>
        <definition>HDL_NODISCARD Handle Bvr::Handle&lt; T &gt;::ToStrong</definition>
        <argsstring>() const</argsstring>
        <name>ToStrong</name>
        <qualifiedname>Bvr::Handle::ToStrong</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="363" column="26" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="363" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_handle_1a5b91f9ecd545d633c5ff042f3cc04d68" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_handle" kindref="compound">Handle</ref></type>
        <definition>Handle Bvr::Handle&lt; T &gt;::ToWeak</definition>
        <argsstring>() const</argsstring>
        <name>ToWeak</name>
        <qualifiedname>Bvr::Handle::ToWeak</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="367" column="12" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="367" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_handle_1aedae8df4cd5548ab4fc4c512f75f0ff6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">auto</ref></type>
        <definition>auto Bvr::Handle&lt; T &gt;::operator&lt;=&gt;</definition>
        <argsstring>(const Handle &amp;rhs) const =default</argsstring>
        <name>operator&lt;=&gt;</name>
        <qualifiedname>Bvr::Handle::operator&lt;=&gt;</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_handle" kindref="compound">Handle</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="369" column="5"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_handle_1a7e854d9d7bab6623b6061d46bd284447" prot="public" static="no" const="yes" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::Handle&lt; T &gt;::operator bool</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator bool</name>
        <qualifiedname>Bvr::Handle::operator bool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="371" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="371" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_handle_1aa2fbeae7f04abed01f9880d274d6d1e6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> U</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>bool Bvr::Handle&lt; T &gt;::operator==</definition>
        <argsstring>(const Handle&lt; U &gt; &amp;rhs) const</argsstring>
        <name>operator==</name>
        <qualifiedname>Bvr::Handle::operator==</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_handle" kindref="compound">Handle</ref>&lt; U &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="376" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="376" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_handle_1a37d5d09fe86b175fb748b511b52e7169" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> U</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>bool Bvr::Handle&lt; T &gt;::operator!=</definition>
        <argsstring>(const Handle&lt; U &gt; &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>Bvr::Handle::operator!=</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_handle" kindref="compound">Handle</ref>&lt; U &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="380" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="380" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_handle_1a732d5369548344717c7c0d291d1346a1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>bool Bvr::Handle&lt; T &gt;::operator==</definition>
        <argsstring>(const Handle &amp;rhs) const</argsstring>
        <name>operator==</name>
        <qualifiedname>Bvr::Handle::operator==</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_handle" kindref="compound">Handle</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="384" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="384" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_handle_1a43ea5686718fbf44d5c484e3c37e518a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>bool Bvr::Handle&lt; T &gt;::operator!=</definition>
        <argsstring>(const Handle &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>Bvr::Handle::operator!=</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_handle" kindref="compound">Handle</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="387" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="387" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_handle_1ae59f9b0e23674d6f837fd0bd421dfcfa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>bool Bvr::Handle&lt; T &gt;::operator==</definition>
        <argsstring>(const HandleUntyped &amp;rhs) const</argsstring>
        <name>operator==</name>
        <qualifiedname>Bvr::Handle::operator==</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_handle_untyped" kindref="compound">HandleUntyped</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="391" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="391" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_handle_1a6db7206ae1e90a28b748f3d249ace9c1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_asset_id" kindref="compound">IdT</ref></type>
        <definition>IdT Bvr::Handle&lt; T &gt;::Index</definition>
        <argsstring>() const</argsstring>
        <name>Index</name>
        <qualifiedname>Bvr::Handle::Index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="394" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="394" bodyend="394"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_bvr_1_1_handle_1ae49ee892f6f560a41fcac0ecc56264b6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_handle" kindref="compound">Handle</ref></type>
        <definition>static Handle Bvr::Handle&lt; T &gt;::Weak</definition>
        <argsstring>(EntityT ent, typename SAssetRefCounter::SendFnT *refChannel)</argsstring>
        <name>Weak</name>
        <qualifiedname>Bvr::Handle::Weak</qualifiedname>
        <param>
          <type>EntityT</type>
          <declname>ent</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> SAssetRefCounter::SendFnT *</type>
          <declname>refChannel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="354" column="19" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="354" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_handle_1af9a1dc2986a65bb7a7db30f9600fa6ab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>HDL_NODISCARD <ref refid="struct_bvr_1_1_handle" kindref="compound">Handle</ref></type>
        <definition>static HDL_NODISCARD Handle Bvr::Handle&lt; T &gt;::Strong</definition>
        <argsstring>(EntityT ent, typename SAssetRefCounter::SendFnT *refChannel)</argsstring>
        <name>Strong</name>
        <qualifiedname>Bvr::Handle::Strong</qualifiedname>
        <param>
          <type>EntityT</type>
          <declname>ent</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> SAssetRefCounter::SendFnT *</type>
          <declname>refChannel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="359" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="359" bodyend="361"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Bvr::Handle&lt; T &gt;</label>
        <link refid="struct_bvr_1_1_handle"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Bvr::HandleLifetime</label>
        <link refid="struct_bvr_1_1_handle_lifetime"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Bvr::Handle&lt; T &gt;</label>
        <link refid="struct_bvr_1_1_handle"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Bvr::HandleLifetime</label>
        <link refid="struct_bvr_1_1_handle_lifetime"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_type</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Bvr::HandleType</label>
        <link refid="struct_bvr_1_1_handle_type"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="289" column="12" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="289" bodyend="398"/>
    <listofallmembers>
      <member refid="struct_bvr_1_1_handle_1ae3e70f8b311bcc2997489abb38c87a03" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>AsStrong</name></member>
      <member refid="struct_bvr_1_1_handle_lifetime_1ac12f5d38761d05eb38c3862ad4345736" prot="protected" virt="non-virtual" ambiguityscope="Bvr::HandleLifetime::"><scope>Bvr::Handle</scope><name>AsStrong</name></member>
      <member refid="struct_bvr_1_1_handle_1a940581f79b51f584062ba731a29997a4" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>AsWeak</name></member>
      <member refid="struct_bvr_1_1_handle_lifetime_1a2e6dd2eeb309b18b247624bbef6b1c39" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>DecreaseRef</name></member>
      <member refid="struct_bvr_1_1_handle_1a0c86c9c999a44bef1f97a48c94cee400" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>EntityT</name></member>
      <member refid="struct_bvr_1_1_handle_1ae313ca16050faf7129e5c945321c76f9" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>Handle</name></member>
      <member refid="struct_bvr_1_1_handle_1ac4bd4f7d12dde94ccf46cbdf8d7f9842" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>Handle</name></member>
      <member refid="struct_bvr_1_1_handle_1ab5ff1ef58189f0af8fea59a1b153f217" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>Handle</name></member>
      <member refid="struct_bvr_1_1_handle_1a2a0ac03c4f0106ce64b9c7ededcdc793" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>Handle</name></member>
      <member refid="struct_bvr_1_1_handle_1a9a91bb2af68480a419537af6784d22d6" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>Handle</name></member>
      <member refid="struct_bvr_1_1_handle_lifetime_1a065b586ba7b3cd546775f51accbd3d34" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>HandleLifetime</name></member>
      <member refid="struct_bvr_1_1_handle_lifetime_1a0c275673d3297014135a830400dff193" prot="protected" virt="non-virtual"><scope>Bvr::Handle</scope><name>HandleLifetime</name></member>
      <member refid="struct_bvr_1_1_handle_1a9293cc6e54820e8372a23de2ca907c95" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>IdT</name></member>
      <member refid="struct_bvr_1_1_handle_lifetime_1a5140a7b7052aa4928d21a70e8ce2f713" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>IncreateRef</name></member>
      <member refid="struct_bvr_1_1_handle_1a6db7206ae1e90a28b748f3d249ace9c1" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>Index</name></member>
      <member refid="struct_bvr_1_1_handle_lifetime_1a552f1274a018e625bff6b7cc9f97d476" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>IsStrong</name></member>
      <member refid="struct_bvr_1_1_handle_lifetime_1af3758b79788ff142719e9d893223c165" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>IsWeak</name></member>
      <member refid="struct_bvr_1_1_handle_1ad17f374d9200ce09888cbfafdf754177" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>m_index</name></member>
      <member refid="struct_bvr_1_1_handle_lifetime_1a9d7ad3ad664a620c1c38ed8aa15e2f73" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>m_type</name></member>
      <member refid="struct_bvr_1_1_handle_1a7e854d9d7bab6623b6061d46bd284447" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>operator bool</name></member>
      <member refid="struct_bvr_1_1_handle_1a37d5d09fe86b175fb748b511b52e7169" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>operator!=</name></member>
      <member refid="struct_bvr_1_1_handle_1a43ea5686718fbf44d5c484e3c37e518a" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>operator!=</name></member>
      <member refid="struct_bvr_1_1_handle_1aedae8df4cd5548ab4fc4c512f75f0ff6" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>operator&lt;=&gt;</name></member>
      <member refid="struct_bvr_1_1_handle_1ab5a023df5f13c5814b7e41ab10267fa0" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>operator=</name></member>
      <member refid="struct_bvr_1_1_handle_1afbd7dfa0e6029f5c786a7a700c9333a5" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>operator=</name></member>
      <member refid="struct_bvr_1_1_handle_1aa2fbeae7f04abed01f9880d274d6d1e6" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>operator==</name></member>
      <member refid="struct_bvr_1_1_handle_1a732d5369548344717c7c0d291d1346a1" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>operator==</name></member>
      <member refid="struct_bvr_1_1_handle_1ae59f9b0e23674d6f837fd0bd421dfcfa" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>operator==</name></member>
      <member refid="struct_bvr_1_1_handle_1af9a1dc2986a65bb7a7db30f9600fa6ab" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>Strong</name></member>
      <member refid="struct_bvr_1_1_handle_1a1e72a60a431a82d7bb03dbd1493ccf53" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>ToStrong</name></member>
      <member refid="struct_bvr_1_1_handle_1a5b91f9ecd545d633c5ff042f3cc04d68" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>ToWeak</name></member>
      <member refid="struct_bvr_1_1_handle_1ac19afa2fa049c349370c7de9cd55d4dd" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>TraitsT</name></member>
      <member refid="struct_bvr_1_1_handle_1ae8f5fda393a783727475c1e6db121d5c" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>Typed</name></member>
      <member refid="struct_bvr_1_1_handle_1a6bf78d1d078e005758b68a9f003bfb44" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>Untyped</name></member>
      <member refid="struct_bvr_1_1_handle_1ae49ee892f6f560a41fcac0ecc56264b6" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>Weak</name></member>
      <member refid="struct_bvr_1_1_handle_1ae6a5cd657988da47664cd079dc8e6c8c" prot="public" virt="non-virtual"><scope>Bvr::Handle</scope><name>~Handle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

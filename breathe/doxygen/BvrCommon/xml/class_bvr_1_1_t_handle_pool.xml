<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_bvr_1_1_t_handle_pool" kind="class" language="C++" prot="public">
    <compoundname>Bvr::THandlePool</compoundname>
    <innerclass refid="struct_bvr_1_1_t_handle_pool_1_1iterator" prot="public">Bvr::THandlePool::iterator</innerclass>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename TagT</type>
        <defval>T</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_bvr_1_1_t_handle_pool_1a783d53f5a48fd161ed79ef3e9a3caa8d" prot="private" static="no">
        <type>T</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::ResourceT =  T</definition>
        <argsstring></argsstring>
        <name>ResourceT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="8" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_t_handle_pool_1aa64b3f29a646a80b4c88f021dbb81d23" prot="private" static="no">
        <type>ResourceT *</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::MemoryT =  ResourceT*</definition>
        <argsstring></argsstring>
        <name>MemoryT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="9" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_t_handle_pool_1adc345823178a7b5814d22a2a5d374d4d" prot="private" static="no">
        <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">THandle</ref>&lt; TagT &gt;</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::HandleT =  THandle&lt;TagT&gt;</definition>
        <argsstring></argsstring>
        <name>HandleT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="10" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_t_handle_pool_1ad2ce4748cc7ce7ceba4bf3093bafa2c8" prot="private" static="no">
        <type>typename HandleT::IdT</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::IdT =  typename HandleT::IdT</definition>
        <argsstring></argsstring>
        <name>IdT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="11" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_t_handle_pool_1aa717a38f06103bd6d6b15ae3a9413f08" prot="private" static="no">
        <type>typename std::vector&lt; ResourceT &gt;::size_type</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::size_type =  typename std::vector&lt;ResourceT&gt;::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="13" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_t_handle_pool_1a783d5a1b25f661d24bdde64af7534f5a" prot="private" static="no">
        <type>std::allocator&lt; ResourceT &gt;</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::TAlloc =  std::allocator&lt;ResourceT&gt;</definition>
        <argsstring></argsstring>
        <name>TAlloc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="14" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_t_handle_pool_1a6fbb77250e096487d11b763461247217" prot="private" static="no">
        <type>std::allocator_traits&lt; TAlloc &gt;</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::TAllocTraits =  std::allocator_traits&lt;TAlloc&gt;</definition>
        <argsstring></argsstring>
        <name>TAllocTraits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="15" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_t_handle_pool_1a50367f188937487b08b5a87f2692c7b1" prot="private" static="no">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>typename std::enable_if&lt; std::is_same_v&lt; U, ResourceT &gt;||std::is_same_v&lt; U, TagT &gt;, T * &gt;::type</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::GetT =  typename std::enable_if&lt; std::is_same_v&lt;U, ResourceT&gt; || std::is_same_v&lt;U, TagT&gt;, T*&gt;::type</definition>
        <argsstring></argsstring>
        <name>GetT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="22" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_bvr_1_1_t_handle_pool_1af6934be27fd1988134d04afebe533b96" prot="public" static="no">
        <type><ref refid="struct_bvr_1_1_t_handle_pool_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::const_iterator =  iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="64" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_t_handle_pool_1a792ed265ce301f87aa1c09bf315aca3a" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static uint32</type>
        <definition>constexpr static uint32 Bvr::THandlePool&lt; T, TagT &gt;::UnitialisedPattern</definition>
        <argsstring></argsstring>
        <name>UnitialisedPattern</name>
        <initializer>= 0xbaadf00d</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="17" column="29" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_t_handle_pool_1a709266c4342f35611463610655478f15" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static uint32</type>
        <definition>constexpr static uint32 Bvr::THandlePool&lt; T, TagT &gt;::FreedPattern</definition>
        <argsstring></argsstring>
        <name>FreedPattern</name>
        <initializer>= 0xdeadbeef</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="18" column="29" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_t_handle_pool_1abe0c5adad24e7fbc968327a14616dc80" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static uint32</type>
        <definition>constexpr static uint32 Bvr::THandlePool&lt; T, TagT &gt;::LastPattern</definition>
        <argsstring></argsstring>
        <name>LastPattern</name>
        <initializer>= 0xdeaddead</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="19" column="29" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_t_handle_pool_1a893c3727b5e5c37f215bfb4a8d94e905" prot="private" static="no" mutable="no">
        <type>std::list&lt; IdT &gt;</type>
        <definition>std::list&lt;IdT&gt; Bvr::THandlePool&lt; T, TagT &gt;::m_freeList</definition>
        <argsstring></argsstring>
        <name>m_freeList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="221" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_t_handle_pool_1aca24838ba72c92ae84c5cfde13f6bdee" prot="private" static="no" mutable="no">
        <type>std::vector&lt; IdT &gt;</type>
        <definition>std::vector&lt;IdT&gt; Bvr::THandlePool&lt; T, TagT &gt;::m_generations</definition>
        <argsstring></argsstring>
        <name>m_generations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="222" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_t_handle_pool_1a0ede9884768a35369f5fefd6771ee52a" prot="private" static="no" mutable="no">
        <type>TAlloc</type>
        <definition>TAlloc Bvr::THandlePool&lt; T, TagT &gt;::m_allocator</definition>
        <argsstring></argsstring>
        <name>m_allocator</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="223" column="22" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_t_handle_pool_1aca9cf4288fc89af0efb65a46f96e4ae1" prot="private" static="no" mutable="no">
        <type>MemoryT</type>
        <definition>MemoryT Bvr::THandlePool&lt; T, TagT &gt;::m_pData</definition>
        <argsstring></argsstring>
        <name>m_pData</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="224" column="22" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="224" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1a80fcd8a2018a4ee164f7ad90809d3c94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::THandlePool&lt; T, TagT &gt;::THandlePool</definition>
        <argsstring>()=default</argsstring>
        <name>THandlePool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="66" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1a97b95822345b5748f9afa993534aedb1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::THandlePool&lt; T, TagT &gt;::~THandlePool</definition>
        <argsstring>()</argsstring>
        <name>~THandlePool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="67" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1af5597ef0cc9d729336e9cb537b755ade" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">HandleT</ref></type>
        <definition>HandleT Bvr::THandlePool&lt; T, TagT &gt;::emplace</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>emplace</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="69" column="26" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="69" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1aa23baf5a2ad22a509579d87348b4456d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::THandlePool&lt; T, TagT &gt;::IsValid</definition>
        <argsstring>(HandleT handle) const noexcept</argsstring>
        <name>IsValid</name>
        <param>
          <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">HandleT</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="86" column="18" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1a63c18d20e46b608d4e901002e45470ce" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::THandlePool&lt; T, TagT &gt;::empty</definition>
        <argsstring>() const noexcept</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="91" column="18" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1a39ab3ef52dd35e54b44d64b296483818" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type Bvr::THandlePool&lt; T, TagT &gt;::size</definition>
        <argsstring>() const noexcept</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="92" column="23" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="92" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1a7adbe52b3bb7185ab4595ac36db3e0d6" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type Bvr::THandlePool&lt; T, TagT &gt;::capacity</definition>
        <argsstring>() const noexcept</argsstring>
        <name>capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="95" column="23" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1ac8f2fa053754be5a80698b6fd7730083" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>GetT&lt; U &gt;</type>
        <definition>GetT&lt;U&gt; Bvr::THandlePool&lt; T, TagT &gt;::assure</definition>
        <argsstring>(THandle&lt; U &gt; handle) noexcept</argsstring>
        <name>assure</name>
        <param>
          <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">THandle</ref>&lt; U &gt;</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="101" column="18" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="101" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1aa3196e5259759d43efcca6a11c01eb83" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>const GetT&lt; U &gt;</type>
        <definition>const GetT&lt;U&gt; Bvr::THandlePool&lt; T, TagT &gt;::assure</definition>
        <argsstring>(THandle&lt; U &gt; handle) const noexcept</argsstring>
        <name>assure</name>
        <param>
          <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">THandle</ref>&lt; U &gt;</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="106" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1ae2871b2adfcdf0d61214ea6d7958e054" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>GetT&lt; U &gt;</type>
        <definition>GetT&lt;U&gt; Bvr::THandlePool&lt; T, TagT &gt;::get</definition>
        <argsstring>(THandle&lt; U &gt; handle) noexcept</argsstring>
        <name>get</name>
        <param>
          <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">THandle</ref>&lt; U &gt;</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="111" column="18" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="111" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1aeb8f7f6d6ee990226433b8544fcf4477" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>const GetT&lt; U &gt;</type>
        <definition>const GetT&lt;U&gt; Bvr::THandlePool&lt; T, TagT &gt;::get</definition>
        <argsstring>(THandle&lt; U &gt; handle) const noexcept</argsstring>
        <name>get</name>
        <param>
          <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">THandle</ref>&lt; U &gt;</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="115" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="115" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1aad8a1ccc7ed81241fd8f76e09a6ae082" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::THandlePool&lt; T, TagT &gt;::release</definition>
        <argsstring>(HandleT handle) noexcept</argsstring>
        <name>release</name>
        <param>
          <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">HandleT</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="119" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="119" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1af1fb1dbe1aeec7b6d3c0e187e8908e1d" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::THandlePool&lt; T, TagT &gt;::clear</definition>
        <argsstring>() noexcept</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="128" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="128" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1ad8fb56932ec31db8f8c6645c40710d9a" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_t_handle_pool_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>iterator Bvr::THandlePool&lt; T, TagT &gt;::begin</definition>
        <argsstring>() noexcept</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="146" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="146" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1a7d8d534fab7a7eedc8f1c75700312de7" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_t_handle_pool_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>iterator Bvr::THandlePool&lt; T, TagT &gt;::end</definition>
        <argsstring>() noexcept</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="152" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="152" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1acd800067c0eece1d19ced3cda02df122" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_t_handle_pool_1_1iterator" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator Bvr::THandlePool&lt; T, TagT &gt;::begin</definition>
        <argsstring>() const noexcept</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="156" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="156" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1a29da568244a737441a113c7cecd337d2" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_t_handle_pool_1_1iterator" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator Bvr::THandlePool&lt; T, TagT &gt;::end</definition>
        <argsstring>() const noexcept</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="162" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="162" bodyend="164"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1a233833b7e2c9e2c68b4ea9061f42d0c1" prot="private" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::THandlePool&lt; T, TagT &gt;::grow</definition>
        <argsstring>() noexcept</argsstring>
        <name>grow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="167" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="167" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1a5eeedd7f9c0745100c19118f8d3dc884" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Bvr::THandlePool&lt; T, TagT &gt;::SetBitPattern</definition>
        <argsstring>(HandleT handle, const U pattern)</argsstring>
        <name>SetBitPattern</name>
        <param>
          <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">HandleT</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const U</type>
          <declname>pattern</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="200" column="22" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="200" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1a1f00697e29681b1e2843e7feb78c8610" prot="private" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Bvr::THandlePool&lt; T, TagT &gt;::CheckBitPattern</definition>
        <argsstring>(HandleT handle, U pattern) const noexcept</argsstring>
        <name>CheckBitPattern</name>
        <param>
          <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">HandleT</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>U</type>
          <declname>pattern</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="207" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="207" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_t_handle_pool_1a196004c7284ac34cb7a4c90cb2bd36e9" prot="private" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::THandlePool&lt; T, TagT &gt;::HasInvalidationPatterns</definition>
        <argsstring>(HandleT handle) const noexcept</argsstring>
        <name>HasInvalidationPatterns</name>
        <param>
          <type><ref refid="struct_bvr_1_1_t_handle" kindref="compound">HandleT</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="214" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="214" bodyend="218"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="7" column="16" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="7" bodyend="225"/>
    <listofallmembers>
      <member refid="class_bvr_1_1_t_handle_pool_1ac8f2fa053754be5a80698b6fd7730083" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>assure</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1aa3196e5259759d43efcca6a11c01eb83" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>assure</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1ad8fb56932ec31db8f8c6645c40710d9a" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>begin</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1acd800067c0eece1d19ced3cda02df122" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>begin</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a7adbe52b3bb7185ab4595ac36db3e0d6" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>capacity</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a1f00697e29681b1e2843e7feb78c8610" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>CheckBitPattern</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1af1fb1dbe1aeec7b6d3c0e187e8908e1d" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>clear</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1af6934be27fd1988134d04afebe533b96" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>const_iterator</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1af5597ef0cc9d729336e9cb537b755ade" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>emplace</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a63c18d20e46b608d4e901002e45470ce" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>empty</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a7d8d534fab7a7eedc8f1c75700312de7" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>end</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a29da568244a737441a113c7cecd337d2" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>end</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a709266c4342f35611463610655478f15" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>FreedPattern</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1ae2871b2adfcdf0d61214ea6d7958e054" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>get</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1aeb8f7f6d6ee990226433b8544fcf4477" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>get</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a50367f188937487b08b5a87f2692c7b1" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>GetT</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a233833b7e2c9e2c68b4ea9061f42d0c1" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>grow</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1adc345823178a7b5814d22a2a5d374d4d" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>HandleT</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a196004c7284ac34cb7a4c90cb2bd36e9" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>HasInvalidationPatterns</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1ad2ce4748cc7ce7ceba4bf3093bafa2c8" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>IdT</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1aa23baf5a2ad22a509579d87348b4456d" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>IsValid</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1abe0c5adad24e7fbc968327a14616dc80" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>LastPattern</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a0ede9884768a35369f5fefd6771ee52a" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>m_allocator</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a893c3727b5e5c37f215bfb4a8d94e905" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>m_freeList</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1aca24838ba72c92ae84c5cfde13f6bdee" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>m_generations</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1aca9cf4288fc89af0efb65a46f96e4ae1" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>m_pData</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1aa64b3f29a646a80b4c88f021dbb81d23" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>MemoryT</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1aad8a1ccc7ed81241fd8f76e09a6ae082" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>release</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a783d53f5a48fd161ed79ef3e9a3caa8d" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>ResourceT</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a5eeedd7f9c0745100c19118f8d3dc884" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>SetBitPattern</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a39ab3ef52dd35e54b44d64b296483818" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>size</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1aa717a38f06103bd6d6b15ae3a9413f08" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>size_type</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a783d5a1b25f661d24bdde64af7534f5a" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>TAlloc</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a6fbb77250e096487d11b763461247217" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>TAllocTraits</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a80fcd8a2018a4ee164f7ad90809d3c94" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>THandlePool</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a792ed265ce301f87aa1c09bf315aca3a" prot="private" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>UnitialisedPattern</name></member>
      <member refid="class_bvr_1_1_t_handle_pool_1a97b95822345b5748f9afa993534aedb1" prot="public" virt="non-virtual"><scope>Bvr::THandlePool</scope><name>~THandlePool</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

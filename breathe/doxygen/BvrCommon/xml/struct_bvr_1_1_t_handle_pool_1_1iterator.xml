<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_bvr_1_1_t_handle_pool_1_1iterator" kind="struct" language="C++" prot="public">
    <compoundname>Bvr::THandlePool::iterator</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1a97a86dbcb2095e48b35dd3bddde05dc6" prot="public" static="no">
        <type>std::forward_iterator_tag</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::iterator::iterator_category =  std::forward_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="32" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1af7db1847933d57655e9356218482c093" prot="public" static="no">
        <type>typename THandleAllocTraits::const_pointer</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::iterator::TContainer =  typename THandleAllocTraits::const_pointer</definition>
        <argsstring></argsstring>
        <name>TContainer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="33" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1a3e4e5732108bcf00f23f1303a1b19049" prot="public" static="no">
        <type>typename THandleAllocTraits::size_type</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::iterator::size_type =  typename THandleAllocTraits::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="34" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1aa9879ce19dc2f185a8381c7cf6498ec7" prot="public" static="no">
        <type>typename THandleAllocTraits::difference_type</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::iterator::difference_type =  typename THandleAllocTraits::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="35" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1a5c606ae0fa91c06bb97a2a34dde52eab" prot="public" static="no">
        <type>typename THandleAllocTraits::value_type</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::iterator::value_type =  typename THandleAllocTraits::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="36" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1a1ef1e395eb062c4be019d5f376030088" prot="public" static="no">
        <type>typename THandleAllocTraits::const_pointer</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::iterator::pointer =  typename THandleAllocTraits::const_pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="37" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1af78fd8c9156974d29df8c4e1d50570ac" prot="public" static="no">
        <type>const value_type &amp;</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::iterator::reference =  const value_type&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="38" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1a58a54c56abe68de982a1f13bd59654ec" prot="private" static="no" mutable="no">
        <type>TContainer</type>
        <definition>TContainer Bvr::THandlePool&lt; T, TagT &gt;::iterator::m_handles</definition>
        <argsstring></argsstring>
        <name>m_handles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="80" column="25" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1a7484bfacdebb50e06bc65cb268184885" prot="private" static="no" mutable="no">
        <type>difference_type</type>
        <definition>difference_type Bvr::THandlePool&lt; T, TagT &gt;::iterator::m_itemsLeft</definition>
        <argsstring></argsstring>
        <name>m_itemsLeft</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="81" column="25" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1a819cc89f2cc8f783b707faeed1616394" prot="private" static="no" mutable="no">
        <type>difference_type</type>
        <definition>difference_type Bvr::THandlePool&lt; T, TagT &gt;::iterator::m_offset</definition>
        <argsstring></argsstring>
        <name>m_offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="82" column="25" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1a7366d9b78958e6b3823fe68e9fb3cdce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::THandlePool&lt; T, TagT &gt;::iterator::iterator</definition>
        <argsstring>(TContainer container, difference_type itemsLeft, difference_type offset)</argsstring>
        <name>iterator</name>
        <param>
          <type>TContainer</type>
          <declname>container</declname>
        </param>
        <param>
          <type>difference_type</type>
          <declname>itemsLeft</declname>
        </param>
        <param>
          <type>difference_type</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="40" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="40" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1afe901df69eacbd9187fd6f84bace657b" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>pointer</type>
        <definition>pointer Bvr::THandlePool&lt; T, TagT &gt;::iterator::operator-&gt;</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="44" column="18" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1a782ced710a6df996ba73431b7ae105e2" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference Bvr::THandlePool&lt; T, TagT &gt;::iterator::operator*</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="47" column="20" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1afd4cbc69c41077c54c23bb779cc9bad1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_t_handle_pool_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
        <definition>iterator&amp; Bvr::THandlePool&lt; T, TagT &gt;::iterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="51" column="18" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="51" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1aa74a9388ee74fe4d306df34b2c057c71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_t_handle_pool_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>iterator Bvr::THandlePool&lt; T, TagT &gt;::iterator::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="62" column="18" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="62" bodyend="66"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1a81d10d7799462c7ca5e7cf19119ca356" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const iterator &amp;a, const iterator &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="struct_bvr_1_1_t_handle_pool_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_t_handle_pool_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="67" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="friend" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1a55a8ee0e80dad1a7da9d751c25bc0386" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const iterator &amp;a, const iterator &amp;b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="struct_bvr_1_1_t_handle_pool_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_t_handle_pool_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="70" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="70" bodyend="72"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1a74e3c2d6943cf12d2c1560a66118fde1" prot="private" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::THandlePool&lt; T, TagT &gt;::iterator::IsEnd</definition>
        <argsstring>() const noexcept</argsstring>
        <name>IsEnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="75" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1a635a352d92db5f56b86a484b55ba81e6" prot="private" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::THandlePool&lt; T, TagT &gt;::iterator::IsValid</definition>
        <argsstring>() const noexcept</argsstring>
        <name>IsValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="76" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="76" bodyend="78"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="31" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="31" bodyend="83"/>
    <listofallmembers>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1aa9879ce19dc2f185a8381c7cf6498ec7" prot="public" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>difference_type</name></member>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1a74e3c2d6943cf12d2c1560a66118fde1" prot="private" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>IsEnd</name></member>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1a635a352d92db5f56b86a484b55ba81e6" prot="private" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>IsValid</name></member>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1a7366d9b78958e6b3823fe68e9fb3cdce" prot="public" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>iterator</name></member>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1a97a86dbcb2095e48b35dd3bddde05dc6" prot="public" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>iterator_category</name></member>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1a58a54c56abe68de982a1f13bd59654ec" prot="private" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>m_handles</name></member>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1a7484bfacdebb50e06bc65cb268184885" prot="private" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>m_itemsLeft</name></member>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1a819cc89f2cc8f783b707faeed1616394" prot="private" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>m_offset</name></member>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1a55a8ee0e80dad1a7da9d751c25bc0386" prot="public" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>operator!=</name></member>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1a782ced710a6df996ba73431b7ae105e2" prot="public" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>operator*</name></member>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1afd4cbc69c41077c54c23bb779cc9bad1" prot="public" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>operator++</name></member>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1aa74a9388ee74fe4d306df34b2c057c71" prot="public" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>operator++</name></member>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1afe901df69eacbd9187fd6f84bace657b" prot="public" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>operator-&gt;</name></member>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1a81d10d7799462c7ca5e7cf19119ca356" prot="public" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>operator==</name></member>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1a1ef1e395eb062c4be019d5f376030088" prot="public" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>pointer</name></member>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1af78fd8c9156974d29df8c4e1d50570ac" prot="public" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>reference</name></member>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1a3e4e5732108bcf00f23f1303a1b19049" prot="public" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>size_type</name></member>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1af7db1847933d57655e9356218482c093" prot="public" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>TContainer</name></member>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1a5c606ae0fa91c06bb97a2a34dde52eab" prot="public" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

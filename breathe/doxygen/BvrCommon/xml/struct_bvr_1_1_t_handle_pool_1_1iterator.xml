<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_bvr_1_1_t_handle_pool_1_1iterator" kind="struct" language="C++" prot="public">
    <compoundname>Bvr::THandlePool::iterator</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1a97a86dbcb2095e48b35dd3bddde05dc6" prot="public" static="no">
        <type>std::forward_iterator_tag</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::iterator::iterator_category =  std::forward_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="27" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1a4432199507ae4098437579d829cafc93" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::iterator::difference_type =  std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="28" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1a5003a7af2c92fb652a40d887cde39561" prot="public" static="no">
        <type>T</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::iterator::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="29" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1a8f4433b3aecbf1cda88337e0540d33c3" prot="public" static="no">
        <type>T *</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::iterator::pointer =  T*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="30" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1adbc300b7c9705a48fd2b2386e4e99de5" prot="public" static="no">
        <type>T &amp;</type>
        <definition>using Bvr::THandlePool&lt; T, TagT &gt;::iterator::reference =  T&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="31" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1ab390ddc4fa70824b2c060b42112f8280" prot="private" static="no" mutable="no">
        <type>pointer</type>
        <definition>pointer Bvr::THandlePool&lt; T, TagT &gt;::iterator::m_ptr</definition>
        <argsstring></argsstring>
        <name>m_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="60" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1a55f56c735254eb6118b879a388500af0" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_bvr_1_1_t_handle_pool" kindref="compound">THandlePool</ref> *</type>
        <definition>const THandlePool* Bvr::THandlePool&lt; T, TagT &gt;::iterator::m_pool</definition>
        <argsstring></argsstring>
        <name>m_pool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="61" column="27" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1a98b9fea4092524f317223c4c14740724" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::THandlePool&lt; T, TagT &gt;::iterator::iterator</definition>
        <argsstring>(pointer ptr, const THandlePool *pool)</argsstring>
        <name>iterator</name>
        <param>
          <type>pointer</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_t_handle_pool" kindref="compound">THandlePool</ref> *</type>
          <declname>pool</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="32" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="32" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1a3b712f70e9cd527fb5abefe18a00cdda" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference Bvr::THandlePool&lt; T, TagT &gt;::iterator::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="35" column="19" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1a0f0f53288870a49f545b95983eaf4ed4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>pointer</type>
        <definition>pointer Bvr::THandlePool&lt; T, TagT &gt;::iterator::operator-&gt;</definition>
        <argsstring>()</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="36" column="19" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1afd4cbc69c41077c54c23bb779cc9bad1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_t_handle_pool_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
        <definition>iterator&amp; Bvr::THandlePool&lt; T, TagT &gt;::iterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="37" column="18" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="37" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1aa74a9388ee74fe4d306df34b2c057c71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_t_handle_pool_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>iterator Bvr::THandlePool&lt; T, TagT &gt;::iterator::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="47" column="18" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="47" bodyend="51"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1a81d10d7799462c7ca5e7cf19119ca356" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const iterator &amp;a, const iterator &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="struct_bvr_1_1_t_handle_pool_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_t_handle_pool_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="52" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="friend" id="struct_bvr_1_1_t_handle_pool_1_1iterator_1a55a8ee0e80dad1a7da9d751c25bc0386" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const iterator &amp;a, const iterator &amp;b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="struct_bvr_1_1_t_handle_pool_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_t_handle_pool_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="55" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="55" bodyend="57"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" line="26" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/HandlePool.hpp" bodystart="26" bodyend="62"/>
    <listofallmembers>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1a4432199507ae4098437579d829cafc93" prot="public" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>difference_type</name></member>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1a98b9fea4092524f317223c4c14740724" prot="public" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>iterator</name></member>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1a97a86dbcb2095e48b35dd3bddde05dc6" prot="public" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>iterator_category</name></member>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1a55f56c735254eb6118b879a388500af0" prot="private" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>m_pool</name></member>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1ab390ddc4fa70824b2c060b42112f8280" prot="private" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>m_ptr</name></member>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1a55a8ee0e80dad1a7da9d751c25bc0386" prot="public" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>operator!=</name></member>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1a3b712f70e9cd527fb5abefe18a00cdda" prot="public" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>operator*</name></member>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1afd4cbc69c41077c54c23bb779cc9bad1" prot="public" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>operator++</name></member>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1aa74a9388ee74fe4d306df34b2c057c71" prot="public" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>operator++</name></member>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1a0f0f53288870a49f545b95983eaf4ed4" prot="public" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>operator-&gt;</name></member>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1a81d10d7799462c7ca5e7cf19119ca356" prot="public" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>operator==</name></member>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1a8f4433b3aecbf1cda88337e0540d33c3" prot="public" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>pointer</name></member>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1adbc300b7c9705a48fd2b2386e4e99de5" prot="public" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>reference</name></member>
      <member refid="struct_bvr_1_1_t_handle_pool_1_1iterator_1a5003a7af2c92fb652a40d887cde39561" prot="public" virt="non-virtual"><scope>Bvr::THandlePool::iterator</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

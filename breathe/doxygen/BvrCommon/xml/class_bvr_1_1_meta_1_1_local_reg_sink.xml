<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_bvr_1_1_meta_1_1_local_reg_sink" kind="class" language="C++" prot="public">
    <compoundname>Bvr::Meta::LocalRegSink</compoundname>
    <includes refid="_local_reg_sink_8hpp" local="no">LocalRegSink.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_meta_1_1_local_reg_sink_1a746d70e6456f46e11f6c29dd0b4d96c7" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_bvr_1_1_meta_1_1_type" kindref="compound">Type</ref> &gt;</type>
        <definition>std::vector&lt;Type&gt; Bvr::Meta::LocalRegSink::m_allTypes</definition>
        <argsstring></argsstring>
        <name>m_allTypes</name>
        <qualifiedname>Bvr::Meta::LocalRegSink::m_allTypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" line="37" column="53" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_meta_1_1_local_reg_sink_1ab569061c49046898c34b266b0ba7af66" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="struct_bvr_1_1_meta_1_1_type_data" kindref="compound">TypeData</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::unique_ptr&lt;TypeData&gt; &gt; Bvr::Meta::LocalRegSink::m_typeDatas</definition>
        <argsstring></argsstring>
        <name>m_typeDatas</name>
        <qualifiedname>Bvr::Meta::LocalRegSink::m_typeDatas</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" line="38" column="32" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_meta_1_1_local_reg_sink_1a9352af7acc28797864c556575359e1e7" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="struct_bvr_1_1_meta_1_1_property_wrapper_base" kindref="compound">PropertyWrapperBase</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::unique_ptr&lt;PropertyWrapperBase&gt; &gt; Bvr::Meta::LocalRegSink::m_properties</definition>
        <argsstring></argsstring>
        <name>m_properties</name>
        <qualifiedname>Bvr::Meta::LocalRegSink::m_properties</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" line="39" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_meta_1_1_local_reg_sink_1af717f94f21e1cc4dbc23654767aab421" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="struct_bvr_1_1_meta_1_1_method_wrapper_base" kindref="compound">MethodWrapperBase</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::unique_ptr&lt;MethodWrapperBase&gt; &gt; Bvr::Meta::LocalRegSink::m_methods</definition>
        <argsstring></argsstring>
        <name>m_methods</name>
        <qualifiedname>Bvr::Meta::LocalRegSink::m_methods</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" line="40" column="23" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_meta_1_1_local_reg_sink_1a718a2c87b829e99d98de29ae51aa1ade" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="struct_bvr_1_1_meta_1_1_conversion_method_base" kindref="compound">ConversionMethodBase</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::unique_ptr&lt;ConversionMethodBase&gt; &gt; Bvr::Meta::LocalRegSink::m_conversions</definition>
        <argsstring></argsstring>
        <name>m_conversions</name>
        <qualifiedname>Bvr::Meta::LocalRegSink::m_conversions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" line="41" column="20" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_meta_1_1_local_reg_sink_1aca7ab72c1e4b169c1a77b43259c4c3fa" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="class_bvr_1_1_meta_1_1_detail_1_1_enum_wrapper_base" kindref="compound">Detail::EnumWrapperBase</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::unique_ptr&lt;Detail::EnumWrapperBase&gt; &gt; Bvr::Meta::LocalRegSink::m_enums</definition>
        <argsstring></argsstring>
        <name>m_enums</name>
        <qualifiedname>Bvr::Meta::LocalRegSink::m_enums</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" line="42" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_local_reg_sink_1a020aa2217a6adf3cb0796ca04b1ad5aa" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::Meta::LocalRegSink::LocalRegSink</definition>
        <argsstring>() noexcept</argsstring>
        <name>LocalRegSink</name>
        <qualifiedname>Bvr::Meta::LocalRegSink::LocalRegSink</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" line="21" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" bodystart="45" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_local_reg_sink_1a554c8c7292bf364b5064001f1fcb19cd" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::Meta::LocalRegSink::~LocalRegSink</definition>
        <argsstring>() noexcept</argsstring>
        <name>~LocalRegSink</name>
        <qualifiedname>Bvr::Meta::LocalRegSink::~LocalRegSink</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" line="22" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_local_reg_sink_1a8c39b13c9e8c70d855e2e5d251924869" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_meta_1_1_type_data" kindref="compound">TypeData</ref> *</type>
        <definition>TypeData * Bvr::Meta::LocalRegSink::RegItem</definition>
        <argsstring>(std::unique_ptr&lt; TypeData &gt; typeData)</argsstring>
        <name>RegItem</name>
        <qualifiedname>Bvr::Meta::LocalRegSink::RegItem</qualifiedname>
        <param>
          <type>std::unique_ptr&lt; <ref refid="struct_bvr_1_1_meta_1_1_type_data" kindref="compound">TypeData</ref> &gt;</type>
          <declname>typeData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" line="24" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" bodystart="53" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_local_reg_sink_1a76a5b3d2b499efc45ac187510141ec2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>bool Bvr::Meta::LocalRegSink::RegItem</definition>
        <argsstring>(std::unique_ptr&lt; PropertyWrapperBase &gt; propertyData)</argsstring>
        <name>RegItem</name>
        <qualifiedname>Bvr::Meta::LocalRegSink::RegItem</qualifiedname>
        <param>
          <type>std::unique_ptr&lt; <ref refid="struct_bvr_1_1_meta_1_1_property_wrapper_base" kindref="compound">PropertyWrapperBase</ref> &gt;</type>
          <declname>propertyData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" line="25" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" bodystart="62" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_local_reg_sink_1a98aeef7799db6875622e394ef960753a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>bool Bvr::Meta::LocalRegSink::RegItem</definition>
        <argsstring>(std::unique_ptr&lt; MethodWrapperBase &gt; methData)</argsstring>
        <name>RegItem</name>
        <qualifiedname>Bvr::Meta::LocalRegSink::RegItem</qualifiedname>
        <param>
          <type>std::unique_ptr&lt; <ref refid="struct_bvr_1_1_meta_1_1_method_wrapper_base" kindref="compound">MethodWrapperBase</ref> &gt;</type>
          <declname>methData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" line="26" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" bodystart="69" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_local_reg_sink_1adf6a49ed367f131b7a67e9fb8e5e0290" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>bool Bvr::Meta::LocalRegSink::RegItem</definition>
        <argsstring>(std::unique_ptr&lt; Detail::EnumWrapperBase &gt; enumData)</argsstring>
        <name>RegItem</name>
        <qualifiedname>Bvr::Meta::LocalRegSink::RegItem</qualifiedname>
        <param>
          <type>std::unique_ptr&lt; <ref refid="class_bvr_1_1_meta_1_1_detail_1_1_enum_wrapper_base" kindref="compound">Detail::EnumWrapperBase</ref> &gt;</type>
          <declname>enumData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" line="27" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" bodystart="108" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_local_reg_sink_1ae47250913bc4834488f688320d355f68" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>bool Bvr::Meta::LocalRegSink::RegItem</definition>
        <argsstring>(std::unique_ptr&lt; ConversionMethodBase &gt; conv)</argsstring>
        <name>RegItem</name>
        <qualifiedname>Bvr::Meta::LocalRegSink::RegItem</qualifiedname>
        <param>
          <type>std::unique_ptr&lt; <ref refid="struct_bvr_1_1_meta_1_1_conversion_method_base" kindref="compound">ConversionMethodBase</ref> &gt;</type>
          <declname>conv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" line="28" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" bodystart="76" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_local_reg_sink_1a3f40faef1a7d4146aee658387e4d3e74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">void</ref></type>
        <definition>void Bvr::Meta::LocalRegSink::Unregister</definition>
        <argsstring>()</argsstring>
        <name>Unregister</name>
        <qualifiedname>Bvr::Meta::LocalRegSink::Unregister</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" line="30" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" bodystart="83" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_local_reg_sink_1aaacb32abc79e23eac66819c36da5d6e6" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::span&lt; <ref refid="class_bvr_1_1_meta_1_1_type" kindref="compound">Type</ref> <ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> &gt;</type>
        <definition>std::span&lt; Type const &gt; Bvr::Meta::LocalRegSink::GetAllTypes</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetAllTypes</name>
        <qualifiedname>Bvr::Meta::LocalRegSink::GetAllTypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" line="34" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" bodystart="120" bodyend="122"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_local_reg_sink_1a3bd3d714669053944de7f0e68c17b762" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_local_reg_sink" kindref="compound">LocalRegSink</ref> &amp;</type>
        <definition>LocalRegSink &amp; Bvr::Meta::LocalRegSink::Get</definition>
        <argsstring>() noexcept</argsstring>
        <name>Get</name>
        <qualifiedname>Bvr::Meta::LocalRegSink::Get</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" line="32" column="26" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" bodystart="115" bodyend="118"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>DLL local type registration Helps discovering/unregistering all module local types It will only register the type if it wasn&apos;t previously registered in the global registry Should not be used directly </para>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" line="19" column="1" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/LocalRegSink.hpp" bodystart="19" bodyend="43"/>
    <listofallmembers>
      <member refid="class_bvr_1_1_meta_1_1_local_reg_sink_1a3bd3d714669053944de7f0e68c17b762" prot="public" virt="non-virtual"><scope>Bvr::Meta::LocalRegSink</scope><name>Get</name></member>
      <member refid="class_bvr_1_1_meta_1_1_local_reg_sink_1aaacb32abc79e23eac66819c36da5d6e6" prot="public" virt="non-virtual"><scope>Bvr::Meta::LocalRegSink</scope><name>GetAllTypes</name></member>
      <member refid="class_bvr_1_1_meta_1_1_local_reg_sink_1a020aa2217a6adf3cb0796ca04b1ad5aa" prot="public" virt="non-virtual"><scope>Bvr::Meta::LocalRegSink</scope><name>LocalRegSink</name></member>
      <member refid="class_bvr_1_1_meta_1_1_local_reg_sink_1a746d70e6456f46e11f6c29dd0b4d96c7" prot="private" virt="non-virtual"><scope>Bvr::Meta::LocalRegSink</scope><name>m_allTypes</name></member>
      <member refid="class_bvr_1_1_meta_1_1_local_reg_sink_1a718a2c87b829e99d98de29ae51aa1ade" prot="private" virt="non-virtual"><scope>Bvr::Meta::LocalRegSink</scope><name>m_conversions</name></member>
      <member refid="class_bvr_1_1_meta_1_1_local_reg_sink_1aca7ab72c1e4b169c1a77b43259c4c3fa" prot="private" virt="non-virtual"><scope>Bvr::Meta::LocalRegSink</scope><name>m_enums</name></member>
      <member refid="class_bvr_1_1_meta_1_1_local_reg_sink_1af717f94f21e1cc4dbc23654767aab421" prot="private" virt="non-virtual"><scope>Bvr::Meta::LocalRegSink</scope><name>m_methods</name></member>
      <member refid="class_bvr_1_1_meta_1_1_local_reg_sink_1a9352af7acc28797864c556575359e1e7" prot="private" virt="non-virtual"><scope>Bvr::Meta::LocalRegSink</scope><name>m_properties</name></member>
      <member refid="class_bvr_1_1_meta_1_1_local_reg_sink_1ab569061c49046898c34b266b0ba7af66" prot="private" virt="non-virtual"><scope>Bvr::Meta::LocalRegSink</scope><name>m_typeDatas</name></member>
      <member refid="class_bvr_1_1_meta_1_1_local_reg_sink_1a8c39b13c9e8c70d855e2e5d251924869" prot="public" virt="non-virtual"><scope>Bvr::Meta::LocalRegSink</scope><name>RegItem</name></member>
      <member refid="class_bvr_1_1_meta_1_1_local_reg_sink_1a76a5b3d2b499efc45ac187510141ec2d" prot="public" virt="non-virtual"><scope>Bvr::Meta::LocalRegSink</scope><name>RegItem</name></member>
      <member refid="class_bvr_1_1_meta_1_1_local_reg_sink_1a98aeef7799db6875622e394ef960753a" prot="public" virt="non-virtual"><scope>Bvr::Meta::LocalRegSink</scope><name>RegItem</name></member>
      <member refid="class_bvr_1_1_meta_1_1_local_reg_sink_1adf6a49ed367f131b7a67e9fb8e5e0290" prot="public" virt="non-virtual"><scope>Bvr::Meta::LocalRegSink</scope><name>RegItem</name></member>
      <member refid="class_bvr_1_1_meta_1_1_local_reg_sink_1ae47250913bc4834488f688320d355f68" prot="public" virt="non-virtual"><scope>Bvr::Meta::LocalRegSink</scope><name>RegItem</name></member>
      <member refid="class_bvr_1_1_meta_1_1_local_reg_sink_1a3f40faef1a7d4146aee658387e4d3e74" prot="public" virt="non-virtual"><scope>Bvr::Meta::LocalRegSink</scope><name>Unregister</name></member>
      <member refid="class_bvr_1_1_meta_1_1_local_reg_sink_1a554c8c7292bf364b5064001f1fcb19cd" prot="public" virt="non-virtual"><scope>Bvr::Meta::LocalRegSink</scope><name>~LocalRegSink</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

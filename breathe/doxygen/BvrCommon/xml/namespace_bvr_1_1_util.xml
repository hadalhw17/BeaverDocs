<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespace_bvr_1_1_util" kind="namespace" language="C++">
    <compoundname>Bvr::Util</compoundname>
    <innerclass refid="class_bvr_1_1_util_1_1_c_bump_allocator" prot="public">Bvr::Util::CBumpAllocator</innerclass>
    <innerclass refid="class_bvr_1_1_util_1_1_c_temporary_memory_pool" prot="public">Bvr::Util::CTemporaryMemoryPool</innerclass>
    <innerclass refid="struct_bvr_1_1_util_1_1uuid" prot="public">Bvr::Util::uuid</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="_enums_8hpp_1a71e340f962bacac37231cdfb013f7bf7" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename EnumT</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">constexpr</ref> std::underlying_type_t&lt; EnumT &gt;</type>
        <definition>constexpr std::underlying_type_t&lt; EnumT &gt; Bvr::Util::to_underlying</definition>
        <argsstring>(const EnumT inEnum)</argsstring>
        <name>to_underlying</name>
        <qualifiedname>Bvr::Util::to_underlying</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> EnumT</type>
          <declname>inEnum</declname>
        </param>
    <requiresclause>std::is_enum_v&lt;EnumT&gt;    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Enums.hpp" line="71" column="41" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Enums.hpp" bodystart="71" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="_enums_8hpp_1a218b8414a4776d0c623f4c6ed1a37fa3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename EnumT</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">constexpr</ref> std::underlying_type_t&lt; EnumT &gt;</type>
        <definition>constexpr std::underlying_type_t&lt; EnumT &gt; Bvr::Util::Bit</definition>
        <argsstring>(const EnumT inEnum)</argsstring>
        <name>Bit</name>
        <qualifiedname>Bvr::Util::Bit</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> EnumT</type>
          <declname>inEnum</declname>
        </param>
    <requiresclause>std::is_enum_v&lt;EnumT&gt;    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Enums.hpp" line="81" column="41" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Enums.hpp" bodystart="81" bodyend="88"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Enums.hpp" line="69" column="1"/>
  </compounddef>
</doxygen>

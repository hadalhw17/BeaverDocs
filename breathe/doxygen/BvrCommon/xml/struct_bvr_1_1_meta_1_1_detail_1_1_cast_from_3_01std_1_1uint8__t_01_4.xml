<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1uint8__t_01_4" kind="struct" language="C++" prot="public">
    <compoundname>Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;</compoundname>
    <templateparamlist>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1uint8__t_01_4_1a4d8df36f823ff316e03fa3292ebdabbb" prot="public" static="no">
        <type>std::uint8_t</type>
        <definition>using Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;::SrcType =  std::uint8_t</definition>
        <argsstring></argsstring>
        <name>SrcType</name>
        <qualifiedname>Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;::SrcType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="311" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="311" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1uint8__t_01_4_1af3a585f3549868a959c2826a2405d6d3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, bool &amp;to)</argsstring>
        <name>To</name>
        <qualifiedname>Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;::To</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="313" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="313" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1uint8__t_01_4_1aa5a56620475a719685d4a3c174d1add5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, char &amp;to)</argsstring>
        <name>To</name>
        <qualifiedname>Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;::To</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">char</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="318" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="318" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1uint8__t_01_4_1a0879dbf679c7d440c363785c7495f16d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int8_t &amp;to)</argsstring>
        <name>To</name>
        <qualifiedname>Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;::To</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int8_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="323" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="323" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1uint8__t_01_4_1a77bedc2326dc7531f23fa87c16176977" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint8_t &amp;to)</argsstring>
        <name>To</name>
        <qualifiedname>Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;::To</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint8_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="328" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="328" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1uint8__t_01_4_1a01ecd7d4d2130521c18a17e60de4823e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int16_t &amp;to)</argsstring>
        <name>To</name>
        <qualifiedname>Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;::To</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int16_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="333" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="333" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1uint8__t_01_4_1aeaa0932f8f54c2930bdb9f29fb45cb32" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint16_t &amp;to)</argsstring>
        <name>To</name>
        <qualifiedname>Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;::To</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint16_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="338" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="338" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1uint8__t_01_4_1a155d63fa0efdfdc64c3a1f0012a7293c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int32_t &amp;to)</argsstring>
        <name>To</name>
        <qualifiedname>Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;::To</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int32_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="343" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="343" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1uint8__t_01_4_1aa5341d805614a14bfc6770c14432fdca" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint32_t &amp;to)</argsstring>
        <name>To</name>
        <qualifiedname>Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;::To</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint32_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="348" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="348" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1uint8__t_01_4_1a9e367ae4faef6df852a7f15dc271e5ae" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int64_t &amp;to)</argsstring>
        <name>To</name>
        <qualifiedname>Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;::To</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int64_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="353" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="353" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1uint8__t_01_4_1a50009c20ebb90c5d0fa8889de65386a8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint64_t &amp;to)</argsstring>
        <name>To</name>
        <qualifiedname>Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;::To</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint64_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="358" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="358" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1uint8__t_01_4_1ac60cea55383a23806ccdbf29f9683e31" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, float &amp;to)</argsstring>
        <name>To</name>
        <qualifiedname>Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;::To</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">float</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="363" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="363" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1uint8__t_01_4_1a354b511514d5e67aeb4be7ac35ca2e2b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, double &amp;to)</argsstring>
        <name>To</name>
        <qualifiedname>Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;::To</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">double</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="368" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="368" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1uint8__t_01_4_1a4df6082575f566325eb64958b7c0a76b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::string &amp;to)</argsstring>
        <name>To</name>
        <qualifiedname>Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;::To</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="373" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="373" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1uint8__t_01_4_1a85fc708ff47fb2cd7e36b036b533d209" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;::ToEnum</definition>
        <argsstring>(const SrcType &amp;from, Argument &amp;to)</argsstring>
        <name>ToEnum</name>
        <qualifiedname>Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;::ToEnum</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="class_bvr_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="377" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="377" bodyend="379"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="310" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="310" bodyend="380"/>
    <listofallmembers>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1uint8__t_01_4_1a4d8df36f823ff316e03fa3292ebdabbb" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;</scope><name>SrcType</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1uint8__t_01_4_1af3a585f3549868a959c2826a2405d6d3" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1uint8__t_01_4_1aa5a56620475a719685d4a3c174d1add5" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1uint8__t_01_4_1a0879dbf679c7d440c363785c7495f16d" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1uint8__t_01_4_1a77bedc2326dc7531f23fa87c16176977" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1uint8__t_01_4_1a01ecd7d4d2130521c18a17e60de4823e" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1uint8__t_01_4_1aeaa0932f8f54c2930bdb9f29fb45cb32" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1uint8__t_01_4_1a155d63fa0efdfdc64c3a1f0012a7293c" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1uint8__t_01_4_1aa5341d805614a14bfc6770c14432fdca" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1uint8__t_01_4_1a9e367ae4faef6df852a7f15dc271e5ae" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1uint8__t_01_4_1a50009c20ebb90c5d0fa8889de65386a8" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1uint8__t_01_4_1ac60cea55383a23806ccdbf29f9683e31" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1uint8__t_01_4_1a354b511514d5e67aeb4be7ac35ca2e2b" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1uint8__t_01_4_1a4df6082575f566325eb64958b7c0a76b" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01std_1_1uint8__t_01_4_1a85fc708ff47fb2cd7e36b036b533d209" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; std::uint8_t &gt;</scope><name>ToEnum</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

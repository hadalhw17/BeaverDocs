<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper" kind="struct" language="C++" prot="public">
    <compoundname>Bvr::Meta::Detail::SequentialContainerBinderWrapper</compoundname>
    <basecompoundref prot="public" virt="non-virtual">IteratorBinderBase&lt; std::conditional_t&lt; std::is_const_v&lt; ConstT &gt;, typename SequentialContainerBinder&lt; T &gt;::CIteratorT, typename SequentialContainerBinder&lt; T &gt;::IteratorT &gt; &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename ConstT</type>
      </param>
      <param>
        <type>typename Tp</type>
        <defval>std::conditional_t&lt;                  std::is_const_v&lt;ConstT&gt;,                  typename <ref refid="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder" kindref="compound">SequentialContainerBinder</ref>&lt;T&gt;::CIteratorT,                  typename <ref refid="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder" kindref="compound">SequentialContainerBinder</ref>&lt;T&gt;::IteratorT&gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a19e86e647c74679b40deb74b9faf672c" prot="public" static="no">
        <type><ref refid="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder" kindref="compound">SequentialContainerBinder</ref>&lt; T &gt;</type>
        <definition>using Bvr::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::Base =  SequentialContainerBinder&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" line="100" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a9632ab818728af13b7253f86cf373e16" prot="public" static="no">
        <type>typename Base::ValueT</type>
        <definition>using Bvr::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::ValueT =  typename Base::ValueT</definition>
        <argsstring></argsstring>
        <name>ValueT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" line="101" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a39369c5b2d6d4538bdf74f0940b7e57c" prot="public" static="no">
        <type>typename Base::IteratorT</type>
        <definition>using Bvr::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::IteratorT =  typename Base::IteratorT</definition>
        <argsstring></argsstring>
        <name>IteratorT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" line="102" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a086d4c4d43f6f0a2b670a082f1a56bb3" prot="public" static="no">
        <type>typename Base::CIteratorT</type>
        <definition>using Bvr::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::CIteratorT =  typename Base::CIteratorT</definition>
        <argsstring></argsstring>
        <name>CIteratorT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" line="103" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a81738c2cb67885b96c92b44a9275fac1" prot="public" static="no">
        <type>IteratorBinderBase&lt; Tp &gt;</type>
        <definition>using Bvr::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::IteratorBinderT =  IteratorBinderBase&lt;Tp&gt;</definition>
        <argsstring></argsstring>
        <name>IteratorBinderT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" line="104" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a5ca072daa1138fbe2e6a23f7f7afd1c4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ConstT &amp;</type>
        <definition>static ConstT&amp; Bvr::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::GetContainer</definition>
        <argsstring>(void *pContainer)</argsstring>
        <name>GetContainer</name>
        <param>
          <type>void *</type>
          <declname>pContainer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" line="106" column="23" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a87fb194433143c89e174c3675ae72cb8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref></type>
        <definition>static Variant Bvr::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::GetData</definition>
        <argsstring>(const IteratorT &amp;itr)</argsstring>
        <name>GetData</name>
        <param>
          <type>const IteratorT &amp;</type>
          <declname>itr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" line="110" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" bodystart="110" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a1e9389c58ebe963995a2cdbd5dae5f91" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::IsDynamic</definition>
        <argsstring>()</argsstring>
        <name>IsDynamic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" line="115" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a6c6c92b46aca829716e8a68403c9f9da" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Bvr::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::advance</definition>
        <argsstring>(IteratorData &amp;it, const std::ptrdiff_t idx)</argsstring>
        <name>advance</name>
        <param>
          <type>IteratorData &amp;</type>
          <declname>it</declname>
        </param>
        <param>
          <type>const std::ptrdiff_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" line="117" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" bodystart="117" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a753fe6fd732799ed6e3a3d82bf4b63e7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Bvr::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::begin</definition>
        <argsstring>(void *pContainer, IteratorData &amp;dst)</argsstring>
        <name>begin</name>
        <param>
          <type>void *</type>
          <declname>pContainer</declname>
        </param>
        <param>
          <type>IteratorData &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" line="121" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" bodystart="121" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a025c00b1007394168611b24125b4bb50" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Bvr::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::end</definition>
        <argsstring>(void *pContainer, IteratorData &amp;dst)</argsstring>
        <name>end</name>
        <param>
          <type>void *</type>
          <declname>pContainer</declname>
        </param>
        <param>
          <type>IteratorData &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" line="125" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" bodystart="125" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a8eded94fb759842681be482e25ebba71" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::empty</definition>
        <argsstring>(void *pContainer)</argsstring>
        <name>empty</name>
        <param>
          <type>void *</type>
          <declname>pContainer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" line="129" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" bodystart="129" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a58a18c68ce931bd8ed779a3e075fed57" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Bvr::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::clear</definition>
        <argsstring>(void *pContainer)</argsstring>
        <name>clear</name>
        <param>
          <type>void *</type>
          <declname>pContainer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" line="133" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" bodystart="133" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1af969bb2224bfc70fb3e215380e25ccab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Bvr::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::resize</definition>
        <argsstring>(void *pContainer, const std::size_t size)</argsstring>
        <name>resize</name>
        <param>
          <type>void *</type>
          <declname>pContainer</declname>
        </param>
        <param>
          <type>const std::size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" line="137" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" bodystart="137" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a6727097fcfe6dd14a5e205c2c1936b22" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Bvr::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::insert</definition>
        <argsstring>(void *pContainer, const Argument &amp;val, const IteratorData &amp;posIt, IteratorData &amp;outIt)</argsstring>
        <name>insert</name>
        <param>
          <type>void *</type>
          <declname>pContainer</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>const IteratorData &amp;</type>
          <declname>posIt</declname>
        </param>
        <param>
          <type>IteratorData &amp;</type>
          <declname>outIt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" line="141" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" bodystart="141" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1acfe9af1a8e1040db04c80955ec0f732e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Bvr::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::erase</definition>
        <argsstring>(void *pContainer, const IteratorData &amp;posIt, IteratorData &amp;outIt)</argsstring>
        <name>erase</name>
        <param>
          <type>void *</type>
          <declname>pContainer</declname>
        </param>
        <param>
          <type>const IteratorData &amp;</type>
          <declname>posIt</declname>
        </param>
        <param>
          <type>IteratorData &amp;</type>
          <declname>outIt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" line="152" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" bodystart="152" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a6be7d97b9411fac6e336af0f26ba5f88" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>static std::size_t Bvr::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::size</definition>
        <argsstring>(void *pContainer)</argsstring>
        <name>size</name>
        <param>
          <type>void *</type>
          <declname>pContainer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" line="159" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1ae72b844786674fe2306d5bee8cc6fb27" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref></type>
        <definition>static Variant Bvr::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::at</definition>
        <argsstring>(void *pContainer, const std::size_t index)</argsstring>
        <name>at</name>
        <param>
          <type>void *</type>
          <declname>pContainer</declname>
        </param>
        <param>
          <type>const std::size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" line="163" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" bodystart="163" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a49905a5e637a785308ce3454503203c8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
          </param>
          <param>
            <type>typename C</type>
            <defval>ConstT</defval>
          </param>
          <param>
            <type>typename RetT</type>
            <defval>decltype(Base::at(std::declval&lt;C&amp;&gt;(), 0))</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt;!std::is_const_v&lt; C &gt; &amp;&amp;std::is_copy_assignable_v&lt; ValueT &gt;, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::set</definition>
        <argsstring>(void *pContainer, const std::size_t index, const Argument &amp;val)</argsstring>
        <name>set</name>
        <param>
          <type>void *</type>
          <declname>pContainer</declname>
        </param>
        <param>
          <type>const std::size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" line="172" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" bodystart="172" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a49905a5e637a785308ce3454503203c8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
          </param>
          <param>
            <type>typename C</type>
            <defval>ConstT</defval>
          </param>
          <param>
            <type>typename RetT</type>
            <defval>decltype(Base::at(std::declval&lt;C&amp;&gt;(), 0))</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_const_v&lt; C &gt;||!std::is_copy_assignable_v&lt; ValueT &gt;, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;::set</definition>
        <argsstring>(void *pContainer, const std::size_t index, const Argument &amp;val)</argsstring>
        <name>set</name>
        <param>
          <type>void *</type>
          <declname>pContainer</declname>
        </param>
        <param>
          <type>const std::size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" line="187" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" bodystart="187" bodyend="190"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>IteratorBinderBase&lt; std::conditional_t&lt; std::is_const_v&lt; ConstT &gt;, typename SequentialContainerBinder&lt; T &gt;::CIteratorT, typename SequentialContainerBinder&lt; T &gt;::IteratorT &gt; &gt;</label>
      </node>
      <node id="1">
        <label>Bvr::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;</label>
        <link refid="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>IteratorBinderBase&lt; std::conditional_t&lt; std::is_const_v&lt; ConstT &gt;, typename SequentialContainerBinder&lt; T &gt;::CIteratorT, typename SequentialContainerBinder&lt; T &gt;::IteratorT &gt; &gt;</label>
      </node>
      <node id="1">
        <label>Bvr::Meta::Detail::SequentialContainerBinderWrapper&lt; T, ConstT, Tp &gt;</label>
        <link refid="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" line="99" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/SequentialContainerBinder.hpp" bodystart="99" bodyend="191"/>
    <listofallmembers>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a6c6c92b46aca829716e8a68403c9f9da" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::SequentialContainerBinderWrapper</scope><name>advance</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1ae72b844786674fe2306d5bee8cc6fb27" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::SequentialContainerBinderWrapper</scope><name>at</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a19e86e647c74679b40deb74b9faf672c" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::SequentialContainerBinderWrapper</scope><name>Base</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a753fe6fd732799ed6e3a3d82bf4b63e7" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::SequentialContainerBinderWrapper</scope><name>begin</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a086d4c4d43f6f0a2b670a082f1a56bb3" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::SequentialContainerBinderWrapper</scope><name>CIteratorT</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a58a18c68ce931bd8ed779a3e075fed57" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::SequentialContainerBinderWrapper</scope><name>clear</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a8eded94fb759842681be482e25ebba71" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::SequentialContainerBinderWrapper</scope><name>empty</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a025c00b1007394168611b24125b4bb50" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::SequentialContainerBinderWrapper</scope><name>end</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1acfe9af1a8e1040db04c80955ec0f732e" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::SequentialContainerBinderWrapper</scope><name>erase</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a5ca072daa1138fbe2e6a23f7f7afd1c4" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::SequentialContainerBinderWrapper</scope><name>GetContainer</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a87fb194433143c89e174c3675ae72cb8" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::SequentialContainerBinderWrapper</scope><name>GetData</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a6727097fcfe6dd14a5e205c2c1936b22" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::SequentialContainerBinderWrapper</scope><name>insert</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a1e9389c58ebe963995a2cdbd5dae5f91" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::SequentialContainerBinderWrapper</scope><name>IsDynamic</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a81738c2cb67885b96c92b44a9275fac1" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::SequentialContainerBinderWrapper</scope><name>IteratorBinderT</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a39369c5b2d6d4538bdf74f0940b7e57c" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::SequentialContainerBinderWrapper</scope><name>IteratorT</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1af969bb2224bfc70fb3e215380e25ccab" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::SequentialContainerBinderWrapper</scope><name>resize</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a49905a5e637a785308ce3454503203c8" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::SequentialContainerBinderWrapper</scope><name>set</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a49905a5e637a785308ce3454503203c8" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::SequentialContainerBinderWrapper</scope><name>set</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a6be7d97b9411fac6e336af0f26ba5f88" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::SequentialContainerBinderWrapper</scope><name>size</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_sequential_container_binder_wrapper_1a9632ab818728af13b7253f86cf373e16" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::SequentialContainerBinderWrapper</scope><name>ValueT</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

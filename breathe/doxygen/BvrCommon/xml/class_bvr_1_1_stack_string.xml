<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_bvr_1_1_stack_string" kind="class" language="C++" prot="public">
    <compoundname>Bvr::StackString</compoundname>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_bvr_1_1_stack_string_1a4e80507f36bdf56e94e1bdb4e8128c17" prot="public" static="no">
        <type>size_t</type>
        <definition>using Bvr::StackString::size_type =  size_t</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <qualifiedname>Bvr::StackString::size_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" line="14" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_stack_string_1a3fb390647c76257152d9e299156369fe" prot="public" static="no">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">char</ref></type>
        <definition>using Bvr::StackString::char_type =  char</definition>
        <argsstring></argsstring>
        <name>char_type</name>
        <qualifiedname>Bvr::StackString::char_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" line="15" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_stack_string_1ab566bf3dac0fdc5214e855937c3f21ce" prot="public" static="no">
        <type>std::basic_string&lt; <ref refid="struct_bvr_1_1_events" kindref="compound">char_type</ref> &gt;</type>
        <definition>using Bvr::StackString::string_t =  std::basic_string&lt;char_type&gt;</definition>
        <argsstring></argsstring>
        <name>string_t</name>
        <qualifiedname>Bvr::StackString::string_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" line="16" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_stack_string_1a6983fb7e3f87ab489e004afb3ccfb4be" prot="public" static="no">
        <type>std::basic_string_view&lt; <ref refid="struct_bvr_1_1_events" kindref="compound">char_type</ref> &gt;</type>
        <definition>using Bvr::StackString::string_view_t =  std::basic_string_view&lt;char_type&gt;</definition>
        <argsstring></argsstring>
        <name>string_view_t</name>
        <qualifiedname>Bvr::StackString::string_view_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" line="17" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_stack_string_1ae01dfdf0708c7d52c6b6956ff07d0e98" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>TArgs</declname>
            <defname>TArgs</defname>
          </param>
        </templateparamlist>
        <type>std::basic_format_string&lt; <ref refid="struct_bvr_1_1_events" kindref="compound">char_type</ref>, std::type_identity_t&lt; TArgs &gt;... &gt;</type>
        <definition>using Bvr::StackString::format_t =  std::basic_format_string&lt;char_type, std::type_identity_t&lt;TArgs&gt;...&gt;</definition>
        <argsstring></argsstring>
        <name>format_t</name>
        <qualifiedname>Bvr::StackString::format_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" line="19" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_stack_string_1a1723e23b5d7963c7cdc092d825ae1eee" prot="public" static="yes" constexpr="yes" mutable="no">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">constexpr</ref> size_t</type>
        <definition>constexpr size_t Bvr::StackString::MaxSize</definition>
        <argsstring></argsstring>
        <name>MaxSize</name>
        <qualifiedname>Bvr::StackString::MaxSize</qualifiedname>
        <initializer>= 256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" line="13" column="29" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" bodystart="13" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_stack_string_1a5b50f9abe5e52f71cc100a26d21962e1" prot="private" static="no" mutable="no">
        <type>size_type</type>
        <definition>size_type Bvr::StackString::m_size</definition>
        <argsstring></argsstring>
        <name>m_size</name>
        <qualifiedname>Bvr::StackString::m_size</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" line="99" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_stack_string_1a0a1960f48f3eb48d4aaa227af34d64f3" prot="private" static="no" mutable="no">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">char_type</ref></type>
        <definition>char_type Bvr::StackString::m_data[MaxSize]</definition>
        <argsstring>[MaxSize]</argsstring>
        <name>m_data</name>
        <qualifiedname>Bvr::StackString::m_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" line="100" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_bvr_1_1_stack_string_1aef6e47e30d1630073cb780744e0f3be0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::StackString::StackString</definition>
        <argsstring>()</argsstring>
        <name>StackString</name>
        <qualifiedname>Bvr::StackString::StackString</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" line="22" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" bodystart="22" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_stack_string_1a141bb1be52975635f097fe743f021648" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::StackString::StackString</definition>
        <argsstring>(string_view_t str)</argsstring>
        <name>StackString</name>
        <qualifiedname>Bvr::StackString::StackString</qualifiedname>
        <param>
          <type>string_view_t</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" line="23" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" bodystart="23" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_stack_string_1a5e9ceff14772425c6361ecd7a2700630" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::StackString::StackString</definition>
        <argsstring>(string_t str)</argsstring>
        <name>StackString</name>
        <qualifiedname>Bvr::StackString::StackString</qualifiedname>
        <param>
          <type>string_t</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" line="29" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" bodystart="29" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_stack_string_1ae36fdd8e37ebcbf7ace5d76db4b2c6cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::StackString::~StackString</definition>
        <argsstring>()=default</argsstring>
        <name>~StackString</name>
        <qualifiedname>Bvr::StackString::~StackString</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" line="35" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_stack_string_1a7bf3eab488534113743c18aab41b4669" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::StackString::StackString</definition>
        <argsstring>(const StackString &amp;other)</argsstring>
        <name>StackString</name>
        <qualifiedname>Bvr::StackString::StackString</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> <ref refid="class_bvr_1_1_stack_string" kindref="compound">StackString</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" line="37" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_stack_string_1a74e4d185162370c91f244d7cebcb1f1e" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::StackString::StackString</definition>
        <argsstring>(StackString &amp;&amp;other) noexcept</argsstring>
        <name>StackString</name>
        <qualifiedname>Bvr::StackString::StackString</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_stack_string" kindref="compound">StackString</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" line="42" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_stack_string_1a940549eedc0bb1be43ab7712ef1f301b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_stack_string" kindref="compound">StackString</ref> &amp;</type>
        <definition>StackString &amp; Bvr::StackString::operator=</definition>
        <argsstring>(const StackString &amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>Bvr::StackString::operator=</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> <ref refid="class_bvr_1_1_stack_string" kindref="compound">StackString</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" line="47" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" bodystart="47" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_stack_string_1a6587c659a8b6878aa99f880d61658697" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_stack_string" kindref="compound">StackString</ref> &amp;</type>
        <definition>StackString &amp; Bvr::StackString::operator=</definition>
        <argsstring>(StackString &amp;&amp;other) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>Bvr::StackString::operator=</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_stack_string" kindref="compound">StackString</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" line="53" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" bodystart="53" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_stack_string_1af5f2d9933b130258acdc450b6d20c37d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_stack_string" kindref="compound">StackString</ref> &amp;</type>
        <definition>StackString &amp; Bvr::StackString::operator=</definition>
        <argsstring>(string_view_t str)</argsstring>
        <name>operator=</name>
        <qualifiedname>Bvr::StackString::operator=</qualifiedname>
        <param>
          <type>string_view_t</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" line="61" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" bodystart="61" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_stack_string_1a24beebbd2c84739ce80d43693d06ce74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">void</ref></type>
        <definition>void Bvr::StackString::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>Bvr::StackString::clear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" line="69" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_stack_string_1a297c5c9d103a4609c2976a79bf6f16fa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>bool Bvr::StackString::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <qualifiedname>Bvr::StackString::empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" line="74" column="22" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_stack_string_1a453c486a02ab69938919899c0b47bbce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type Bvr::StackString::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>Bvr::StackString::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" line="75" column="22" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_stack_string_1aad6003b28a7deb2f086bbc8b8025a941" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type Bvr::StackString::length</definition>
        <argsstring>() const</argsstring>
        <name>length</name>
        <qualifiedname>Bvr::StackString::length</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" line="76" column="22" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_stack_string_1a859a7a7a9e68f03d31632146d041998b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>string_view_t</type>
        <definition>string_view_t Bvr::StackString::view</definition>
        <argsstring>() const</argsstring>
        <name>view</name>
        <qualifiedname>Bvr::StackString::view</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" line="77" column="22" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_stack_string_1ab854781713139ddf540be7013b5f8e3c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_events" kindref="compound">char_type</ref> *</type>
        <definition>const char_type * Bvr::StackString::c_str</definition>
        <argsstring>()</argsstring>
        <name>c_str</name>
        <qualifiedname>Bvr::StackString::c_str</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" line="78" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_stack_string_1ad601594066e8250d20211f6c943cc8cc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_events" kindref="compound">char_type</ref> *</type>
        <definition>const char_type * Bvr::StackString::c_str</definition>
        <argsstring>() const</argsstring>
        <name>c_str</name>
        <qualifiedname>Bvr::StackString::c_str</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" line="79" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_stack_string_1a9d2d416d6151ec8acae37c4bf0b88eab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">void</ref></type>
        <definition>void Bvr::StackString::append</definition>
        <argsstring>(format_t&lt; Args... &gt; fmt, Args &amp;&amp;... args)</argsstring>
        <name>append</name>
        <qualifiedname>Bvr::StackString::append</qualifiedname>
        <param>
          <type>format_t&lt; Args... &gt;</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">Args</ref> &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" line="82" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" bodystart="82" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_stack_string_1a0aa57a9d7cb817793c3710e60dc6fbaf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">void</ref></type>
        <definition>void Bvr::StackString::format</definition>
        <argsstring>(format_t&lt; Args... &gt; fmt, Args &amp;&amp;... args)</argsstring>
        <name>format</name>
        <qualifiedname>Bvr::StackString::format</qualifiedname>
        <param>
          <type>format_t&lt; Args... &gt;</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">Args</ref> &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" line="91" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_stack_string_1ab4529056440f8a2898065a0e25d140e2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::StackString::operator std::string_view</definition>
        <argsstring>() const</argsstring>
        <name>operator std::string_view</name>
        <qualifiedname>Bvr::StackString::string_view</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" line="96" column="12" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" bodystart="96" bodyend="96"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" line="11" column="1" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/StackString.hpp" bodystart="11" bodyend="101"/>
    <listofallmembers>
      <member refid="class_bvr_1_1_stack_string_1a9d2d416d6151ec8acae37c4bf0b88eab" prot="public" virt="non-virtual"><scope>Bvr::StackString</scope><name>append</name></member>
      <member refid="class_bvr_1_1_stack_string_1ab854781713139ddf540be7013b5f8e3c" prot="public" virt="non-virtual"><scope>Bvr::StackString</scope><name>c_str</name></member>
      <member refid="class_bvr_1_1_stack_string_1ad601594066e8250d20211f6c943cc8cc" prot="public" virt="non-virtual"><scope>Bvr::StackString</scope><name>c_str</name></member>
      <member refid="class_bvr_1_1_stack_string_1a3fb390647c76257152d9e299156369fe" prot="public" virt="non-virtual"><scope>Bvr::StackString</scope><name>char_type</name></member>
      <member refid="class_bvr_1_1_stack_string_1a24beebbd2c84739ce80d43693d06ce74" prot="public" virt="non-virtual"><scope>Bvr::StackString</scope><name>clear</name></member>
      <member refid="class_bvr_1_1_stack_string_1a297c5c9d103a4609c2976a79bf6f16fa" prot="public" virt="non-virtual"><scope>Bvr::StackString</scope><name>empty</name></member>
      <member refid="class_bvr_1_1_stack_string_1a0aa57a9d7cb817793c3710e60dc6fbaf" prot="public" virt="non-virtual"><scope>Bvr::StackString</scope><name>format</name></member>
      <member refid="class_bvr_1_1_stack_string_1ae01dfdf0708c7d52c6b6956ff07d0e98" prot="public" virt="non-virtual"><scope>Bvr::StackString</scope><name>format_t</name></member>
      <member refid="class_bvr_1_1_stack_string_1aad6003b28a7deb2f086bbc8b8025a941" prot="public" virt="non-virtual"><scope>Bvr::StackString</scope><name>length</name></member>
      <member refid="class_bvr_1_1_stack_string_1a0a1960f48f3eb48d4aaa227af34d64f3" prot="private" virt="non-virtual"><scope>Bvr::StackString</scope><name>m_data</name></member>
      <member refid="class_bvr_1_1_stack_string_1a5b50f9abe5e52f71cc100a26d21962e1" prot="private" virt="non-virtual"><scope>Bvr::StackString</scope><name>m_size</name></member>
      <member refid="class_bvr_1_1_stack_string_1a1723e23b5d7963c7cdc092d825ae1eee" prot="public" virt="non-virtual"><scope>Bvr::StackString</scope><name>MaxSize</name></member>
      <member refid="class_bvr_1_1_stack_string_1ab4529056440f8a2898065a0e25d140e2" prot="public" virt="non-virtual"><scope>Bvr::StackString</scope><name>operator std::string_view</name></member>
      <member refid="class_bvr_1_1_stack_string_1a940549eedc0bb1be43ab7712ef1f301b" prot="public" virt="non-virtual"><scope>Bvr::StackString</scope><name>operator=</name></member>
      <member refid="class_bvr_1_1_stack_string_1a6587c659a8b6878aa99f880d61658697" prot="public" virt="non-virtual"><scope>Bvr::StackString</scope><name>operator=</name></member>
      <member refid="class_bvr_1_1_stack_string_1af5f2d9933b130258acdc450b6d20c37d" prot="public" virt="non-virtual"><scope>Bvr::StackString</scope><name>operator=</name></member>
      <member refid="class_bvr_1_1_stack_string_1a453c486a02ab69938919899c0b47bbce" prot="public" virt="non-virtual"><scope>Bvr::StackString</scope><name>size</name></member>
      <member refid="class_bvr_1_1_stack_string_1a4e80507f36bdf56e94e1bdb4e8128c17" prot="public" virt="non-virtual"><scope>Bvr::StackString</scope><name>size_type</name></member>
      <member refid="class_bvr_1_1_stack_string_1aef6e47e30d1630073cb780744e0f3be0" prot="public" virt="non-virtual"><scope>Bvr::StackString</scope><name>StackString</name></member>
      <member refid="class_bvr_1_1_stack_string_1a141bb1be52975635f097fe743f021648" prot="public" virt="non-virtual"><scope>Bvr::StackString</scope><name>StackString</name></member>
      <member refid="class_bvr_1_1_stack_string_1a5e9ceff14772425c6361ecd7a2700630" prot="public" virt="non-virtual"><scope>Bvr::StackString</scope><name>StackString</name></member>
      <member refid="class_bvr_1_1_stack_string_1a7bf3eab488534113743c18aab41b4669" prot="public" virt="non-virtual"><scope>Bvr::StackString</scope><name>StackString</name></member>
      <member refid="class_bvr_1_1_stack_string_1a74e4d185162370c91f244d7cebcb1f1e" prot="public" virt="non-virtual"><scope>Bvr::StackString</scope><name>StackString</name></member>
      <member refid="class_bvr_1_1_stack_string_1ab566bf3dac0fdc5214e855937c3f21ce" prot="public" virt="non-virtual"><scope>Bvr::StackString</scope><name>string_t</name></member>
      <member refid="class_bvr_1_1_stack_string_1a6983fb7e3f87ab489e004afb3ccfb4be" prot="public" virt="non-virtual"><scope>Bvr::StackString</scope><name>string_view_t</name></member>
      <member refid="class_bvr_1_1_stack_string_1a859a7a7a9e68f03d31632146d041998b" prot="public" virt="non-virtual"><scope>Bvr::StackString</scope><name>view</name></member>
      <member refid="class_bvr_1_1_stack_string_1ae36fdd8e37ebcbf7ace5d76db4b2c6cd" prot="public" virt="non-virtual"><scope>Bvr::StackString</scope><name>~StackString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

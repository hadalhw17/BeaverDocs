<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4" kind="struct" language="C++" prot="public">
    <compoundname>Bvr::Meta::Detail::CastFrom&lt; float &gt;</compoundname>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1afd56d5a7d575494afdf4f02747e5ceed" prot="public" static="no">
        <type>float</type>
        <definition>using Bvr::Meta::Detail::CastFrom&lt; float &gt;::SrcType =  float</definition>
        <argsstring></argsstring>
        <name>SrcType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="775" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="775" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1aff7e83a80159525d956dcd14cff77e0e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; float &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, bool &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="777" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="777" bodyend="780"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1ab867a23495faccec3dd7e2ce9286399b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; float &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, char &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>char &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="782" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="782" bodyend="784"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1aa02693e9d335cef47735696ff228d0e2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; float &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int8_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int8_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="786" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="786" bodyend="788"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a064a83ae28cfc05c5ea479772c2b6ab0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; float &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint8_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint8_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="790" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="790" bodyend="792"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a20161c500b6ece5bdda2059d94da0306" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; float &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int16_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int16_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="794" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="794" bodyend="796"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1abbe633257244788fcc2803fc9e214949" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; float &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint16_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint16_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="798" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="798" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1ae432602e48157e050f8b442672f6c862" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; float &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int32_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int32_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="802" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="802" bodyend="804"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a41bbe5e5a411e6d4759a2995476e59e7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; float &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint32_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint32_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="806" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="806" bodyend="808"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a4a9d461851d641fcde69f7ad8f49e6cb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; float &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::int64_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::int64_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="810" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="810" bodyend="812"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a0e63158cc689bdfb608724b148f1b820" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; float &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::uint64_t &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::uint64_t &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="814" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="814" bodyend="816"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1afde9e3c299fe1c925c3e05ad3bde827d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; float &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, float &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="818" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="818" bodyend="821"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1aedce5a305997d589f2383f3f9330c269" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; float &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, double &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="823" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="823" bodyend="826"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a0bebd298d68188879423b21898ee0a8f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; float &gt;::To</definition>
        <argsstring>(const SrcType &amp;from, std::string &amp;to)</argsstring>
        <name>To</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="828" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="828" bodyend="830"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a9c9985be0989ba95459b7a09f1af13b7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Meta::Detail::CastFrom&lt; float &gt;::ToEnum</definition>
        <argsstring>(const SrcType &amp;from, Argument &amp;to)</argsstring>
        <name>ToEnum</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="class_bvr_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="832" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="832" bodyend="834"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" line="774" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeCasting.hpp" bodystart="774" bodyend="835"/>
    <listofallmembers>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1afd56d5a7d575494afdf4f02747e5ceed" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; float &gt;</scope><name>SrcType</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1aff7e83a80159525d956dcd14cff77e0e" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; float &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1ab867a23495faccec3dd7e2ce9286399b" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; float &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1aa02693e9d335cef47735696ff228d0e2" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; float &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a064a83ae28cfc05c5ea479772c2b6ab0" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; float &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a20161c500b6ece5bdda2059d94da0306" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; float &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1abbe633257244788fcc2803fc9e214949" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; float &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1ae432602e48157e050f8b442672f6c862" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; float &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a41bbe5e5a411e6d4759a2995476e59e7" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; float &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a4a9d461851d641fcde69f7ad8f49e6cb" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; float &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a0e63158cc689bdfb608724b148f1b820" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; float &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1afde9e3c299fe1c925c3e05ad3bde827d" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; float &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1aedce5a305997d589f2383f3f9330c269" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; float &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a0bebd298d68188879423b21898ee0a8f" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; float &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_detail_1_1_cast_from_3_01float_01_4_1a9c9985be0989ba95459b7a09f1af13b7" prot="public" virt="non-virtual"><scope>Bvr::Meta::Detail::CastFrom&lt; float &gt;</scope><name>ToEnum</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_bvr_1_1_m_t_1_1_c_thread_pool" kind="class" language="C++" prot="public">
    <compoundname>Bvr::MT::CThreadPool</compoundname>
    <derivedcompoundref refid="class_bvr_1_1_m_t_1_1_c_i_o_thread_pool" prot="public" virt="non-virtual">Bvr::MT::CIOThreadPool</derivedcompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_m_t_1_1_c_thread_pool_1a64f1314f944c6de7481812638245f4e6" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; Impl &gt;</type>
        <definition>std::shared_ptr&lt;Impl&gt; Bvr::MT::CThreadPool::m_pImpl</definition>
        <argsstring></argsstring>
        <name>m_pImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Threading/ThreadPool.hpp" line="94" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Threading/ThreadPool.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_bvr_1_1_m_t_1_1_c_thread_pool_1abdb5f74a34d5ef784416b7adb5fdd48c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::MT::CThreadPool::CThreadPool</definition>
        <argsstring>(uint32 numThreads=~0u)</argsstring>
        <name>CThreadPool</name>
        <param>
          <type>uint32</type>
          <declname>numThreads</declname>
          <defval>~0u</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Threading/ThreadPool.hpp" line="68" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_m_t_1_1_c_thread_pool_1ac461fc83ff0608af6b067aeb55a94766" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::MT::CThreadPool::~CThreadPool</definition>
        <argsstring>()</argsstring>
        <name>~CThreadPool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Threading/ThreadPool.hpp" line="69" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_m_t_1_1_c_thread_pool_1ae2ff1fa2274104310014bdce2384f705" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::MT::CThreadPool::ForceStop</definition>
        <argsstring>()</argsstring>
        <name>ForceStop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Threading/ThreadPool.hpp" line="70" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_m_t_1_1_c_thread_pool_1a9e0279271c779c91e04e7e36aea2b7fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::MT::CThreadPool::Wait</definition>
        <argsstring>(const TaskState &amp;state)</argsstring>
        <name>Wait</name>
        <param>
          <type>const <ref refid="struct_bvr_1_1_m_t_1_1_task_state" kindref="compound">TaskState</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Threading/ThreadPool.hpp" line="71" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_m_t_1_1_c_thread_pool_1a512a9bcbc94eee6c2424dfd566b96138" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::MT::CThreadPool::WaitAll</definition>
        <argsstring>()</argsstring>
        <name>WaitAll</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Threading/ThreadPool.hpp" line="72" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_m_t_1_1_c_thread_pool_1a07b39476cea5776c64b82eb9a21123ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Bvr::MT::CThreadPool::AddWork</definition>
        <argsstring>(T &amp;&amp;w, const TaskContext *pContext=nullptr)</argsstring>
        <name>AddWork</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>w</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_m_t_1_1_task_context" kindref="compound">TaskContext</ref> *</type>
          <declname>pContext</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Threading/ThreadPool.hpp" line="75" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Threading/ThreadPool.hpp" bodystart="75" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_m_t_1_1_c_thread_pool_1a1697e6821f830da7df894cc51daa8c23" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::MT::CThreadPool::IsBusy</definition>
        <argsstring>() const</argsstring>
        <name>IsBusy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Threading/ThreadPool.hpp" line="82" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_m_t_1_1_c_thread_pool_1a6f351f762f33efcd6faf3d0d5dabb434" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::MT::CThreadPool::IsBusy</definition>
        <argsstring>(const TaskState &amp;state) const</argsstring>
        <name>IsBusy</name>
        <param>
          <type>const <ref refid="struct_bvr_1_1_m_t_1_1_task_state" kindref="compound">TaskState</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Threading/ThreadPool.hpp" line="83" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_m_t_1_1_c_thread_pool_1ae5765f204ae4ced13e4dbd775d24b995" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint32</type>
        <definition>uint32 Bvr::MT::CThreadPool::GetThreadCount</definition>
        <argsstring>() const</argsstring>
        <name>GetThreadCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Threading/ThreadPool.hpp" line="84" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_m_t_1_1_c_thread_pool_1af145ef7c5f68d230d6eb036dbac01fd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::MT::CThreadPool::Dispatch</definition>
        <argsstring>(uint32 jobCount, uint32 groupSize, std::function&lt; void(SDispatchArgs)&gt; job, TaskContext *pContext=nullptr)</argsstring>
        <name>Dispatch</name>
        <param>
          <type>uint32</type>
          <declname>jobCount</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>groupSize</declname>
        </param>
        <param>
          <type>std::function&lt; void(<ref refid="struct_bvr_1_1_m_t_1_1_s_dispatch_args" kindref="compound">SDispatchArgs</ref>)&gt;</type>
          <declname>job</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_m_t_1_1_task_context" kindref="compound">TaskContext</ref> *</type>
          <declname>pContext</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Threading/ThreadPool.hpp" line="86" column="26"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_bvr_1_1_m_t_1_1_c_thread_pool_1af4e20bedc7fabaa4cbec91647b6e742b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::MT::CThreadPool::PushWork</definition>
        <argsstring>(std::function&lt; void()&gt; &amp;&amp;w, const TaskContext *pContext)</argsstring>
        <name>PushWork</name>
        <param>
          <type>std::function&lt; void()&gt; &amp;&amp;</type>
          <declname>w</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_m_t_1_1_task_context" kindref="compound">TaskContext</ref> *</type>
          <declname>pContext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Threading/ThreadPool.hpp" line="91" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Bvr::MT::CIOThreadPool</label>
        <link refid="class_bvr_1_1_m_t_1_1_c_i_o_thread_pool"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Bvr::MT::CThreadPool</label>
        <link refid="class_bvr_1_1_m_t_1_1_c_thread_pool"/>
      </node>
    </inheritancegraph>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Threading/ThreadPool.hpp" line="64" column="1" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Threading/ThreadPool.hpp" bodystart="64" bodyend="95"/>
    <listofallmembers>
      <member refid="class_bvr_1_1_m_t_1_1_c_thread_pool_1a07b39476cea5776c64b82eb9a21123ac" prot="public" virt="non-virtual"><scope>Bvr::MT::CThreadPool</scope><name>AddWork</name></member>
      <member refid="class_bvr_1_1_m_t_1_1_c_thread_pool_1abdb5f74a34d5ef784416b7adb5fdd48c" prot="public" virt="non-virtual"><scope>Bvr::MT::CThreadPool</scope><name>CThreadPool</name></member>
      <member refid="class_bvr_1_1_m_t_1_1_c_thread_pool_1af145ef7c5f68d230d6eb036dbac01fd6" prot="public" virt="non-virtual"><scope>Bvr::MT::CThreadPool</scope><name>Dispatch</name></member>
      <member refid="class_bvr_1_1_m_t_1_1_c_thread_pool_1ae2ff1fa2274104310014bdce2384f705" prot="public" virt="non-virtual"><scope>Bvr::MT::CThreadPool</scope><name>ForceStop</name></member>
      <member refid="class_bvr_1_1_m_t_1_1_c_thread_pool_1ae5765f204ae4ced13e4dbd775d24b995" prot="public" virt="non-virtual"><scope>Bvr::MT::CThreadPool</scope><name>GetThreadCount</name></member>
      <member refid="class_bvr_1_1_m_t_1_1_c_thread_pool_1a1697e6821f830da7df894cc51daa8c23" prot="public" virt="non-virtual"><scope>Bvr::MT::CThreadPool</scope><name>IsBusy</name></member>
      <member refid="class_bvr_1_1_m_t_1_1_c_thread_pool_1a6f351f762f33efcd6faf3d0d5dabb434" prot="public" virt="non-virtual"><scope>Bvr::MT::CThreadPool</scope><name>IsBusy</name></member>
      <member refid="class_bvr_1_1_m_t_1_1_c_thread_pool_1a64f1314f944c6de7481812638245f4e6" prot="private" virt="non-virtual"><scope>Bvr::MT::CThreadPool</scope><name>m_pImpl</name></member>
      <member refid="class_bvr_1_1_m_t_1_1_c_thread_pool_1af4e20bedc7fabaa4cbec91647b6e742b" prot="private" virt="non-virtual"><scope>Bvr::MT::CThreadPool</scope><name>PushWork</name></member>
      <member refid="class_bvr_1_1_m_t_1_1_c_thread_pool_1a9e0279271c779c91e04e7e36aea2b7fd" prot="public" virt="non-virtual"><scope>Bvr::MT::CThreadPool</scope><name>Wait</name></member>
      <member refid="class_bvr_1_1_m_t_1_1_c_thread_pool_1a512a9bcbc94eee6c2424dfd566b96138" prot="public" virt="non-virtual"><scope>Bvr::MT::CThreadPool</scope><name>WaitAll</name></member>
      <member refid="class_bvr_1_1_m_t_1_1_c_thread_pool_1ac461fc83ff0608af6b067aeb55a94766" prot="public" virt="non-virtual"><scope>Bvr::MT::CThreadPool</scope><name>~CThreadPool</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

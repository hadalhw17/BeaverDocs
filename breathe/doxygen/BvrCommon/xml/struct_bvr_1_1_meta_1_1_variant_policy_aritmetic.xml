<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_bvr_1_1_meta_1_1_variant_policy_aritmetic" kind="struct" language="C++" prot="public">
    <compoundname>Bvr::Meta::VariantPolicyAritmetic</compoundname>
    <basecompoundref refid="struct_bvr_1_1_meta_1_1_variant_data_policy_base" prot="public" virt="non-virtual">Bvr::Meta::VariantDataPolicyBase&lt; T, VariantPolicyAritmetic&lt; T &gt;, Detail::DefaultCaster&lt; T &gt; &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_variant_policy_aritmetic_1a176591bdbdbe73c8ed1375daf9a4e432" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void Bvr::Meta::VariantPolicyAritmetic&lt; T &gt;::Create</definition>
        <argsstring>(U &amp;&amp;value, VariantData &amp;dest)</argsstring>
        <name>Create</name>
        <param>
          <type>U &amp;&amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>VariantData &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/VariantPolicy.hpp" line="242" column="29" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/VariantPolicy.hpp" bodystart="242" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_variant_policy_aritmetic_1aa1e2647c529884519c95336b1055c8fa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Bvr::Meta::VariantPolicyAritmetic&lt; T &gt;::Destroy</definition>
        <argsstring>(T &amp;value)</argsstring>
        <name>Destroy</name>
        <param>
          <type>T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/VariantPolicy.hpp" line="246" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/VariantPolicy.hpp" bodystart="246" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_variant_policy_aritmetic_1afddc8364bf2afb5940bce186a3589736" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Bvr::Meta::VariantPolicyAritmetic&lt; T &gt;::Clone</definition>
        <argsstring>(const T &amp;value, VariantData &amp;dst)</argsstring>
        <name>Clone</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>VariantData &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/VariantPolicy.hpp" line="248" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/VariantPolicy.hpp" bodystart="248" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_variant_policy_aritmetic_1ac605a47b2fd8d0dcce3ef817f9e51d3b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Bvr::Meta::VariantPolicyAritmetic&lt; T &gt;::Swap</definition>
        <argsstring>(T &amp;value, VariantData &amp;dst)</argsstring>
        <name>Swap</name>
        <param>
          <type>T &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>VariantData &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/VariantPolicy.hpp" line="252" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/VariantPolicy.hpp" bodystart="252" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_variant_policy_aritmetic_1a974bf0a86d69585dbcf0aa250c8b36e1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>static const T&amp; Bvr::Meta::VariantPolicyAritmetic&lt; T &gt;::GetValue</definition>
        <argsstring>(const VariantData &amp;data)</argsstring>
        <name>GetValue</name>
        <param>
          <type>const VariantData &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/VariantPolicy.hpp" line="256" column="20" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/VariantPolicy.hpp" bodystart="256" bodyend="258"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Bvr::Meta::VariantPolicyAritmetic&lt; T &gt;</label>
        <link refid="struct_bvr_1_1_meta_1_1_variant_policy_aritmetic"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Bvr::Meta::VariantDataPolicyBase&lt; T, VariantPolicyAritmetic&lt; T &gt;, Detail::DefaultCaster&lt; T &gt; &gt;</label>
        <link refid="struct_bvr_1_1_meta_1_1_variant_data_policy_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Bvr::Meta::VariantPolicyAritmetic&lt; T &gt;</label>
        <link refid="struct_bvr_1_1_meta_1_1_variant_policy_aritmetic"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Bvr::Meta::VariantDataPolicyBase&lt; T, VariantPolicyAritmetic&lt; T &gt;, Detail::DefaultCaster&lt; T &gt; &gt;</label>
        <link refid="struct_bvr_1_1_meta_1_1_variant_data_policy_base"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/VariantPolicy.hpp" line="239" column="1" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/VariantPolicy.hpp" bodystart="241" bodyend="259"/>
    <listofallmembers>
      <member refid="struct_bvr_1_1_meta_1_1_variant_policy_aritmetic_1afddc8364bf2afb5940bce186a3589736" prot="public" virt="non-virtual"><scope>Bvr::Meta::VariantPolicyAritmetic</scope><name>Clone</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_variant_policy_aritmetic_1a176591bdbdbe73c8ed1375daf9a4e432" prot="public" virt="non-virtual"><scope>Bvr::Meta::VariantPolicyAritmetic</scope><name>Create</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_variant_policy_aritmetic_1aa1e2647c529884519c95336b1055c8fa" prot="public" virt="non-virtual"><scope>Bvr::Meta::VariantPolicyAritmetic</scope><name>Destroy</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_variant_policy_aritmetic_1a974bf0a86d69585dbcf0aa250c8b36e1" prot="public" virt="non-virtual"><scope>Bvr::Meta::VariantPolicyAritmetic</scope><name>GetValue</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_variant_data_policy_base_1a4a24932aed53bb27858827a7e0ee9119" prot="public" virt="non-virtual"><scope>Bvr::Meta::VariantPolicyAritmetic</scope><name>Invoke</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_variant_policy_aritmetic_1ac605a47b2fd8d0dcce3ef817f9e51d3b" prot="public" virt="non-virtual"><scope>Bvr::Meta::VariantPolicyAritmetic</scope><name>Swap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

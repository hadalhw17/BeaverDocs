<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_bvr_1_1_meta_1_1_instance" kind="class" language="C++" prot="public">
    <compoundname>Bvr::Meta::Instance</compoundname>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_bvr_1_1_meta_1_1_instance_1a386f5a9cf65610cb62143865e5637272" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Property</definition>
        <argsstring></argsstring>
        <name>Property</name>
        <param>
          <type><ref refid="class_bvr_1_1_meta_1_1_property" kindref="compound">Property</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" line="11" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_meta_1_1_instance_1a53d57dbd02179587ba03195cb9630e0e" prot="private" static="no" mutable="no">
        <type><ref refid="class_bvr_1_1_meta_1_1_type" kindref="compound">Type</ref></type>
        <definition>Type Bvr::Meta::Instance::m_type</definition>
        <argsstring></argsstring>
        <name>m_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" line="80" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_meta_1_1_instance_1a0f5d60dcdb6a8f83c4e5502cad2b136b" prot="private" static="no" mutable="no">
        <type>ptr_t</type>
        <definition>ptr_t Bvr::Meta::Instance::m_dataPtr</definition>
        <argsstring></argsstring>
        <name>m_dataPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" line="81" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_instance_1adc6c8cc43af01f2b212bfa7a3b8bfd92" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::Meta::Instance::Instance</definition>
        <argsstring>() noexcept</argsstring>
        <name>Instance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" line="14" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" bodystart="14" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_instance_1a6d5a1322b3eefd1cf680b0b8a6029874" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::Meta::Instance::Instance</definition>
        <argsstring>(const Type &amp;t, ptr_t ptr) noexcept</argsstring>
        <name>Instance</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_type" kindref="compound">Type</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>ptr_t</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" line="16" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" bodystart="16" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_instance_1affc6497fd8750be05f759cae5744c18c" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Bvr::Meta::Instance::Instance</definition>
        <argsstring>(T &amp;obj) noexcept requires Instanceable&lt; T &gt;</argsstring>
        <name>Instance</name>
        <param>
          <type>T &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" line="19" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" bodystart="19" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_instance_1af965f5cbd205f7d84ec41479843822f4" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::Meta::Instance::Instance</definition>
        <argsstring>(const Instance &amp;obj) noexcept</argsstring>
        <name>Instance</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_instance" kindref="compound">Instance</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" line="25" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" bodystart="25" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_instance_1a4879ddc2825d22385e8d1d2387ab482a" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::Meta::Instance::Instance</definition>
        <argsstring>(Instance &amp;&amp;obj) noexcept</argsstring>
        <name>Instance</name>
        <param>
          <type><ref refid="class_bvr_1_1_meta_1_1_instance" kindref="compound">Instance</ref> &amp;&amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" line="27" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_instance_1a6a230825b4b944c6dfc7adfe54e909e4" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::Meta::Instance::Instance</definition>
        <argsstring>(const Variant &amp;var) noexcept</argsstring>
        <name>Instance</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref> &amp;</type>
          <declname>var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" line="32" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" bodystart="32" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_instance_1abee6a5b08bde3102b7c6d2adfa63452d" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_instance" kindref="compound">Instance</ref> &amp;</type>
        <definition>Instance&amp; Bvr::Meta::Instance::operator=</definition>
        <argsstring>(const Instance &amp;rhs) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_instance" kindref="compound">Instance</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" line="36" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" bodystart="36" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_instance_1a9cfd55fb0c1147e36be53e867e289033" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_instance" kindref="compound">Instance</ref> &amp;</type>
        <definition>Instance&amp; Bvr::Meta::Instance::operator=</definition>
        <argsstring>(Instance &amp;&amp;rhs) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_bvr_1_1_meta_1_1_instance" kindref="compound">Instance</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" line="43" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" bodystart="43" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_instance_1a23891b682b214c596676d307c91adc06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Bvr::Meta::Instance::Get</definition>
        <argsstring>(T &amp;dst)</argsstring>
        <name>Get</name>
        <param>
          <type>T &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" line="53" column="22" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" bodystart="53" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_instance_1a2b7bc164a109d71da92b64ecaaeefaf7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Bvr::Meta::Instance::Set</definition>
        <argsstring>(T &amp;val)</argsstring>
        <name>Set</name>
        <param>
          <type>T &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" line="59" column="22" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" bodystart="59" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_instance_1a16a18edbaa415ea8ccd3b14588ea5703" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ptr_t</type>
        <definition>ptr_t Bvr::Meta::Instance::GetPtr</definition>
        <argsstring>() const</argsstring>
        <name>GetPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" line="68" column="19" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_instance_1a15dd8d8c149822543ff386ccc4c35a1c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_type" kindref="compound">Type</ref></type>
        <definition>Type Bvr::Meta::Instance::GetType</definition>
        <argsstring>() const</argsstring>
        <name>GetType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" line="69" column="19" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_instance_1a3b4841cd77e7ead8fb97d52fa759c7c8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::Meta::Instance::IsValid</definition>
        <argsstring>() const</argsstring>
        <name>IsValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" line="70" column="19" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_instance_1a764e80725783dace3cf621f54e0a13e1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* Bvr::Meta::Instance::TryGet</definition>
        <argsstring>() const</argsstring>
        <name>TryGet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" line="72" column="20" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" bodystart="72" bodyend="77"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" line="10" column="1" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Instance.hpp" bodystart="10" bodyend="82"/>
    <listofallmembers>
      <member refid="class_bvr_1_1_meta_1_1_instance_1a23891b682b214c596676d307c91adc06" prot="public" virt="non-virtual"><scope>Bvr::Meta::Instance</scope><name>Get</name></member>
      <member refid="class_bvr_1_1_meta_1_1_instance_1a16a18edbaa415ea8ccd3b14588ea5703" prot="public" virt="non-virtual"><scope>Bvr::Meta::Instance</scope><name>GetPtr</name></member>
      <member refid="class_bvr_1_1_meta_1_1_instance_1a15dd8d8c149822543ff386ccc4c35a1c" prot="public" virt="non-virtual"><scope>Bvr::Meta::Instance</scope><name>GetType</name></member>
      <member refid="class_bvr_1_1_meta_1_1_instance_1adc6c8cc43af01f2b212bfa7a3b8bfd92" prot="public" virt="non-virtual"><scope>Bvr::Meta::Instance</scope><name>Instance</name></member>
      <member refid="class_bvr_1_1_meta_1_1_instance_1a6d5a1322b3eefd1cf680b0b8a6029874" prot="public" virt="non-virtual"><scope>Bvr::Meta::Instance</scope><name>Instance</name></member>
      <member refid="class_bvr_1_1_meta_1_1_instance_1affc6497fd8750be05f759cae5744c18c" prot="public" virt="non-virtual"><scope>Bvr::Meta::Instance</scope><name>Instance</name></member>
      <member refid="class_bvr_1_1_meta_1_1_instance_1af965f5cbd205f7d84ec41479843822f4" prot="public" virt="non-virtual"><scope>Bvr::Meta::Instance</scope><name>Instance</name></member>
      <member refid="class_bvr_1_1_meta_1_1_instance_1a4879ddc2825d22385e8d1d2387ab482a" prot="public" virt="non-virtual"><scope>Bvr::Meta::Instance</scope><name>Instance</name></member>
      <member refid="class_bvr_1_1_meta_1_1_instance_1a6a230825b4b944c6dfc7adfe54e909e4" prot="public" virt="non-virtual"><scope>Bvr::Meta::Instance</scope><name>Instance</name></member>
      <member refid="class_bvr_1_1_meta_1_1_instance_1a3b4841cd77e7ead8fb97d52fa759c7c8" prot="public" virt="non-virtual"><scope>Bvr::Meta::Instance</scope><name>IsValid</name></member>
      <member refid="class_bvr_1_1_meta_1_1_instance_1a0f5d60dcdb6a8f83c4e5502cad2b136b" prot="private" virt="non-virtual"><scope>Bvr::Meta::Instance</scope><name>m_dataPtr</name></member>
      <member refid="class_bvr_1_1_meta_1_1_instance_1a53d57dbd02179587ba03195cb9630e0e" prot="private" virt="non-virtual"><scope>Bvr::Meta::Instance</scope><name>m_type</name></member>
      <member refid="class_bvr_1_1_meta_1_1_instance_1abee6a5b08bde3102b7c6d2adfa63452d" prot="public" virt="non-virtual"><scope>Bvr::Meta::Instance</scope><name>operator=</name></member>
      <member refid="class_bvr_1_1_meta_1_1_instance_1a9cfd55fb0c1147e36be53e867e289033" prot="public" virt="non-virtual"><scope>Bvr::Meta::Instance</scope><name>operator=</name></member>
      <member refid="class_bvr_1_1_meta_1_1_instance_1a386f5a9cf65610cb62143865e5637272" prot="private" virt="non-virtual"><scope>Bvr::Meta::Instance</scope><name>Property</name></member>
      <member refid="class_bvr_1_1_meta_1_1_instance_1a2b7bc164a109d71da92b64ecaaeefaf7" prot="public" virt="non-virtual"><scope>Bvr::Meta::Instance</scope><name>Set</name></member>
      <member refid="class_bvr_1_1_meta_1_1_instance_1a764e80725783dace3cf621f54e0a13e1" prot="public" virt="non-virtual"><scope>Bvr::Meta::Instance</scope><name>TryGet</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

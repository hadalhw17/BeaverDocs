<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_bvr_1_1_meta_1_1_member_property_wrapper" kind="struct" language="C++" prot="public">
    <compoundname>Bvr::Meta::MemberPropertyWrapper</compoundname>
    <basecompoundref refid="struct_bvr_1_1_meta_1_1_property_wrapper_base" prot="public" virt="non-virtual">Bvr::Meta::PropertyWrapperBase</basecompoundref>
    <basecompoundref refid="class_bvr_1_1_meta_1_1_attribute_storage" prot="public" virt="non-virtual">Bvr::Meta::AttributeStorage&lt; AttributeCount &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename PropType</type>
      </param>
      <param>
        <type>size_t</type>
        <declname>AttributeCount</declname>
        <defname>AttributeCount</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_bvr_1_1_meta_1_1_member_property_wrapper_1a4d8b92cf98e2449540eabb723ffc64f7" prot="public" static="no">
        <type>typename <ref refid="struct_bvr_1_1_meta_1_1_property_traits" kindref="compound">PropertyTraits</ref>&lt; PropType &gt;::ObjectType</type>
        <definition>using Bvr::Meta::MemberPropertyWrapper&lt; PropType, AttributeCount &gt;::DeclaringObjectT =  typename PropertyTraits&lt;PropType&gt;::ObjectType</definition>
        <argsstring></argsstring>
        <name>DeclaringObjectT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" line="43" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_meta_1_1_member_property_wrapper_1a58db66e36e782adb019dcd5061d01f89" prot="public" static="no">
        <type>typename <ref refid="struct_bvr_1_1_meta_1_1_property_traits" kindref="compound">PropertyTraits</ref>&lt; PropType &gt;::PropertyType</type>
        <definition>using Bvr::Meta::MemberPropertyWrapper&lt; PropType, AttributeCount &gt;::PropertyTypeT =  typename PropertyTraits&lt;PropType&gt;::PropertyType</definition>
        <argsstring></argsstring>
        <name>PropertyTypeT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" line="44" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_meta_1_1_member_property_wrapper_1a49ad6ac48e80acabd6da93b5bd3d886e" prot="public" static="no">
        <type>PropertyTypeT(DeclaringObjectT::*)</type>
        <definition>using Bvr::Meta::MemberPropertyWrapper&lt; PropType, AttributeCount &gt;::Accessor =  PropertyTypeT(DeclaringObjectT::*)</definition>
        <argsstring></argsstring>
        <name>Accessor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" line="45" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_bvr_1_1_meta_1_1_member_property_wrapper_1a78d189fe1138f2060689fbcfa0315506" prot="private" static="no" mutable="no">
        <type>Accessor</type>
        <definition>Accessor Bvr::Meta::MemberPropertyWrapper&lt; PropType, AttributeCount &gt;::m_accessor</definition>
        <argsstring></argsstring>
        <name>m_accessor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" line="94" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_member_property_wrapper_1ad326803df709eabb9e294b76d8cfafb0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::Meta::MemberPropertyWrapper&lt; PropType, AttributeCount &gt;::MemberPropertyWrapper</definition>
        <argsstring>(NameT name, PropType prop, const std::array&lt; Attribute, AttributeCount &gt; &amp;attributes)</argsstring>
        <name>MemberPropertyWrapper</name>
        <param>
          <type>NameT</type>
          <declname>name</declname>
        </param>
        <param>
          <type>PropType</type>
          <declname>prop</declname>
        </param>
        <param>
          <type>const std::array&lt; <ref refid="class_bvr_1_1_meta_1_1_attribute" kindref="compound">Attribute</ref>, AttributeCount &gt; &amp;</type>
          <declname>attributes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" line="48" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" bodystart="48" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_member_property_wrapper_1ac58786f358954601545c50fc8a0ca8f6" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>std::size_t</type>
        <definition>std::size_t Bvr::Meta::MemberPropertyWrapper&lt; PropType, AttributeCount &gt;::GetAttributeCount</definition>
        <argsstring>() const final</argsstring>
        <name>GetAttributeCount</name>
        <reimplements refid="struct_bvr_1_1_meta_1_1_property_wrapper_base_1ad7cd6da1d4dd647a2cb37f79618944ae">GetAttributeCount</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" line="54" column="18" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_member_property_wrapper_1a68b1657e0fd395cdaadd9b47d08088d8" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref></type>
        <definition>Variant Bvr::Meta::MemberPropertyWrapper&lt; PropType, AttributeCount &gt;::GetAttribute</definition>
        <argsstring>(const Variant &amp;key) const final</argsstring>
        <name>GetAttribute</name>
        <reimplements refid="struct_bvr_1_1_meta_1_1_property_wrapper_base_1a9d18b37a66204d6568976068ecb8d358">GetAttribute</reimplements>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" line="57" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_member_property_wrapper_1a71f6713b8f04c77f42ee36480076bdef" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_type" kindref="compound">Type</ref></type>
        <definition>Type Bvr::Meta::MemberPropertyWrapper&lt; PropType, AttributeCount &gt;::GetType</definition>
        <argsstring>() const final</argsstring>
        <name>GetType</name>
        <reimplements refid="struct_bvr_1_1_meta_1_1_property_wrapper_base_1ab86eab9d56e94436248f8d5d3158cb6b">GetType</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" line="61" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_member_property_wrapper_1a633496e56e398e504bba497e93d454ee" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool Bvr::Meta::MemberPropertyWrapper&lt; PropType, AttributeCount &gt;::IsValid</definition>
        <argsstring>() const final</argsstring>
        <name>IsValid</name>
        <reimplements refid="struct_bvr_1_1_meta_1_1_property_wrapper_base_1a6bba33b774128ab00535a59a3422701c">IsValid</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" line="64" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_member_property_wrapper_1a6f47403741c38fc8db00b316214322e6" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool Bvr::Meta::MemberPropertyWrapper&lt; PropType, AttributeCount &gt;::SetValue</definition>
        <argsstring>(const Instance &amp;instance, const Argument &amp;arg) const final</argsstring>
        <name>SetValue</name>
        <reimplements refid="struct_bvr_1_1_meta_1_1_property_wrapper_base_1a4e3a83ba603907a60dabf7e9516f14d0">SetValue</reimplements>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_instance" kindref="compound">Instance</ref> &amp;</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" line="65" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" bodystart="65" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_member_property_wrapper_1a336c659c4682c1f0d2d1e13223cbf3d4" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref></type>
        <definition>Variant Bvr::Meta::MemberPropertyWrapper&lt; PropType, AttributeCount &gt;::GetValue</definition>
        <argsstring>(const Instance &amp;instance) const final</argsstring>
        <name>GetValue</name>
        <reimplements refid="struct_bvr_1_1_meta_1_1_property_wrapper_base_1a8fe85190fef33ef2fe3c989a8f43bf74">GetValue</reimplements>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_instance" kindref="compound">Instance</ref> &amp;</type>
          <declname>instance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" line="81" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" bodystart="81" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_member_property_wrapper_1a05ee5b37be14ba26d659ebf50b0e9053" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>std::size_t</type>
        <definition>std::size_t Bvr::Meta::MemberPropertyWrapper&lt; PropType, AttributeCount &gt;::OffsetOf</definition>
        <argsstring>() const final</argsstring>
        <name>OffsetOf</name>
        <reimplements refid="struct_bvr_1_1_meta_1_1_property_wrapper_base_1a2261d6a263033470f03f4ac9cfd928ed">OffsetOf</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" line="88" column="18" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" bodystart="88" bodyend="91"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Bvr::Meta::PropertyWrapperBase</label>
        <link refid="struct_bvr_1_1_meta_1_1_property_wrapper_base"/>
      </node>
      <node id="3">
        <label>Bvr::Meta::AttributeStorage&lt; AttributeCount &gt;</label>
        <link refid="class_bvr_1_1_meta_1_1_attribute_storage"/>
      </node>
      <node id="1">
        <label>Bvr::Meta::MemberPropertyWrapper&lt; PropType, AttributeCount &gt;</label>
        <link refid="struct_bvr_1_1_meta_1_1_member_property_wrapper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Bvr::Meta::PropertyWrapperBase</label>
        <link refid="struct_bvr_1_1_meta_1_1_property_wrapper_base"/>
      </node>
      <node id="3">
        <label>Bvr::Meta::AttributeStorage&lt; AttributeCount &gt;</label>
        <link refid="class_bvr_1_1_meta_1_1_attribute_storage"/>
      </node>
      <node id="1">
        <label>Bvr::Meta::MemberPropertyWrapper&lt; PropType, AttributeCount &gt;</label>
        <link refid="struct_bvr_1_1_meta_1_1_member_property_wrapper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" line="41" column="1" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" bodystart="42" bodyend="95"/>
    <listofallmembers>
      <member refid="struct_bvr_1_1_meta_1_1_member_property_wrapper_1a49ad6ac48e80acabd6da93b5bd3d886e" prot="public" virt="non-virtual"><scope>Bvr::Meta::MemberPropertyWrapper</scope><name>Accessor</name></member>
      <member refid="class_bvr_1_1_meta_1_1_attribute_storage_1ae36f5880853e19ab208f21bb1cd283fe" prot="public" virt="non-virtual"><scope>Bvr::Meta::MemberPropertyWrapper</scope><name>AttributeStorage</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_member_property_wrapper_1a4d8b92cf98e2449540eabb723ffc64f7" prot="public" virt="non-virtual"><scope>Bvr::Meta::MemberPropertyWrapper</scope><name>DeclaringObjectT</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_member_property_wrapper_1a68b1657e0fd395cdaadd9b47d08088d8" prot="public" virt="virtual"><scope>Bvr::Meta::MemberPropertyWrapper</scope><name>GetAttribute</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_member_property_wrapper_1ac58786f358954601545c50fc8a0ca8f6" prot="public" virt="virtual"><scope>Bvr::Meta::MemberPropertyWrapper</scope><name>GetAttributeCount</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_property_wrapper_base_1aa6c585dfca7cb9865f01c678d35ca462" prot="public" virt="non-virtual"><scope>Bvr::Meta::MemberPropertyWrapper</scope><name>GetName</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_property_wrapper_base_1aa3813b509b9650e68d1d220586ab432b" prot="public" virt="non-virtual"><scope>Bvr::Meta::MemberPropertyWrapper</scope><name>GetParentObjectType</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_member_property_wrapper_1a71f6713b8f04c77f42ee36480076bdef" prot="public" virt="virtual"><scope>Bvr::Meta::MemberPropertyWrapper</scope><name>GetType</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_member_property_wrapper_1a336c659c4682c1f0d2d1e13223cbf3d4" prot="public" virt="virtual"><scope>Bvr::Meta::MemberPropertyWrapper</scope><name>GetValue</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_member_property_wrapper_1a633496e56e398e504bba497e93d454ee" prot="public" virt="virtual"><scope>Bvr::Meta::MemberPropertyWrapper</scope><name>IsValid</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_member_property_wrapper_1a78d189fe1138f2060689fbcfa0315506" prot="private" virt="non-virtual"><scope>Bvr::Meta::MemberPropertyWrapper</scope><name>m_accessor</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_member_property_wrapper_1ad326803df709eabb9e294b76d8cfafb0" prot="public" virt="non-virtual"><scope>Bvr::Meta::MemberPropertyWrapper</scope><name>MemberPropertyWrapper</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_property_wrapper_base_1a4da3c63b157d071f924419ac1212c076" prot="public" virt="non-virtual"><scope>Bvr::Meta::MemberPropertyWrapper</scope><name>NameT</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_member_property_wrapper_1a05ee5b37be14ba26d659ebf50b0e9053" prot="public" virt="virtual"><scope>Bvr::Meta::MemberPropertyWrapper</scope><name>OffsetOf</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_member_property_wrapper_1a58db66e36e782adb019dcd5061d01f89" prot="public" virt="non-virtual"><scope>Bvr::Meta::MemberPropertyWrapper</scope><name>PropertyTypeT</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_property_wrapper_base_1a2ead2647d054d8e78878d9dd78f9a74e" prot="public" virt="non-virtual"><scope>Bvr::Meta::MemberPropertyWrapper</scope><name>PropertyWrapperBase</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_member_property_wrapper_1a6f47403741c38fc8db00b316214322e6" prot="public" virt="virtual"><scope>Bvr::Meta::MemberPropertyWrapper</scope><name>SetValue</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_property_wrapper_base_1afa956523e2e160d13d03557923c85410" prot="public" virt="virtual"><scope>Bvr::Meta::MemberPropertyWrapper</scope><name>~PropertyWrapperBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespace_bvr_1_1_detail" kind="namespace" language="C++">
    <compoundname>Bvr::Detail</compoundname>
    <innerclass refid="struct_bvr_1_1_detail_1_1_s_vertex_stream_storage" prot="public">Bvr::Detail::SVertexStreamStorage</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_is_graph_node" prot="public">Bvr::Detail::IsGraphNode</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_is_graph_node_3_01_i_graph_node_3_01_t_01_4_01_4" prot="public">Bvr::Detail::IsGraphNode&lt; IGraphNode&lt; T &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_in_place_release" prot="public">Bvr::Detail::TInPlaceRelease</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_in_place_release_3_01_t_01_4" prot="public">Bvr::Detail::TInPlaceRelease&lt; T &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_page_size" prot="public">Bvr::Detail::TPageSize</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_page_size_3_01_t_01_4" prot="public">Bvr::Detail::TPageSize&lt; T &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_sparse_set_traits" prot="public">Bvr::Detail::TSparseSetTraits</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_sparse_set_traits_3_01_t_00_01std_1_1enable__if__t_3_01std_1_1is__enum__v_3_01_t_01_4_01_4_01_4" prot="public">Bvr::Detail::TSparseSetTraits&lt; T, std::enable_if_t&lt; std::is_enum_v&lt; T &gt; &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_sparse_set_traits_3_01_t_00_01std_1_1enable__if__t_3_01std_1_1is__class__v_3_01_t_01_4_01_4_01_4" prot="public">Bvr::Detail::TSparseSetTraits&lt; T, std::enable_if_t&lt; std::is_class_v&lt; T &gt; &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_sparse_set_traits_3_01std_1_1uint32__t_01_4" prot="public">Bvr::Detail::TSparseSetTraits&lt; std::uint32_t &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_sparse_set_traits_3_01std_1_1uint64__t_01_4" prot="public">Bvr::Detail::TSparseSetTraits&lt; std::uint64_t &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_basic_hashed_string" prot="public">Bvr::Detail::TBasicHashedString</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_hash_traits" prot="public">Bvr::Detail::HashTraits</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_hash_traits_3_01std_1_1uint32__t_01_4" prot="public">Bvr::Detail::HashTraits&lt; std::uint32_t &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_hash_traits_3_01std_1_1uint64__t_01_4" prot="public">Bvr::Detail::HashTraits&lt; std::uint64_t &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1make__void" prot="public">Bvr::Detail::make_void</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_helper" prot="public">Bvr::Detail::Helper</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_composed_helper" prot="public">Bvr::Detail::ComposedHelper</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_member_function_holder" prot="public">Bvr::Detail::MemberFunctionHolder</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_is_functor_impl" prot="public">Bvr::Detail::IsFunctorImpl</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_is_functor_impl_3_01_t_00_01_member_function_holder_3_6_composed_helpe6ddea77d77bc53d89ead58900f3ea14f" prot="public">Bvr::Detail::IsFunctorImpl&lt; T, MemberFunctionHolder&lt;&amp;ComposedHelper&lt; T &gt;::operator()&gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_is_functor" prot="public">Bvr::Detail::IsFunctor</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_is_functor_3_01_r_07_5_08_07_args_8_8_8_08_4" prot="public">Bvr::Detail::IsFunctor&lt; R(*)(Args...)&gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_is_functor_3_01_r_07_5_08_07_args_8_8_8_08_01noexcept_01_4" prot="public">Bvr::Detail::IsFunctor&lt; R(*)(Args...) noexcept &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_is_functor_3_01_r_07_6_08_07_args_8_8_8_08_4" prot="public">Bvr::Detail::IsFunctor&lt; R(&amp;)(Args...)&gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_is_functor_3_01_r_07_6_08_07_args_8_8_8_08_01noexcept_01_4" prot="public">Bvr::Detail::IsFunctor&lt; R(&amp;)(Args...) noexcept &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_function_traits" prot="public">Bvr::Detail::TFunctionTraits</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_function_traits_3_01_r_07_args_8_8_8_08_4" prot="public">Bvr::Detail::TFunctionTraits&lt; R(Args...)&gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_function_traits_3_01_r_07_c_1_1_5_08_07_args_8_8_8_08_4" prot="public">Bvr::Detail::TFunctionTraits&lt; R(C::*)(Args...)&gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_function_traits_3_01_r_07_c_1_1_5_08_07_args_8_8_8_08_01const_01_4" prot="public">Bvr::Detail::TFunctionTraits&lt; R(C::*)(Args...) const &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_function_traits_3_01_r_07_c_1_1_5_08_07_args_8_8_8_08_01volatile_01_4" prot="public">Bvr::Detail::TFunctionTraits&lt; R(C::*)(Args...) volatile &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_function_traits_3_01_r_07_c_1_1_5_08_07_args_8_8_8_08_01const_01volatile_01_4" prot="public">Bvr::Detail::TFunctionTraits&lt; R(C::*)(Args...) const volatile &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_function_traits_3_01_r_07_5_08_07_args_8_8_8_08_4" prot="public">Bvr::Detail::TFunctionTraits&lt; R(*)(Args...)&gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_function_traits_3_01_r_07_6_08_07_args_8_8_8_08_4" prot="public">Bvr::Detail::TFunctionTraits&lt; R(&amp;)(Args...)&gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_function_traits_3_01_r_07_c_1_1_5_08_07_args_8_8_8_08_01noexcept_01_4" prot="public">Bvr::Detail::TFunctionTraits&lt; R(C::*)(Args...) noexcept &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_function_traits_3_01_r_07_c_1_1_5_08_07_args_8_8_8_08_01const_01noexcept_01_4" prot="public">Bvr::Detail::TFunctionTraits&lt; R(C::*)(Args...) const noexcept &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_function_traits_3_01_r_07_c_1_1_5_08_07_args_8_8_8_08_01volatile_01noexcept_01_4" prot="public">Bvr::Detail::TFunctionTraits&lt; R(C::*)(Args...) volatile noexcept &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_function_traits_3_01_r_07_c_1_1_5_08_07_args_8_8_8_08_01const_01volatile_01noexcept_01_4" prot="public">Bvr::Detail::TFunctionTraits&lt; R(C::*)(Args...) const volatile noexcept &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_function_traits_3_01_r_07_5_08_07_args_8_8_8_08_01noexcept_01_4" prot="public">Bvr::Detail::TFunctionTraits&lt; R(*)(Args...) noexcept &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_function_traits_3_01_r_07_6_08_07_args_8_8_8_08_01noexcept_01_4" prot="public">Bvr::Detail::TFunctionTraits&lt; R(&amp;)(Args...) noexcept &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_void_member_fn" prot="public">Bvr::Detail::VoidMemberFn</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_return_member_fn" prot="public">Bvr::Detail::ReturnMemberFn</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_void_fn" prot="public">Bvr::Detail::VoidFn</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_return_fn" prot="public">Bvr::Detail::ReturnFn</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_function_type" prot="public">Bvr::Detail::FunctionType</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_type_constructor_proxy" prot="public">Bvr::Detail::TypeConstructorProxy</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_handle_hash" prot="public">Bvr::Detail::HandleHash</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_function_traits_8hpp_1adc4469fa321533939ad9b1a2a74dc4a1" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_bvr_1_1_detail_1_1make__void" kindref="compound">make_void</ref>&lt; Ts... &gt;::type</type>
        <definition>using Bvr::Detail::void_t = typedef typename make_void&lt;Ts...&gt;::type</definition>
        <argsstring></argsstring>
        <name>void_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/FunctionTraits.hpp" line="8" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/FunctionTraits.hpp" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_function_traits_8hpp_1af2a9ed55ab42316b2f327abef8465235" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>std::integral_constant&lt; bool, std::is_member_function_pointer&lt; F &gt;::value||std::is_function&lt; F &gt;::value||<ref refid="struct_bvr_1_1_detail_1_1_is_functor" kindref="compound">IsFunctor</ref>&lt; F &gt;::value &gt;</type>
        <definition>using Bvr::Detail::IsFunction = typedef std::integral_constant&lt;bool, std::is_member_function_pointer&lt;F&gt;::value || std::is_function&lt;F&gt;::value || IsFunctor&lt;F&gt;::value&gt;</definition>
        <argsstring></argsstring>
        <name>IsFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/FunctionTraits.hpp" line="109" column="1" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/FunctionTraits.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_function_traits_8hpp_1ab0f2a8d6d07021377370387f7401f226" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>std::integral_constant&lt; bool, std::is_same_v&lt; typename <ref refid="struct_bvr_1_1_detail_1_1_t_function_traits" kindref="compound">TFunctionTraits</ref>&lt; F &gt;::ReturnT, void &gt; &gt;</type>
        <definition>using Bvr::Detail::IsVoidFunction = typedef std::integral_constant&lt; bool, std::is_same_v&lt;typename TFunctionTraits&lt;F&gt;::ReturnT, void&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>IsVoidFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/FunctionTraits.hpp" line="121" column="1" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/FunctionTraits.hpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_dense_storage_8hpp_1ae8994ad29bdcbf20ed88215dfe0e674a" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static std::size_t</type>
        <definition>constexpr static std::size_t Bvr::Detail::DefaultPageSize</definition>
        <argsstring></argsstring>
        <name>DefaultPageSize</name>
        <initializer>= 1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/DenseStorage.hpp" line="7" column="34" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/DenseStorage.hpp" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_dense_storage_8hpp_1ad1f2de4e88b5781ed4b3ce25562664d2" prot="public" static="no" mutable="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>concept</type>
        <definition>concept Bvr::Detail::WithReleasePolicy</definition>
        <argsstring></argsstring>
        <name>WithReleasePolicy</name>
        <initializer>= requires(T) {
        { T::InPlaceRelease } -&gt; std::convertible_to&lt;bool&gt;;
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/DenseStorage.hpp" line="9" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/DenseStorage.hpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_dense_storage_8hpp_1a3e1d10b93f93c2f2b533ce6db050851f" prot="public" static="no" mutable="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>concept</type>
        <definition>concept Bvr::Detail::WithPageSizePolicy</definition>
        <argsstring></argsstring>
        <name>WithPageSizePolicy</name>
        <initializer>= requires(T) {
        { T::PageSize } -&gt; std::convertible_to&lt;size_t&gt;;
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/DenseStorage.hpp" line="13" column="13" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/DenseStorage.hpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_function_traits_8hpp_1adb5febf7b13e120c22b6ff9d9c49f73a" prot="public" static="no" mutable="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>concept</type>
        <definition>concept Bvr::Detail::IsCallable</definition>
        <argsstring></argsstring>
        <name>IsCallable</name>
        <initializer>= IsFunction&lt;T&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/FunctionTraits.hpp" line="115" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/FunctionTraits.hpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_function_traits_8hpp_1ae7deda3f23a1e2bad6709a9f7314add6" prot="public" static="no" mutable="no">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>concept</type>
        <definition>concept Bvr::Detail::Invokable</definition>
        <argsstring></argsstring>
        <name>Invokable</name>
        <initializer>= IsFunction&lt;F&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/FunctionTraits.hpp" line="118" column="9" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/FunctionTraits.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_dependency_graph_8hpp_1a7d717b5191cd24ce55895c8d5af8754e" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto Bvr::Detail::GetBefore</definition>
        <argsstring>(const T &amp;node)</argsstring>
        <name>GetBefore</name>
        <param>
          <type>const T &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/DependencyGraph.hpp" line="31" column="39" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/DependencyGraph.hpp" bodystart="31" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="_dependency_graph_8hpp_1a245674b004c07b3257b7c8bea2766174" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto Bvr::Detail::GetAfter</definition>
        <argsstring>(const T &amp;node)</argsstring>
        <name>GetAfter</name>
        <param>
          <type>const T &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/DependencyGraph.hpp" line="39" column="39" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/DependencyGraph.hpp" bodystart="39" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="_dependency_graph_8hpp_1a5794db113ec566c84d4b9d79ad906e30" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto Bvr::Detail::GetLabels</definition>
        <argsstring>(const T &amp;node)</argsstring>
        <name>GetLabels</name>
        <param>
          <type>const T &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/DependencyGraph.hpp" line="47" column="39" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Utils/DependencyGraph.hpp" bodystart="47" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="_type_info_8hpp_1a2988303fc6533865df1392c475ea14e4" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto Bvr::Detail::TypeNameStripped</definition>
        <argsstring>() noexcept</argsstring>
        <name>TypeNameStripped</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeInfo.hpp" line="19" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeInfo.hpp" bodystart="19" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="_type_info_8hpp_1a9c7a3199877335a0da1dabf9071dac90" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>auto</type>
            <defval>TypeNameStripped&lt;T&gt;().find_first_of(&apos;.&apos;)</defval>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="class_bvr_1_1_t_basic_hashed_string" kindref="compound">Bvr::TTypeName</ref></type>
        <definition>static constexpr Bvr::TTypeName Bvr::Detail::TypeName</definition>
        <argsstring>(int) noexcept</argsstring>
        <name>TypeName</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeInfo.hpp" line="57" column="38" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeInfo.hpp" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="_type_info_8hpp_1a68e622206bc666a6cef8bca153276a3f" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="class_bvr_1_1_t_basic_hashed_string" kindref="compound">Bvr::TTypeName</ref></type>
        <definition>static constexpr Bvr::TTypeName Bvr::Detail::TypeName</definition>
        <argsstring>(char) noexcept</argsstring>
        <name>TypeName</name>
        <param>
          <type>char</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeInfo.hpp" line="63" column="38" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeInfo.hpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="_type_info_8hpp_1a419c9b78e887f719a1d103b8649f3bac" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>auto</type>
            <defval>TypeNameStripped&lt;T&gt;().find_first_of(&apos;.&apos;)</defval>
          </param>
        </templateparamlist>
        <type>constexpr Bvr::TTypeHash</type>
        <definition>static constexpr Bvr::TTypeHash Bvr::Detail::TypeHash</definition>
        <argsstring>(int) noexcept</argsstring>
        <name>TypeHash</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeInfo.hpp" line="69" column="38" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeInfo.hpp" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="_type_info_8hpp_1a5f3feb7a7d6464a947c2bb614e5bc584" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr Bvr::TTypeHash</type>
        <definition>static constexpr Bvr::TTypeHash Bvr::Detail::TypeHash</definition>
        <argsstring>(char) noexcept</argsstring>
        <name>TypeHash</name>
        <param>
          <type>char</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeInfo.hpp" line="75" column="38" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/TypeInfo.hpp" bodystart="75" bodyend="78"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="8" column="1"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_bvr_1_1_meta_1_1_property_wrapper_base" kind="struct" language="C++" prot="public">
    <compoundname>Bvr::Meta::PropertyWrapperBase</compoundname>
    <derivedcompoundref refid="struct_bvr_1_1_meta_1_1_member_property_wrapper" prot="public" virt="non-virtual">Bvr::Meta::MemberPropertyWrapper&lt; PropType, AttributeCount &gt;</derivedcompoundref>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_bvr_1_1_meta_1_1_property_wrapper_base_1a4da3c63b157d071f924419ac1212c076" prot="public" static="no">
        <type>std::string_view</type>
        <definition>using Bvr::Meta::PropertyWrapperBase::NameT =  std::string_view</definition>
        <argsstring></argsstring>
        <name>NameT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" line="13" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_bvr_1_1_meta_1_1_property_wrapper_base_1acf4bcfcc2b5b7013f2f9e363e8f6ddfa" prot="private" static="no" mutable="no">
        <type>NameT</type>
        <definition>NameT Bvr::Meta::PropertyWrapperBase::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" line="36" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_bvr_1_1_meta_1_1_property_wrapper_base_1a68257cbc8c8ffc516fa4563435ae4bf8" prot="private" static="no" mutable="no">
        <type><ref refid="class_bvr_1_1_meta_1_1_type" kindref="compound">Type</ref></type>
        <definition>Type Bvr::Meta::PropertyWrapperBase::m_parentObjectType</definition>
        <argsstring></argsstring>
        <name>m_parentObjectType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" line="37" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_property_wrapper_base_1a2ead2647d054d8e78878d9dd78f9a74e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::Meta::PropertyWrapperBase::PropertyWrapperBase</definition>
        <argsstring>(NameT name, Type type)</argsstring>
        <name>PropertyWrapperBase</name>
        <param>
          <type>NameT</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="class_bvr_1_1_meta_1_1_type" kindref="compound">Type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" line="14" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" bodystart="14" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_property_wrapper_base_1afa956523e2e160d13d03557923c85410" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Bvr::Meta::PropertyWrapperBase::~PropertyWrapperBase</definition>
        <argsstring>()=default</argsstring>
        <name>~PropertyWrapperBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" line="16" column="13"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_property_wrapper_base_1aa3813b509b9650e68d1d220586ab432b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_type" kindref="compound">Type</ref></type>
        <definition>Type Bvr::Meta::PropertyWrapperBase::GetParentObjectType</definition>
        <argsstring>() const</argsstring>
        <name>GetParentObjectType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" line="19" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" bodystart="19" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_property_wrapper_base_1aa6c585dfca7cb9865f01c678d35ca462" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>NameT</type>
        <definition>NameT Bvr::Meta::PropertyWrapperBase::GetName</definition>
        <argsstring>() const</argsstring>
        <name>GetName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" line="22" column="19" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" bodystart="22" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_property_wrapper_base_1ab86eab9d56e94436248f8d5d3158cb6b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_type" kindref="compound">Type</ref></type>
        <definition>virtual Type Bvr::Meta::PropertyWrapperBase::GetType</definition>
        <argsstring>() const</argsstring>
        <name>GetType</name>
        <reimplementedby refid="struct_bvr_1_1_meta_1_1_member_property_wrapper_1a71f6713b8f04c77f42ee36480076bdef">GetType</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" line="23" column="19" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" bodystart="23" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_property_wrapper_base_1a6bba33b774128ab00535a59a3422701c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool Bvr::Meta::PropertyWrapperBase::IsValid</definition>
        <argsstring>() const</argsstring>
        <name>IsValid</name>
        <reimplementedby refid="struct_bvr_1_1_meta_1_1_member_property_wrapper_1a633496e56e398e504bba497e93d454ee">IsValid</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" line="24" column="19" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" bodystart="24" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_property_wrapper_base_1a4e3a83ba603907a60dabf7e9516f14d0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool Bvr::Meta::PropertyWrapperBase::SetValue</definition>
        <argsstring>(const Instance &amp;, const Argument &amp;) const</argsstring>
        <name>SetValue</name>
        <reimplementedby refid="struct_bvr_1_1_meta_1_1_member_property_wrapper_1a6f47403741c38fc8db00b316214322e6">SetValue</reimplementedby>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_instance" kindref="compound">Instance</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" line="25" column="19" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" bodystart="25" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_property_wrapper_base_1a2261d6a263033470f03f4ac9cfd928ed" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::size_t</type>
        <definition>virtual std::size_t Bvr::Meta::PropertyWrapperBase::OffsetOf</definition>
        <argsstring>() const</argsstring>
        <name>OffsetOf</name>
        <reimplementedby refid="struct_bvr_1_1_meta_1_1_member_property_wrapper_1a05ee5b37be14ba26d659ebf50b0e9053">OffsetOf</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" line="28" column="26" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_property_wrapper_base_1a8fe85190fef33ef2fe3c989a8f43bf74" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref></type>
        <definition>virtual Variant Bvr::Meta::PropertyWrapperBase::GetValue</definition>
        <argsstring>(const Instance &amp;) const</argsstring>
        <name>GetValue</name>
        <reimplementedby refid="struct_bvr_1_1_meta_1_1_member_property_wrapper_1a336c659c4682c1f0d2d1e13223cbf3d4">GetValue</reimplementedby>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_instance" kindref="compound">Instance</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" line="29" column="26" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_property_wrapper_base_1a9d18b37a66204d6568976068ecb8d358" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref></type>
        <definition>virtual Variant Bvr::Meta::PropertyWrapperBase::GetAttribute</definition>
        <argsstring>(const Variant &amp;) const</argsstring>
        <name>GetAttribute</name>
        <reimplementedby refid="struct_bvr_1_1_meta_1_1_member_property_wrapper_1a68b1657e0fd395cdaadd9b47d08088d8">GetAttribute</reimplementedby>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" line="30" column="26" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" bodystart="30" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_meta_1_1_property_wrapper_base_1ad7cd6da1d4dd647a2cb37f79618944ae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::size_t</type>
        <definition>virtual std::size_t Bvr::Meta::PropertyWrapperBase::GetAttributeCount</definition>
        <argsstring>() const</argsstring>
        <name>GetAttributeCount</name>
        <reimplementedby refid="struct_bvr_1_1_meta_1_1_member_property_wrapper_1ac58786f358954601545c50fc8a0ca8f6">GetAttributeCount</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" line="33" column="26" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" bodystart="33" bodyend="33"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Bvr::Meta::PropertyWrapperBase</label>
        <link refid="struct_bvr_1_1_meta_1_1_property_wrapper_base"/>
      </node>
      <node id="2">
        <label>Bvr::Meta::MemberPropertyWrapper&lt; PropType, AttributeCount &gt;</label>
        <link refid="struct_bvr_1_1_meta_1_1_member_property_wrapper"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" line="11" column="1" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Property.hpp" bodystart="11" bodyend="38"/>
    <listofallmembers>
      <member refid="struct_bvr_1_1_meta_1_1_property_wrapper_base_1a9d18b37a66204d6568976068ecb8d358" prot="public" virt="virtual"><scope>Bvr::Meta::PropertyWrapperBase</scope><name>GetAttribute</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_property_wrapper_base_1ad7cd6da1d4dd647a2cb37f79618944ae" prot="public" virt="virtual"><scope>Bvr::Meta::PropertyWrapperBase</scope><name>GetAttributeCount</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_property_wrapper_base_1aa6c585dfca7cb9865f01c678d35ca462" prot="public" virt="non-virtual"><scope>Bvr::Meta::PropertyWrapperBase</scope><name>GetName</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_property_wrapper_base_1aa3813b509b9650e68d1d220586ab432b" prot="public" virt="non-virtual"><scope>Bvr::Meta::PropertyWrapperBase</scope><name>GetParentObjectType</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_property_wrapper_base_1ab86eab9d56e94436248f8d5d3158cb6b" prot="public" virt="virtual"><scope>Bvr::Meta::PropertyWrapperBase</scope><name>GetType</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_property_wrapper_base_1a8fe85190fef33ef2fe3c989a8f43bf74" prot="public" virt="virtual"><scope>Bvr::Meta::PropertyWrapperBase</scope><name>GetValue</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_property_wrapper_base_1a6bba33b774128ab00535a59a3422701c" prot="public" virt="virtual"><scope>Bvr::Meta::PropertyWrapperBase</scope><name>IsValid</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_property_wrapper_base_1acf4bcfcc2b5b7013f2f9e363e8f6ddfa" prot="private" virt="non-virtual"><scope>Bvr::Meta::PropertyWrapperBase</scope><name>m_name</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_property_wrapper_base_1a68257cbc8c8ffc516fa4563435ae4bf8" prot="private" virt="non-virtual"><scope>Bvr::Meta::PropertyWrapperBase</scope><name>m_parentObjectType</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_property_wrapper_base_1a4da3c63b157d071f924419ac1212c076" prot="public" virt="non-virtual"><scope>Bvr::Meta::PropertyWrapperBase</scope><name>NameT</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_property_wrapper_base_1a2261d6a263033470f03f4ac9cfd928ed" prot="public" virt="virtual"><scope>Bvr::Meta::PropertyWrapperBase</scope><name>OffsetOf</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_property_wrapper_base_1a2ead2647d054d8e78878d9dd78f9a74e" prot="public" virt="non-virtual"><scope>Bvr::Meta::PropertyWrapperBase</scope><name>PropertyWrapperBase</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_property_wrapper_base_1a4e3a83ba603907a60dabf7e9516f14d0" prot="public" virt="virtual"><scope>Bvr::Meta::PropertyWrapperBase</scope><name>SetValue</name></member>
      <member refid="struct_bvr_1_1_meta_1_1_property_wrapper_base_1afa956523e2e160d13d03557923c85410" prot="public" virt="virtual"><scope>Bvr::Meta::PropertyWrapperBase</scope><name>~PropertyWrapperBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

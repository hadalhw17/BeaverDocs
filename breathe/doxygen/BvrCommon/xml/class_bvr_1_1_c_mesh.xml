<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_bvr_1_1_c_mesh" kind="class" language="C++" prot="public">
    <compoundname>Bvr::CMesh</compoundname>
    <includes refid="_mesh_8hpp" local="no">Mesh.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_c_mesh_1a2caf490bb8f77234a1461828d20bdb97" prot="private" static="no" mutable="no">
        <type>AABB</type>
        <definition>AABB Bvr::CMesh::m_bounds</definition>
        <argsstring></argsstring>
        <name>m_bounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="259" column="33" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_c_mesh_1a4430db3724db2cb5ffc3f5d9213fbcbb" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_bvr_1_1_s_mesh_primitive" kindref="compound">SMeshPrimitive</ref> &gt;</type>
        <definition>std::vector&lt;SMeshPrimitive&gt; Bvr::CMesh::m_primitives</definition>
        <argsstring></argsstring>
        <name>m_primitives</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="261" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_c_mesh_1aba984ab92a4bf1b1304eb12d1cae8af3" prot="private" static="no" mutable="no">
        <type><ref refid="struct_bvr_1_1_s_vertex_stream_map" kindref="compound">SVertexStreamMap</ref></type>
        <definition>SVertexStreamMap Bvr::CMesh::m_streamMap</definition>
        <argsstring></argsstring>
        <name>m_streamMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="262" column="33" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_c_mesh_1a05517cfc03d29caa9d452d4f3f88c387" prot="private" static="no" mutable="no">
        <type><ref refid="struct_bvr_1_1_s_vertex_stream" kindref="compound">SVertexStream</ref></type>
        <definition>SVertexStream Bvr::CMesh::m_indexStream</definition>
        <argsstring></argsstring>
        <name>m_indexStream</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="263" column="33" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_c_mesh_1a63fb9dd35243a83809533087e7311109" prot="private" static="no" mutable="no">
        <type>EPrimitiveTopology</type>
        <definition>EPrimitiveTopology Bvr::CMesh::m_topology</definition>
        <argsstring></argsstring>
        <name>m_topology</name>
        <initializer>= EPrimitiveTopology::TriangleList</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="264" column="33" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_c_mesh_1a5b6fb7c5506d6b72c03262deb6655efb" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Bvr::CMesh::m_allowRaytracing</definition>
        <argsstring></argsstring>
        <name>m_allowRaytracing</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="265" column="33" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="265" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a63b8b06d2e12e3619a2a16a299224604" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::CMesh::CMesh</definition>
        <argsstring>()=default</argsstring>
        <name>CMesh</name>
        <briefdescription>
<para>Construct empty mesh object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="153" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1ad3eaa5fa29f6fd5465a000c16c07bb20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::CMesh::~CMesh</definition>
        <argsstring>()=default</argsstring>
        <name>~CMesh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="154" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a044e3c6c3d1308a240e4099c5db6eb2e" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::CMesh::CMesh</definition>
        <argsstring>(CMesh &amp;&amp;rhs) noexcept=default</argsstring>
        <name>CMesh</name>
        <param>
          <type><ref refid="class_bvr_1_1_c_mesh" kindref="compound">CMesh</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="155" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a8ee829fc35789ca9d6a6f997c1fc7a30" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::CMesh::CMesh</definition>
        <argsstring>(const CMesh &amp;rhs) noexcept=default</argsstring>
        <name>CMesh</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_c_mesh" kindref="compound">CMesh</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="156" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a6cce1e07ffff82349246985f1b1c2f74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_c_mesh" kindref="compound">CMesh</ref> &amp;</type>
        <definition>CMesh&amp; Bvr::CMesh::operator=</definition>
        <argsstring>(CMesh &amp;&amp;rhs)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_bvr_1_1_c_mesh" kindref="compound">CMesh</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="157" column="11"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a2952108faadc4bac0ffffc3bc69411fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_c_mesh" kindref="compound">CMesh</ref> &amp;</type>
        <definition>CMesh&amp; Bvr::CMesh::operator=</definition>
        <argsstring>(const CMesh &amp;rhs)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_c_mesh" kindref="compound">CMesh</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="158" column="11"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a107ad6828ddaafd567679611d7f115c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::CMesh::LoadGeometry</definition>
        <argsstring>(std::vector&lt; SVertex &gt; &amp;&amp;geometry, std::vector&lt; uint32 &gt; &amp;&amp;indices, const HandleUntyped &amp;hMat={})</argsstring>
        <name>LoadGeometry</name>
        <param>
          <type>std::vector&lt; SVertex &gt; &amp;&amp;</type>
          <declname>geometry</declname>
        </param>
        <param>
          <type>std::vector&lt; uint32 &gt; &amp;&amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_handle_untyped" kindref="compound">HandleUntyped</ref> &amp;</type>
          <declname>hMat</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="161" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a54ded3385b2d3cae72502c37a5f2ce7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::CMesh::AppendGeometry</definition>
        <argsstring>(std::vector&lt; SVertex &gt; &amp;&amp;geometry, std::vector&lt; uint32 &gt; &amp;&amp;indices, const HandleUntyped &amp;hMat={})</argsstring>
        <name>AppendGeometry</name>
        <param>
          <type>std::vector&lt; SVertex &gt; &amp;&amp;</type>
          <declname>geometry</declname>
        </param>
        <param>
          <type>std::vector&lt; uint32 &gt; &amp;&amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="struct_bvr_1_1_handle_untyped" kindref="compound">HandleUntyped</ref> &amp;</type>
          <declname>hMat</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="165" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a0061fe8a3ada6a8f47b0b92a97a757e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_c_mesh" kindref="compound">CMesh</ref> &amp;</type>
        <definition>CMesh&amp; Bvr::CMesh::SetMaterial</definition>
        <argsstring>(const HandleUntyped &amp;pMaterial, int primId=-1)</argsstring>
        <name>SetMaterial</name>
        <param>
          <type>const <ref refid="struct_bvr_1_1_handle_untyped" kindref="compound">HandleUntyped</ref> &amp;</type>
          <declname>pMaterial</declname>
        </param>
        <param>
          <type>int</type>
          <declname>primId</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="169" column="11"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1ae81fbfb3117f79d4fd42200009194452" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_c_mesh" kindref="compound">CMesh</ref> &amp;</type>
        <definition>CMesh&amp; Bvr::CMesh::SetTopology</definition>
        <argsstring>(const EPrimitiveTopology eTopo)</argsstring>
        <name>SetTopology</name>
        <param>
          <type>const EPrimitiveTopology</type>
          <declname>eTopo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="170" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="170" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1afe5b835aec4b688cb56df3b9e681ffab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_c_mesh" kindref="compound">CMesh</ref> &amp;</type>
        <definition>CMesh&amp; Bvr::CMesh::AllowRaytracing</definition>
        <argsstring>(const bool allow)</argsstring>
        <name>AllowRaytracing</name>
        <param>
          <type>const bool</type>
          <declname>allow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="174" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="174" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1aa023f2a7e7283f2265631b84283d8166" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::CMesh::AllowRaytracing</definition>
        <argsstring>() const</argsstring>
        <name>AllowRaytracing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="179" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="179" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a88443542ad14f09d7c67f3195e9544cf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>EPrimitiveTopology</type>
        <definition>EPrimitiveTopology Bvr::CMesh::GetTopology</definition>
        <argsstring>() const</argsstring>
        <name>GetTopology</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="181" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="181" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a31016ae6256615aba09ffe4ca8a02cd0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>AABB</type>
        <definition>AABB Bvr::CMesh::GetBounds</definition>
        <argsstring>() const</argsstring>
        <name>GetBounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="182" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="182" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a3aa4b0873eed7ab84f4e6d80bb14e802" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="struct_bvr_1_1_s_vertex_stream_map" kindref="compound">SVertexStreamMap</ref> &amp;</type>
        <definition>const SVertexStreamMap&amp; Bvr::CMesh::GetStreamMap</definition>
        <argsstring>() const</argsstring>
        <name>GetStreamMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="183" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="183" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a8abb036b56fb71bfce036c87ff884dbe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_s_vertex_stream_map" kindref="compound">SVertexStreamMap</ref> &amp;</type>
        <definition>SVertexStreamMap&amp; Bvr::CMesh::GetStreamMap</definition>
        <argsstring>()</argsstring>
        <name>GetStreamMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="184" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="184" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a4a6a8dcf612d0021c40af3c5ff5f11eb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>SStreamSlice</type>
        <definition>SStreamSlice Bvr::CMesh::GetIndexStream</definition>
        <argsstring>() const</argsstring>
        <name>GetIndexStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="185" column="18" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="185" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1ac1ae66cb4a9434a6728fc5e4d05bf171" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::span&lt; <ref refid="struct_bvr_1_1_s_mesh_primitive" kindref="compound">SMeshPrimitive</ref> const  &gt;</type>
        <definition>std::span&lt;SMeshPrimitive const&gt; Bvr::CMesh::GetRenderPrimitives</definition>
        <argsstring>() const</argsstring>
        <name>GetRenderPrimitives</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="187" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="187" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a39571abc8c8d1f85a51e58bc1f8b4ce2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::span&lt; <ref refid="struct_bvr_1_1_s_mesh_primitive" kindref="compound">SMeshPrimitive</ref> &gt;</type>
        <definition>std::span&lt;SMeshPrimitive&gt; Bvr::CMesh::GetRenderPrimitives</definition>
        <argsstring>()</argsstring>
        <name>GetRenderPrimitives</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="191" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="191" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a0e582950875b15e02b3da6f33033ac06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::CMesh::Reset</definition>
        <argsstring>()</argsstring>
        <name>Reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="193" column="31"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a71f8dcf56ec14c11e25342969da5eb06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>AABB</type>
        <definition>AABB Bvr::CMesh::ComputeBounds</definition>
        <argsstring>()</argsstring>
        <name>ComputeBounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="195" column="31"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1aeefac7e82583b4fef7af6d8aebb25d7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::CMesh::SetBounds</definition>
        <argsstring>(const AABB &amp;aabb)</argsstring>
        <name>SetBounds</name>
        <param>
          <type>const AABB &amp;</type>
          <declname>aabb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="196" column="31" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="196" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1abe5138526f8abc440e2a05d137b75ae8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::CMesh::AddPrimitive</definition>
        <argsstring>(const SMeshPrimitive &amp;prim)</argsstring>
        <name>AddPrimitive</name>
        <param>
          <type>const <ref refid="struct_bvr_1_1_s_mesh_primitive" kindref="compound">SMeshPrimitive</ref> &amp;</type>
          <declname>prim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="198" column="31" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="198" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a074617780c0488e7ff2320ba056af249" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_s_vertex_stream" kindref="compound">SVertexStream</ref> *</type>
        <definition>SVertexStream* Bvr::CMesh::FindStream</definition>
        <argsstring>(HashedString s)</argsstring>
        <name>FindStream</name>
        <param>
          <type><ref refid="class_bvr_1_1_t_basic_hashed_string" kindref="compound">HashedString</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="202" column="19" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="202" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1ae773171a19b77f73bcaf5de0c2450d7c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="struct_bvr_1_1_s_vertex_stream" kindref="compound">SVertexStream</ref> *</type>
        <definition>const SVertexStream* Bvr::CMesh::FindStream</definition>
        <argsstring>(HashedString s) const</argsstring>
        <name>FindStream</name>
        <param>
          <type><ref refid="class_bvr_1_1_t_basic_hashed_string" kindref="compound">HashedString</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="204" column="25" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="204" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1ad48ec35c7ad758b2f2549bb12cee9311" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_bvr_1_1_s_vertex_stream" kindref="compound">SVertexStream</ref> &amp;</type>
        <definition>SVertexStream&amp; Bvr::CMesh::Assure</definition>
        <argsstring>(HashedString name, const size_t elemCount)</argsstring>
        <name>Assure</name>
        <param>
          <type><ref refid="class_bvr_1_1_t_basic_hashed_string" kindref="compound">HashedString</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>elemCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Makes sure that mesh has specified stream with capacity <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>of the stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elemCount</parametername>
</parameternamelist>
<parameterdescription>
<para>requested capacity </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>vertex stream with at least elemCount elements </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="213" column="19" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="213" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1ae6b74ad7bef6f457f1790c069182bfdd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::span&lt; T &gt;</type>
        <definition>std::span&lt;T&gt; Bvr::CMesh::AppendAndReturnHead</definition>
        <argsstring>(HashedString name, const size_t elemCount)</argsstring>
        <name>AppendAndReturnHead</name>
        <param>
          <type><ref refid="class_bvr_1_1_t_basic_hashed_string" kindref="compound">HashedString</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>elemCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="227" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="227" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a77b9a0b3c874e4095d16107f3aab5c19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::span&lt; T &gt;</type>
        <definition>std::span&lt;T&gt; Bvr::CMesh::AppendAndReturnHead</definition>
        <argsstring>(const size_t elemCount)</argsstring>
        <name>AppendAndReturnHead</name>
        <param>
          <type>const size_t</type>
          <declname>elemCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="236" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="236" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1ac29ce97b2f2f03c5c6c52891c596cb7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::CMesh::SetFromSlice</definition>
        <argsstring>(HashedString name, const SStreamSlice &amp;slice)</argsstring>
        <name>SetFromSlice</name>
        <param>
          <type><ref refid="class_bvr_1_1_t_basic_hashed_string" kindref="compound">HashedString</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type>const SStreamSlice &amp;</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="246" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a4621ca73917a2a4f397b22a33ed8e3bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bvr::CMesh::SetFromSlice</definition>
        <argsstring>(const SStreamSlice &amp;slice)</argsstring>
        <name>SetFromSlice</name>
        <param>
          <type>const SStreamSlice &amp;</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="247" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1ad090fadc725ad8abe0fd21d57d8920b9" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::span&lt; T &gt;</type>
        <definition>std::span&lt;T&gt; Bvr::CMesh::AppendAndReturnHead</definition>
        <argsstring>(SVertexStream &amp;stream, const size_t elemCount)</argsstring>
        <name>AppendAndReturnHead</name>
        <param>
          <type><ref refid="struct_bvr_1_1_s_vertex_stream" kindref="compound">SVertexStream</ref> &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>elemCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="251" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="251" bodyend="256"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Geometric representation of the mesh. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="150" column="1" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="150" bodyend="266"/>
    <listofallmembers>
      <member refid="class_bvr_1_1_c_mesh_1abe5138526f8abc440e2a05d137b75ae8" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>AddPrimitive</name></member>
      <member refid="class_bvr_1_1_c_mesh_1afe5b835aec4b688cb56df3b9e681ffab" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>AllowRaytracing</name></member>
      <member refid="class_bvr_1_1_c_mesh_1aa023f2a7e7283f2265631b84283d8166" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>AllowRaytracing</name></member>
      <member refid="class_bvr_1_1_c_mesh_1ae6b74ad7bef6f457f1790c069182bfdd" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>AppendAndReturnHead</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a77b9a0b3c874e4095d16107f3aab5c19" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>AppendAndReturnHead</name></member>
      <member refid="class_bvr_1_1_c_mesh_1ad090fadc725ad8abe0fd21d57d8920b9" prot="private" virt="non-virtual"><scope>Bvr::CMesh</scope><name>AppendAndReturnHead</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a54ded3385b2d3cae72502c37a5f2ce7c" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>AppendGeometry</name></member>
      <member refid="class_bvr_1_1_c_mesh_1ad48ec35c7ad758b2f2549bb12cee9311" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>Assure</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a63b8b06d2e12e3619a2a16a299224604" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>CMesh</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a044e3c6c3d1308a240e4099c5db6eb2e" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>CMesh</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a8ee829fc35789ca9d6a6f997c1fc7a30" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>CMesh</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a71f8dcf56ec14c11e25342969da5eb06" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>ComputeBounds</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a074617780c0488e7ff2320ba056af249" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>FindStream</name></member>
      <member refid="class_bvr_1_1_c_mesh_1ae773171a19b77f73bcaf5de0c2450d7c" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>FindStream</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a31016ae6256615aba09ffe4ca8a02cd0" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>GetBounds</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a4a6a8dcf612d0021c40af3c5ff5f11eb" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>GetIndexStream</name></member>
      <member refid="class_bvr_1_1_c_mesh_1ac1ae66cb4a9434a6728fc5e4d05bf171" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>GetRenderPrimitives</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a39571abc8c8d1f85a51e58bc1f8b4ce2" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>GetRenderPrimitives</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a3aa4b0873eed7ab84f4e6d80bb14e802" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>GetStreamMap</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a8abb036b56fb71bfce036c87ff884dbe" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>GetStreamMap</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a88443542ad14f09d7c67f3195e9544cf" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>GetTopology</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a107ad6828ddaafd567679611d7f115c4" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>LoadGeometry</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a5b6fb7c5506d6b72c03262deb6655efb" prot="private" virt="non-virtual"><scope>Bvr::CMesh</scope><name>m_allowRaytracing</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a2caf490bb8f77234a1461828d20bdb97" prot="private" virt="non-virtual"><scope>Bvr::CMesh</scope><name>m_bounds</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a05517cfc03d29caa9d452d4f3f88c387" prot="private" virt="non-virtual"><scope>Bvr::CMesh</scope><name>m_indexStream</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a4430db3724db2cb5ffc3f5d9213fbcbb" prot="private" virt="non-virtual"><scope>Bvr::CMesh</scope><name>m_primitives</name></member>
      <member refid="class_bvr_1_1_c_mesh_1aba984ab92a4bf1b1304eb12d1cae8af3" prot="private" virt="non-virtual"><scope>Bvr::CMesh</scope><name>m_streamMap</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a63fb9dd35243a83809533087e7311109" prot="private" virt="non-virtual"><scope>Bvr::CMesh</scope><name>m_topology</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a6cce1e07ffff82349246985f1b1c2f74" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>operator=</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a2952108faadc4bac0ffffc3bc69411fd" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>operator=</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a0e582950875b15e02b3da6f33033ac06" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>Reset</name></member>
      <member refid="class_bvr_1_1_c_mesh_1aeefac7e82583b4fef7af6d8aebb25d7e" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>SetBounds</name></member>
      <member refid="class_bvr_1_1_c_mesh_1ac29ce97b2f2f03c5c6c52891c596cb7d" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>SetFromSlice</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a4621ca73917a2a4f397b22a33ed8e3bb" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>SetFromSlice</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a0061fe8a3ada6a8f47b0b92a97a757e2" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>SetMaterial</name></member>
      <member refid="class_bvr_1_1_c_mesh_1ae81fbfb3117f79d4fd42200009194452" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>SetTopology</name></member>
      <member refid="class_bvr_1_1_c_mesh_1ad3eaa5fa29f6fd5465a000c16c07bb20" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>~CMesh</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

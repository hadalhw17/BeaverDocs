<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_bvr_1_1_c_mesh" kind="class" language="C++" prot="public">
    <compoundname>Bvr::CMesh</compoundname>
    <includes refid="_mesh_8hpp" local="no">Mesh.hpp</includes>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_c_mesh_1a6a9f81c408d4a1a7f7660188672ff07a" prot="public" static="yes" constexpr="yes" mutable="no">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">constexpr</ref> <ref refid="struct_bvr_1_1_events" kindref="compound">auto</ref></type>
        <definition>constexpr auto Bvr::CMesh::INDEX</definition>
        <argsstring></argsstring>
        <name>INDEX</name>
        <qualifiedname>Bvr::CMesh::INDEX</qualifiedname>
        <initializer>= &quot;INDEX&quot;_h</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="158" column="27" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="158" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_c_mesh_1a2caf490bb8f77234a1461828d20bdb97" prot="private" static="no" mutable="no">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">AABB</ref></type>
        <definition>AABB Bvr::CMesh::m_bounds</definition>
        <argsstring></argsstring>
        <name>m_bounds</name>
        <qualifiedname>Bvr::CMesh::m_bounds</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="291" column="33" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_c_mesh_1a4430db3724db2cb5ffc3f5d9213fbcbb" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_bvr_1_1_s_mesh_primitive" kindref="compound">SMeshPrimitive</ref> &gt;</type>
        <definition>std::vector&lt;SMeshPrimitive&gt; Bvr::CMesh::m_primitives</definition>
        <argsstring></argsstring>
        <name>m_primitives</name>
        <qualifiedname>Bvr::CMesh::m_primitives</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="293" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_c_mesh_1aba984ab92a4bf1b1304eb12d1cae8af3" prot="private" static="no" mutable="no">
        <type><ref refid="struct_bvr_1_1_s_vertex_stream_map" kindref="compound">SVertexStreamMap</ref></type>
        <definition>SVertexStreamMap Bvr::CMesh::m_streamMap</definition>
        <argsstring></argsstring>
        <name>m_streamMap</name>
        <qualifiedname>Bvr::CMesh::m_streamMap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="294" column="33" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_c_mesh_1a05517cfc03d29caa9d452d4f3f88c387" prot="private" static="no" mutable="no">
        <type><ref refid="struct_bvr_1_1_s_vertex_stream" kindref="compound">SVertexStream</ref></type>
        <definition>SVertexStream Bvr::CMesh::m_indexStream</definition>
        <argsstring></argsstring>
        <name>m_indexStream</name>
        <qualifiedname>Bvr::CMesh::m_indexStream</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="295" column="33" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="295" bodyend="295"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_c_mesh_1aa968cafe8f3cbb13c23e1b5dff48061f" prot="private" static="no" mutable="no">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">ETopology</ref></type>
        <definition>ETopology Bvr::CMesh::m_topology</definition>
        <argsstring></argsstring>
        <name>m_topology</name>
        <qualifiedname>Bvr::CMesh::m_topology</qualifiedname>
        <initializer>= ETopology::TriangleList</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="296" column="33" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_c_mesh_1a5b6fb7c5506d6b72c03262deb6655efb" prot="private" static="no" mutable="no">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>bool Bvr::CMesh::m_allowRaytracing</definition>
        <argsstring></argsstring>
        <name>m_allowRaytracing</name>
        <qualifiedname>Bvr::CMesh::m_allowRaytracing</qualifiedname>
        <initializer>= <ref refid="struct_bvr_1_1_events" kindref="compound">true</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="297" column="33" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="297" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a63b8b06d2e12e3619a2a16a299224604" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::CMesh::CMesh</definition>
        <argsstring>()=default</argsstring>
        <name>CMesh</name>
        <qualifiedname>Bvr::CMesh::CMesh</qualifiedname>
        <briefdescription>
<para>Construct empty mesh object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="160" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1ad3eaa5fa29f6fd5465a000c16c07bb20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::CMesh::~CMesh</definition>
        <argsstring>()=default</argsstring>
        <name>~CMesh</name>
        <qualifiedname>Bvr::CMesh::~CMesh</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="161" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a044e3c6c3d1308a240e4099c5db6eb2e" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::CMesh::CMesh</definition>
        <argsstring>(CMesh &amp;&amp;rhs) noexcept=default</argsstring>
        <name>CMesh</name>
        <qualifiedname>Bvr::CMesh::CMesh</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_c_mesh" kindref="compound">CMesh</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="162" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a8ee829fc35789ca9d6a6f997c1fc7a30" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::CMesh::CMesh</definition>
        <argsstring>(const CMesh &amp;rhs) noexcept=default</argsstring>
        <name>CMesh</name>
        <qualifiedname>Bvr::CMesh::CMesh</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> <ref refid="class_bvr_1_1_c_mesh" kindref="compound">CMesh</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="163" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1ae8aea5e2433bcee43fe91fc88eeb0923" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_c_mesh" kindref="compound">CMesh</ref> &amp;</type>
        <definition>CMesh &amp; Bvr::CMesh::operator=</definition>
        <argsstring>(CMesh &amp;&amp;rhs)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>Bvr::CMesh::operator=</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_c_mesh" kindref="compound">CMesh</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="164" column="11"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a09bd09587f540dfad1c5598d1fd17ee8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_c_mesh" kindref="compound">CMesh</ref> &amp;</type>
        <definition>CMesh &amp; Bvr::CMesh::operator=</definition>
        <argsstring>(const CMesh &amp;rhs)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>Bvr::CMesh::operator=</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> <ref refid="class_bvr_1_1_c_mesh" kindref="compound">CMesh</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="165" column="11"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a107ad6828ddaafd567679611d7f115c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>bool Bvr::CMesh::LoadGeometry</definition>
        <argsstring>(std::vector&lt; SVertex &gt; &amp;&amp;geometry, std::vector&lt; uint32 &gt; &amp;&amp;indices, const HandleUntyped &amp;hMat={})</argsstring>
        <name>LoadGeometry</name>
        <qualifiedname>Bvr::CMesh::LoadGeometry</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="struct_bvr_1_1_events" kindref="compound">SVertex</ref> &gt; &amp;&amp;</type>
          <declname>geometry</declname>
        </param>
        <param>
          <type>std::vector&lt; uint32 &gt; &amp;&amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_handle_untyped" kindref="compound">HandleUntyped</ref> &amp;</type>
          <declname>hMat</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="168" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a54ded3385b2d3cae72502c37a5f2ce7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">void</ref></type>
        <definition>void Bvr::CMesh::AppendGeometry</definition>
        <argsstring>(std::vector&lt; SVertex &gt; &amp;&amp;geometry, std::vector&lt; uint32 &gt; &amp;&amp;indices, const HandleUntyped &amp;hMat={})</argsstring>
        <name>AppendGeometry</name>
        <qualifiedname>Bvr::CMesh::AppendGeometry</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="struct_bvr_1_1_events" kindref="compound">SVertex</ref> &gt; &amp;&amp;</type>
          <declname>geometry</declname>
        </param>
        <param>
          <type>std::vector&lt; uint32 &gt; &amp;&amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_handle_untyped" kindref="compound">HandleUntyped</ref> &amp;</type>
          <declname>hMat</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="172" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a199afe69cef37ff0d10f8b043b53e1ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_c_mesh" kindref="compound">CMesh</ref> &amp;</type>
        <definition>CMesh &amp; Bvr::CMesh::SetMaterial</definition>
        <argsstring>(const HandleUntyped &amp;pMaterial, int primId=-1)</argsstring>
        <name>SetMaterial</name>
        <qualifiedname>Bvr::CMesh::SetMaterial</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_handle_untyped" kindref="compound">HandleUntyped</ref> &amp;</type>
          <declname>pMaterial</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">int</ref></type>
          <declname>primId</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="176" column="11"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a16b7ecd26b35f2be43a81dc7757a6522" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_c_mesh" kindref="compound">CMesh</ref> &amp;</type>
        <definition>CMesh &amp; Bvr::CMesh::SetTopology</definition>
        <argsstring>(const ETopology eTopo)</argsstring>
        <name>SetTopology</name>
        <qualifiedname>Bvr::CMesh::SetTopology</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_events" kindref="compound">ETopology</ref></type>
          <declname>eTopo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="177" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a3f2792782d9b412c751a1f2e674d4581" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_c_mesh" kindref="compound">CMesh</ref> &amp;</type>
        <definition>CMesh &amp; Bvr::CMesh::AllowRaytracing</definition>
        <argsstring>(const bool allow)</argsstring>
        <name>AllowRaytracing</name>
        <qualifiedname>Bvr::CMesh::AllowRaytracing</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
          <declname>allow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="181" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="181" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1aa023f2a7e7283f2265631b84283d8166" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">bool</ref></type>
        <definition>bool Bvr::CMesh::AllowRaytracing</definition>
        <argsstring>() const</argsstring>
        <name>AllowRaytracing</name>
        <qualifiedname>Bvr::CMesh::AllowRaytracing</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="186" column="18" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="186" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1acf5e79c3d457e81dcefe8cf2c2c4dc94" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">ETopology</ref></type>
        <definition>ETopology Bvr::CMesh::GetTopology</definition>
        <argsstring>() const</argsstring>
        <name>GetTopology</name>
        <qualifiedname>Bvr::CMesh::GetTopology</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="188" column="18" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="188" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a31016ae6256615aba09ffe4ca8a02cd0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">AABB</ref></type>
        <definition>AABB Bvr::CMesh::GetBounds</definition>
        <argsstring>() const</argsstring>
        <name>GetBounds</name>
        <qualifiedname>Bvr::CMesh::GetBounds</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="189" column="18" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="189" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a4a6a8dcf612d0021c40af3c5ff5f11eb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">SStreamSlice</ref></type>
        <definition>SStreamSlice Bvr::CMesh::GetIndexStream</definition>
        <argsstring>() const</argsstring>
        <name>GetIndexStream</name>
        <qualifiedname>Bvr::CMesh::GetIndexStream</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="190" column="18" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="190" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a10973273726abd4994e1d285dd2378bd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_s_vertex_stream_map" kindref="compound">SVertexStreamMap</ref> &amp;</type>
        <definition>const SVertexStreamMap &amp; Bvr::CMesh::GetStreamMap</definition>
        <argsstring>() const</argsstring>
        <name>GetStreamMap</name>
        <qualifiedname>Bvr::CMesh::GetStreamMap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="191" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="191" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1ab7c91155cb5f28ac1346ee8c07608f2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_s_vertex_stream_map" kindref="compound">SVertexStreamMap</ref> &amp;</type>
        <definition>SVertexStreamMap &amp; Bvr::CMesh::GetStreamMap</definition>
        <argsstring>()</argsstring>
        <name>GetStreamMap</name>
        <qualifiedname>Bvr::CMesh::GetStreamMap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="192" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="192" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1abfac032382ef4e2c00a2b5ae02419603" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_s_vertex_stream" kindref="compound">SVertexStream</ref> *</type>
        <definition>const SVertexStream * Bvr::CMesh::GetIdxStream</definition>
        <argsstring>() const</argsstring>
        <name>GetIdxStream</name>
        <qualifiedname>Bvr::CMesh::GetIdxStream</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="193" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="193" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1ad400a2e890e68e9a3b3986f5af2005cc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::span&lt; <ref refid="struct_bvr_1_1_s_mesh_primitive" kindref="compound">SMeshPrimitive</ref> <ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> &gt;</type>
        <definition>std::span&lt; SMeshPrimitive const  &gt; Bvr::CMesh::GetRenderPrimitives</definition>
        <argsstring>() const</argsstring>
        <name>GetRenderPrimitives</name>
        <qualifiedname>Bvr::CMesh::GetRenderPrimitives</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="195" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="195" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a9ac787ff9225443052576116f1f013f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::span&lt; <ref refid="struct_bvr_1_1_s_mesh_primitive" kindref="compound">SMeshPrimitive</ref> &gt;</type>
        <definition>std::span&lt; SMeshPrimitive &gt; Bvr::CMesh::GetRenderPrimitives</definition>
        <argsstring>()</argsstring>
        <name>GetRenderPrimitives</name>
        <qualifiedname>Bvr::CMesh::GetRenderPrimitives</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="199" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="199" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a0e582950875b15e02b3da6f33033ac06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">void</ref></type>
        <definition>void Bvr::CMesh::Reset</definition>
        <argsstring>()</argsstring>
        <name>Reset</name>
        <qualifiedname>Bvr::CMesh::Reset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="201" column="31"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a71f8dcf56ec14c11e25342969da5eb06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">AABB</ref></type>
        <definition>AABB Bvr::CMesh::ComputeBounds</definition>
        <argsstring>()</argsstring>
        <name>ComputeBounds</name>
        <qualifiedname>Bvr::CMesh::ComputeBounds</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="203" column="31"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1aeefac7e82583b4fef7af6d8aebb25d7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">void</ref></type>
        <definition>void Bvr::CMesh::SetBounds</definition>
        <argsstring>(const AABB &amp;aabb)</argsstring>
        <name>SetBounds</name>
        <qualifiedname>Bvr::CMesh::SetBounds</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_events" kindref="compound">AABB</ref> &amp;</type>
          <declname>aabb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="204" column="31" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="204" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1abe5138526f8abc440e2a05d137b75ae8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">void</ref></type>
        <definition>void Bvr::CMesh::AddPrimitive</definition>
        <argsstring>(const SMeshPrimitive &amp;prim)</argsstring>
        <name>AddPrimitive</name>
        <qualifiedname>Bvr::CMesh::AddPrimitive</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_s_mesh_primitive" kindref="compound">SMeshPrimitive</ref> &amp;</type>
          <declname>prim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="206" column="31" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="206" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1aec293457944a3e7adf2108c4200159b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_s_vertex_stream" kindref="compound">SVertexStream</ref> *</type>
        <definition>SVertexStream * Bvr::CMesh::FindStream</definition>
        <argsstring>(HashedString s)</argsstring>
        <name>FindStream</name>
        <qualifiedname>Bvr::CMesh::FindStream</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_t_basic_hashed_string" kindref="compound">HashedString</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="210" column="19" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="210" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1aa2b7fb5f480f3109e890e2439d73d68b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_s_vertex_stream" kindref="compound">SVertexStream</ref> *</type>
        <definition>const SVertexStream * Bvr::CMesh::FindStream</definition>
        <argsstring>(HashedString s) const</argsstring>
        <name>FindStream</name>
        <qualifiedname>Bvr::CMesh::FindStream</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_t_basic_hashed_string" kindref="compound">HashedString</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="212" column="25" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="212" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a31c5f94982c8e7e7dd01113ed1e60841" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> T</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_bvr_1_1_s_vertex_stream" kindref="compound">SVertexStream</ref> &amp;</type>
        <definition>SVertexStream &amp; Bvr::CMesh::Assure</definition>
        <argsstring>(HashedString name, const size_t elemCount)</argsstring>
        <name>Assure</name>
        <qualifiedname>Bvr::CMesh::Assure</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_t_basic_hashed_string" kindref="compound">HashedString</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> size_t</type>
          <declname>elemCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Makes sure that mesh has specified stream with capacity <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>of the stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elemCount</parametername>
</parameternamelist>
<parameterdescription>
<para>requested capacity </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>vertex stream with at least elemCount elements </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="221" column="19" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="221" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1ac08d2358e5292c8beafb33258401cfdc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::span&lt; uint8 &gt;</type>
        <definition>std::span&lt; uint8 &gt; Bvr::CMesh::AppendAndReturnHead</definition>
        <argsstring>(HashedString name, const size_t elemCount, const size_t customFormatSize)</argsstring>
        <name>AppendAndReturnHead</name>
        <qualifiedname>Bvr::CMesh::AppendAndReturnHead</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_t_basic_hashed_string" kindref="compound">HashedString</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> size_t</type>
          <declname>elemCount</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> size_t</type>
          <declname>customFormatSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="234" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="234" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1aa9bb49af8538fc73dfa500b1a690cc98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> T</type>
          </param>
        </templateparamlist>
        <type>std::span&lt; T &gt;</type>
        <definition>std::span&lt; T &gt; Bvr::CMesh::AppendAndReturnHead</definition>
        <argsstring>(HashedString name, const size_t elemCount)</argsstring>
        <name>AppendAndReturnHead</name>
        <qualifiedname>Bvr::CMesh::AppendAndReturnHead</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_t_basic_hashed_string" kindref="compound">HashedString</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> size_t</type>
          <declname>elemCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="245" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="245" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1aaf9edc67bad72501c6b088e25e300c96" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> T</type>
          </param>
        </templateparamlist>
        <type>std::span&lt; T &gt;</type>
        <definition>std::span&lt; T &gt; Bvr::CMesh::AppendAndReturnHead</definition>
        <argsstring>(const size_t elemCount)</argsstring>
        <name>AppendAndReturnHead</name>
        <qualifiedname>Bvr::CMesh::AppendAndReturnHead</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> size_t</type>
          <declname>elemCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="254" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="254" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1ac29ce97b2f2f03c5c6c52891c596cb7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">void</ref></type>
        <definition>void Bvr::CMesh::SetFromSlice</definition>
        <argsstring>(HashedString name, const SStreamSlice &amp;slice)</argsstring>
        <name>SetFromSlice</name>
        <qualifiedname>Bvr::CMesh::SetFromSlice</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_t_basic_hashed_string" kindref="compound">HashedString</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_events" kindref="compound">SStreamSlice</ref> &amp;</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="264" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a4621ca73917a2a4f397b22a33ed8e3bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">void</ref></type>
        <definition>void Bvr::CMesh::SetFromSlice</definition>
        <argsstring>(const SStreamSlice &amp;slice)</argsstring>
        <name>SetFromSlice</name>
        <qualifiedname>Bvr::CMesh::SetFromSlice</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_events" kindref="compound">SStreamSlice</ref> &amp;</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="265" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1afb4dfa54dfcb7082365990ed4fb6d2b0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Bvr::CMesh::GetVertexCount</definition>
        <argsstring>() const</argsstring>
        <name>GetVertexCount</name>
        <qualifiedname>Bvr::CMesh::GetVertexCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="267" column="12" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="267" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1acde38b8d51d6d0f5fc4a3a5b8a8b9a66" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Bvr::CMesh::GetIndexCount</definition>
        <argsstring>() const</argsstring>
        <name>GetIndexCount</name>
        <qualifiedname>Bvr::CMesh::GetIndexCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="272" column="12" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="272" bodyend="272"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1a594c2b4981d05b1631f5f6b73db33751" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> T</type>
          </param>
        </templateparamlist>
        <type>std::span&lt; T &gt;</type>
        <definition>std::span&lt; T &gt; Bvr::CMesh::AppendAndReturnHead</definition>
        <argsstring>(SVertexStream &amp;stream, const size_t elemCount)</argsstring>
        <name>AppendAndReturnHead</name>
        <qualifiedname>Bvr::CMesh::AppendAndReturnHead</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_s_vertex_stream" kindref="compound">SVertexStream</ref> &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> size_t</type>
          <declname>elemCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="276" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="276" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_c_mesh_1aabdb81dfabcae16d62ea7309d82c22fb" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::span&lt; uint8 &gt;</type>
        <definition>std::span&lt; uint8 &gt; Bvr::CMesh::AppendAndReturnHeadRaw</definition>
        <argsstring>(SVertexStream &amp;stream, const size_t byteCount)</argsstring>
        <name>AppendAndReturnHeadRaw</name>
        <qualifiedname>Bvr::CMesh::AppendAndReturnHeadRaw</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_s_vertex_stream" kindref="compound">SVertexStream</ref> &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> size_t</type>
          <declname>byteCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="283" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="283" bodyend="288"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Geometric representation of the mesh. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" line="156" column="1" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Mesh.hpp" bodystart="156" bodyend="298"/>
    <listofallmembers>
      <member refid="class_bvr_1_1_c_mesh_1abe5138526f8abc440e2a05d137b75ae8" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>AddPrimitive</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a3f2792782d9b412c751a1f2e674d4581" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>AllowRaytracing</name></member>
      <member refid="class_bvr_1_1_c_mesh_1aa023f2a7e7283f2265631b84283d8166" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>AllowRaytracing</name></member>
      <member refid="class_bvr_1_1_c_mesh_1ac08d2358e5292c8beafb33258401cfdc" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>AppendAndReturnHead</name></member>
      <member refid="class_bvr_1_1_c_mesh_1aa9bb49af8538fc73dfa500b1a690cc98" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>AppendAndReturnHead</name></member>
      <member refid="class_bvr_1_1_c_mesh_1aaf9edc67bad72501c6b088e25e300c96" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>AppendAndReturnHead</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a594c2b4981d05b1631f5f6b73db33751" prot="private" virt="non-virtual"><scope>Bvr::CMesh</scope><name>AppendAndReturnHead</name></member>
      <member refid="class_bvr_1_1_c_mesh_1aabdb81dfabcae16d62ea7309d82c22fb" prot="private" virt="non-virtual"><scope>Bvr::CMesh</scope><name>AppendAndReturnHeadRaw</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a54ded3385b2d3cae72502c37a5f2ce7c" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>AppendGeometry</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a31c5f94982c8e7e7dd01113ed1e60841" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>Assure</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a63b8b06d2e12e3619a2a16a299224604" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>CMesh</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a044e3c6c3d1308a240e4099c5db6eb2e" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>CMesh</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a8ee829fc35789ca9d6a6f997c1fc7a30" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>CMesh</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a71f8dcf56ec14c11e25342969da5eb06" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>ComputeBounds</name></member>
      <member refid="class_bvr_1_1_c_mesh_1aec293457944a3e7adf2108c4200159b2" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>FindStream</name></member>
      <member refid="class_bvr_1_1_c_mesh_1aa2b7fb5f480f3109e890e2439d73d68b" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>FindStream</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a31016ae6256615aba09ffe4ca8a02cd0" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>GetBounds</name></member>
      <member refid="class_bvr_1_1_c_mesh_1abfac032382ef4e2c00a2b5ae02419603" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>GetIdxStream</name></member>
      <member refid="class_bvr_1_1_c_mesh_1acde38b8d51d6d0f5fc4a3a5b8a8b9a66" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>GetIndexCount</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a4a6a8dcf612d0021c40af3c5ff5f11eb" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>GetIndexStream</name></member>
      <member refid="class_bvr_1_1_c_mesh_1ad400a2e890e68e9a3b3986f5af2005cc" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>GetRenderPrimitives</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a9ac787ff9225443052576116f1f013f7" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>GetRenderPrimitives</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a10973273726abd4994e1d285dd2378bd" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>GetStreamMap</name></member>
      <member refid="class_bvr_1_1_c_mesh_1ab7c91155cb5f28ac1346ee8c07608f2d" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>GetStreamMap</name></member>
      <member refid="class_bvr_1_1_c_mesh_1acf5e79c3d457e81dcefe8cf2c2c4dc94" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>GetTopology</name></member>
      <member refid="class_bvr_1_1_c_mesh_1afb4dfa54dfcb7082365990ed4fb6d2b0" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>GetVertexCount</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a6a9f81c408d4a1a7f7660188672ff07a" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>INDEX</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a107ad6828ddaafd567679611d7f115c4" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>LoadGeometry</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a5b6fb7c5506d6b72c03262deb6655efb" prot="private" virt="non-virtual"><scope>Bvr::CMesh</scope><name>m_allowRaytracing</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a2caf490bb8f77234a1461828d20bdb97" prot="private" virt="non-virtual"><scope>Bvr::CMesh</scope><name>m_bounds</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a05517cfc03d29caa9d452d4f3f88c387" prot="private" virt="non-virtual"><scope>Bvr::CMesh</scope><name>m_indexStream</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a4430db3724db2cb5ffc3f5d9213fbcbb" prot="private" virt="non-virtual"><scope>Bvr::CMesh</scope><name>m_primitives</name></member>
      <member refid="class_bvr_1_1_c_mesh_1aba984ab92a4bf1b1304eb12d1cae8af3" prot="private" virt="non-virtual"><scope>Bvr::CMesh</scope><name>m_streamMap</name></member>
      <member refid="class_bvr_1_1_c_mesh_1aa968cafe8f3cbb13c23e1b5dff48061f" prot="private" virt="non-virtual"><scope>Bvr::CMesh</scope><name>m_topology</name></member>
      <member refid="class_bvr_1_1_c_mesh_1ae8aea5e2433bcee43fe91fc88eeb0923" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>operator=</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a09bd09587f540dfad1c5598d1fd17ee8" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>operator=</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a0e582950875b15e02b3da6f33033ac06" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>Reset</name></member>
      <member refid="class_bvr_1_1_c_mesh_1aeefac7e82583b4fef7af6d8aebb25d7e" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>SetBounds</name></member>
      <member refid="class_bvr_1_1_c_mesh_1ac29ce97b2f2f03c5c6c52891c596cb7d" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>SetFromSlice</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a4621ca73917a2a4f397b22a33ed8e3bb" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>SetFromSlice</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a199afe69cef37ff0d10f8b043b53e1ed" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>SetMaterial</name></member>
      <member refid="class_bvr_1_1_c_mesh_1a16b7ecd26b35f2be43a81dc7757a6522" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>SetTopology</name></member>
      <member refid="class_bvr_1_1_c_mesh_1ad3eaa5fa29f6fd5465a000c16c07bb20" prot="public" virt="non-virtual"><scope>Bvr::CMesh</scope><name>~CMesh</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

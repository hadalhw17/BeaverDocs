<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_bvr_1_1_meta_1_1_argument" kind="class" language="C++" prot="public">
    <compoundname>Bvr::Meta::Argument</compoundname>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_bvr_1_1_meta_1_1_argument_1aee93a7151a0c9882c6988d4764a0db06" prot="private" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; !std::is_rvalue_reference&lt; T &gt;::value &amp;&amp;!IsVariant&lt; T &gt;::value, T &gt;</type>
        <definition>using Bvr::Meta::Argument::ArgValueT =  std::enable_if_t&lt; !std::is_rvalue_reference&lt;T&gt;::value &amp;&amp; !IsVariant&lt;T&gt;::value, T&gt;</definition>
        <argsstring></argsstring>
        <name>ArgValueT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" line="19" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_meta_1_1_argument_1ab9be1bef6e66f8a9326e561aae4416f3" prot="private" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; std::is_rvalue_reference&lt; T &gt;::value &amp;&amp;!IsVariant&lt; T &gt;::value, std::remove_reference_t&lt; T &gt; &gt;</type>
        <definition>using Bvr::Meta::Argument::ArgRValueT =  std::enable_if_t&lt;std::is_rvalue_reference&lt;T&gt;::value &amp;&amp; !IsVariant&lt;T&gt;::value, std::remove_reference_t&lt;T&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>ArgRValueT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" line="23" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_meta_1_1_argument_1ad113c025b770eb61903645052fd0884c" prot="private" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; !std::is_rvalue_reference&lt; T &gt;::value &amp;&amp;IsVariant&lt; T &gt;::value, T &gt;</type>
        <definition>using Bvr::Meta::Argument::VariantArgValueT =  std::enable_if_t&lt; !std::is_rvalue_reference&lt;T&gt;::value &amp;&amp; IsVariant&lt;T&gt;::value, T&gt;</definition>
        <argsstring></argsstring>
        <name>VariantArgValueT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" line="28" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bvr_1_1_meta_1_1_argument_1acd8715ead5fa6b88a947213d4ce3d796" prot="private" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; std::is_rvalue_reference&lt; T &gt;::value &amp;&amp;IsVariant&lt; T &gt;::value, std::remove_reference_t&lt; T &gt; &gt;</type>
        <definition>using Bvr::Meta::Argument::VariantArgRValueT =  std::enable_if_t&lt;std::is_rvalue_reference&lt;T&gt;::value &amp;&amp; IsVariant&lt;T&gt;::value, std::remove_reference_t&lt;T&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>VariantArgRValueT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" line="32" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_bvr_1_1_meta_1_1_argument_1a248e34fb4ddd79d067ebde5d5cd6ffc2" prot="private" static="no" mutable="no">
        <type>ptr_t</type>
        <definition>ptr_t Bvr::Meta::Argument::m_data</definition>
        <argsstring></argsstring>
        <name>m_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" line="89" column="20" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_meta_1_1_argument_1aa97d3fe7a2e9a410beb70e57d64c37a8" prot="private" static="no" mutable="no">
        <type><ref refid="class_bvr_1_1_meta_1_1_type" kindref="compound">Type</ref></type>
        <definition>Type Bvr::Meta::Argument::m_type</definition>
        <argsstring></argsstring>
        <name>m_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" line="90" column="20" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bvr_1_1_meta_1_1_argument_1a34f78e01de00900d90f79e0ebc2d9b97" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref> *</type>
        <definition>const Variant* Bvr::Meta::Argument::m_pVariant</definition>
        <argsstring></argsstring>
        <name>m_pVariant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" line="91" column="19" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_argument_1a624f16c344f25beafdff4f7e6c6e00dc" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>Argumentable</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Bvr::Meta::Argument::Argument</definition>
        <argsstring>(const T &amp;obj) noexcept</argsstring>
        <name>Argument</name>
        <param>
          <type>const T &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" line="39" column="12" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" bodystart="39" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_argument_1aceffb898e8b1a50b31ca9570714d3a20" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>Argumentable</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Bvr::Meta::Argument::Argument</definition>
        <argsstring>(T &amp;obj) noexcept</argsstring>
        <name>Argument</name>
        <param>
          <type>T &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" line="43" column="12" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" bodystart="43" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_argument_1accc532496d65d4891ad51e6fdc2755c7" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::Meta::Argument::Argument</definition>
        <argsstring>(ptr_t data, Type type) noexcept</argsstring>
        <name>Argument</name>
        <param>
          <type>ptr_t</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="class_bvr_1_1_meta_1_1_type" kindref="compound">Type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" line="46" column="12" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" bodystart="46" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_argument_1a9fca7c444501a7630b955c438546b75b" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::Meta::Argument::Argument</definition>
        <argsstring>(const Argument &amp;obj) noexcept</argsstring>
        <name>Argument</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" line="49" column="12" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" bodystart="49" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_argument_1aaf3f56ce9ad7d5eb67dcca59c5f3cb8e" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::Meta::Argument::Argument</definition>
        <argsstring>(Argument &amp;obj) noexcept</argsstring>
        <name>Argument</name>
        <param>
          <type><ref refid="class_bvr_1_1_meta_1_1_argument" kindref="compound">Argument</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" line="52" column="12" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" bodystart="52" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_argument_1ad7a00dac987aa749e0973f7eb8a6bfde" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::Meta::Argument::Argument</definition>
        <argsstring>(const Variant &amp;var) noexcept</argsstring>
        <name>Argument</name>
        <param>
          <type>const <ref refid="class_bvr_1_1_meta_1_1_variant" kindref="compound">Variant</ref> &amp;</type>
          <declname>var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" line="55" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_argument_1a25b1be88b89d0829810f1204461b253f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_bvr_1_1_meta_1_1_type" kindref="compound">Type</ref></type>
        <definition>Type Bvr::Meta::Argument::GetType</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" line="57" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_argument_1ad7ec78f10b77173439d257891c9384b8" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Bvr::Meta::Argument::IsType</definition>
        <argsstring>() const noexcept</argsstring>
        <name>IsType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" line="59" column="23" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_argument_1a39de49daff62c271b595e06c4cdf5312" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>ArgValueT&lt; T &gt; &amp;</type>
        <definition>ArgValueT&lt;T&gt;&amp; Bvr::Meta::Argument::GetValue</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" line="64" column="23" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_argument_1aa060e0c3b882706b59d354949f76f9c4" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>ArgRValueT&lt; T &gt; &amp;&amp;</type>
        <definition>ArgRValueT&lt;T&gt;&amp;&amp; Bvr::Meta::Argument::GetValue</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" line="70" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_argument_1ade36695f4eeba07a47a28b13dd25c934" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>VariantArgValueT&lt; T &gt; &amp;</type>
        <definition>VariantArgValueT&lt;T&gt;&amp; Bvr::Meta::Argument::GetValue</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" line="76" column="30" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_bvr_1_1_meta_1_1_argument_1ab9717cbd184ab62878934359b48b1619" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>VariantArgRValueT&lt; T &gt; &amp;&amp;</type>
        <definition>VariantArgRValueT&lt;T&gt;&amp;&amp; Bvr::Meta::Argument::GetValue</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" line="82" column="31" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" bodystart="82" bodyend="86"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" line="17" column="1" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/Meta/Argument.hpp" bodystart="17" bodyend="92"/>
    <listofallmembers>
      <member refid="class_bvr_1_1_meta_1_1_argument_1ab9be1bef6e66f8a9326e561aae4416f3" prot="private" virt="non-virtual"><scope>Bvr::Meta::Argument</scope><name>ArgRValueT</name></member>
      <member refid="class_bvr_1_1_meta_1_1_argument_1a624f16c344f25beafdff4f7e6c6e00dc" prot="public" virt="non-virtual"><scope>Bvr::Meta::Argument</scope><name>Argument</name></member>
      <member refid="class_bvr_1_1_meta_1_1_argument_1aceffb898e8b1a50b31ca9570714d3a20" prot="public" virt="non-virtual"><scope>Bvr::Meta::Argument</scope><name>Argument</name></member>
      <member refid="class_bvr_1_1_meta_1_1_argument_1accc532496d65d4891ad51e6fdc2755c7" prot="public" virt="non-virtual"><scope>Bvr::Meta::Argument</scope><name>Argument</name></member>
      <member refid="class_bvr_1_1_meta_1_1_argument_1a9fca7c444501a7630b955c438546b75b" prot="public" virt="non-virtual"><scope>Bvr::Meta::Argument</scope><name>Argument</name></member>
      <member refid="class_bvr_1_1_meta_1_1_argument_1aaf3f56ce9ad7d5eb67dcca59c5f3cb8e" prot="public" virt="non-virtual"><scope>Bvr::Meta::Argument</scope><name>Argument</name></member>
      <member refid="class_bvr_1_1_meta_1_1_argument_1ad7a00dac987aa749e0973f7eb8a6bfde" prot="public" virt="non-virtual"><scope>Bvr::Meta::Argument</scope><name>Argument</name></member>
      <member refid="class_bvr_1_1_meta_1_1_argument_1aee93a7151a0c9882c6988d4764a0db06" prot="private" virt="non-virtual"><scope>Bvr::Meta::Argument</scope><name>ArgValueT</name></member>
      <member refid="class_bvr_1_1_meta_1_1_argument_1a25b1be88b89d0829810f1204461b253f" prot="public" virt="non-virtual"><scope>Bvr::Meta::Argument</scope><name>GetType</name></member>
      <member refid="class_bvr_1_1_meta_1_1_argument_1a39de49daff62c271b595e06c4cdf5312" prot="public" virt="non-virtual"><scope>Bvr::Meta::Argument</scope><name>GetValue</name></member>
      <member refid="class_bvr_1_1_meta_1_1_argument_1aa060e0c3b882706b59d354949f76f9c4" prot="public" virt="non-virtual"><scope>Bvr::Meta::Argument</scope><name>GetValue</name></member>
      <member refid="class_bvr_1_1_meta_1_1_argument_1ade36695f4eeba07a47a28b13dd25c934" prot="public" virt="non-virtual"><scope>Bvr::Meta::Argument</scope><name>GetValue</name></member>
      <member refid="class_bvr_1_1_meta_1_1_argument_1ab9717cbd184ab62878934359b48b1619" prot="public" virt="non-virtual"><scope>Bvr::Meta::Argument</scope><name>GetValue</name></member>
      <member refid="class_bvr_1_1_meta_1_1_argument_1ad7ec78f10b77173439d257891c9384b8" prot="public" virt="non-virtual"><scope>Bvr::Meta::Argument</scope><name>IsType</name></member>
      <member refid="class_bvr_1_1_meta_1_1_argument_1a248e34fb4ddd79d067ebde5d5cd6ffc2" prot="private" virt="non-virtual"><scope>Bvr::Meta::Argument</scope><name>m_data</name></member>
      <member refid="class_bvr_1_1_meta_1_1_argument_1a34f78e01de00900d90f79e0ebc2d9b97" prot="private" virt="non-virtual"><scope>Bvr::Meta::Argument</scope><name>m_pVariant</name></member>
      <member refid="class_bvr_1_1_meta_1_1_argument_1aa97d3fe7a2e9a410beb70e57d64c37a8" prot="private" virt="non-virtual"><scope>Bvr::Meta::Argument</scope><name>m_type</name></member>
      <member refid="class_bvr_1_1_meta_1_1_argument_1acd8715ead5fa6b88a947213d4ce3d796" prot="private" virt="non-virtual"><scope>Bvr::Meta::Argument</scope><name>VariantArgRValueT</name></member>
      <member refid="class_bvr_1_1_meta_1_1_argument_1ad113c025b770eb61903645052fd0884c" prot="private" virt="non-virtual"><scope>Bvr::Meta::Argument</scope><name>VariantArgValueT</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="struct_bvr_1_1_asset_id" kind="struct" language="C++" prot="public">
    <compoundname>Bvr::AssetId</compoundname>
    <includes refid="_asset_handle_8hpp" local="no">AssetHandle.hpp</includes>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_bvr_1_1_asset_id_1a28bbf7802614dc2c8f5e9392a8232428" prot="public" static="no">
        <type>AssetIndexT</type>
        <definition>using Bvr::AssetId::EntityT =  AssetIndexT</definition>
        <argsstring></argsstring>
        <name>EntityT</name>
        <qualifiedname>Bvr::AssetId::EntityT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="18" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_bvr_1_1_asset_id_1aa5fcd0db9e8a6d5b7b91feca8abd4e1a" prot="public" static="no" mutable="no">
        <type>Util::Hash</type>
        <definition>Util::Hash Bvr::AssetId::m_typeHash</definition>
        <argsstring></argsstring>
        <name>m_typeHash</name>
        <qualifiedname>Bvr::AssetId::m_typeHash</qualifiedname>
        <initializer>= ~0ull</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="35" column="16" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_bvr_1_1_asset_id_1a310c9bc0948afcbdc1b945cfb4815884" prot="public" static="no" mutable="no">
        <type>EntityT</type>
        <definition>EntityT Bvr::AssetId::m_index</definition>
        <argsstring></argsstring>
        <name>m_index</name>
        <qualifiedname>Bvr::AssetId::m_index</qualifiedname>
        <initializer>= ECS::Null</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="36" column="16" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_bvr_1_1_asset_id_1ae726c43349d0e5a1526af3f993c70983" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bvr::AssetId::AssetId</definition>
        <argsstring>()=default</argsstring>
        <name>AssetId</name>
        <qualifiedname>Bvr::AssetId::AssetId</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="19" column="5"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_asset_id_1a650ca472b1ac48699519bc071075de59" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::AssetId::AssetId</definition>
        <argsstring>(ECS::TNull) noexcept</argsstring>
        <name>AssetId</name>
        <qualifiedname>Bvr::AssetId::AssetId</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_e_c_s_1_1_t_null" kindref="compound">ECS::TNull</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="20" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="20" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_asset_id_1abf3340cb5dbf404539385f00cc11e2d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">auto</ref></type>
        <definition>auto Bvr::AssetId::operator&lt;=&gt;</definition>
        <argsstring>(const AssetId &amp;rhs) const =default</argsstring>
        <name>operator&lt;=&gt;</name>
        <qualifiedname>Bvr::AssetId::operator&lt;=&gt;</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_asset_id" kindref="compound">AssetId</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="29" column="5"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_asset_id_1a7e311c59ef7bdbe87a35d88ece90ab0f" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::AssetId::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <qualifiedname>Bvr::AssetId::operator bool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="30" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="30" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_asset_id_1ab4a4dc2f134d1bfab8f50ba8495f5fca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::AssetId::operator EntityT</definition>
        <argsstring>() const</argsstring>
        <name>operator EntityT</name>
        <qualifiedname>Bvr::AssetId::operator EntityT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="33" column="16" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="33" bodyend="33"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_bvr_1_1_asset_id_1a94de9da912021576c9b3e8a4e36bcbf4" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="struct_bvr_1_1_events" kindref="compound">typename</ref> T</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">constexpr</ref> <ref refid="struct_bvr_1_1_asset_id" kindref="compound">AssetId</ref></type>
        <definition>static constexpr AssetId Bvr::AssetId::Create</definition>
        <argsstring>(const EntityT idx)</argsstring>
        <name>Create</name>
        <qualifiedname>Bvr::AssetId::Create</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> EntityT</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="22" column="42" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="22" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_asset_id_1ad0ba831082bdc7dd594bd1e52a1510c1" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_bvr_1_1_events" kindref="compound">constexpr</ref> Util::Hash</type>
        <definition>static constexpr Util::Hash Bvr::AssetId::Hash</definition>
        <argsstring>(const AssetId &amp;self)</argsstring>
        <name>Hash</name>
        <qualifiedname>Bvr::AssetId::Hash</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> <ref refid="struct_bvr_1_1_asset_id" kindref="compound">AssetId</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="26" column="33" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="26" bodyend="28"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="struct_bvr_1_1_asset_id_1a247b9cebeef59d8129b0450e74e9c4cd" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bvr::AssetId::AssetId</definition>
        <argsstring>(const Util::Hash h, const EntityT idx)</argsstring>
        <name>AssetId</name>
        <qualifiedname>Bvr::AssetId::AssetId</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> Util::Hash</type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_events" kindref="compound">const</ref> EntityT</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="39" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="39" bodyend="40"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Asset id that is unique across all asset types. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" line="17" column="1" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrCommon/IO/AssetHandle.hpp" bodystart="17" bodyend="41"/>
    <listofallmembers>
      <member refid="struct_bvr_1_1_asset_id_1ae726c43349d0e5a1526af3f993c70983" prot="public" virt="non-virtual"><scope>Bvr::AssetId</scope><name>AssetId</name></member>
      <member refid="struct_bvr_1_1_asset_id_1a650ca472b1ac48699519bc071075de59" prot="public" virt="non-virtual"><scope>Bvr::AssetId</scope><name>AssetId</name></member>
      <member refid="struct_bvr_1_1_asset_id_1a247b9cebeef59d8129b0450e74e9c4cd" prot="private" virt="non-virtual"><scope>Bvr::AssetId</scope><name>AssetId</name></member>
      <member refid="struct_bvr_1_1_asset_id_1a94de9da912021576c9b3e8a4e36bcbf4" prot="public" virt="non-virtual"><scope>Bvr::AssetId</scope><name>Create</name></member>
      <member refid="struct_bvr_1_1_asset_id_1a28bbf7802614dc2c8f5e9392a8232428" prot="public" virt="non-virtual"><scope>Bvr::AssetId</scope><name>EntityT</name></member>
      <member refid="struct_bvr_1_1_asset_id_1ad0ba831082bdc7dd594bd1e52a1510c1" prot="public" virt="non-virtual"><scope>Bvr::AssetId</scope><name>Hash</name></member>
      <member refid="struct_bvr_1_1_asset_id_1a310c9bc0948afcbdc1b945cfb4815884" prot="public" virt="non-virtual"><scope>Bvr::AssetId</scope><name>m_index</name></member>
      <member refid="struct_bvr_1_1_asset_id_1aa5fcd0db9e8a6d5b7b91feca8abd4e1a" prot="public" virt="non-virtual"><scope>Bvr::AssetId</scope><name>m_typeHash</name></member>
      <member refid="struct_bvr_1_1_asset_id_1a7e311c59ef7bdbe87a35d88ece90ab0f" prot="public" virt="non-virtual"><scope>Bvr::AssetId</scope><name>operator bool</name></member>
      <member refid="struct_bvr_1_1_asset_id_1ab4a4dc2f134d1bfab8f50ba8495f5fca" prot="public" virt="non-virtual"><scope>Bvr::AssetId</scope><name>operator EntityT</name></member>
      <member refid="struct_bvr_1_1_asset_id_1abf3340cb5dbf404539385f00cc11e2d4" prot="public" virt="non-virtual"><scope>Bvr::AssetId</scope><name>operator&lt;=&gt;</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

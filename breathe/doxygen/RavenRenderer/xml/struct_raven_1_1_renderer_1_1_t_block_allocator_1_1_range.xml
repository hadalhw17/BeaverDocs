<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_raven_1_1_renderer_1_1_t_block_allocator_1_1_range" kind="struct" language="C++" prot="public">
    <compoundname>Raven::Renderer::TBlockAllocator::Range</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_raven_1_1_renderer_1_1_t_block_allocator_1_1_range_1a709e15b455b6beabd65eabdd588f7a76" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T Raven::Renderer::TBlockAllocator&lt; T &gt;::Range::Offset</definition>
        <argsstring></argsstring>
        <name>Offset</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" line="24" column="14" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_raven_1_1_renderer_1_1_t_block_allocator_1_1_range_1af476f279b3535ab9c66b5d25a0000ee9" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T Raven::Renderer::TBlockAllocator&lt; T &gt;::Range::Size</definition>
        <argsstring></argsstring>
        <name>Size</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" line="24" column="22" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_raven_1_1_renderer_1_1_t_block_allocator_1_1_range_1af7d5e48dbcb22de325973ec620f1d608" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::Renderer::TBlockAllocator&lt; T &gt;::Range::Merge</definition>
        <argsstring>(const Range &amp;range)</argsstring>
        <name>Merge</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_renderer_1_1_t_block_allocator_1_1_range" kindref="compound">Range</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" line="12" column="14" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" bodystart="12" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_renderer_1_1_t_block_allocator_1_1_range_1acdebf8f65c7a262322bc275e623cc648" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::Renderer::TBlockAllocator&lt; T &gt;::Range::Overlaps</definition>
        <argsstring>(const Range &amp;range) const</argsstring>
        <name>Overlaps</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_renderer_1_1_t_block_allocator_1_1_range" kindref="compound">Range</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" line="17" column="14" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" bodystart="17" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_renderer_1_1_t_block_allocator_1_1_range_1a72473f44fbe0ee75df47addcb5ff6ca7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Raven::Renderer::TBlockAllocator&lt; T &gt;::Range::End</definition>
        <argsstring>() const</argsstring>
        <name>End</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" line="21" column="16" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_renderer_1_1_t_block_allocator_1_1_range_1ab9d7f2e0ff2188c441a7289f9dd82157" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::Renderer::TBlockAllocator&lt; T &gt;::Range::Empty</definition>
        <argsstring>() const</argsstring>
        <name>Empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" line="22" column="16" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" bodystart="22" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_renderer_1_1_t_block_allocator_1_1_range_1a2dd8c919890f1b7c585f25e8a30fc66c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::Renderer::TBlockAllocator&lt; T &gt;::Range::operator&lt;</definition>
        <argsstring>(const Range &amp;rhs) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_renderer_1_1_t_block_allocator_1_1_range" kindref="compound">Range</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" line="23" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" bodystart="23" bodyend="23"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" line="11" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" bodystart="11" bodyend="25"/>
    <listofallmembers>
      <member refid="struct_raven_1_1_renderer_1_1_t_block_allocator_1_1_range_1ab9d7f2e0ff2188c441a7289f9dd82157" prot="public" virt="non-virtual"><scope>Raven::Renderer::TBlockAllocator::Range</scope><name>Empty</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_t_block_allocator_1_1_range_1a72473f44fbe0ee75df47addcb5ff6ca7" prot="public" virt="non-virtual"><scope>Raven::Renderer::TBlockAllocator::Range</scope><name>End</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_t_block_allocator_1_1_range_1af7d5e48dbcb22de325973ec620f1d608" prot="public" virt="non-virtual"><scope>Raven::Renderer::TBlockAllocator::Range</scope><name>Merge</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_t_block_allocator_1_1_range_1a709e15b455b6beabd65eabdd588f7a76" prot="public" virt="non-virtual"><scope>Raven::Renderer::TBlockAllocator::Range</scope><name>Offset</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_t_block_allocator_1_1_range_1a2dd8c919890f1b7c585f25e8a30fc66c" prot="public" virt="non-virtual"><scope>Raven::Renderer::TBlockAllocator::Range</scope><name>operator&lt;</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_t_block_allocator_1_1_range_1acdebf8f65c7a262322bc275e623cc648" prot="public" virt="non-virtual"><scope>Raven::Renderer::TBlockAllocator::Range</scope><name>Overlaps</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_t_block_allocator_1_1_range_1af476f279b3535ab9c66b5d25a0000ee9" prot="public" virt="non-virtual"><scope>Raven::Renderer::TBlockAllocator::Range</scope><name>Size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

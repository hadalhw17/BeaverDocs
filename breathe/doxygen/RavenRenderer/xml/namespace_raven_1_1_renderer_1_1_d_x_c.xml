<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespace_raven_1_1_renderer_1_1_d_x_c" kind="namespace" language="C++">
    <compoundname>Raven::Renderer::DXC</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="_d_x_c_wrapper_8hpp_1a930cd7400aa0b50c74f7f2d61d48683c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::Renderer::DXC::Create</definition>
        <argsstring>(const std::string shaderModel, std::vector&lt; std::string &gt; &amp;&amp;defaultParams)</argsstring>
        <name>Create</name>
        <param>
          <type>const std::string</type>
          <declname>shaderModel</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;&amp;</type>
          <declname>defaultParams</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/Shaders/DXCWrapper.hpp" line="7" column="13" declfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/Shaders/DXCWrapper.hpp" declline="7" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_d_x_c_wrapper_8hpp_1a07fccf82d42961056b92508e212adea9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ShaderBlobT</type>
        <definition>ShaderBlobT Raven::Renderer::DXC::Compile</definition>
        <argsstring>(const char *pSource, size_t sourceSize, const char *pShaderName, const char *pEntryPoint, const EShaderType eShaderType, const SShaderDefineMap &amp;defineMap)</argsstring>
        <name>Compile</name>
        <param>
          <type>const char *</type>
          <declname>pSource</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sourceSize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pShaderName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pEntryPoint</declname>
        </param>
        <param>
          <type>const EShaderType</type>
          <declname>eShaderType</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_renderer_1_1_s_shader_define_map" kindref="compound">SShaderDefineMap</ref> &amp;</type>
          <declname>defineMap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/Shaders/DXCWrapper.hpp" line="8" column="20" declfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/Shaders/DXCWrapper.hpp" declline="8" declcolumn="20"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/Shaders/DXCWrapper.hpp" line="5" column="1"/>
  </compounddef>
</doxygen>

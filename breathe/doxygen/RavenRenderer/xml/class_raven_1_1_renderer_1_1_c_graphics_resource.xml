<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_raven_1_1_renderer_1_1_c_graphics_resource" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Raven::Renderer::CGraphicsResource</compoundname>
    <derivedcompoundref refid="class_raven_1_1_renderer_1_1_device_1_1_c_buffer" prot="public" virt="non-virtual">Raven::Renderer::Device::CBuffer</derivedcompoundref>
    <derivedcompoundref refid="class_raven_1_1_renderer_1_1_device_1_1_c_image" prot="public" virt="non-virtual">Raven::Renderer::Device::CImage</derivedcompoundref>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_c_graphics_resource_1aebeecae3b61112801f5d55ee37337034" prot="protected" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t Raven::Renderer::CGraphicsResource::m_size</definition>
        <argsstring></argsstring>
        <name>m_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/GraphicsResource.hpp" line="39" column="10" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/GraphicsResource.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_c_graphics_resource_1afb9c0f8599c2f49aa2f39aa89e3e2807" prot="protected" static="no" mutable="no">
        <type><ref refid="struct_raven_1_1_renderer_1_1_s_device_memory_allocation" kindref="compound">SDeviceMemoryAllocation</ref></type>
        <definition>SDeviceMemoryAllocation Raven::Renderer::CGraphicsResource::m_memoryAllocation</definition>
        <argsstring></argsstring>
        <name>m_memoryAllocation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/GraphicsResource.hpp" line="40" column="25" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/GraphicsResource.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_graphics_resource_1a86088198d5aca84975f6e5690d01cd30" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Raven::Renderer::CGraphicsResource::CGraphicsResource</definition>
        <argsstring>(uint64 size)</argsstring>
        <name>CGraphicsResource</name>
        <param>
          <type>uint64</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/GraphicsResource.hpp" line="20" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/GraphicsResource.hpp" bodystart="20" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_graphics_resource_1ac9ca0f1977170ed23778990d0ef1194c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Raven::Renderer::CGraphicsResource::~CGraphicsResource</definition>
        <argsstring>()=default</argsstring>
        <name>~CGraphicsResource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/GraphicsResource.hpp" line="24" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_graphics_resource_1aa1ec955cdf85d1a4ba3f0803f53dd038" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Raven::Renderer::CGraphicsResource::Release</definition>
        <argsstring>()=0</argsstring>
        <name>Release</name>
        <reimplementedby refid="class_raven_1_1_renderer_1_1_device_1_1_c_buffer_1a7450c9213c6e228406002b520b6a1124">Release</reimplementedby>
        <reimplementedby refid="class_raven_1_1_renderer_1_1_device_1_1_c_image_1aa87f66ab6141200183a4d6700e9afc71">Release</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/GraphicsResource.hpp" line="26" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_graphics_resource_1a296d53b814d749893e410c8bf58bcbbc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Raven::Renderer::CGraphicsResource::BindMemory</definition>
        <argsstring>(const SDeviceMemoryAllocation &amp;allocation)=0</argsstring>
        <name>BindMemory</name>
        <reimplementedby refid="class_raven_1_1_renderer_1_1_device_1_1_c_buffer_1a94c9da42ef21fa258c901c7ab24d4229">BindMemory</reimplementedby>
        <reimplementedby refid="class_raven_1_1_renderer_1_1_device_1_1_c_image_1ad8bf0d21be4cb44a9b6bdec94de0303b">BindMemory</reimplementedby>
        <param>
          <type>const <ref refid="struct_raven_1_1_renderer_1_1_s_device_memory_allocation" kindref="compound">SDeviceMemoryAllocation</ref> &amp;</type>
          <declname>allocation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/GraphicsResource.hpp" line="27" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_graphics_resource_1ae8fd674c2cd00171e236bc14aa54c9c2" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Raven::Renderer::CGraphicsResource::SetDebugName</definition>
        <argsstring>(const char *pName) const =0</argsstring>
        <name>SetDebugName</name>
        <reimplementedby refid="class_raven_1_1_renderer_1_1_device_1_1_c_buffer_1aab818fe79c738e3b5259da8627e3a901">SetDebugName</reimplementedby>
        <reimplementedby refid="class_raven_1_1_renderer_1_1_device_1_1_c_image_1a16b7aea8ce9460f5524411a1cb3a65ce">SetDebugName</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>pName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/GraphicsResource.hpp" line="28" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_graphics_resource_1ac83c0cb648b94a1f670da209c9bc3496" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_raven_1_1_renderer_1_1_device_1_1_c_heap" kindref="compound">Device::CHeap</ref> *</type>
        <definition>virtual Device::CHeap* Raven::Renderer::CGraphicsResource::GetMemoryHeap</definition>
        <argsstring>() const =0</argsstring>
        <name>GetMemoryHeap</name>
        <reimplementedby refid="class_raven_1_1_renderer_1_1_device_1_1_c_buffer_1a643a12a26824b44e17979b79a261433b">GetMemoryHeap</reimplementedby>
        <reimplementedby refid="class_raven_1_1_renderer_1_1_device_1_1_c_image_1a0f7d0293faae1ef329a772d55566b08f">GetMemoryHeap</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/GraphicsResource.hpp" line="36" column="23"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_graphics_resource_1a4fbbcd475f85203e5795c2dc09e7c1a1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="struct_raven_1_1_renderer_1_1_s_device_memory_allocation" kindref="compound">SDeviceMemoryAllocation</ref> &amp;</type>
        <definition>const SDeviceMemoryAllocation&amp; Raven::Renderer::CGraphicsResource::GetMemoryRange</definition>
        <argsstring>() const</argsstring>
        <name>GetMemoryRange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/GraphicsResource.hpp" line="30" column="38" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/GraphicsResource.hpp" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_graphics_resource_1a83631b17012e93f6e2f3024ac91e032d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64</type>
        <definition>uint64 Raven::Renderer::CGraphicsResource::GetSize</definition>
        <argsstring>() const</argsstring>
        <name>GetSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/GraphicsResource.hpp" line="31" column="15" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/GraphicsResource.hpp" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_graphics_resource_1a3ac1e707eb1da4fe422eb5621e107bf9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::Renderer::CGraphicsResource::CopyData</definition>
        <argsstring>(const void *pData, const uint64 size, const uint64 offset=0) const</argsstring>
        <name>CopyData</name>
        <param>
          <type>const void *</type>
          <declname>pData</declname>
        </param>
        <param>
          <type>const uint64</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint64</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/GraphicsResource.hpp" line="33" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_graphics_resource_1a170e80814d3155d096c2f4522404b5ea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::Renderer::CGraphicsResource::DownloadData</definition>
        <argsstring>(void *pDstMemory, const uint64 size, const uint64 offset=0) const</argsstring>
        <name>DownloadData</name>
        <param>
          <type>void *</type>
          <declname>pDstMemory</declname>
        </param>
        <param>
          <type>const uint64</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint64</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/GraphicsResource.hpp" line="34" column="7"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Raven::Renderer::CGraphicsResource</label>
        <link refid="class_raven_1_1_renderer_1_1_c_graphics_resource"/>
      </node>
      <node id="3">
        <label>Raven::Renderer::Device::CImage</label>
        <link refid="class_raven_1_1_renderer_1_1_device_1_1_c_image"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Raven::Renderer::Device::CBuffer</label>
        <link refid="class_raven_1_1_renderer_1_1_device_1_1_c_buffer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Raven::Renderer::SDeviceMemoryAllocation</label>
        <link refid="struct_raven_1_1_renderer_1_1_s_device_memory_allocation"/>
      </node>
      <node id="1">
        <label>Raven::Renderer::CGraphicsResource</label>
        <link refid="class_raven_1_1_renderer_1_1_c_graphics_resource"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_memoryAllocation</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/GraphicsResource.hpp" line="17" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/GraphicsResource.hpp" bodystart="18" bodyend="42"/>
    <listofallmembers>
      <member refid="class_raven_1_1_renderer_1_1_c_graphics_resource_1a296d53b814d749893e410c8bf58bcbbc" prot="protected" virt="pure-virtual"><scope>Raven::Renderer::CGraphicsResource</scope><name>BindMemory</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_graphics_resource_1a86088198d5aca84975f6e5690d01cd30" prot="protected" virt="non-virtual"><scope>Raven::Renderer::CGraphicsResource</scope><name>CGraphicsResource</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_graphics_resource_1a3ac1e707eb1da4fe422eb5621e107bf9" prot="public" virt="non-virtual"><scope>Raven::Renderer::CGraphicsResource</scope><name>CopyData</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_graphics_resource_1a170e80814d3155d096c2f4522404b5ea" prot="public" virt="non-virtual"><scope>Raven::Renderer::CGraphicsResource</scope><name>DownloadData</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_graphics_resource_1ac83c0cb648b94a1f670da209c9bc3496" prot="protected" virt="pure-virtual"><scope>Raven::Renderer::CGraphicsResource</scope><name>GetMemoryHeap</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_graphics_resource_1a4fbbcd475f85203e5795c2dc09e7c1a1" prot="public" virt="non-virtual"><scope>Raven::Renderer::CGraphicsResource</scope><name>GetMemoryRange</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_graphics_resource_1a83631b17012e93f6e2f3024ac91e032d" prot="public" virt="non-virtual"><scope>Raven::Renderer::CGraphicsResource</scope><name>GetSize</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_graphics_resource_1afb9c0f8599c2f49aa2f39aa89e3e2807" prot="protected" virt="non-virtual"><scope>Raven::Renderer::CGraphicsResource</scope><name>m_memoryAllocation</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_graphics_resource_1aebeecae3b61112801f5d55ee37337034" prot="protected" virt="non-virtual"><scope>Raven::Renderer::CGraphicsResource</scope><name>m_size</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_graphics_resource_1aa1ec955cdf85d1a4ba3f0803f53dd038" prot="protected" virt="pure-virtual"><scope>Raven::Renderer::CGraphicsResource</scope><name>Release</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_graphics_resource_1ae8fd674c2cd00171e236bc14aa54c9c2" prot="protected" virt="pure-virtual"><scope>Raven::Renderer::CGraphicsResource</scope><name>SetDebugName</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_graphics_resource_1ac9ca0f1977170ed23778990d0ef1194c" prot="protected" virt="virtual"><scope>Raven::Renderer::CGraphicsResource</scope><name>~CGraphicsResource</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_raven_1_1_renderer_1_1_c_f_g_node" kind="class" language="C++" prot="public">
    <compoundname>Raven::Renderer::CFGNode</compoundname>
    <derivedcompoundref refid="class_raven_1_1_renderer_1_1_t_f_g_lambda_node" prot="public" virt="non-virtual">Raven::Renderer::TFGLambdaNode&lt; FnT &gt;</derivedcompoundref>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a13c7be21e5d7e03be4423fe4af0bbd99" prot="private" static="no">
        <type>std::function&lt; void(CCommandList *)&gt;</type>
        <definition>using Raven::Renderer::CFGNode::BuildAndRecordFn =  std::function&lt;void(CCommandList*)&gt;</definition>
        <argsstring></argsstring>
        <name>BuildAndRecordFn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="221" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="221" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_c_f_g_node_1af5c244bb265f1563c9d5dfe73f635026" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend Raven::Renderer::CFGNode::CFrameGraph</definition>
        <argsstring></argsstring>
        <name>CFrameGraph</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="223" column="8" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_c_f_g_node_1aa84a91455b30b88b8476c733ba6c50e5" prot="private" static="no" mutable="no">
        <type><ref refid="class_raven_1_1_renderer_1_1_c_frame_graph" kindref="compound">CFrameGraph</ref> &amp;</type>
        <definition>CFrameGraph&amp; Raven::Renderer::CFGNode::m_frameGraph</definition>
        <argsstring></argsstring>
        <name>m_frameGraph</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="392" column="38" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_c_f_g_node_1aad83210e00fe616a4a6246bbd408d1ae" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_raven_1_1_renderer_1_1_s_accessed_texture_resource" kindref="compound">SAccessedTextureResource</ref> &gt;</type>
        <definition>std::vector&lt;SAccessedTextureResource&gt; Raven::Renderer::CFGNode::m_inputImages</definition>
        <argsstring></argsstring>
        <name>m_inputImages</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="393" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a473e46f8d7bad490f888e63e32523702" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_raven_1_1_renderer_1_1_s_accessed_texture_resource" kindref="compound">SAccessedTextureResource</ref> &gt;</type>
        <definition>std::vector&lt;SAccessedTextureResource&gt; Raven::Renderer::CFGNode::m_outputStorageImages</definition>
        <argsstring></argsstring>
        <name>m_outputStorageImages</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="394" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_c_f_g_node_1aa56cb97b33fd26379d41c5e56547cd9e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_raven_1_1_renderer_1_1_c_frame_graph_image" kindref="compound">CFrameGraphImage</ref> * &gt;</type>
        <definition>std::vector&lt;CFrameGraphImage*&gt; Raven::Renderer::CFGNode::m_outputImages</definition>
        <argsstring></argsstring>
        <name>m_outputImages</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="395" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a931e1790446624c56cbed59caf735b8c" prot="private" static="no" mutable="no">
        <type><ref refid="class_raven_1_1_renderer_1_1_c_frame_graph_image" kindref="compound">CFrameGraphImage</ref> *</type>
        <definition>CFrameGraphImage* Raven::Renderer::CFGNode::m_pDepthStencilOutput</definition>
        <argsstring></argsstring>
        <name>m_pDepthStencilOutput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="396" column="38" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a8eeec6863151605a67325012b35a62b1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_raven_1_1_renderer_1_1_s_accessed_buffer_resource" kindref="compound">SAccessedBufferResource</ref> &gt;</type>
        <definition>std::vector&lt;SAccessedBufferResource&gt; Raven::Renderer::CFGNode::m_constantBuffers</definition>
        <argsstring></argsstring>
        <name>m_constantBuffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="398" column="14" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a0e34770727eaf2d96154919c63ff436a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_raven_1_1_renderer_1_1_s_accessed_buffer_resource" kindref="compound">SAccessedBufferResource</ref> &gt;</type>
        <definition>std::vector&lt;SAccessedBufferResource&gt; Raven::Renderer::CFGNode::m_inputStorageBuffers</definition>
        <argsstring></argsstring>
        <name>m_inputStorageBuffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="399" column="14" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a82dce9be9feea1a48549874c2b12eccd" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_raven_1_1_renderer_1_1_s_accessed_buffer_resource" kindref="compound">SAccessedBufferResource</ref> &gt;</type>
        <definition>std::vector&lt;SAccessedBufferResource&gt; Raven::Renderer::CFGNode::m_outputBuffers</definition>
        <argsstring></argsstring>
        <name>m_outputBuffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="400" column="14" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="400" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a21fc84c96a9ca157cc5aba7f22680d05" prot="private" static="no" mutable="no">
        <type><ref refid="class_raven_1_1_renderer_1_1_c_frame_graph_buffer" kindref="compound">CFrameGraphBuffer</ref> *</type>
        <definition>CFrameGraphBuffer* Raven::Renderer::CFGNode::m_pIndirectCommandBuffer</definition>
        <argsstring></argsstring>
        <name>m_pIndirectCommandBuffer</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="401" column="24" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_c_f_g_node_1ad220dc9e9d9f1a08b480d97acd503505" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_raven_1_1_renderer_1_1_s_f_g_barrier" kindref="compound">SFGBarrier</ref> &gt;</type>
        <definition>std::vector&lt;SFGBarrier&gt; Raven::Renderer::CFGNode::m_inputBarriers</definition>
        <argsstring></argsstring>
        <name>m_inputBarriers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="403" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a545181248e79a9bfd3c5b54821eeb00f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_raven_1_1_renderer_1_1_s_f_g_barrier" kindref="compound">SFGBarrier</ref> &gt;</type>
        <definition>std::vector&lt;SFGBarrier&gt; Raven::Renderer::CFGNode::m_outputBarriers</definition>
        <argsstring></argsstring>
        <name>m_outputBarriers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="404" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="404" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_c_f_g_node_1ad49d89bb8b8f6b93558fb21f7b75903a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_raven_1_1_renderer_1_1_s_f_g_barrier" kindref="compound">SFGBarrier</ref> &gt;</type>
        <definition>std::vector&lt;SFGBarrier&gt; Raven::Renderer::CFGNode::m_fakeBarriers</definition>
        <argsstring></argsstring>
        <name>m_fakeBarriers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="407" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a909a2a2db582139ff819496471af014f" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Raven::Renderer::CFGNode::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="409" column="18" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_c_f_g_node_1aed60892498286d77049e6265896ad3f7" prot="private" static="no" mutable="no">
        <type><ref refid="class_raven_1_1_renderer_1_1_t_f_g_handle" kindref="compound">HFGNode</ref></type>
        <definition>HFGNode Raven::Renderer::CFGNode::m_hSelf</definition>
        <argsstring></argsstring>
        <name>m_hSelf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="410" column="18" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a58362c900ebb23e5a5688d974f177310" prot="private" static="no" mutable="no">
        <type>uint32</type>
        <definition>uint32 Raven::Renderer::CFGNode::m_index</definition>
        <argsstring></argsstring>
        <name>m_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="411" column="18" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="411" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a495d7bef60f4ae4d9a2268e60690f5aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Raven::Renderer::CFGNode::CFGNode</definition>
        <argsstring>(CFrameGraph &amp;graph, const std::string &amp;name)</argsstring>
        <name>CFGNode</name>
        <param>
          <type><ref refid="class_raven_1_1_renderer_1_1_c_frame_graph" kindref="compound">CFrameGraph</ref> &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="226" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="226" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a755ad1a1bb20b18e8f23f5c5bd5c0e7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Raven::Renderer::CFGNode::~CFGNode</definition>
        <argsstring>()=default</argsstring>
        <name>~CFGNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="229" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1afd2c7ab5cda7a7af8b71fd2c1f15d7e6" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_renderer_1_1_c_frame_graph_buffer" kindref="compound">CFrameGraphBuffer</ref> *</type>
        <definition>CFrameGraphBuffer* Raven::Renderer::CFGNode::GetIndirectCommandBuffer</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetIndirectCommandBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="231" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="231" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1aef90566a52613c701f16cab2e0316533" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="class_raven_1_1_renderer_1_1_c_frame_graph_buffer" kindref="compound">CFrameGraphBuffer</ref> *</type>
        <definition>const CFrameGraphBuffer* Raven::Renderer::CFGNode::GetIndirectCommandBuffer</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetIndirectCommandBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="234" column="26" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="234" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a5b207d40784ded8a2083ac1bfc226a75" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="struct_raven_1_1_renderer_1_1_s_accessed_buffer_resource" kindref="compound">SAccessedBufferResource</ref> &gt; &amp;</type>
        <definition>std::vector&lt;SAccessedBufferResource&gt;&amp; Raven::Renderer::CFGNode::GetOutputBuffers</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetOutputBuffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="238" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="238" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a04f82b8466fe8c977d79f21224b518ca" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="struct_raven_1_1_renderer_1_1_s_accessed_buffer_resource" kindref="compound">SAccessedBufferResource</ref> &gt; &amp;</type>
        <definition>std::vector&lt;SAccessedBufferResource&gt;&amp; Raven::Renderer::CFGNode::GetInputStorageBuffers</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetInputStorageBuffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="242" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="242" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a94d3b1206c3156eb58dd1550634a52db" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="struct_raven_1_1_renderer_1_1_s_accessed_buffer_resource" kindref="compound">SAccessedBufferResource</ref> &gt; &amp;</type>
        <definition>std::vector&lt;SAccessedBufferResource&gt;&amp; Raven::Renderer::CFGNode::GetConstantBuffers</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetConstantBuffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="246" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="246" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a405ab5a47f3ecd727558597ce8d36561" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="struct_raven_1_1_renderer_1_1_s_accessed_texture_resource" kindref="compound">SAccessedTextureResource</ref> &gt; &amp;</type>
        <definition>std::vector&lt;SAccessedTextureResource&gt;&amp; Raven::Renderer::CFGNode::GetInputImages</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetInputImages</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="250" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="250" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1af61d8c5403a30f55e0995cb1940c62ef" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="struct_raven_1_1_renderer_1_1_s_accessed_texture_resource" kindref="compound">SAccessedTextureResource</ref> &gt; &amp;</type>
        <definition>std::vector&lt;SAccessedTextureResource&gt;&amp; Raven::Renderer::CFGNode::GetOutputStorageImages</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetOutputStorageImages</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="254" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="254" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a8832591957d80eb9f3da5e09654ac9e1" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_raven_1_1_renderer_1_1_c_frame_graph_image" kindref="compound">CFrameGraphImage</ref> * &gt; &amp;</type>
        <definition>std::vector&lt;CFrameGraphImage*&gt;&amp; Raven::Renderer::CFGNode::GetOutputImages</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetOutputImages</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="258" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="258" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a28156bbb5b4e6fd81b9e8f70e38ea092" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_renderer_1_1_c_frame_graph_image" kindref="compound">CFrameGraphImage</ref> *</type>
        <definition>CFrameGraphImage* Raven::Renderer::CFGNode::GetDepthStencilOutput</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetDepthStencilOutput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="261" column="19" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="261" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a2c8e4a34236a72f7e3cd262905ae5ced" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="struct_raven_1_1_renderer_1_1_s_accessed_buffer_resource" kindref="compound">SAccessedBufferResource</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;SAccessedBufferResource&gt;&amp; Raven::Renderer::CFGNode::GetOutputBuffers</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetOutputBuffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="266" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="266" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a92d546732f60f77a37c31171f0c7d6de" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="struct_raven_1_1_renderer_1_1_s_accessed_buffer_resource" kindref="compound">SAccessedBufferResource</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;SAccessedBufferResource&gt;&amp; Raven::Renderer::CFGNode::GetInputStorageBuffers</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetInputStorageBuffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="270" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="270" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a6dfbf5a09f5b755f1849bce4128f34b3" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="struct_raven_1_1_renderer_1_1_s_accessed_buffer_resource" kindref="compound">SAccessedBufferResource</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;SAccessedBufferResource&gt;&amp; Raven::Renderer::CFGNode::GetConstantBuffers</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetConstantBuffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="274" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="274" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a9dbf5937a6cfe0dea605639e1c3bdf1b" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="struct_raven_1_1_renderer_1_1_s_accessed_texture_resource" kindref="compound">SAccessedTextureResource</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;SAccessedTextureResource&gt;&amp; Raven::Renderer::CFGNode::GetInputImages</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetInputImages</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="278" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="278" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1acc3839c71f967f29c00ec5996116613b" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="struct_raven_1_1_renderer_1_1_s_accessed_texture_resource" kindref="compound">SAccessedTextureResource</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;SAccessedTextureResource&gt;&amp; Raven::Renderer::CFGNode::GetOutputStorageImages</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetOutputStorageImages</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="282" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="282" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1ab8794f2d2530cb2ce705eb76dee149cb" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="class_raven_1_1_renderer_1_1_c_frame_graph_image" kindref="compound">CFrameGraphImage</ref> * &gt; &amp;</type>
        <definition>const std::vector&lt;CFrameGraphImage*&gt;&amp; Raven::Renderer::CFGNode::GetOutputImages</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetOutputImages</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="286" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="286" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1abb1dea9e44757bc4d0921252b7444a2a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="class_raven_1_1_renderer_1_1_c_frame_graph_image" kindref="compound">CFrameGraphImage</ref> *</type>
        <definition>const CFrameGraphImage* Raven::Renderer::CFGNode::GetDepthStencilOutput</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetDepthStencilOutput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="290" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="290" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a8e98c88045bc0e16c7ac2498129a4afa" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode&amp; Raven::Renderer::CFGNode::SetDepthStencilOutput</definition>
        <argsstring>(std::string_view name, const SImageDescription &amp;desc={}, const bool cond=true) noexcept</argsstring>
        <name>SetDepthStencilOutput</name>
        <param>
          <type>std::string_view</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_renderer_1_1_s_image_description" kindref="compound">SImageDescription</ref> &amp;</type>
          <declname>desc</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>cond</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="295" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1ad85aa0f6445021ca50befcc0aa80d45a" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode&amp; Raven::Renderer::CFGNode::AddOutput</definition>
        <argsstring>(const std::string_view name, const SImageDescription &amp;desc={}, const bool cond=true) noexcept</argsstring>
        <name>AddOutput</name>
        <param>
          <type>const std::string_view</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_renderer_1_1_s_image_description" kindref="compound">SImageDescription</ref> &amp;</type>
          <declname>desc</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>cond</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="298" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a491c8b103176e7e490c878958b862fa0" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode&amp; Raven::Renderer::CFGNode::AddStorageOutput</definition>
        <argsstring>(uint32 slot, uint32 arrayId, const std::string_view name, const SImageDescription &amp;desc={}, const bool cond=true) noexcept</argsstring>
        <name>AddStorageOutput</name>
        <param>
          <type>uint32</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>arrayId</declname>
        </param>
        <param>
          <type>const std::string_view</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_renderer_1_1_s_image_description" kindref="compound">SImageDescription</ref> &amp;</type>
          <declname>desc</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>cond</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="301" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1af368af0fdfdc9e2c09b1cebf3ae976c4" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode&amp; Raven::Renderer::CFGNode::SetTexture</definition>
        <argsstring>(uint32 slot, uint32 arrayId, const std::string_view name, const ESamplerType eSampler=ESamplerType::LinearClampEdge, bool cond=true) noexcept</argsstring>
        <name>SetTexture</name>
        <param>
          <type>uint32</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>arrayId</declname>
        </param>
        <param>
          <type>const std::string_view</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const ESamplerType</type>
          <declname>eSampler</declname>
          <defval>ESamplerType::LinearClampEdge</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>cond</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="306" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a0b85c443385f82b31f31f999da1622c2" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode&amp; Raven::Renderer::CFGNode::SetConstantBuffer</definition>
        <argsstring>(uint32 slot, uint32 arrayId, const std::string_view name) noexcept</argsstring>
        <name>SetConstantBuffer</name>
        <param>
          <type>uint32</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>arrayId</declname>
        </param>
        <param>
          <type>const std::string_view</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="310" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1abd7a20e72c8b33fa8279fb80f1571f4e" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode&amp; Raven::Renderer::CFGNode::SetInputStorageBuffer</definition>
        <argsstring>(uint32 slot, uint32 arrayId, const std::string_view name) noexcept</argsstring>
        <name>SetInputStorageBuffer</name>
        <param>
          <type>uint32</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>arrayId</declname>
        </param>
        <param>
          <type>const std::string_view</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="313" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a14092197994779b8b870fe2cc1392dc6" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode&amp; Raven::Renderer::CFGNode::SetOutputBuffer</definition>
        <argsstring>(uint32 slot, uint32 arrayId, const std::string_view name) noexcept</argsstring>
        <name>SetOutputBuffer</name>
        <param>
          <type>uint32</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>arrayId</declname>
        </param>
        <param>
          <type>const std::string_view</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="316" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a42e2b875d9b8af5c3d0a717e74e8657a" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode&amp; Raven::Renderer::CFGNode::SetIndirectCommandBuffer</definition>
        <argsstring>(const std::string_view name) noexcept</argsstring>
        <name>SetIndirectCommandBuffer</name>
        <param>
          <type>const std::string_view</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="319" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a2c013e70aa58100d06ba39d026ebed7a" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode&amp; Raven::Renderer::CFGNode::AddOutput</definition>
        <argsstring>(HFGImage hImage) noexcept</argsstring>
        <name>AddOutput</name>
        <param>
          <type><ref refid="class_raven_1_1_renderer_1_1_t_f_g_handle" kindref="compound">HFGImage</ref></type>
          <declname>hImage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="321" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a969ef1a0250e711aa1a4471288dcd054" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode&amp; Raven::Renderer::CFGNode::AddStorageOutput</definition>
        <argsstring>(uint32 slot, uint32 arrayId, HFGImage hImage) noexcept</argsstring>
        <name>AddStorageOutput</name>
        <param>
          <type>uint32</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>arrayId</declname>
        </param>
        <param>
          <type><ref refid="class_raven_1_1_renderer_1_1_t_f_g_handle" kindref="compound">HFGImage</ref></type>
          <declname>hImage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="323" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a2e4c5ebc997146fec81fce0a544c38e2" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode&amp; Raven::Renderer::CFGNode::SetTexture</definition>
        <argsstring>(uint32 slot, uint32 arrayId, HFGImage hImage, const ESamplerType eSampler=ESamplerType::LinearClampEdge) noexcept</argsstring>
        <name>SetTexture</name>
        <param>
          <type>uint32</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>arrayId</declname>
        </param>
        <param>
          <type><ref refid="class_raven_1_1_renderer_1_1_t_f_g_handle" kindref="compound">HFGImage</ref></type>
          <declname>hImage</declname>
        </param>
        <param>
          <type>const ESamplerType</type>
          <declname>eSampler</declname>
          <defval>ESamplerType::LinearClampEdge</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="326" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1aa84c2efaf2944eed16bce2a6e2ed2099" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; Raven::Renderer::CFGNode::GetName</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="331" column="27" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="331" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a8e9867f10c05fc00ba63f81089b95672" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode&amp; Raven::Renderer::CFGNode::SetDepthStencilOutput</definition>
        <argsstring>(THandle&lt; ImageView &gt; hView) noexcept</argsstring>
        <name>SetDepthStencilOutput</name>
        <param>
          <type><ref refid="struct_raven_1_1_t_handle" kindref="compound">THandle</ref>&lt; ImageView &gt;</type>
          <declname>hView</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TEMP API for migration/////////////////////// </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="337" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a534b13d6948965abfdf55d03257e7d64" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode&amp; Raven::Renderer::CFGNode::AddOutput</definition>
        <argsstring>(THandle&lt; ImageView &gt; hView) noexcept</argsstring>
        <name>AddOutput</name>
        <param>
          <type><ref refid="struct_raven_1_1_t_handle" kindref="compound">THandle</ref>&lt; ImageView &gt;</type>
          <declname>hView</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="338" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1ada3e09d0ec8bb7edf056d5e76cfe6186" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode&amp; Raven::Renderer::CFGNode::AddStorageOutput</definition>
        <argsstring>(uint32 slot, uint32 arrayId, THandle&lt; ImageView &gt; hView) noexcept</argsstring>
        <name>AddStorageOutput</name>
        <param>
          <type>uint32</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>arrayId</declname>
        </param>
        <param>
          <type><ref refid="struct_raven_1_1_t_handle" kindref="compound">THandle</ref>&lt; ImageView &gt;</type>
          <declname>hView</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="339" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1af69652b8aa084100918bdc416f248ab6" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode&amp; Raven::Renderer::CFGNode::SetTexture</definition>
        <argsstring>(uint32 slot, uint32 arrayId, THandle&lt; ImageView &gt; hView) noexcept</argsstring>
        <name>SetTexture</name>
        <param>
          <type>uint32</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>arrayId</declname>
        </param>
        <param>
          <type><ref refid="struct_raven_1_1_t_handle" kindref="compound">THandle</ref>&lt; ImageView &gt;</type>
          <declname>hView</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="341" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a5186cd166197b7d665ebdff9f2a57630" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode&amp; Raven::Renderer::CFGNode::SetConstantBuffer</definition>
        <argsstring>(uint32 slot, uint32 arrayId, THandle&lt; BufferView &gt; hBuffer) noexcept</argsstring>
        <name>SetConstantBuffer</name>
        <param>
          <type>uint32</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>arrayId</declname>
        </param>
        <param>
          <type><ref refid="struct_raven_1_1_t_handle" kindref="compound">THandle</ref>&lt; BufferView &gt;</type>
          <declname>hBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="344" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1af0da28ec77de797c1c92491b5631fbbc" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode&amp; Raven::Renderer::CFGNode::SetInputStorageBuffer</definition>
        <argsstring>(uint32 slot, uint32 arrayId, THandle&lt; BufferView &gt; hBuffer, bool cond=true) noexcept</argsstring>
        <name>SetInputStorageBuffer</name>
        <param>
          <type>uint32</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>arrayId</declname>
        </param>
        <param>
          <type><ref refid="struct_raven_1_1_t_handle" kindref="compound">THandle</ref>&lt; BufferView &gt;</type>
          <declname>hBuffer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>cond</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="347" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1aa482b12fe0c82c4f1dc2a3747e33d807" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode&amp; Raven::Renderer::CFGNode::SetOutputBuffer</definition>
        <argsstring>(uint32 slot, uint32 arrayId, THandle&lt; BufferView &gt; hBuffer, bool cond=true) noexcept</argsstring>
        <name>SetOutputBuffer</name>
        <param>
          <type>uint32</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>arrayId</declname>
        </param>
        <param>
          <type><ref refid="struct_raven_1_1_t_handle" kindref="compound">THandle</ref>&lt; BufferView &gt;</type>
          <declname>hBuffer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>cond</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="350" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a2c6893065f5d429c0386873063f8f32d" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_renderer_1_1_c_f_g_node" kindref="compound">CFGNode</ref> &amp;</type>
        <definition>CFGNode&amp; Raven::Renderer::CFGNode::SetIndirectCommandBuffer</definition>
        <argsstring>(THandle&lt; BufferView &gt; hBuffer) noexcept</argsstring>
        <name>SetIndirectCommandBuffer</name>
        <param>
          <type><ref refid="struct_raven_1_1_t_handle" kindref="compound">THandle</ref>&lt; BufferView &gt;</type>
          <declname>hBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="353" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a25cb8b3c8a66db2ad419445b1abb86cb" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>uint32</type>
        <definition>uint32 Raven::Renderer::CFGNode::GetPassIndex</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetPassIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="356" column="16" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="356" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a77655b18317193d2ce08031e028bc287" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::Renderer::CFGNode::SetPassIndex</definition>
        <argsstring>(uint32 index) noexcept</argsstring>
        <name>SetPassIndex</name>
        <param>
          <type>uint32</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="359" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="359" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a65e1bc075bf733248a1263fb1d87fe8c" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_renderer_1_1_t_f_g_handle" kindref="compound">HFGNode</ref></type>
        <definition>HFGNode Raven::Renderer::CFGNode::GetSelf</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetSelf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="361" column="17" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="361" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a04ad7bb4d0ed4dec0556ae1a5922a73a" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::span&lt; <ref refid="struct_raven_1_1_renderer_1_1_s_f_g_barrier" kindref="compound">SFGBarrier</ref> &gt;</type>
        <definition>std::span&lt;SFGBarrier&gt; Raven::Renderer::CFGNode::GetInputBarriers</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetInputBarriers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="365" column="19" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="365" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a7481a9b98cbbfbb302fd73ef6f5d06c7" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::span&lt; <ref refid="struct_raven_1_1_renderer_1_1_s_f_g_barrier" kindref="compound">SFGBarrier</ref> &gt;</type>
        <definition>std::span&lt;SFGBarrier&gt; Raven::Renderer::CFGNode::GetOutputBarriers</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetOutputBarriers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="369" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="369" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a7cc0a1f3457fafa40f682b02f40f5444" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::span&lt; <ref refid="struct_raven_1_1_renderer_1_1_s_f_g_barrier" kindref="compound">SFGBarrier</ref> &gt;</type>
        <definition>std::span&lt;SFGBarrier&gt; Raven::Renderer::CFGNode::GetFakeBarriers</definition>
        <argsstring>() noexcept</argsstring>
        <name>GetFakeBarriers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="372" column="19" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="372" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a700f9a930e55720ccd2ebdd3d340ef5e" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::Renderer::CFGNode::AddInputBarrier</definition>
        <argsstring>(const SFGBarrier &amp;barrier) noexcept</argsstring>
        <name>AddInputBarrier</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_renderer_1_1_s_f_g_barrier" kindref="compound">SFGBarrier</ref> &amp;</type>
          <declname>barrier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="376" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="376" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1ab42eb5d0674b4c216fb0c64f1613d45a" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::Renderer::CFGNode::AddOutputBarrier</definition>
        <argsstring>(const SFGBarrier &amp;barrier) noexcept</argsstring>
        <name>AddOutputBarrier</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_renderer_1_1_s_f_g_barrier" kindref="compound">SFGBarrier</ref> &amp;</type>
          <declname>barrier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="379" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="379" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1ae20ef2ffdd0e22bd3d41d660189d8286" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::Renderer::CFGNode::AddFakeBarrier</definition>
        <argsstring>(const SFGBarrier &amp;barrier) noexcept</argsstring>
        <name>AddFakeBarrier</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_renderer_1_1_s_f_g_barrier" kindref="compound">SFGBarrier</ref> &amp;</type>
          <declname>barrier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="382" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="382" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1a6d4045bba95cd0ab170815fa70b22eac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Raven::Renderer::CFGNode::Execute</definition>
        <argsstring>(CCommandList *pCmd)</argsstring>
        <name>Execute</name>
        <reimplementedby refid="class_raven_1_1_renderer_1_1_t_f_g_lambda_node_1a98c03ae0e35f45385b120ae16fa573c5">Execute</reimplementedby>
        <param>
          <type>CCommandList *</type>
          <declname>pCmd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="386" column="14" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="386" bodyend="386"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_f_g_node_1aba6e0f9134a35f6361eccf391862a716" prot="private" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::Renderer::CFGNode::SetSelf</definition>
        <argsstring>(HFGNode hPass) noexcept</argsstring>
        <name>SetSelf</name>
        <param>
          <type><ref refid="class_raven_1_1_renderer_1_1_t_f_g_handle" kindref="compound">HFGNode</ref></type>
          <declname>hPass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="389" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="389" bodyend="389"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Raven::Renderer::TFGLambdaNode&lt; FnT &gt;</label>
        <link refid="class_raven_1_1_renderer_1_1_t_f_g_lambda_node"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Raven::Renderer::CFGNode</label>
        <link refid="class_raven_1_1_renderer_1_1_c_f_g_node"/>
      </node>
    </inheritancegraph>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" line="220" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/FrameGraph.hpp" bodystart="220" bodyend="412"/>
    <listofallmembers>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1ae20ef2ffdd0e22bd3d41d660189d8286" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>AddFakeBarrier</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a700f9a930e55720ccd2ebdd3d340ef5e" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>AddInputBarrier</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1ad85aa0f6445021ca50befcc0aa80d45a" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>AddOutput</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a2c013e70aa58100d06ba39d026ebed7a" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>AddOutput</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a534b13d6948965abfdf55d03257e7d64" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>AddOutput</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1ab42eb5d0674b4c216fb0c64f1613d45a" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>AddOutputBarrier</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a491c8b103176e7e490c878958b862fa0" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>AddStorageOutput</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a969ef1a0250e711aa1a4471288dcd054" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>AddStorageOutput</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1ada3e09d0ec8bb7edf056d5e76cfe6186" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>AddStorageOutput</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a13c7be21e5d7e03be4423fe4af0bbd99" prot="private" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>BuildAndRecordFn</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a495d7bef60f4ae4d9a2268e60690f5aa" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>CFGNode</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1af5c244bb265f1563c9d5dfe73f635026" prot="private" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>CFrameGraph</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a6d4045bba95cd0ab170815fa70b22eac" prot="public" virt="virtual"><scope>Raven::Renderer::CFGNode</scope><name>Execute</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a94d3b1206c3156eb58dd1550634a52db" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>GetConstantBuffers</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a6dfbf5a09f5b755f1849bce4128f34b3" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>GetConstantBuffers</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a28156bbb5b4e6fd81b9e8f70e38ea092" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>GetDepthStencilOutput</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1abb1dea9e44757bc4d0921252b7444a2a" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>GetDepthStencilOutput</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a7cc0a1f3457fafa40f682b02f40f5444" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>GetFakeBarriers</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1afd2c7ab5cda7a7af8b71fd2c1f15d7e6" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>GetIndirectCommandBuffer</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1aef90566a52613c701f16cab2e0316533" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>GetIndirectCommandBuffer</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a04ad7bb4d0ed4dec0556ae1a5922a73a" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>GetInputBarriers</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a405ab5a47f3ecd727558597ce8d36561" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>GetInputImages</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a9dbf5937a6cfe0dea605639e1c3bdf1b" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>GetInputImages</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a04f82b8466fe8c977d79f21224b518ca" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>GetInputStorageBuffers</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a92d546732f60f77a37c31171f0c7d6de" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>GetInputStorageBuffers</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1aa84c2efaf2944eed16bce2a6e2ed2099" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>GetName</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a7481a9b98cbbfbb302fd73ef6f5d06c7" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>GetOutputBarriers</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a5b207d40784ded8a2083ac1bfc226a75" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>GetOutputBuffers</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a2c8e4a34236a72f7e3cd262905ae5ced" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>GetOutputBuffers</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a8832591957d80eb9f3da5e09654ac9e1" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>GetOutputImages</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1ab8794f2d2530cb2ce705eb76dee149cb" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>GetOutputImages</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1af61d8c5403a30f55e0995cb1940c62ef" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>GetOutputStorageImages</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1acc3839c71f967f29c00ec5996116613b" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>GetOutputStorageImages</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a25cb8b3c8a66db2ad419445b1abb86cb" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>GetPassIndex</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a65e1bc075bf733248a1263fb1d87fe8c" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>GetSelf</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a8eeec6863151605a67325012b35a62b1" prot="private" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>m_constantBuffers</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1ad49d89bb8b8f6b93558fb21f7b75903a" prot="private" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>m_fakeBarriers</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1aa84a91455b30b88b8476c733ba6c50e5" prot="private" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>m_frameGraph</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1aed60892498286d77049e6265896ad3f7" prot="private" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>m_hSelf</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a58362c900ebb23e5a5688d974f177310" prot="private" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>m_index</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1ad220dc9e9d9f1a08b480d97acd503505" prot="private" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>m_inputBarriers</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1aad83210e00fe616a4a6246bbd408d1ae" prot="private" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>m_inputImages</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a0e34770727eaf2d96154919c63ff436a" prot="private" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>m_inputStorageBuffers</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a909a2a2db582139ff819496471af014f" prot="private" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>m_name</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a545181248e79a9bfd3c5b54821eeb00f" prot="private" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>m_outputBarriers</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a82dce9be9feea1a48549874c2b12eccd" prot="private" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>m_outputBuffers</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1aa56cb97b33fd26379d41c5e56547cd9e" prot="private" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>m_outputImages</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a473e46f8d7bad490f888e63e32523702" prot="private" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>m_outputStorageImages</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a931e1790446624c56cbed59caf735b8c" prot="private" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>m_pDepthStencilOutput</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a21fc84c96a9ca157cc5aba7f22680d05" prot="private" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>m_pIndirectCommandBuffer</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a0b85c443385f82b31f31f999da1622c2" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>SetConstantBuffer</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a5186cd166197b7d665ebdff9f2a57630" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>SetConstantBuffer</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a8e98c88045bc0e16c7ac2498129a4afa" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>SetDepthStencilOutput</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a8e9867f10c05fc00ba63f81089b95672" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>SetDepthStencilOutput</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a42e2b875d9b8af5c3d0a717e74e8657a" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>SetIndirectCommandBuffer</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a2c6893065f5d429c0386873063f8f32d" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>SetIndirectCommandBuffer</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1abd7a20e72c8b33fa8279fb80f1571f4e" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>SetInputStorageBuffer</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1af0da28ec77de797c1c92491b5631fbbc" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>SetInputStorageBuffer</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a14092197994779b8b870fe2cc1392dc6" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>SetOutputBuffer</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1aa482b12fe0c82c4f1dc2a3747e33d807" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>SetOutputBuffer</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a77655b18317193d2ce08031e028bc287" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>SetPassIndex</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1aba6e0f9134a35f6361eccf391862a716" prot="private" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>SetSelf</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1af368af0fdfdc9e2c09b1cebf3ae976c4" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>SetTexture</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a2e4c5ebc997146fec81fce0a544c38e2" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>SetTexture</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1af69652b8aa084100918bdc416f248ab6" prot="public" virt="non-virtual"><scope>Raven::Renderer::CFGNode</scope><name>SetTexture</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_f_g_node_1a755ad1a1bb20b18e8f23f5c5bd5c0e7d" prot="public" virt="virtual"><scope>Raven::Renderer::CFGNode</scope><name>~CFGNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

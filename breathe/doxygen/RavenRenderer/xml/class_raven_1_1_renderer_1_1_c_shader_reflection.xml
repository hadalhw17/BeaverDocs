<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_raven_1_1_renderer_1_1_c_shader_reflection" kind="class" language="C++" prot="public">
    <compoundname>Raven::Renderer::CShaderReflection</compoundname>
    <innerclass refid="struct_raven_1_1_renderer_1_1_c_shader_reflection_1_1_s_shader_param" prot="public">Raven::Renderer::CShaderReflection::SShaderParam</innerclass>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1af46f4753eaa6ecab1986f182f0c7d27c" prot="private" static="no">
        <type>spirv_cross::Resource</type>
        <definition>using Raven::Renderer::CShaderReflection::ShaderResourceT =  spirv_cross::Resource</definition>
        <argsstring></argsstring>
        <name>ShaderResourceT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" line="24" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1ae6d126f3d08f2a73ce0ff407ebf85205" prot="private" static="no">
        <type>spirv_cross::SmallVector&lt; ShaderResourceT &gt;</type>
        <definition>using Raven::Renderer::CShaderReflection::ShaderResourceContainer =  spirv_cross::SmallVector&lt;ShaderResourceT&gt;</definition>
        <argsstring></argsstring>
        <name>ShaderResourceContainer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" line="25" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1ace38fa989eb716f4fe27f510e0512f53" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; spirv_cross::CompilerReflection &gt;</type>
        <definition>std::unique_ptr&lt;spirv_cross::CompilerReflection&gt; Raven::Renderer::CShaderReflection::m_pReflection</definition>
        <argsstring></argsstring>
        <name>m_pReflection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" line="66" column="17" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1a72daa9ed5389fefe40b93fd789ec1e66" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; spirv_cross::ShaderResources &gt;</type>
        <definition>std::unique_ptr&lt;spirv_cross::ShaderResources&gt; Raven::Renderer::CShaderReflection::m_pResources</definition>
        <argsstring></argsstring>
        <name>m_pResources</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" line="67" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1ac2a331c719a7980b669148565efbc7ad" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Raven::Renderer::CShaderReflection::m_entryPoint</definition>
        <argsstring></argsstring>
        <name>m_entryPoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" line="69" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1a50830ca5004114e9035a91650de83b1a" prot="private" static="no" mutable="no">
        <type>EShaderType</type>
        <definition>EShaderType Raven::Renderer::CShaderReflection::m_eShaderType</definition>
        <argsstring></argsstring>
        <name>m_eShaderType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" line="70" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1a30697f33c61b4bf2c6ff598a311e3408" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Raven::Renderer::CShaderReflection::CShaderReflection</definition>
        <argsstring>(ShaderBlobT blob, EShaderType eType) noexcept</argsstring>
        <name>CShaderReflection</name>
        <param>
          <type>ShaderBlobT</type>
          <declname>blob</declname>
        </param>
        <param>
          <type>EShaderType</type>
          <declname>eType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1a3a6f7c9b9ff013ab575bd600969cd2e0" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::Renderer::CShaderReflection::BuildPipelineLayout</definition>
        <argsstring>(std::unordered_map&lt; uint32, SDescriptorSetLayout &gt; &amp;layout) const noexcept</argsstring>
        <name>BuildPipelineLayout</name>
        <param>
          <type>std::unordered_map&lt; uint32, <ref refid="struct_raven_1_1_renderer_1_1_s_descriptor_set_layout" kindref="compound">SDescriptorSetLayout</ref> &gt; &amp;</type>
          <declname>layout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" line="37" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1ae57f6a782fe372f8baa55b5187a954d5" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::Renderer::CShaderReflection::BuldVertexStreamSet</definition>
        <argsstring>(std::vector&lt; EVertexAttribute &gt; &amp;streams) const noexcept</argsstring>
        <name>BuldVertexStreamSet</name>
        <param>
          <type>std::vector&lt; EVertexAttribute &gt; &amp;</type>
          <declname>streams</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" line="38" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1a435d8baccf67a804f470b703a1f4c649" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::Renderer::CShaderReflection::ReflectInputLayout</definition>
        <argsstring>(std::vector&lt; std::pair&lt; HashedString, uint32 &gt;&gt; &amp;semantics) const noexcept</argsstring>
        <name>ReflectInputLayout</name>
        <param>
          <type>std::vector&lt; std::pair&lt; HashedString, uint32 &gt;&gt; &amp;</type>
          <declname>semantics</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" line="39" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1aed26d8f26f54b5f2c20f47ecf7c0a88e" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_renderer_1_1_s_push_constant_range" kindref="compound">SPushConstantRange</ref></type>
        <definition>SPushConstantRange Raven::Renderer::CShaderReflection::BuildPushConstantBlock</definition>
        <argsstring>(std::unordered_set&lt; SPushConstantDesc, SPushConstantDesc::SHash &gt; &amp;pushConstant) const noexcept</argsstring>
        <name>BuildPushConstantBlock</name>
        <param>
          <type>std::unordered_set&lt; SPushConstantDesc, SPushConstantDesc::SHash &gt; &amp;</type>
          <declname>pushConstant</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" line="40" column="20"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1a128fbcbb463b2b78d43e66ae30157a61" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::Renderer::CShaderReflection::HasBufferWithName</definition>
        <argsstring>(const char *pName) const noexcept</argsstring>
        <name>HasBufferWithName</name>
        <param>
          <type>const char *</type>
          <declname>pName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" line="42" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1afd193684811bd710ee357f3307126bce" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::Renderer::CShaderReflection::HasTextureWithName</definition>
        <argsstring>(const char *pName) const noexcept</argsstring>
        <name>HasTextureWithName</name>
        <param>
          <type>const char *</type>
          <declname>pName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" line="43" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1a72dd2200a3732afe8cc8c5637b921f8b" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::Renderer::CShaderReflection::HasStreamWithName</definition>
        <argsstring>(const char *pName) const noexcept</argsstring>
        <name>HasStreamWithName</name>
        <param>
          <type>const char *</type>
          <declname>pName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" line="44" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1aacfeacd944173a33ea38d23beab119cb" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>EShaderType</type>
        <definition>EShaderType Raven::Renderer::CShaderReflection::GetShaderStage</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetShaderStage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" line="46" column="21" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1ac18872b4183b190c572153a61f0be4f4" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; Raven::Renderer::CShaderReflection::GetEntryPoint</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetEntryPoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" line="47" column="27" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1add9baca2e579f8a73f3b7f8ecb42403d" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::Renderer::CShaderReflection::CollectResourceMembers</definition>
        <argsstring>(const ShaderResourceT &amp;res, std::vector&lt; SShaderParam &gt; &amp;params) noexcept</argsstring>
        <name>CollectResourceMembers</name>
        <param>
          <type>const ShaderResourceT &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="struct_raven_1_1_renderer_1_1_c_shader_reflection_1_1_s_shader_param" kindref="compound">SShaderParam</ref> &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" line="49" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1a1482f20a5a0956cf4aeddd26a543584a" prot="private" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::Renderer::CShaderReflection::CountResourceArray</definition>
        <argsstring>(std::unordered_set&lt; uint32 &gt; &amp;bins, const ShaderResourceContainer &amp;resourceArray) const noexcept</argsstring>
        <name>CountResourceArray</name>
        <param>
          <type>std::unordered_set&lt; uint32 &gt; &amp;</type>
          <declname>bins</declname>
        </param>
        <param>
          <type>const ShaderResourceContainer &amp;</type>
          <declname>resourceArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" line="52" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1a8d0e052a6a19accab263bd5e67ff7265" prot="private" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>uint32</type>
        <definition>uint32 Raven::Renderer::CShaderReflection::CountDescriptors</definition>
        <argsstring>() const noexcept</argsstring>
        <name>CountDescriptors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" line="53" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1a692da679e7c3db9c34397012386b698f" prot="private" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Raven::Renderer::CShaderReflection::GetIdxFromStage</definition>
        <argsstring>(EShaderType eType) const noexcept</argsstring>
        <name>GetIdxFromStage</name>
        <param>
          <type>EShaderType</type>
          <declname>eType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" line="55" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1a12ce7c513b710f9e534d7d61c47b1bf6" prot="private" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>EShaderType</type>
        <definition>EShaderType Raven::Renderer::CShaderReflection::GetShaderStageImpl</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetShaderStageImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" line="56" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1a75cdfaf6e3fa971318cad56ec79b37b9" prot="private" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Raven::Renderer::CShaderReflection::GetEntryPointImpl</definition>
        <argsstring>(EShaderType eType) const noexcept</argsstring>
        <name>GetEntryPointImpl</name>
        <param>
          <type>EShaderType</type>
          <declname>eType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" line="57" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1afc7bc0e21f7a284d4a1eb939db9acfca" prot="private" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; Raven::Renderer::CShaderReflection::GetResourceName</definition>
        <argsstring>(const ShaderResourceT &amp;res) const noexcept</argsstring>
        <name>GetResourceName</name>
        <param>
          <type>const ShaderResourceT &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" line="58" column="20"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1a153524557445ac6002c51d1591b16f39" prot="private" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_renderer_1_1_c_shader_reflection_1_1_s_shader_param" kindref="compound">SShaderParam</ref></type>
        <definition>SShaderParam Raven::Renderer::CShaderReflection::GetResourceMemberInfo</definition>
        <argsstring>(const ShaderResourceT &amp;res, const uint32 memberIdx) const noexcept</argsstring>
        <name>GetResourceMemberInfo</name>
        <param>
          <type>const ShaderResourceT &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type>const uint32</type>
          <declname>memberIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" line="59" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1acd2acf75e78c8c3572228f4b798e2f59" prot="private" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>bForceLower</declname>
            <defname>bForceLower</defname>
            <defval>false</defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Raven::Renderer::CShaderReflection::HasResourceWithName</definition>
        <argsstring>(const char *pName, const ShaderResourceContainer &amp;resourceArray) const noexcept</argsstring>
        <name>HasResourceWithName</name>
        <param>
          <type>const char *</type>
          <declname>pName</declname>
        </param>
        <param>
          <type>const ShaderResourceContainer &amp;</type>
          <declname>resourceArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" line="62" column="7"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" line="22" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Shaders/Reflection.hpp" bodystart="23" bodyend="72"/>
    <listofallmembers>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1a3a6f7c9b9ff013ab575bd600969cd2e0" prot="public" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>BuildPipelineLayout</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1aed26d8f26f54b5f2c20f47ecf7c0a88e" prot="public" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>BuildPushConstantBlock</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1ae57f6a782fe372f8baa55b5187a954d5" prot="public" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>BuldVertexStreamSet</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1add9baca2e579f8a73f3b7f8ecb42403d" prot="public" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>CollectResourceMembers</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1a8d0e052a6a19accab263bd5e67ff7265" prot="private" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>CountDescriptors</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1a1482f20a5a0956cf4aeddd26a543584a" prot="private" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>CountResourceArray</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1a30697f33c61b4bf2c6ff598a311e3408" prot="public" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>CShaderReflection</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1ac18872b4183b190c572153a61f0be4f4" prot="public" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>GetEntryPoint</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1a75cdfaf6e3fa971318cad56ec79b37b9" prot="private" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>GetEntryPointImpl</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1a692da679e7c3db9c34397012386b698f" prot="private" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>GetIdxFromStage</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1a153524557445ac6002c51d1591b16f39" prot="private" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>GetResourceMemberInfo</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1afc7bc0e21f7a284d4a1eb939db9acfca" prot="private" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>GetResourceName</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1aacfeacd944173a33ea38d23beab119cb" prot="public" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>GetShaderStage</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1a12ce7c513b710f9e534d7d61c47b1bf6" prot="private" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>GetShaderStageImpl</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1a128fbcbb463b2b78d43e66ae30157a61" prot="public" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>HasBufferWithName</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1acd2acf75e78c8c3572228f4b798e2f59" prot="private" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>HasResourceWithName</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1a72dd2200a3732afe8cc8c5637b921f8b" prot="public" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>HasStreamWithName</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1afd193684811bd710ee357f3307126bce" prot="public" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>HasTextureWithName</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1ac2a331c719a7980b669148565efbc7ad" prot="private" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>m_entryPoint</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1a50830ca5004114e9035a91650de83b1a" prot="private" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>m_eShaderType</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1ace38fa989eb716f4fe27f510e0512f53" prot="private" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>m_pReflection</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1a72daa9ed5389fefe40b93fd789ec1e66" prot="private" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>m_pResources</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1a435d8baccf67a804f470b703a1f4c649" prot="public" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>ReflectInputLayout</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1ae6d126f3d08f2a73ce0ff407ebf85205" prot="private" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>ShaderResourceContainer</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1af46f4753eaa6ecab1986f182f0c7d27c" prot="private" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>ShaderResourceT</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

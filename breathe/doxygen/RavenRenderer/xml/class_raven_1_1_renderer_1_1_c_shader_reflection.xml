<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_raven_1_1_renderer_1_1_c_shader_reflection" kind="class" language="C++" prot="public">
    <compoundname>Raven::Renderer::CShaderReflection</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1a8b7e1ecf0275e206316a4412f8881428" prot="private" static="no" mutable="no">
        <type>Impl *</type>
        <definition>Impl* Raven::Renderer::CShaderReflection::m_pImpl</definition>
        <argsstring></argsstring>
        <name>m_pImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/Shaders/Reflection.hpp" line="36" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/Shaders/Reflection.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1ac2a331c719a7980b669148565efbc7ad" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Raven::Renderer::CShaderReflection::m_entryPoint</definition>
        <argsstring></argsstring>
        <name>m_entryPoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/Shaders/Reflection.hpp" line="38" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/Shaders/Reflection.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1a50830ca5004114e9035a91650de83b1a" prot="private" static="no" mutable="no">
        <type>EShaderType</type>
        <definition>EShaderType Raven::Renderer::CShaderReflection::m_eShaderType</definition>
        <argsstring></argsstring>
        <name>m_eShaderType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/Shaders/Reflection.hpp" line="39" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/Shaders/Reflection.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1a3a0308b085998967b16061d447b0bf76" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Raven::Renderer::CShaderReflection::CShaderReflection</definition>
        <argsstring>(const ShaderBlobT &amp;blob, EShaderType eType) noexcept</argsstring>
        <name>CShaderReflection</name>
        <param>
          <type>const ShaderBlobT &amp;</type>
          <declname>blob</declname>
        </param>
        <param>
          <type>EShaderType</type>
          <declname>eType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/Shaders/Reflection.hpp" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1aefc6643c8a0ae5fefd73fdd9576333e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Raven::Renderer::CShaderReflection::~CShaderReflection</definition>
        <argsstring>()</argsstring>
        <name>~CShaderReflection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/Shaders/Reflection.hpp" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1a8f7e5b9c9cbe04fcbbd4df89c642ba8f" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::Renderer::CShaderReflection::BuildPipelineLayout</definition>
        <argsstring>(std::map&lt; uint32, SDescriptorSetLayout &gt; &amp;layout) const noexcept</argsstring>
        <name>BuildPipelineLayout</name>
        <param>
          <type>std::map&lt; uint32, <ref refid="struct_raven_1_1_renderer_1_1_s_descriptor_set_layout" kindref="compound">SDescriptorSetLayout</ref> &gt; &amp;</type>
          <declname>layout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/Shaders/Reflection.hpp" line="15" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1ae57f6a782fe372f8baa55b5187a954d5" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::Renderer::CShaderReflection::BuldVertexStreamSet</definition>
        <argsstring>(std::vector&lt; EVertexAttribute &gt; &amp;streams) const noexcept</argsstring>
        <name>BuldVertexStreamSet</name>
        <param>
          <type>std::vector&lt; EVertexAttribute &gt; &amp;</type>
          <declname>streams</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/Shaders/Reflection.hpp" line="16" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1a435d8baccf67a804f470b703a1f4c649" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::Renderer::CShaderReflection::ReflectInputLayout</definition>
        <argsstring>(std::vector&lt; std::pair&lt; HashedString, uint32 &gt;&gt; &amp;semantics) const noexcept</argsstring>
        <name>ReflectInputLayout</name>
        <param>
          <type>std::vector&lt; std::pair&lt; HashedString, uint32 &gt;&gt; &amp;</type>
          <declname>semantics</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/Shaders/Reflection.hpp" line="17" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1aed26d8f26f54b5f2c20f47ecf7c0a88e" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_renderer_1_1_s_push_constant_range" kindref="compound">SPushConstantRange</ref></type>
        <definition>SPushConstantRange Raven::Renderer::CShaderReflection::BuildPushConstantBlock</definition>
        <argsstring>(std::unordered_set&lt; SPushConstantDesc, SPushConstantDesc::SHash &gt; &amp;pushConstant) const noexcept</argsstring>
        <name>BuildPushConstantBlock</name>
        <param>
          <type>std::unordered_set&lt; SPushConstantDesc, SPushConstantDesc::SHash &gt; &amp;</type>
          <declname>pushConstant</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/Shaders/Reflection.hpp" line="18" column="20"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1a128fbcbb463b2b78d43e66ae30157a61" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::Renderer::CShaderReflection::HasBufferWithName</definition>
        <argsstring>(const char *pName) const noexcept</argsstring>
        <name>HasBufferWithName</name>
        <param>
          <type>const char *</type>
          <declname>pName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/Shaders/Reflection.hpp" line="20" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1afd193684811bd710ee357f3307126bce" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::Renderer::CShaderReflection::HasTextureWithName</definition>
        <argsstring>(const char *pName) const noexcept</argsstring>
        <name>HasTextureWithName</name>
        <param>
          <type>const char *</type>
          <declname>pName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/Shaders/Reflection.hpp" line="21" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1a72dd2200a3732afe8cc8c5637b921f8b" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::Renderer::CShaderReflection::HasStreamWithName</definition>
        <argsstring>(const char *pName) const noexcept</argsstring>
        <name>HasStreamWithName</name>
        <param>
          <type>const char *</type>
          <declname>pName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/Shaders/Reflection.hpp" line="22" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1aacfeacd944173a33ea38d23beab119cb" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>EShaderType</type>
        <definition>EShaderType Raven::Renderer::CShaderReflection::GetShaderStage</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetShaderStage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/Shaders/Reflection.hpp" line="24" column="21" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/Shaders/Reflection.hpp" bodystart="24" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1ac18872b4183b190c572153a61f0be4f4" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; Raven::Renderer::CShaderReflection::GetEntryPoint</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetEntryPoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/Shaders/Reflection.hpp" line="25" column="27" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/Shaders/Reflection.hpp" bodystart="25" bodyend="25"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1a8d0e052a6a19accab263bd5e67ff7265" prot="private" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>uint32</type>
        <definition>uint32 Raven::Renderer::CShaderReflection::CountDescriptors</definition>
        <argsstring>() const noexcept</argsstring>
        <name>CountDescriptors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/Shaders/Reflection.hpp" line="28" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1a692da679e7c3db9c34397012386b698f" prot="private" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Raven::Renderer::CShaderReflection::GetIdxFromStage</definition>
        <argsstring>(EShaderType eType) const noexcept</argsstring>
        <name>GetIdxFromStage</name>
        <param>
          <type>EShaderType</type>
          <declname>eType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/Shaders/Reflection.hpp" line="30" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1a12ce7c513b710f9e534d7d61c47b1bf6" prot="private" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>EShaderType</type>
        <definition>EShaderType Raven::Renderer::CShaderReflection::GetShaderStageImpl</definition>
        <argsstring>() const noexcept</argsstring>
        <name>GetShaderStageImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/Shaders/Reflection.hpp" line="31" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_shader_reflection_1a75cdfaf6e3fa971318cad56ec79b37b9" prot="private" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Raven::Renderer::CShaderReflection::GetEntryPointImpl</definition>
        <argsstring>(EShaderType eType) const noexcept</argsstring>
        <name>GetEntryPointImpl</name>
        <param>
          <type>EShaderType</type>
          <declname>eType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/Shaders/Reflection.hpp" line="32" column="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/Shaders/Reflection.hpp" line="10" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/Shaders/Reflection.hpp" bodystart="10" bodyend="41"/>
    <listofallmembers>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1a8f7e5b9c9cbe04fcbbd4df89c642ba8f" prot="public" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>BuildPipelineLayout</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1aed26d8f26f54b5f2c20f47ecf7c0a88e" prot="public" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>BuildPushConstantBlock</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1ae57f6a782fe372f8baa55b5187a954d5" prot="public" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>BuldVertexStreamSet</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1a8d0e052a6a19accab263bd5e67ff7265" prot="private" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>CountDescriptors</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1a3a0308b085998967b16061d447b0bf76" prot="public" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>CShaderReflection</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1ac18872b4183b190c572153a61f0be4f4" prot="public" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>GetEntryPoint</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1a75cdfaf6e3fa971318cad56ec79b37b9" prot="private" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>GetEntryPointImpl</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1a692da679e7c3db9c34397012386b698f" prot="private" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>GetIdxFromStage</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1aacfeacd944173a33ea38d23beab119cb" prot="public" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>GetShaderStage</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1a12ce7c513b710f9e534d7d61c47b1bf6" prot="private" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>GetShaderStageImpl</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1a128fbcbb463b2b78d43e66ae30157a61" prot="public" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>HasBufferWithName</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1a72dd2200a3732afe8cc8c5637b921f8b" prot="public" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>HasStreamWithName</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1afd193684811bd710ee357f3307126bce" prot="public" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>HasTextureWithName</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1ac2a331c719a7980b669148565efbc7ad" prot="private" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>m_entryPoint</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1a50830ca5004114e9035a91650de83b1a" prot="private" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>m_eShaderType</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1a8b7e1ecf0275e206316a4412f8881428" prot="private" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>m_pImpl</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1a435d8baccf67a804f470b703a1f4c649" prot="public" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>ReflectInputLayout</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_shader_reflection_1aefc6643c8a0ae5fefd73fdd9576333e8" prot="public" virt="non-virtual"><scope>Raven::Renderer::CShaderReflection</scope><name>~CShaderReflection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

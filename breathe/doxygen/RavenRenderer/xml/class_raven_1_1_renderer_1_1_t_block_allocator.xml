<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_raven_1_1_renderer_1_1_t_block_allocator" kind="class" language="C++" prot="public">
    <compoundname>Raven::Renderer::TBlockAllocator</compoundname>
    <innerclass refid="struct_raven_1_1_renderer_1_1_t_block_allocator_1_1_range" prot="public">Raven::Renderer::TBlockAllocator::Range</innerclass>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_t_block_allocator_1ab63ff87a51ba7ca1e36ed50bef8e52fd" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr T</type>
        <definition>constexpr T Raven::Renderer::TBlockAllocator&lt; T &gt;::Null</definition>
        <argsstring></argsstring>
        <name>Null</name>
        <initializer>= static_cast&lt;T&gt;(~0u)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" line="10" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_t_block_allocator_1ab492400aa2ea4d9c5320edeec126795e" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_raven_1_1_renderer_1_1_t_block_allocator_1_1_range" kindref="compound">Range</ref> &gt;</type>
        <definition>std::vector&lt;Range&gt; Raven::Renderer::TBlockAllocator&lt; T &gt;::OccupiedRanges</definition>
        <argsstring></argsstring>
        <name>OccupiedRanges</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" line="145" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_t_block_allocator_1aaf2ecff2e4f2bbe8027649f0279f7b79" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_raven_1_1_renderer_1_1_t_block_allocator_1_1_range" kindref="compound">Range</ref> &gt;</type>
        <definition>std::vector&lt;Range&gt; Raven::Renderer::TBlockAllocator&lt; T &gt;::FreeRanges</definition>
        <argsstring></argsstring>
        <name>FreeRanges</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" line="146" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_t_block_allocator_1a573b464c6b463aff96de5ce515599b1e" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T Raven::Renderer::TBlockAllocator&lt; T &gt;::Capacity</definition>
        <argsstring></argsstring>
        <name>Capacity</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" line="147" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_t_block_allocator_1a7dc72418f3e5d819bf23b68d3be9c22f" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T Raven::Renderer::TBlockAllocator&lt; T &gt;::SpaceLeft</definition>
        <argsstring></argsstring>
        <name>SpaceLeft</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" line="148" column="20" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_t_block_allocator_1ac30ed0935931597f994eacfe06583a39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::Renderer::TBlockAllocator&lt; T &gt;::InitialiseRange</definition>
        <argsstring>(const size_t size)</argsstring>
        <name>InitialiseRange</name>
        <param>
          <type>const size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" line="27" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" bodystart="27" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_t_block_allocator_1a7b80a7d7b60e1a3ecfaa1c85d5dbdc31" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::Renderer::TBlockAllocator&lt; T &gt;::IsLocked</definition>
        <argsstring>() const</argsstring>
        <name>IsLocked</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" line="36" column="8" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_t_block_allocator_1aa6e7773cd9d0bb52c323fb5d4b09d019" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Raven::Renderer::TBlockAllocator&lt; T &gt;::GetCapacity</definition>
        <argsstring>() const</argsstring>
        <name>GetCapacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" line="38" column="8" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_t_block_allocator_1a5c309345428cd704f41b306a9b6fd962" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Raven::Renderer::TBlockAllocator&lt; T &gt;::GetSpaceLeft</definition>
        <argsstring>() const</argsstring>
        <name>GetSpaceLeft</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" line="40" column="8" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_t_block_allocator_1a6e97fa45a450d69bd47b9ee3b0bf6d0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Raven::Renderer::TBlockAllocator&lt; T &gt;::Allocate</definition>
        <argsstring>(size_t size, size_t alignment)</argsstring>
        <name>Allocate</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>alignment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" line="42" column="8" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" bodystart="42" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_t_block_allocator_1ae61a13695b3533e0b3b58b4cad419cfa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::Renderer::TBlockAllocator&lt; T &gt;::Free</definition>
        <argsstring>(const T allocation)</argsstring>
        <name>Free</name>
        <param>
          <type>const T</type>
          <declname>allocation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" line="94" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" bodystart="94" bodyend="143"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" line="8" column="12" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/BlockAllocator.hpp" bodystart="8" bodyend="149"/>
    <listofallmembers>
      <member refid="class_raven_1_1_renderer_1_1_t_block_allocator_1a6e97fa45a450d69bd47b9ee3b0bf6d0e" prot="public" virt="non-virtual"><scope>Raven::Renderer::TBlockAllocator</scope><name>Allocate</name></member>
      <member refid="class_raven_1_1_renderer_1_1_t_block_allocator_1a573b464c6b463aff96de5ce515599b1e" prot="public" virt="non-virtual"><scope>Raven::Renderer::TBlockAllocator</scope><name>Capacity</name></member>
      <member refid="class_raven_1_1_renderer_1_1_t_block_allocator_1ae61a13695b3533e0b3b58b4cad419cfa" prot="public" virt="non-virtual"><scope>Raven::Renderer::TBlockAllocator</scope><name>Free</name></member>
      <member refid="class_raven_1_1_renderer_1_1_t_block_allocator_1aaf2ecff2e4f2bbe8027649f0279f7b79" prot="public" virt="non-virtual"><scope>Raven::Renderer::TBlockAllocator</scope><name>FreeRanges</name></member>
      <member refid="class_raven_1_1_renderer_1_1_t_block_allocator_1aa6e7773cd9d0bb52c323fb5d4b09d019" prot="public" virt="non-virtual"><scope>Raven::Renderer::TBlockAllocator</scope><name>GetCapacity</name></member>
      <member refid="class_raven_1_1_renderer_1_1_t_block_allocator_1a5c309345428cd704f41b306a9b6fd962" prot="public" virt="non-virtual"><scope>Raven::Renderer::TBlockAllocator</scope><name>GetSpaceLeft</name></member>
      <member refid="class_raven_1_1_renderer_1_1_t_block_allocator_1ac30ed0935931597f994eacfe06583a39" prot="public" virt="non-virtual"><scope>Raven::Renderer::TBlockAllocator</scope><name>InitialiseRange</name></member>
      <member refid="class_raven_1_1_renderer_1_1_t_block_allocator_1a7b80a7d7b60e1a3ecfaa1c85d5dbdc31" prot="public" virt="non-virtual"><scope>Raven::Renderer::TBlockAllocator</scope><name>IsLocked</name></member>
      <member refid="class_raven_1_1_renderer_1_1_t_block_allocator_1ab63ff87a51ba7ca1e36ed50bef8e52fd" prot="public" virt="non-virtual"><scope>Raven::Renderer::TBlockAllocator</scope><name>Null</name></member>
      <member refid="class_raven_1_1_renderer_1_1_t_block_allocator_1ab492400aa2ea4d9c5320edeec126795e" prot="public" virt="non-virtual"><scope>Raven::Renderer::TBlockAllocator</scope><name>OccupiedRanges</name></member>
      <member refid="class_raven_1_1_renderer_1_1_t_block_allocator_1a7dc72418f3e5d819bf23b68d3be9c22f" prot="public" virt="non-virtual"><scope>Raven::Renderer::TBlockAllocator</scope><name>SpaceLeft</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view" kind="struct" language="C++" prot="public">
    <compoundname>Raven::Renderer::Device::SImageView</compoundname>
    <basecompoundref refid="class_raven_1_1_renderer_1_1_detail_1_1_c_binding_invalidation_callback" prot="public" virt="non-virtual">Raven::Renderer::Detail::CBindingInvalidationCallback</basecompoundref>
    <innerclass refid="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1_1_s_hash" prot="public">Raven::Renderer::Device::SImageView::SHash</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1a25ddfd1f21ba7e757db9c204624b105f" prot="public" static="no" mutable="no">
        <type><ref refid="struct_raven_1_1_renderer_1_1_device_1_1_s_view_key" kindref="compound">SViewKey</ref></type>
        <definition>SViewKey Raven::Renderer::Device::SImageView::key</definition>
        <argsstring></argsstring>
        <name>key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" line="75" column="10" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1ac4eff9cf168f290a7879e7065f7b15b7" prot="public" static="no" mutable="no">
        <type>VkImageView</type>
        <definition>VkImageView Raven::Renderer::Device::SImageView::vkView</definition>
        <argsstring></argsstring>
        <name>vkView</name>
        <initializer>= VK_NULL_HANDLE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" line="76" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1a274e1db24683f797c8ac77946d3dcb8e" prot="public" static="no" mutable="no">
        <type><ref refid="struct_raven_1_1_renderer_1_1_device_1_1_s_texture_sampler" kindref="compound">STextureSampler</ref></type>
        <definition>STextureSampler Raven::Renderer::Device::SImageView::sampler</definition>
        <argsstring></argsstring>
        <name>sampler</name>
        <initializer>{ESamplerType::None}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" line="77" column="17" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1aef69562302bf880b6825305dd2973d10" prot="public" static="no" mutable="no">
        <type><ref refid="struct_raven_1_1_t_handle" kindref="compound">THandle</ref>&lt; Texture &gt;</type>
        <definition>THandle&lt;Texture&gt; Raven::Renderer::Device::SImageView::hBaseTexture</definition>
        <argsstring></argsstring>
        <name>hBaseTexture</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" line="79" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1a8affff79aacd1317cd316b7b73b59dc5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class CSwapchain</definition>
        <argsstring></argsstring>
        <name>CSwapchain</name>
        <param>
          <type>CSwapchain</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" line="90" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1a8fcbd8f335273bf8f5a5702e3817f23e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class THandlePool&lt; SImageView, ImageView &gt;</definition>
        <argsstring></argsstring>
        <name>THandlePool&lt; SImageView, ImageView &gt;</name>
        <param>
          <type>THandlePool&lt; <ref refid="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view" kindref="compound">SImageView</ref>, ImageView &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" line="90" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1a551e3839c9ebd4272b2f771dad41d066" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Raven::Renderer::Device::SImageView::~SImageView</definition>
        <argsstring>()</argsstring>
        <name>~SImageView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1a824872ff9fe56a16a64922392b67430b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>VkImageView</type>
        <definition>VkImageView Raven::Renderer::Device::SImageView::GetVkView</definition>
        <argsstring>() const</argsstring>
        <name>GetVkView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" line="64" column="13"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1aec1e0b5b52484ed2d86d0360277ecd2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::Renderer::Device::SImageView::SetDebugName</definition>
        <argsstring>(const char *name)</argsstring>
        <name>SetDebugName</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" line="68" column="6"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1af5bba0fcafd2c21cb439ab7996dd944d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::Renderer::Device::SImageView::operator==</definition>
        <argsstring>(const SImageView *rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view" kindref="compound">SImageView</ref> *</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" line="70" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1ac9fd2a86116c680e036be48624a2bc1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::Renderer::Device::SImageView::operator==</definition>
        <argsstring>(const SImageView *rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view" kindref="compound">SImageView</ref> *</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" line="71" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1a99e67bbea25aae3a62cee2936870348f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::Renderer::Device::SImageView::operator!=</definition>
        <argsstring>(const SImageView *rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view" kindref="compound">SImageView</ref> *</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" line="72" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1a96d3bb951135e194e8aab2cf678fa622" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::Renderer::Device::SImageView::operator!=</definition>
        <argsstring>(const SImageView *rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view" kindref="compound">SImageView</ref> *</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" line="73" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" bodystart="73" bodyend="73"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1aa1446580a31edef63c1d34fdfc5a5bfe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Raven::Renderer::Device::SImageView::Release</definition>
        <argsstring>(THandle&lt; ImageView &gt; hView)</argsstring>
        <name>Release</name>
        <param>
          <type><ref refid="struct_raven_1_1_t_handle" kindref="compound">THandle</ref>&lt; ImageView &gt;</type>
          <declname>hView</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" line="62" column="13"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1a25a33e29986deef66ec615537f736247" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view" kindref="compound">SImageView</ref> *</type>
        <definition>static SImageView* Raven::Renderer::Device::SImageView::Get</definition>
        <argsstring>(THandle&lt; ImageView &gt; hView)</argsstring>
        <name>Get</name>
        <param>
          <type><ref refid="struct_raven_1_1_t_handle" kindref="compound">THandle</ref>&lt; ImageView &gt;</type>
          <declname>hView</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" line="65" column="20"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1ad3e1b14f88bcc6d49b6cf54d4e4fcdaf" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Raven::Renderer::Device::SImageView::IsDepth</definition>
        <argsstring>(THandle&lt; ImageView &gt; hView) noexcept</argsstring>
        <name>IsDepth</name>
        <param>
          <type><ref refid="struct_raven_1_1_t_handle" kindref="compound">THandle</ref>&lt; ImageView &gt;</type>
          <declname>hView</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" line="66" column="14" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1ab123e4419672f88cae6a8a3661e16ab7" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_t_handle" kindref="compound">THandle</ref>&lt; ImageView &gt;</type>
        <definition>static THandle&lt;ImageView&gt; Raven::Renderer::Device::SImageView::GetImageView</definition>
        <argsstring>(THandle&lt; Texture &gt; hTexture, const EViewType eType, ESamplerType eSamplerType, uint32_t firstMip, uint32_t mipCount, uint32_t firstSlice, uint32_t sliceCount) noexcept</argsstring>
        <name>GetImageView</name>
        <param>
          <type><ref refid="struct_raven_1_1_t_handle" kindref="compound">THandle</ref>&lt; Texture &gt;</type>
          <declname>hTexture</declname>
        </param>
        <param>
          <type>const EViewType</type>
          <declname>eType</declname>
        </param>
        <param>
          <type>ESamplerType</type>
          <declname>eSamplerType</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>firstMip</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mipCount</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>firstSlice</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>sliceCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" line="81" column="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1a91524b704a0556fe261548f40440eabf" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_t_handle" kindref="compound">THandle</ref>&lt; ImageView &gt;</type>
        <definition>static THandle&lt;ImageView&gt; Raven::Renderer::Device::SImageView::OutputView</definition>
        <argsstring>(THandle&lt; Texture &gt; hTex, CTexture *pTexture, bool bCompute=false, uint32_t firstMip=0, uint32_t mipCount=~0u, uint32_t firstSlice=0, uint32_t sliceCount=~0u)</argsstring>
        <name>OutputView</name>
        <param>
          <type><ref refid="struct_raven_1_1_t_handle" kindref="compound">THandle</ref>&lt; Texture &gt;</type>
          <declname>hTex</declname>
        </param>
        <param>
          <type>CTexture *</type>
          <declname>pTexture</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bCompute</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>firstMip</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mipCount</declname>
          <defval>~0u</defval>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>firstSlice</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>sliceCount</declname>
          <defval>~0u</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" line="83" column="16"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1ace0d46f0f478f505ae0f397ba4087a2e" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_t_handle" kindref="compound">THandle</ref>&lt; ImageView &gt;</type>
        <definition>static THandle&lt;ImageView&gt; Raven::Renderer::Device::SImageView::InputView</definition>
        <argsstring>(THandle&lt; Texture &gt; hTex, CTexture *pTexture, ESamplerType eType=ESamplerType::LinearRepeat, uint32_t firstMip=0, uint32_t mipCount=~0u, uint32_t firstSlice=0, uint32_t sliceCount=~0u)</argsstring>
        <name>InputView</name>
        <param>
          <type><ref refid="struct_raven_1_1_t_handle" kindref="compound">THandle</ref>&lt; Texture &gt;</type>
          <declname>hTex</declname>
        </param>
        <param>
          <type>CTexture *</type>
          <declname>pTexture</declname>
        </param>
        <param>
          <type>ESamplerType</type>
          <declname>eType</declname>
          <defval>ESamplerType::LinearRepeat</defval>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>firstMip</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mipCount</declname>
          <defval>~0u</defval>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>firstSlice</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>sliceCount</declname>
          <defval>~0u</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" line="84" column="16"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1a80e5ed44ecf00f06bbdea9ccf5fe53e4" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_t_handle" kindref="compound">THandle</ref>&lt; ImageView &gt;</type>
        <definition>static THandle&lt;ImageView&gt; Raven::Renderer::Device::SImageView::SwapchainView</definition>
        <argsstring>()</argsstring>
        <name>SwapchainView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" line="85" column="16"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1abb9926611a1406545483f09948499e72" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_t_handle" kindref="compound">THandle</ref>&lt; ImageView &gt;</type>
        <definition>static THandle&lt;ImageView&gt; Raven::Renderer::Device::SImageView::CreateImageView</definition>
        <argsstring>(THandle&lt; Texture &gt; hTex, CTexture *pTexture, const SViewKey &amp;key)</argsstring>
        <name>CreateImageView</name>
        <param>
          <type><ref refid="struct_raven_1_1_t_handle" kindref="compound">THandle</ref>&lt; Texture &gt;</type>
          <declname>hTex</declname>
        </param>
        <param>
          <type>CTexture *</type>
          <declname>pTexture</declname>
        </param>
        <param>
          <type>const <ref refid="struct_raven_1_1_renderer_1_1_device_1_1_s_view_key" kindref="compound">SViewKey</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" line="87" column="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1a372de551152093484fa6ba0509c5d57a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Raven::Renderer::Device::SImageView::SImageView</definition>
        <argsstring>()=default</argsstring>
        <name>SImageView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" line="88" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Raven::Renderer::Device::SImageView</label>
        <link refid="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Raven::Renderer::Detail::CBindingInvalidationCallback</label>
        <link refid="class_raven_1_1_renderer_1_1_detail_1_1_c_binding_invalidation_callback"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>Raven::Renderer::Device::STextureSampler</label>
        <link refid="struct_raven_1_1_renderer_1_1_device_1_1_s_texture_sampler"/>
      </node>
      <node id="1">
        <label>Raven::Renderer::Device::SImageView</label>
        <link refid="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>key</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>hBaseTexture</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>sampler</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Raven::Renderer::Device::SViewKey</label>
        <link refid="struct_raven_1_1_renderer_1_1_device_1_1_s_view_key"/>
      </node>
      <node id="4">
        <label>Raven::THandle&lt; Texture &gt;</label>
        <link refid="struct_raven_1_1_t_handle"/>
      </node>
      <node id="2">
        <label>Raven::Renderer::Detail::CBindingInvalidationCallback</label>
        <link refid="class_raven_1_1_renderer_1_1_detail_1_1_c_binding_invalidation_callback"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" line="40" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/DeviceLayer/ImageView.hpp" bodystart="41" bodyend="92"/>
    <listofallmembers>
      <member refid="class_raven_1_1_renderer_1_1_detail_1_1_c_binding_invalidation_callback_1a096203e0c52d948fb5aa7a7575a6ea8c" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::SImageView</scope><name>AddInvalidationCallback</name></member>
      <member refid="class_raven_1_1_renderer_1_1_detail_1_1_c_binding_invalidation_callback_1accfc73d8762ed00188163bd3855a1d5d" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::SImageView</scope><name>CBindingInvalidationCallback</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1abb9926611a1406545483f09948499e72" prot="private" virt="non-virtual"><scope>Raven::Renderer::Device::SImageView</scope><name>CreateImageView</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1a8affff79aacd1317cd316b7b73b59dc5" prot="private" virt="non-virtual"><scope>Raven::Renderer::Device::SImageView</scope><name>CSwapchain</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1a25a33e29986deef66ec615537f736247" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::SImageView</scope><name>Get</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1ab123e4419672f88cae6a8a3661e16ab7" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::SImageView</scope><name>GetImageView</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1a824872ff9fe56a16a64922392b67430b" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::SImageView</scope><name>GetVkView</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1aef69562302bf880b6825305dd2973d10" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::SImageView</scope><name>hBaseTexture</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1ace0d46f0f478f505ae0f397ba4087a2e" prot="private" virt="non-virtual"><scope>Raven::Renderer::Device::SImageView</scope><name>InputView</name></member>
      <member refid="class_raven_1_1_renderer_1_1_detail_1_1_c_binding_invalidation_callback_1a1ee3de15aac47caf560e467bd5702f1c" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::SImageView</scope><name>InvalidationFn</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1ad3e1b14f88bcc6d49b6cf54d4e4fcdaf" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::SImageView</scope><name>IsDepth</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1a25ddfd1f21ba7e757db9c204624b105f" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::SImageView</scope><name>key</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1a99e67bbea25aae3a62cee2936870348f" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::SImageView</scope><name>operator!=</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1a96d3bb951135e194e8aab2cf678fa622" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::SImageView</scope><name>operator!=</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1af5bba0fcafd2c21cb439ab7996dd944d" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::SImageView</scope><name>operator==</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1ac9fd2a86116c680e036be48624a2bc1a" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::SImageView</scope><name>operator==</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1a91524b704a0556fe261548f40440eabf" prot="private" virt="non-virtual"><scope>Raven::Renderer::Device::SImageView</scope><name>OutputView</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1aa1446580a31edef63c1d34fdfc5a5bfe" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::SImageView</scope><name>Release</name></member>
      <member refid="class_raven_1_1_renderer_1_1_detail_1_1_c_binding_invalidation_callback_1a0876cef48d9bb6457aede60cd886ae85" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::SImageView</scope><name>RemoveInvalicationCallback</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1a274e1db24683f797c8ac77946d3dcb8e" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::SImageView</scope><name>sampler</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1aec1e0b5b52484ed2d86d0360277ecd2b" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::SImageView</scope><name>SetDebugName</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1a372de551152093484fa6ba0509c5d57a" prot="private" virt="non-virtual"><scope>Raven::Renderer::Device::SImageView</scope><name>SImageView</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1a80e5ed44ecf00f06bbdea9ccf5fe53e4" prot="private" virt="non-virtual"><scope>Raven::Renderer::Device::SImageView</scope><name>SwapchainView</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1a8fcbd8f335273bf8f5a5702e3817f23e" prot="private" virt="non-virtual"><scope>Raven::Renderer::Device::SImageView</scope><name>THandlePool&lt; SImageView, ImageView &gt;</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1ac4eff9cf168f290a7879e7065f7b15b7" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::SImageView</scope><name>vkView</name></member>
      <member refid="class_raven_1_1_renderer_1_1_detail_1_1_c_binding_invalidation_callback_1a2356d874b0dd59a002b0b3f72a085ba8" prot="public" virt="virtual"><scope>Raven::Renderer::Device::SImageView</scope><name>~CBindingInvalidationCallback</name></member>
      <member refid="struct_raven_1_1_renderer_1_1_device_1_1_s_image_view_1a551e3839c9ebd4272b2f771dad41d066" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::SImageView</scope><name>~SImageView</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_render_window_8hpp" kind="file" language="C++">
    <compoundname>RenderWindow.hpp</compoundname>
    <includes local="no">RavenWindow/Window.hpp</includes>
    <includes refid="_vulkan_utils_8hpp" local="yes">DeviceLayer/VulkanUtils.hpp</includes>
    <incdepgraph>
      <node id="6">
        <label>Meta/Enums.hpp</label>
      </node>
      <node id="5">
        <label>TextureFormats.hpp</label>
      </node>
      <node id="4">
        <label>RavenFormats.hpp</label>
        <link refid="_raven_formats_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>RavenWindow/Window.hpp</label>
      </node>
      <node id="3">
        <label>DeviceLayer/VulkanUtils.hpp</label>
        <link refid="_vulkan_utils_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>vulkan/vk_platform.h</label>
      </node>
      <node id="10">
        <label>RavenCommon/BaseTypes.hpp</label>
      </node>
      <node id="19">
        <label>Hash.h</label>
      </node>
      <node id="11">
        <label>Utils/Assert.hpp</label>
      </node>
      <node id="8">
        <label>CommonRenderer.hpp</label>
        <link refid="_common_renderer_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>vector</label>
      </node>
      <node id="17">
        <label>array</label>
      </node>
      <node id="9">
        <label>Platform/CompilerSettings.hpp</label>
      </node>
      <node id="21">
        <label>vulkan/vulkan_core.h</label>
      </node>
      <node id="15">
        <label>set</label>
      </node>
      <node id="18">
        <label>span</label>
      </node>
      <node id="13">
        <label>Handle.hpp</label>
      </node>
      <node id="1">
        <label>/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/RenderWindow.hpp</label>
        <link refid="_render_window_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>cstring</label>
      </node>
      <node id="7">
        <label>CommonShaders.hpp</label>
        <link refid="_common_shaders_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>RavenCommon/Utils.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_raven_1_1_renderer_1_1_window_1_1_extracted" prot="public">Raven::Renderer::Window::Extracted</innerclass>
    <innerclass refid="struct_raven_1_1_renderer_1_1_window_1_1_extracted_windows" prot="public">Raven::Renderer::Window::ExtractedWindows</innerclass>
    <innerclass refid="struct_raven_1_1_renderer_1_1_window_1_1_plugin" prot="public">Raven::Renderer::Window::Plugin</innerclass>
    <innernamespace refid="namespace_raven">Raven</innernamespace>
    <innernamespace refid="namespace_raven_1_1_renderer">Raven::Renderer</innernamespace>
    <innernamespace refid="namespace_raven_1_1_renderer_1_1_window">Raven::Renderer::Window</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;RavenWindow/Window.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;DeviceLayer/VulkanUtils.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Raven::Renderer<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">CSwapchain;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">CCommandList;</highlight></codeline>
<codeline lineno="9"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Raven::Renderer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Raven::Renderer::Window<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Id<sp/>=<sp/>Raven::Window::Id;</highlight></codeline>
<codeline lineno="13" refid="struct_raven_1_1_renderer_1_1_window_1_1_extracted" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_raven_1_1_renderer_1_1_window_1_1_extracted" kindref="compound">Extracted</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="struct_raven_1_1_renderer_1_1_window_1_1_extracted" kindref="compound">Extracted</ref>();</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>VkSurfaceKHR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_surface<sp/><sp/><sp/><sp/>=<sp/>VK_NULL_HANDLE;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>CSwapchain*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSwapchain<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;CCommandList&gt;<sp/>m_pCmd{};</highlight></codeline>
<codeline lineno="18"><highlight class="normal">};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="struct_raven_1_1_renderer_1_1_window_1_1_extracted_windows" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_raven_1_1_renderer_1_1_window_1_1_extracted_windows" kindref="compound">ExtractedWindows</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;Id,<sp/>std::shared_ptr&lt;Extracted&gt;&gt;<sp/>m_map;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ToPresentT<sp/>=<sp/>std::vector&lt;Window::Id&gt;;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="struct_raven_1_1_renderer_1_1_window_1_1_plugin" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_raven_1_1_renderer_1_1_window_1_1_plugin" kindref="compound">Plugin</ref><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Build(App&amp;<sp/>app);</highlight></codeline>
<codeline lineno="28"><highlight class="normal">};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Raven::Renderer::Window</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/RenderWindow.hpp"/>
  </compounddef>
</doxygen>

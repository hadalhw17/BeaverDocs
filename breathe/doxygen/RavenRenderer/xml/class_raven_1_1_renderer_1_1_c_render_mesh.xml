<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_raven_1_1_renderer_1_1_c_render_mesh" kind="class" language="C++" prot="public">
    <compoundname>Raven::Renderer::CRenderMesh</compoundname>
    <includes refid="_render_mesh_8hpp" local="no">RenderMesh.hpp</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_raven_1_1_renderer_1_1_c_render_mesh_1adcddccf08aba622668261cccd845d93f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class CRenderer</definition>
        <argsstring></argsstring>
        <name>CRenderer</name>
        <param>
          <type>CRenderer</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" line="39" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_c_render_mesh_1a0ce23e68fb1305aa68d8d66af5e95cea" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Raven::Renderer::CRenderMesh::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" line="111" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_c_render_mesh_1ae94a89cb82d72d27118ff383bad94e44" prot="private" static="no" mutable="no">
        <type>std::array&lt; <ref refid="struct_raven_1_1_renderer_1_1_s_vertex_stream" kindref="compound">SVertexStream</ref>, static_cast&lt; std::size_t &gt;EVertexAttribute::Count)&gt;</type>
        <definition>std::array&lt;SVertexStream, static_cast&lt;std::size_t&gt;EVertexAttribute::Count)&gt; Raven::Renderer::CRenderMesh::m_streams</definition>
        <argsstring></argsstring>
        <name>m_streams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" line="113" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_c_render_mesh_1a114ee4ae5888ef26be49153f8ed7c540" prot="private" static="no" mutable="no">
        <type>CBuffer *</type>
        <definition>CBuffer* Raven::Renderer::CRenderMesh::m_pVertexBuffer</definition>
        <argsstring></argsstring>
        <name>m_pVertexBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" line="114" column="28" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_c_render_mesh_1a742f226dafc00ac8a5a2dfd59e7b10e8" prot="private" static="no" mutable="no">
        <type>std::vector&lt; SRendPrimitive &gt;</type>
        <definition>std::vector&lt;SRendPrimitive&gt; Raven::Renderer::CRenderMesh::m_rendPrimitives</definition>
        <argsstring></argsstring>
        <name>m_rendPrimitives</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" line="115" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_c_render_mesh_1a6d8caefc6d6145fe5b6536094bd181a5" prot="private" static="no" mutable="no">
        <type>CBuffer *</type>
        <definition>CBuffer* Raven::Renderer::CRenderMesh::m_pGPUMeshData</definition>
        <argsstring></argsstring>
        <name>m_pGPUMeshData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" line="116" column="28" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_c_render_mesh_1aee2dd7bb950bdd1b6f2bffe2498d3da5" prot="private" static="no" mutable="no">
        <type>uint32</type>
        <definition>uint32 Raven::Renderer::CRenderMesh::m_bindlessMeshId</definition>
        <argsstring></argsstring>
        <name>m_bindlessMeshId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" line="117" column="29" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_render_mesh_1a2dcb1e5dfa9a3ae5d53e7213920c48b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Raven::Renderer::CRenderMesh::CRenderMesh</definition>
        <argsstring>()</argsstring>
        <name>CRenderMesh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_render_mesh_1a55efcf4451476fc1efafbe245d88a4bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Raven::Renderer::CRenderMesh::~CRenderMesh</definition>
        <argsstring>()</argsstring>
        <name>~CRenderMesh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_render_mesh_1a5f17ddf14f6e95cea2bed1f6216a0761" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_renderer_1_1_s_vertex_stream" kindref="compound">SVertexStream</ref> *</type>
        <definition>SVertexStream* Raven::Renderer::CRenderMesh::AllocateStream</definition>
        <argsstring>(EVertexAttribute eAttribute, const uint64 size, CBuffer *pDstBuffer=nullptr, const uint64 offset=0, const int customSize=0)</argsstring>
        <name>AllocateStream</name>
        <param>
          <type>EVertexAttribute</type>
          <declname>eAttribute</declname>
        </param>
        <param>
          <type>const uint64</type>
          <declname>size</declname>
        </param>
        <param>
          <type>CBuffer *</type>
          <declname>pDstBuffer</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>const uint64</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>customSize</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" line="46" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_render_mesh_1a61a9039059ebfbc8425b3af4a43b5997" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_renderer_1_1_s_vertex_stream" kindref="compound">SVertexStream</ref> *</type>
        <definition>SVertexStream* Raven::Renderer::CRenderMesh::CreateStream</definition>
        <argsstring>(CCommandList &amp;cmd, EVertexAttribute eAttribute, const SStreamSlice &amp;data, CBuffer *pDstBuffer=nullptr, const uint64 offset=0)</argsstring>
        <name>CreateStream</name>
        <param>
          <type>CCommandList &amp;</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>EVertexAttribute</type>
          <declname>eAttribute</declname>
        </param>
        <param>
          <type>const SStreamSlice &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>CBuffer *</type>
          <declname>pDstBuffer</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>const uint64</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" line="51" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_render_mesh_1aca5d8050311498dc924e357008179431" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_renderer_1_1_s_vertex_stream" kindref="compound">SVertexStream</ref> *</type>
        <definition>SVertexStream* Raven::Renderer::CRenderMesh::GetStream</definition>
        <argsstring>(const EVertexAttribute eAttr)</argsstring>
        <name>GetStream</name>
        <param>
          <type>const EVertexAttribute</type>
          <declname>eAttr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" line="56" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_render_mesh_1a7913af5b51f35879f9755dd83d3feec0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="struct_raven_1_1_renderer_1_1_s_vertex_stream" kindref="compound">SVertexStream</ref> *</type>
        <definition>const SVertexStream* Raven::Renderer::CRenderMesh::GetStream</definition>
        <argsstring>(const EVertexAttribute eAttr) const</argsstring>
        <name>GetStream</name>
        <param>
          <type>const EVertexAttribute</type>
          <declname>eAttr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_render_mesh_1ab39b4a65788edefa05186d6ebff82032" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint64</type>
        <definition>uint64 Raven::Renderer::CRenderMesh::GetStreamDeviceAddress</definition>
        <argsstring>(const EVertexAttribute eAttr) const</argsstring>
        <name>GetStreamDeviceAddress</name>
        <param>
          <type>const EVertexAttribute</type>
          <declname>eAttr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_render_mesh_1a29c628ad72fe1ed2d2c75e071de8f167" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="struct_raven_1_1_renderer_1_1_s_vertex_stream" kindref="compound">SVertexStream</ref> &amp;</type>
        <definition>const SVertexStream&amp; Raven::Renderer::CRenderMesh::GetIndexStream</definition>
        <argsstring>() const</argsstring>
        <name>GetIndexStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" line="61" column="22" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_render_mesh_1a2bfe77a314c232ce4944349a2231e8b6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::span&lt; const <ref refid="struct_raven_1_1_renderer_1_1_s_vertex_stream" kindref="compound">SVertexStream</ref> &gt;</type>
        <definition>std::span&lt;const SVertexStream&gt; Raven::Renderer::CRenderMesh::GetVertexStreams</definition>
        <argsstring>() const</argsstring>
        <name>GetVertexStreams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" line="64" column="12" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_render_mesh_1a43c58da696b9c18688f9a5407aa028f4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; SRendPrimitive &gt; &amp;</type>
        <definition>const std::vector&lt;SRendPrimitive&gt;&amp; Raven::Renderer::CRenderMesh::GetRenderPrimitives</definition>
        <argsstring>() const</argsstring>
        <name>GetRenderPrimitives</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" line="69" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_render_mesh_1a3349edbf79c9c92adbc5bbaf117eb350" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; SRendPrimitive &gt; &amp;</type>
        <definition>std::vector&lt;SRendPrimitive&gt;&amp; Raven::Renderer::CRenderMesh::GetRenderPrimitives</definition>
        <argsstring>()</argsstring>
        <name>GetRenderPrimitives</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" line="72" column="14" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" bodystart="72" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_render_mesh_1a380aac18ca95f2d7601d0687103f723d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32</type>
        <definition>uint32 Raven::Renderer::CRenderMesh::GetBindlessMeshId</definition>
        <argsstring>() const</argsstring>
        <name>GetBindlessMeshId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" line="76" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_render_mesh_1a9b7769d0c61b2d3f853219b5a4005606" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string_view</type>
        <definition>std::string_view Raven::Renderer::CRenderMesh::GetName</definition>
        <argsstring>() const</argsstring>
        <name>GetName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" line="78" column="19" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_render_mesh_1ad395cb73a63bdbf672085d272c245a9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::Renderer::CRenderMesh::UploadGeometry</definition>
        <argsstring>(CCommandList &amp;cmd, const std::span&lt; SMeshPrimitive const &gt; &amp;primitives, const std::span&lt; SVertex const &gt; &amp;geometry, const std::span&lt; uint32 const &gt; &amp;indices, const bool buildRT)</argsstring>
        <name>UploadGeometry</name>
        <param>
          <type>CCommandList &amp;</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>const std::span&lt; SMeshPrimitive const &gt; &amp;</type>
          <declname>primitives</declname>
        </param>
        <param>
          <type>const std::span&lt; SVertex const &gt; &amp;</type>
          <declname>geometry</declname>
        </param>
        <param>
          <type>const std::span&lt; uint32 const &gt; &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>buildRT</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" line="80" column="32"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_render_mesh_1a4d07f97b23f5b36d82d74fdabd389607" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::Renderer::CRenderMesh::UploadGeometry</definition>
        <argsstring>(CCommandList &amp;cmd, const std::span&lt; SMeshPrimitive const &gt; &amp;primitives, const SVertexStreamMap &amp;streams, const SStreamSlice &amp;indices, const bool buildRT)</argsstring>
        <name>UploadGeometry</name>
        <param>
          <type>CCommandList &amp;</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>const std::span&lt; SMeshPrimitive const &gt; &amp;</type>
          <declname>primitives</declname>
        </param>
        <param>
          <type>const SVertexStreamMap &amp;</type>
          <declname>streams</declname>
        </param>
        <param>
          <type>const SStreamSlice &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>buildRT</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" line="86" column="32"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_render_mesh_1af48ed0c03524a40593409273809fc26b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::Renderer::CRenderMesh::BuildBlas</definition>
        <argsstring>(CCommandList &amp;cmd)</argsstring>
        <name>BuildBlas</name>
        <param>
          <type>CCommandList &amp;</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" line="92" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_render_mesh_1a0fd3e82aeae64a05c63e21f7fcd47717" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::Renderer::CRenderMesh::FlushGPUModelBuffer</definition>
        <argsstring>(CCommandList &amp;cmd)</argsstring>
        <name>FlushGPUModelBuffer</name>
        <param>
          <type>CCommandList &amp;</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" line="93" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_render_mesh_1a5fee92f7f49d0cef5cfc013ad6eeca43" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::Renderer::CRenderMesh::UnregisterPrimitive</definition>
        <argsstring>(const int i)</argsstring>
        <name>UnregisterPrimitive</name>
        <param>
          <type>const int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" line="94" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_render_mesh_1a44c5eb2ee1b9051613e991f165f67ee0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::Renderer::CRenderMesh::UnregisterPrimitives</definition>
        <argsstring>()</argsstring>
        <name>UnregisterPrimitives</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" line="95" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_render_mesh_1acd788e8013d27daafdd32cfd14dcdef2" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::Renderer::CRenderMesh::UploadSliceContent</definition>
        <argsstring>(CCommandList &amp;cmd, SVertexStream *pStream, const SStreamSlice &amp;slice, const size_t offset) const</argsstring>
        <name>UploadSliceContent</name>
        <param>
          <type>CCommandList &amp;</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type><ref refid="struct_raven_1_1_renderer_1_1_s_vertex_stream" kindref="compound">SVertexStream</ref> *</type>
          <declname>pStream</declname>
        </param>
        <param>
          <type>const SStreamSlice &amp;</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" line="97" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_c_render_mesh_1afb1fe5fbfc124816b6ab35edab12aac2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::Renderer::CRenderMesh::UploadGeometryImpl</definition>
        <argsstring>(CCommandList &amp;cmd, const SStreamSlice &amp;indices, const SStreamSlice &amp;positions, const SStreamSlice &amp;normals, const SStreamSlice &amp;tangents, const SStreamSlice &amp;texCords, const SStreamSlice &amp;colours, const SStreamSlice &amp;weights, const SStreamSlice &amp;joints)</argsstring>
        <name>UploadGeometryImpl</name>
        <param>
          <type>CCommandList &amp;</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>const SStreamSlice &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const SStreamSlice &amp;</type>
          <declname>positions</declname>
        </param>
        <param>
          <type>const SStreamSlice &amp;</type>
          <declname>normals</declname>
        </param>
        <param>
          <type>const SStreamSlice &amp;</type>
          <declname>tangents</declname>
        </param>
        <param>
          <type>const SStreamSlice &amp;</type>
          <declname>texCords</declname>
        </param>
        <param>
          <type>const SStreamSlice &amp;</type>
          <declname>colours</declname>
        </param>
        <param>
          <type>const SStreamSlice &amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>const SStreamSlice &amp;</type>
          <declname>joints</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" line="101" column="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Ideally just a GPU repdesentation of CMesh. Is a container for GPU streams and RendPrimitives </para>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" line="38" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Public/RavenRenderer/RenderMesh.hpp" bodystart="38" bodyend="118"/>
    <listofallmembers>
      <member refid="class_raven_1_1_renderer_1_1_c_render_mesh_1a5f17ddf14f6e95cea2bed1f6216a0761" prot="public" virt="non-virtual"><scope>Raven::Renderer::CRenderMesh</scope><name>AllocateStream</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_render_mesh_1af48ed0c03524a40593409273809fc26b" prot="private" virt="non-virtual"><scope>Raven::Renderer::CRenderMesh</scope><name>BuildBlas</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_render_mesh_1a61a9039059ebfbc8425b3af4a43b5997" prot="public" virt="non-virtual"><scope>Raven::Renderer::CRenderMesh</scope><name>CreateStream</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_render_mesh_1adcddccf08aba622668261cccd845d93f" prot="private" virt="non-virtual"><scope>Raven::Renderer::CRenderMesh</scope><name>CRenderer</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_render_mesh_1a2dcb1e5dfa9a3ae5d53e7213920c48b4" prot="public" virt="non-virtual"><scope>Raven::Renderer::CRenderMesh</scope><name>CRenderMesh</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_render_mesh_1a0fd3e82aeae64a05c63e21f7fcd47717" prot="private" virt="non-virtual"><scope>Raven::Renderer::CRenderMesh</scope><name>FlushGPUModelBuffer</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_render_mesh_1a380aac18ca95f2d7601d0687103f723d" prot="public" virt="non-virtual"><scope>Raven::Renderer::CRenderMesh</scope><name>GetBindlessMeshId</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_render_mesh_1a29c628ad72fe1ed2d2c75e071de8f167" prot="public" virt="non-virtual"><scope>Raven::Renderer::CRenderMesh</scope><name>GetIndexStream</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_render_mesh_1a9b7769d0c61b2d3f853219b5a4005606" prot="public" virt="non-virtual"><scope>Raven::Renderer::CRenderMesh</scope><name>GetName</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_render_mesh_1a43c58da696b9c18688f9a5407aa028f4" prot="public" virt="non-virtual"><scope>Raven::Renderer::CRenderMesh</scope><name>GetRenderPrimitives</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_render_mesh_1a3349edbf79c9c92adbc5bbaf117eb350" prot="public" virt="non-virtual"><scope>Raven::Renderer::CRenderMesh</scope><name>GetRenderPrimitives</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_render_mesh_1aca5d8050311498dc924e357008179431" prot="public" virt="non-virtual"><scope>Raven::Renderer::CRenderMesh</scope><name>GetStream</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_render_mesh_1a7913af5b51f35879f9755dd83d3feec0" prot="public" virt="non-virtual"><scope>Raven::Renderer::CRenderMesh</scope><name>GetStream</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_render_mesh_1ab39b4a65788edefa05186d6ebff82032" prot="public" virt="non-virtual"><scope>Raven::Renderer::CRenderMesh</scope><name>GetStreamDeviceAddress</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_render_mesh_1a2bfe77a314c232ce4944349a2231e8b6" prot="public" virt="non-virtual"><scope>Raven::Renderer::CRenderMesh</scope><name>GetVertexStreams</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_render_mesh_1aee2dd7bb950bdd1b6f2bffe2498d3da5" prot="private" virt="non-virtual"><scope>Raven::Renderer::CRenderMesh</scope><name>m_bindlessMeshId</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_render_mesh_1a0ce23e68fb1305aa68d8d66af5e95cea" prot="private" virt="non-virtual"><scope>Raven::Renderer::CRenderMesh</scope><name>m_name</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_render_mesh_1a6d8caefc6d6145fe5b6536094bd181a5" prot="private" virt="non-virtual"><scope>Raven::Renderer::CRenderMesh</scope><name>m_pGPUMeshData</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_render_mesh_1a114ee4ae5888ef26be49153f8ed7c540" prot="private" virt="non-virtual"><scope>Raven::Renderer::CRenderMesh</scope><name>m_pVertexBuffer</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_render_mesh_1a742f226dafc00ac8a5a2dfd59e7b10e8" prot="private" virt="non-virtual"><scope>Raven::Renderer::CRenderMesh</scope><name>m_rendPrimitives</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_render_mesh_1ae94a89cb82d72d27118ff383bad94e44" prot="private" virt="non-virtual"><scope>Raven::Renderer::CRenderMesh</scope><name>m_streams</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_render_mesh_1a5fee92f7f49d0cef5cfc013ad6eeca43" prot="private" virt="non-virtual"><scope>Raven::Renderer::CRenderMesh</scope><name>UnregisterPrimitive</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_render_mesh_1a44c5eb2ee1b9051613e991f165f67ee0" prot="private" virt="non-virtual"><scope>Raven::Renderer::CRenderMesh</scope><name>UnregisterPrimitives</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_render_mesh_1ad395cb73a63bdbf672085d272c245a9b" prot="public" virt="non-virtual"><scope>Raven::Renderer::CRenderMesh</scope><name>UploadGeometry</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_render_mesh_1a4d07f97b23f5b36d82d74fdabd389607" prot="public" virt="non-virtual"><scope>Raven::Renderer::CRenderMesh</scope><name>UploadGeometry</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_render_mesh_1afb1fe5fbfc124816b6ab35edab12aac2" prot="private" virt="non-virtual"><scope>Raven::Renderer::CRenderMesh</scope><name>UploadGeometryImpl</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_render_mesh_1acd788e8013d27daafdd32cfd14dcdef2" prot="private" virt="non-virtual"><scope>Raven::Renderer::CRenderMesh</scope><name>UploadSliceContent</name></member>
      <member refid="class_raven_1_1_renderer_1_1_c_render_mesh_1a55efcf4451476fc1efafbe245d88a4bd" prot="public" virt="non-virtual"><scope>Raven::Renderer::CRenderMesh</scope><name>~CRenderMesh</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer" kind="class" language="C++" prot="public">
    <compoundname>Raven::Renderer::Device::CDeviceLayer</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a5b57edf85edebb9f987f397320444c41" prot="private" static="no" mutable="no">
        <type>CDevice *</type>
        <definition>CDevice* Raven::Renderer::Device::CDeviceLayer::m_pDevice</definition>
        <argsstring></argsstring>
        <name>m_pDevice</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="127" column="29" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1ae18a6d2add270822c1628f45ed7c66fa" prot="private" static="no" mutable="no">
        <type><ref refid="class_raven_1_1_renderer_1_1_device_1_1_c_heap" kindref="compound">CHeap</ref> *</type>
        <definition>CHeap* Raven::Renderer::Device::CDeviceLayer::m_pBufferHeap</definition>
        <argsstring></argsstring>
        <name>m_pBufferHeap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="128" column="29" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a6fed9f121953b2312d2057ae1fca39a7" prot="private" static="no" mutable="no">
        <type><ref refid="class_raven_1_1_renderer_1_1_device_1_1_c_heap" kindref="compound">CHeap</ref> *</type>
        <definition>CHeap* Raven::Renderer::Device::CDeviceLayer::m_pTextureHeap</definition>
        <argsstring></argsstring>
        <name>m_pTextureHeap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="129" column="29" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a193fe91af06b82c3ede23c97e0afe06b" prot="private" static="no" mutable="no">
        <type>CStagingManager *</type>
        <definition>CStagingManager* Raven::Renderer::Device::CDeviceLayer::m_pStagingManager</definition>
        <argsstring></argsstring>
        <name>m_pStagingManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="131" column="29" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a8db3ccac0c06d045b6cd4a7cb02384e5" prot="private" static="no" mutable="no">
        <type>ObjectCache *</type>
        <definition>ObjectCache* Raven::Renderer::Device::CDeviceLayer::m_pObjectCache</definition>
        <argsstring></argsstring>
        <name>m_pObjectCache</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="133" column="29" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a2efdfbe16bf46ea348d397b448769b1b" prot="private" static="yes" mutable="no">
        <type><ref refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer" kindref="compound">CDeviceLayer</ref> *</type>
        <definition>CDeviceLayer* Raven::Renderer::Device::CDeviceLayer::s_pInstance</definition>
        <argsstring></argsstring>
        <name>s_pInstance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="135" column="29" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" bodystart="135" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a7d2dde2172884ac23cdbe029cfe34046" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Raven::Renderer::Device::CDeviceLayer::CDeviceLayer</definition>
        <argsstring>(CDevice *pDevice)</argsstring>
        <name>CDeviceLayer</name>
        <param>
          <type>CDevice *</type>
          <declname>pDevice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="58" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1ae1ae6a9f8e1d8479c07f18502e116e47" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Raven::Renderer::Device::CDeviceLayer::~CDeviceLayer</definition>
        <argsstring>()</argsstring>
        <name>~CDeviceLayer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="59" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a19d896fcf11a1c50e42b0cf53b7e4a46" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Raven::Renderer::Device::CDeviceLayer::Initialise</definition>
        <argsstring>(CDevice *pDevice)</argsstring>
        <name>Initialise</name>
        <param>
          <type>CDevice *</type>
          <declname>pDevice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="62" column="30"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1adc123603a52396726140eb8e2c5d54d7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Raven::Renderer::Device::CDeviceLayer::Release</definition>
        <argsstring>()</argsstring>
        <name>Release</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="63" column="30"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1aba2c9104a2f6ff9c7703c8a87744e73c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer" kindref="compound">CDeviceLayer</ref> &amp;</type>
        <definition>static CDeviceLayer&amp; Raven::Renderer::Device::CDeviceLayer::Get</definition>
        <argsstring>()</argsstring>
        <name>Get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="64" column="29" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a208064df4da93fe90f48f0cc94e5f593" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Raven::Renderer::Device::CDeviceLayer::ReleasePSOCache</definition>
        <argsstring>()</argsstring>
        <name>ReleasePSOCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="66" column="30"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a4619c3658bbdf223ef3a7cfa5fdeeca9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Raven::Renderer::Device::CDeviceLayer::ReleaseFramebuffers</definition>
        <argsstring>()</argsstring>
        <name>ReleaseFramebuffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="67" column="30"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a995c793653c5c838014c860165a78a28" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_t_handle" kindref="compound">THandle</ref>&lt; CGraphicsPSO &gt;</type>
        <definition>static THandle&lt;CGraphicsPSO&gt; Raven::Renderer::Device::CDeviceLayer::GetOrCreateGraphicsPSO</definition>
        <argsstring>(const SGraphicsPSODesc &amp;desc)</argsstring>
        <name>GetOrCreateGraphicsPSO</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_renderer_1_1_s_graphics_p_s_o_desc" kindref="compound">SGraphicsPSODesc</ref> &amp;</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="70" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a17f200bc67344654cc9d311071db2f52" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CGraphicsPSO &amp;</type>
        <definition>static CGraphicsPSO&amp; Raven::Renderer::Device::CDeviceLayer::GetPSO</definition>
        <argsstring>(THandle&lt; CGraphicsPSO &gt; hPSO)</argsstring>
        <name>GetPSO</name>
        <param>
          <type><ref refid="struct_raven_1_1_t_handle" kindref="compound">THandle</ref>&lt; CGraphicsPSO &gt;</type>
          <declname>hPSO</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="71" column="30"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a39811e0b24b0ed0da3a7c7b5e2703209" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_t_handle" kindref="compound">THandle</ref>&lt; CComputePSO &gt;</type>
        <definition>static THandle&lt;CComputePSO&gt; Raven::Renderer::Device::CDeviceLayer::GetOrCreateComputePSO</definition>
        <argsstring>(const SComputePSODesc &amp;desc)</argsstring>
        <name>GetOrCreateComputePSO</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_renderer_1_1_s_compute_p_s_o_desc" kindref="compound">SComputePSODesc</ref> &amp;</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="74" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a354ba2210156eb15836fb5caa13eb8fc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CComputePSO &amp;</type>
        <definition>static CComputePSO&amp; Raven::Renderer::Device::CDeviceLayer::GetPSO</definition>
        <argsstring>(THandle&lt; CComputePSO &gt; hPSO)</argsstring>
        <name>GetPSO</name>
        <param>
          <type><ref refid="struct_raven_1_1_t_handle" kindref="compound">THandle</ref>&lt; CComputePSO &gt;</type>
          <declname>hPSO</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="75" column="29"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a8dc35cc365f1d97102701cae4a289afb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_t_handle" kindref="compound">THandle</ref>&lt; CRaytracingPSO &gt;</type>
        <definition>static THandle&lt;CRaytracingPSO&gt; Raven::Renderer::Device::CDeviceLayer::GetOrCreateRaytracingPSO</definition>
        <argsstring>(const SRaytracingPSODesc &amp;desc)</argsstring>
        <name>GetOrCreateRaytracingPSO</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_renderer_1_1_s_raytracing_p_s_o_desc" kindref="compound">SRaytracingPSODesc</ref> &amp;</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="78" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a60f318b2273cff3b3d33289e16fc4ae4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CRaytracingPSO &amp;</type>
        <definition>static CRaytracingPSO&amp; Raven::Renderer::Device::CDeviceLayer::GetPSO</definition>
        <argsstring>(THandle&lt; CRaytracingPSO &gt; hPSO)</argsstring>
        <name>GetPSO</name>
        <param>
          <type><ref refid="struct_raven_1_1_t_handle" kindref="compound">THandle</ref>&lt; CRaytracingPSO &gt;</type>
          <declname>hPSO</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="80" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1ae833e50b4cac3552ecd1ac2d195ca721" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_render_pass" kindref="compound">Device::CDeviceRenderPass</ref> *</type>
        <definition>static Device::CDeviceRenderPass* Raven::Renderer::Device::CDeviceLayer::GetOrCreateDeviceRenderPass</definition>
        <argsstring>(const Device::SRenderPassDescription &amp;desc)</argsstring>
        <name>GetOrCreateDeviceRenderPass</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_renderer_1_1_device_1_1_s_render_pass_description" kindref="compound">Device::SRenderPassDescription</ref> &amp;</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="83" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a5edad8bc6cf2436d739d6ddc64b2a0f2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_raven_1_1_renderer_1_1_device_1_1_c_framebuffer" kindref="compound">Device::CFramebuffer</ref> *</type>
        <definition>static Device::CFramebuffer* Raven::Renderer::Device::CDeviceLayer::GetOrCreateFramebuffer</definition>
        <argsstring>(const SRenderPassInputDescription &amp;desc, const CDeviceRenderPass &amp;devicePass)</argsstring>
        <name>GetOrCreateFramebuffer</name>
        <param>
          <type>const SRenderPassInputDescription &amp;</type>
          <declname>desc</declname>
        </param>
        <param>
          <type>const <ref refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_render_pass" kindref="compound">CDeviceRenderPass</ref> &amp;</type>
          <declname>devicePass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="85" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a9e4fb9c22f5b4ede21001fdda94dbace" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_renderer_1_1_device_1_1_c_heap" kindref="compound">CHeap</ref> &amp;</type>
        <definition>static CHeap&amp; Raven::Renderer::Device::CDeviceLayer::BufferHeap</definition>
        <argsstring>()</argsstring>
        <name>BufferHeap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="88" column="23" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" bodystart="88" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a73bac6d0d456c9f791924029ef708848" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_renderer_1_1_device_1_1_c_heap" kindref="compound">CHeap</ref> &amp;</type>
        <definition>static CHeap&amp; Raven::Renderer::Device::CDeviceLayer::TextureHeap</definition>
        <argsstring>()</argsstring>
        <name>TextureHeap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="91" column="23" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" bodystart="91" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a0abda3477c2b9cdd66338c285be07fe0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>CDevice &amp;</type>
        <definition>static CDevice&amp; Raven::Renderer::Device::CDeviceLayer::GetDevice</definition>
        <argsstring>()</argsstring>
        <name>GetDevice</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="94" column="25" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a134ca54eb0d003af4e9159358651b775" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ESamplerType</type>
        <definition>static ESamplerType Raven::Renderer::Device::CDeviceLayer::CreateSampler</definition>
        <argsstring>(const SSamplerDescription &amp;desc)</argsstring>
        <name>CreateSampler</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_renderer_1_1_s_sampler_description" kindref="compound">SSamplerDescription</ref> &amp;</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="109" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a0505692285992fa09fcf377e1b4f61f2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_renderer_1_1_device_1_1_s_texture_sampler" kindref="compound">STextureSampler</ref> &amp;</type>
        <definition>static STextureSampler&amp; Raven::Renderer::Device::CDeviceLayer::LookUpSampler</definition>
        <argsstring>(const ESamplerType &amp;desc)</argsstring>
        <name>LookUpSampler</name>
        <param>
          <type>const ESamplerType &amp;</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="111" column="38"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a11fab8eb39bbe75c01b66f52d016bf7c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_raven_1_1_renderer_1_1_device_1_1_c_fence" kindref="compound">CFence</ref> *</type>
        <definition>static CFence* Raven::Renderer::Device::CDeviceLayer::GetFence</definition>
        <argsstring>()</argsstring>
        <name>GetFence</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="113" column="24"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a5425f40a1c51d02c31fb25229932200e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Raven::Renderer::Device::CDeviceLayer::ReleaseFence</definition>
        <argsstring>(CFence *pFence)</argsstring>
        <name>ReleaseFence</name>
        <param>
          <type><ref refid="class_raven_1_1_renderer_1_1_device_1_1_c_fence" kindref="compound">CFence</ref> *</type>
          <declname>pFence</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="114" column="38"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1aaa73cd898c27c1ad36b31755adaccb4f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_raven_1_1_renderer_1_1_device_1_1_c_image" kindref="compound">CImage</ref> *</type>
        <definition>static CImage* Raven::Renderer::Device::CDeviceLayer::CreateTexture</definition>
        <argsstring>(const STextureLayout &amp;desc, bool withMemory=true)</argsstring>
        <name>CreateTexture</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_renderer_1_1_device_1_1_s_texture_layout" kindref="compound">STextureLayout</ref> &amp;</type>
          <declname>desc</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>withMemory</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="116" column="24"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1ab4c82f3f2d808c1d1c53fb24e5058857" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_raven_1_1_renderer_1_1_device_1_1_c_buffer" kindref="compound">CBuffer</ref> *</type>
        <definition>static CBuffer* Raven::Renderer::Device::CDeviceLayer::CreateBuffer</definition>
        <argsstring>(const SBufferLayout &amp;desc)</argsstring>
        <name>CreateBuffer</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_renderer_1_1_device_1_1_s_buffer_layout" kindref="compound">SBufferLayout</ref> &amp;</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="117" column="25"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1ac5740f146996aa499594e3db312eb5b0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Raven::Renderer::Device::CDeviceLayer::ReleaseTexture</definition>
        <argsstring>(CImage *&amp;pImage, CCommandList *pCmdFence=nullptr)</argsstring>
        <name>ReleaseTexture</name>
        <param>
          <type><ref refid="class_raven_1_1_renderer_1_1_device_1_1_c_image" kindref="compound">CImage</ref> *&amp;</type>
          <declname>pImage</declname>
        </param>
        <param>
          <type>CCommandList *</type>
          <declname>pCmdFence</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="118" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a603e3bf652153066e439e85ca4bca462" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Raven::Renderer::Device::CDeviceLayer::ReleaseBuffer</definition>
        <argsstring>(CBuffer *&amp;pBuffer, CCommandList *pCmdFence=nullptr)</argsstring>
        <name>ReleaseBuffer</name>
        <param>
          <type><ref refid="class_raven_1_1_renderer_1_1_device_1_1_c_buffer" kindref="compound">CBuffer</ref> *&amp;</type>
          <declname>pBuffer</declname>
        </param>
        <param>
          <type>CCommandList *</type>
          <declname>pCmdFence</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="119" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1af113d6465b57c7ff413e2d0656364c61" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_t_handle" kindref="compound">THandle</ref>&lt; <ref refid="struct_raven_1_1_renderer_1_1_image_view" kindref="compound">ImageView</ref> &gt;</type>
        <definition>static THandle&lt;ImageView&gt; Raven::Renderer::Device::CDeviceLayer::CreateImageView</definition>
        <argsstring>(THandle&lt; Texture &gt; hTexture, ESamplerType eSamplerType, uint32 firstMip, uint32 mipCount, uint32 firstSlice, uint32 sliceCount) noexcept</argsstring>
        <name>CreateImageView</name>
        <param>
          <type><ref refid="struct_raven_1_1_t_handle" kindref="compound">THandle</ref>&lt; Texture &gt;</type>
          <declname>hTexture</declname>
        </param>
        <param>
          <type>ESamplerType</type>
          <declname>eSamplerType</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>firstMip</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>mipCount</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>firstSlice</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>sliceCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="122" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a2bfc6d3e9a2e0c0135da3be74f203187" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_renderer_1_1_s_buffer_sub_allocation" kindref="compound">SBufferSubAllocation</ref></type>
        <definition>SBufferSubAllocation Raven::Renderer::Device::CDeviceLayer::GetStagingBuffer</definition>
        <argsstring>(const uint64 size)</argsstring>
        <name>GetStagingBuffer</name>
        <param>
          <type>const uint64</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="96" column="31"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a3233c58016cae87bca241ba097ae310e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::Renderer::Device::CDeviceLayer::ReleaseStagingBuffer</definition>
        <argsstring>(const SBufferSubAllocation &amp;buf, const CVkCommandBuffer *pCmd)</argsstring>
        <name>ReleaseStagingBuffer</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_renderer_1_1_s_buffer_sub_allocation" kindref="compound">SBufferSubAllocation</ref> &amp;</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>const <ref refid="class_raven_1_1_renderer_1_1_c_vk_command_buffer" kindref="compound">CVkCommandBuffer</ref> *</type>
          <declname>pCmd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="97" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1ad9cb5f49243fda8339d0587320ad5958" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::Renderer::Device::CDeviceLayer::TickStagingManager</definition>
        <argsstring>()</argsstring>
        <name>TickStagingManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="99" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1aa9744187546fd099d1240537fc595b21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_renderer_1_1_s_acceleration_structure" kindref="compound">SAccelerationStructure</ref> *</type>
        <definition>SAccelerationStructure* Raven::Renderer::Device::CDeviceLayer::GetAccelerationStructure</definition>
        <argsstring>(const THandle&lt; SAccelerationStructure &gt; &amp;hAccelerationStructure)</argsstring>
        <name>GetAccelerationStructure</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_t_handle" kindref="compound">THandle</ref>&lt; <ref refid="struct_raven_1_1_renderer_1_1_s_acceleration_structure" kindref="compound">SAccelerationStructure</ref> &gt; &amp;</type>
          <declname>hAccelerationStructure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="101" column="33"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a0ab36312a318de3dc4bb25c4eaed2b5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_raven_1_1_renderer_1_1_s_acceleration_structure" kindref="compound">SAccelerationStructure</ref> *</type>
        <definition>SAccelerationStructure* Raven::Renderer::Device::CDeviceLayer::CreateAccelerationStructure</definition>
        <argsstring>()</argsstring>
        <name>CreateAccelerationStructure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="103" column="33"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a869cb5ddec60411c19f1a0fac4007841" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::Renderer::Device::CDeviceLayer::ReleaseAccelerationStructure</definition>
        <argsstring>(const THandle&lt; SAccelerationStructure &gt; &amp;hAccelerationStructure, CCommandList *pCmd)</argsstring>
        <name>ReleaseAccelerationStructure</name>
        <param>
          <type>const <ref refid="struct_raven_1_1_t_handle" kindref="compound">THandle</ref>&lt; <ref refid="struct_raven_1_1_renderer_1_1_s_acceleration_structure" kindref="compound">SAccelerationStructure</ref> &gt; &amp;</type>
          <declname>hAccelerationStructure</declname>
        </param>
        <param>
          <type>CCommandList *</type>
          <declname>pCmd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="104" column="47"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" line="54" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenRenderer/Private/DeviceLayer/DeviceLayer.hpp" bodystart="54" bodyend="136"/>
    <listofallmembers>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a9e4fb9c22f5b4ede21001fdda94dbace" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>BufferHeap</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a7d2dde2172884ac23cdbe029cfe34046" prot="private" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>CDeviceLayer</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a0ab36312a318de3dc4bb25c4eaed2b5f" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>CreateAccelerationStructure</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1ab4c82f3f2d808c1d1c53fb24e5058857" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>CreateBuffer</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1af113d6465b57c7ff413e2d0656364c61" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>CreateImageView</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a134ca54eb0d003af4e9159358651b775" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>CreateSampler</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1aaa73cd898c27c1ad36b31755adaccb4f" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>CreateTexture</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1aba2c9104a2f6ff9c7703c8a87744e73c" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>Get</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1aa9744187546fd099d1240537fc595b21" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>GetAccelerationStructure</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a0abda3477c2b9cdd66338c285be07fe0" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>GetDevice</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a11fab8eb39bbe75c01b66f52d016bf7c" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>GetFence</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a39811e0b24b0ed0da3a7c7b5e2703209" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>GetOrCreateComputePSO</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1ae833e50b4cac3552ecd1ac2d195ca721" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>GetOrCreateDeviceRenderPass</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a5edad8bc6cf2436d739d6ddc64b2a0f2" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>GetOrCreateFramebuffer</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a995c793653c5c838014c860165a78a28" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>GetOrCreateGraphicsPSO</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a8dc35cc365f1d97102701cae4a289afb" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>GetOrCreateRaytracingPSO</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a17f200bc67344654cc9d311071db2f52" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>GetPSO</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a354ba2210156eb15836fb5caa13eb8fc" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>GetPSO</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a60f318b2273cff3b3d33289e16fc4ae4" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>GetPSO</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a2bfc6d3e9a2e0c0135da3be74f203187" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>GetStagingBuffer</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a19d896fcf11a1c50e42b0cf53b7e4a46" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>Initialise</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a0505692285992fa09fcf377e1b4f61f2" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>LookUpSampler</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1ae18a6d2add270822c1628f45ed7c66fa" prot="private" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>m_pBufferHeap</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a5b57edf85edebb9f987f397320444c41" prot="private" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>m_pDevice</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a8db3ccac0c06d045b6cd4a7cb02384e5" prot="private" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>m_pObjectCache</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a193fe91af06b82c3ede23c97e0afe06b" prot="private" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>m_pStagingManager</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a6fed9f121953b2312d2057ae1fca39a7" prot="private" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>m_pTextureHeap</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1adc123603a52396726140eb8e2c5d54d7" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>Release</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a869cb5ddec60411c19f1a0fac4007841" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>ReleaseAccelerationStructure</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a603e3bf652153066e439e85ca4bca462" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>ReleaseBuffer</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a5425f40a1c51d02c31fb25229932200e" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>ReleaseFence</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a4619c3658bbdf223ef3a7cfa5fdeeca9" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>ReleaseFramebuffers</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a208064df4da93fe90f48f0cc94e5f593" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>ReleasePSOCache</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a3233c58016cae87bca241ba097ae310e" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>ReleaseStagingBuffer</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1ac5740f146996aa499594e3db312eb5b0" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>ReleaseTexture</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a2efdfbe16bf46ea348d397b448769b1b" prot="private" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>s_pInstance</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1a73bac6d0d456c9f791924029ef708848" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>TextureHeap</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1ad9cb5f49243fda8339d0587320ad5958" prot="public" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>TickStagingManager</name></member>
      <member refid="class_raven_1_1_renderer_1_1_device_1_1_c_device_layer_1ae1ae6a9f8e1d8479c07f18502e116e47" prot="private" virt="non-virtual"><scope>Raven::Renderer::Device::CDeviceLayer</scope><name>~CDeviceLayer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

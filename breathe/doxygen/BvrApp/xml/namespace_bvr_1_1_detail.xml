<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespace_bvr_1_1_detail" kind="namespace" language="C++">
    <compoundname>Bvr::Detail</compoundname>
    <innerclass refid="struct_bvr_1_1_detail_1_1_copy_decorators" prot="public">Bvr::Detail::CopyDecorators</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_copy_decorators_3_01const_01_src_00_01_dst_01_4" prot="public">Bvr::Detail::CopyDecorators&lt; const Src, Dst &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_copy_decorators_3_01_src_01_6_00_01_dst_01_4" prot="public">Bvr::Detail::CopyDecorators&lt; Src &amp;, Dst &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_copy_decorators_3_01_src_01_5_00_01_dst_01_4" prot="public">Bvr::Detail::CopyDecorators&lt; Src *, Dst &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_is_arg_arrgegate" prot="public">Bvr::Detail::IsArgArrgegate</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_is_arg_arrgegate_3_01_q_01_4" prot="public">Bvr::Detail::IsArgArrgegate&lt; Q &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_is_arg_arrgegate_3_01_t_sys_stack_3_01_t_8_8_8_01_4_01_4" prot="public">Bvr::Detail::IsArgArrgegate&lt; TSysStack&lt; T... &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_is_from_res_map" prot="public">Bvr::Detail::IsFromResMap</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_is_from_res_map_3_01_w_res_3_01_t_01_4_01_4" prot="public">Bvr::Detail::IsFromResMap&lt; WRes&lt; T &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_is_world_resource" prot="public">Bvr::Detail::IsWorldResource</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_is_world_resource_3_01_q_01_4" prot="public">Bvr::Detail::IsWorldResource&lt; Q &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_is_world_resource_3_01_w_res_3_01_t_01_4_01_4" prot="public">Bvr::Detail::IsWorldResource&lt; WRes&lt; T &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_system_traits_t" prot="public">Bvr::Detail::SystemTraitsT</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_are_tuple_args_world" prot="public">Bvr::Detail::TAreTupleArgsWorld</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_are_tuple_args_world_3_01_t_checked_helper_3_01_list_01_4_01_4" prot="public">Bvr::Detail::TAreTupleArgsWorld&lt; TCheckedHelper&lt; List &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_are_tuple_args_world_3_01_t_sys_stack_3_01_t_8_8_8_01_4_01_4" prot="public">Bvr::Detail::TAreTupleArgsWorld&lt; TSysStack&lt; T... &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_are_tuple_args_world_3_01_type_list_3_01_t_8_8_8_01_4_01_4" prot="public">Bvr::Detail::TAreTupleArgsWorld&lt; TypeList&lt; T... &gt; &gt;</innerclass>
    <innerclass refid="class_bvr_1_1_detail_1_1_t_arg_group" prot="public">Bvr::Detail::TArgGroup</innerclass>
    <innerclass refid="class_bvr_1_1_detail_1_1_t_arg_group_3_01_t_00_01_rest_8_8_8_01_4" prot="public">Bvr::Detail::TArgGroup&lt; T, Rest... &gt;</innerclass>
    <innerclass refid="class_bvr_1_1_detail_1_1_t_arg_group_3_4" prot="public">Bvr::Detail::TArgGroup&lt;&gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_arg_idx" prot="public">Bvr::Detail::TArgIdx</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_arg_idx_3_01_t_00_01_type_list_3_01_u_00_01_ts_8_8_8_01_4_01_4" prot="public">Bvr::Detail::TArgIdx&lt; T, TypeList&lt; U, Ts... &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_arg_idx_3_01_t_00_01_type_list_3_4_01_4" prot="public">Bvr::Detail::TArgIdx&lt; T, TypeList&lt;&gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_args_count" prot="public">Bvr::Detail::TArgsCount</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_args_count_3_01_fn_01_4" prot="public">Bvr::Detail::TArgsCount&lt; Fn &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_args_count_3_01_q_01_4" prot="public">Bvr::Detail::TArgsCount&lt; Q &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_args_count_3_01_t_01_4" prot="public">Bvr::Detail::TArgsCount&lt; T &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_args_count_3_01_type_list_3_01_ts_8_8_8_01_4_01_4" prot="public">Bvr::Detail::TArgsCount&lt; TypeList&lt; Ts... &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_args_count_3_4" prot="public">Bvr::Detail::TArgsCount&lt;&gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_checked_helper" prot="public">Bvr::Detail::TCheckedHelper</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_checked_helper_3_01_t_sys_stack_3_01_args_8_8_8_01_4_01_4" prot="public">Bvr::Detail::TCheckedHelper&lt; TSysStack&lt; Args... &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_checked_helper_3_01_type_list_3_01_args_8_8_8_01_4_01_4" prot="public">Bvr::Detail::TCheckedHelper&lt; TypeList&lt; Args... &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_extracted_type" prot="public">Bvr::Detail::TExtractedType</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_extracted_type_3_01_t_01_4" prot="public">Bvr::Detail::TExtractedType&lt; T &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_get_args_group" prot="public">Bvr::Detail::TGetArgsGroup</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_get_args_group_3_01_type_list_3_01_ts_8_8_8_01_4_01_4" prot="public">Bvr::Detail::TGetArgsGroup&lt; TypeList&lt; Ts... &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_has_type" prot="public">Bvr::Detail::THasType</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_has_type_3_01_t_00_01_type_list_3_01_us_8_8_8_01_4_01_4" prot="public">Bvr::Detail::THasType&lt; T, TypeList&lt; Us... &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_remove_duplicate_constants" prot="public">Bvr::Detail::TRemoveDuplicateConstants</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_remove_duplicate_constants_3_01_type_list_3_01_ts_8_8_8_01_4_01_4" prot="public">Bvr::Detail::TRemoveDuplicateConstants&lt; TypeList&lt; Ts... &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_system_arg_traits" prot="public">Bvr::Detail::TSystemArgTraits</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_system_arg_traits_3_01const_01_t_sys_stack_3_01_t_8_8_8_01_4_01_6_01_4" prot="public">Bvr::Detail::TSystemArgTraits&lt; const TSysStack&lt; T... &gt; &amp; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_system_arg_traits_3_01_option_3_01_t_01_4_01_4" prot="public">Bvr::Detail::TSystemArgTraits&lt; Option&lt; T &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_system_arg_traits_3_01_t_01_4" prot="public">Bvr::Detail::TSystemArgTraits&lt; T &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_system_arg_traits_3_01_t_sys_stack_3_01_t_8_8_8_01_4_01_6_01_4" prot="public">Bvr::Detail::TSystemArgTraits&lt; TSysStack&lt; T... &gt; &amp; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_system_arg_traits_3_01_t_sys_stack_3_01_t_8_8_8_01_4_01_4" prot="public">Bvr::Detail::TSystemArgTraits&lt; TSysStack&lt; T... &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_system_arg_traits_3_01_type_list_3_01_t_8_8_8_01_4_01_4" prot="public">Bvr::Detail::TSystemArgTraits&lt; TypeList&lt; T... &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_system_arg_traits_3_01_w_res_3_01_t_01_4_01_4" prot="public">Bvr::Detail::TSystemArgTraits&lt; WRes&lt; T &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_system_function" prot="public">Bvr::Detail::TSystemFunction</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_unique" prot="public">Bvr::Detail::TUnique</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_unique_3_01_type_list_3_01_ts_8_8_8_01_4_00_01_u_00_01_us_8_8_8_01_4" prot="public">Bvr::Detail::TUnique&lt; TypeList&lt; Ts... &gt;, U, Us... &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_unique_type_list" prot="public">Bvr::Detail::TUniqueTypeList</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_t_unique_type_list_3_01_type_list_3_01_t_8_8_8_01_4_01_4" prot="public">Bvr::Detail::TUniqueTypeList&lt; TypeList&lt; T... &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_unpack_to_list" prot="public">Bvr::Detail::UnpackToList</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_unpack_to_list_3_01const_01_q_01_4" prot="public">Bvr::Detail::UnpackToList&lt; const Q &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_unpack_to_list_3_01const_01_type_list_3_01_ts_8_8_8_01_4_01_4" prot="public">Bvr::Detail::UnpackToList&lt; const TypeList&lt; Ts... &gt; &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_unpack_to_list_3_01_q_01_4" prot="public">Bvr::Detail::UnpackToList&lt; Q &gt;</innerclass>
    <innerclass refid="struct_bvr_1_1_detail_1_1_unpack_to_list_3_01_type_list_3_01_ts_8_8_8_01_4_01_4" prot="public">Bvr::Detail::UnpackToList&lt; TypeList&lt; Ts... &gt; &gt;</innerclass>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_label_8hpp_1a20232edb565021a8844c94e775b9e5a0" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>std::disjunction&lt; std::is_same&lt; HashedString, T &gt;, std::is_same&lt; HashedWString, T &gt;, std::is_constructible&lt; TBasicHashedString&lt; char &gt;, T &gt;, std::is_constructible&lt; TBasicHashedString&lt; wchar_t &gt;, T &gt; &gt;</type>
        <definition>using Bvr::Detail::IsStringHashable = typedef std::disjunction&lt;std::is_same&lt;HashedString, T&gt;, std::is_same&lt;HashedWString, T&gt;, std::is_constructible&lt;TBasicHashedString&lt;char&gt;, T&gt;, std::is_constructible&lt;TBasicHashedString&lt;wchar_t&gt;, T&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>IsStringHashable</name>
        <qualifiedname>Bvr::Detail::IsStringHashable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/Label.hpp" line="7" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/Label.hpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_app_traits_8hpp_1ab9240cb850179d8ce248b7053701fe36" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename Src</type>
          </param>
          <param>
            <type>typename Dst</type>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_bvr_1_1_detail_1_1_copy_decorators" kindref="compound">CopyDecorators</ref>&lt; Src, Dst &gt;::Type</type>
        <definition>using Bvr::Detail::CopyDecoratorsT = typedef typename CopyDecorators&lt;Src, Dst&gt;::Type</definition>
        <argsstring></argsstring>
        <name>CopyDecoratorsT</name>
        <qualifiedname>Bvr::Detail::CopyDecoratorsT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp" line="32" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_app_traits_8hpp_1ac77dd17adaa4676ba5430a0170469995" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>typename std::remove_pointer_t&lt; std::remove_reference_t&lt; T &gt; &gt;</type>
        <definition>using Bvr::Detail::SysArgDecayT = typedef typename std::remove_pointer_t&lt;std::remove_reference_t&lt;T&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>SysArgDecayT</name>
        <qualifiedname>Bvr::Detail::SysArgDecayT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp" line="35" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_app_traits_8hpp_1a1caec776276324bd44f0cf28e119d86a" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>CopyDecoratorsT&lt; T, typename Detail::SysArgDecayT&lt; T &gt;::TAppResource &gt;</type>
        <definition>using Bvr::Detail::TAppResource = typedef CopyDecoratorsT&lt;T, typename Detail::SysArgDecayT&lt;T&gt;::TAppResource&gt;</definition>
        <argsstring></argsstring>
        <name>TAppResource</name>
        <qualifiedname>Bvr::Detail::TAppResource</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp" line="43" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_app_traits_8hpp_1ab136481f47d0f598502d5ec2ef266bfa" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>SysArgDecayT&lt; typename <ref refid="struct_bvr_1_1_detail_1_1_t_extracted_type" kindref="compound">TExtractedType</ref>&lt; T &gt;::Type &gt;</type>
        <definition>using Bvr::Detail::TDecayedExtractedArg = typedef SysArgDecayT&lt;typename TExtractedType&lt;T&gt;::Type&gt;</definition>
        <argsstring></argsstring>
        <name>TDecayedExtractedArg</name>
        <qualifiedname>Bvr::Detail::TDecayedExtractedArg</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp" line="54" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_app_traits_8hpp_1a5935c59e3e219df4b763654a38de4162" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_bvr_1_1_detail_1_1_t_arg_group" kindref="compound">TArgGroup</ref>&lt; Ts... &gt;</type>
        <definition>using Bvr::Detail::TSysStack = typedef TArgGroup&lt;Ts...&gt;</definition>
        <argsstring></argsstring>
        <name>TSysStack</name>
        <qualifiedname>Bvr::Detail::TSysStack</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp" line="153" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_app_traits_8hpp_1ad9fece5951674c7c3021a4066ba1e9f0" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type><ref refid="struct_bvr_1_1_detail_1_1_t_get_args_group" kindref="compound">TGetArgsGroup</ref>&lt; T... &gt;::Type</type>
        <definition>using Bvr::Detail::TArgGroupFor = typedef TGetArgsGroup&lt;T...&gt;::Type</definition>
        <argsstring></argsstring>
        <name>TArgGroupFor</name>
        <qualifiedname>Bvr::Detail::TArgGroupFor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp" line="163" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_app_traits_8hpp_1aabad871200c3da11d1729ff472e8d41a" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>std::disjunction&lt; <ref refid="struct_bvr_1_1_detail_1_1_is_arg_arrgegate" kindref="compound">IsArgArrgegate</ref>&lt; T &gt;... &gt;</type>
        <definition>using Bvr::Detail::TAreAnyArgAggregate = typedef std::disjunction&lt;IsArgArrgegate&lt;T&gt;...&gt;</definition>
        <argsstring></argsstring>
        <name>TAreAnyArgAggregate</name>
        <qualifiedname>Bvr::Detail::TAreAnyArgAggregate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp" line="207" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_app_traits_8hpp_1a69910443ec7859cabb514ebcce61f0bf" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>Components</declname>
            <defname>Components</defname>
          </param>
        </templateparamlist>
        <type>typename Meta::TypeListCat&lt; Components... &gt;::Type</type>
        <definition>using Bvr::Detail::ArgsListCatT = typedef typename Meta::TypeListCat&lt;Components...&gt;::Type</definition>
        <argsstring></argsstring>
        <name>ArgsListCatT</name>
        <qualifiedname>Bvr::Detail::ArgsListCatT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp" line="230" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_app_traits_8hpp_1aec6dd074b4d135def7fd1ec22d49a565" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>ArgsListCatT&lt; typename <ref refid="struct_bvr_1_1_detail_1_1_unpack_to_list" kindref="compound">UnpackToList</ref>&lt; typename std::remove_reference_t&lt; Ts &gt; &gt;::Type... &gt;</type>
        <definition>using Bvr::Detail::TUnpacked = typedef ArgsListCatT&lt; typename UnpackToList&lt;typename std::remove_reference_t&lt;Ts&gt; &gt;::Type...&gt;</definition>
        <argsstring></argsstring>
        <name>TUnpacked</name>
        <qualifiedname>Bvr::Detail::TUnpacked</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp" line="237" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_app_traits_8hpp_1a31b2fb852b93909ca6495a3a4b05a88d" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>ArgsListCatT&lt; TUnpacked&lt; T... &gt; &gt;</type>
        <definition>using Bvr::Detail::TArgConcat = typedef ArgsListCatT&lt;TUnpacked&lt;T...&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>TArgConcat</name>
        <qualifiedname>Bvr::Detail::TArgConcat</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp" line="255" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_app_traits_8hpp_1abcb3802466f0db8d16c7828ccafb38d6" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>std::disjunction&lt; <ref refid="struct_bvr_1_1_detail_1_1_is_world_resource" kindref="compound">IsWorldResource</ref>&lt; Detail::SysArgDecayT&lt; T &gt; &gt;... &gt;</type>
        <definition>using Bvr::Detail::AreWorldArguments = typedef std::disjunction&lt;IsWorldResource&lt;Detail::SysArgDecayT&lt;T&gt; &gt;...&gt;</definition>
        <argsstring></argsstring>
        <name>AreWorldArguments</name>
        <qualifiedname>Bvr::Detail::AreWorldArguments</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp" line="298" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_app_traits_8hpp_1aba0b70fa51c20534ceba0cc7da42db2d" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename SysTraitsT</type>
            <defval>Detail::SystemTraitsT&lt;T&gt;</defval>
          </param>
        </templateparamlist>
        <type><ref refid="struct_bvr_1_1_detail_1_1_t_are_tuple_args_world" kindref="compound">TAreTupleArgsWorld</ref>&lt; typename SysTraitsT::CheckT &gt;</type>
        <definition>using Bvr::Detail::TIsWorldSystem = typedef TAreTupleArgsWorld&lt;typename SysTraitsT::CheckT&gt;</definition>
        <argsstring></argsstring>
        <name>TIsWorldSystem</name>
        <qualifiedname>Bvr::Detail::TIsWorldSystem</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp" line="316" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp" bodystart="316" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="_bvr_app_8hpp_1a481c72ebd42a154304fc4f801a5c48b6" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool Bvr::Detail::IsValid</definition>
        <argsstring>(const WRes&lt; T &gt; &amp;item) noexcept</argsstring>
        <name>IsValid</name>
        <qualifiedname>Bvr::Detail::IsValid</qualifiedname>
        <param>
          <type>const <ref refid="class_bvr_1_1_w_res" kindref="compound">WRes</ref>&lt; T &gt; &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/BvrApp.hpp" line="245" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/BvrApp.hpp" bodystart="245" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="_app_traits_8hpp_1a6e70b5d53333130afbf5171097900d65" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool Bvr::Detail::IsValid</definition>
        <argsstring>(const T &amp;item) noexcept</argsstring>
        <name>IsValid</name>
        <qualifiedname>Bvr::Detail::IsValid</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp" line="322" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp" bodystart="322" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="_app_traits_8hpp_1aa2fb33de8a0a61130ede0e8985321348" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool Bvr::Detail::IsValid</definition>
        <argsstring>(const T &amp;item) noexcept</argsstring>
        <name>IsValid</name>
        <qualifiedname>Bvr::Detail::IsValid</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>item</declname>
        </param>
    <requiresclause>std::is_pointer_v&lt;T&gt;    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp" line="328" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp" bodystart="328" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="_app_traits_8hpp_1a5a15dfc6449955653c1c5305bef14293" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t...</type>
            <declname>I</declname>
            <defname>I</defname>
          </param>
          <param>
            <type>typename Stack</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool Bvr::Detail::IsValid</definition>
        <argsstring>(const Stack &amp;args, std::index_sequence&lt; I... &gt;) noexcept</argsstring>
        <name>IsValid</name>
        <qualifiedname>Bvr::Detail::IsValid</qualifiedname>
        <param>
          <type>const Stack &amp;</type>
          <declname>args</declname>
        </param>
        <param>
          <type>std::index_sequence&lt; I... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp" line="347" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp" bodystart="347" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="_app_traits_8hpp_1abf5aa97678833e208e588e1214b38558" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool Bvr::Detail::IsValid</definition>
        <argsstring>(const TSysStack&lt; T... &gt; &amp;args) noexcept</argsstring>
        <name>IsValid</name>
        <qualifiedname>Bvr::Detail::IsValid</qualifiedname>
        <param>
          <type>const <ref refid="class_bvr_1_1_detail_1_1_t_arg_group" kindref="compound">TSysStack</ref>&lt; T... &gt; &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp" line="353" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/AppTraits.hpp" bodystart="353" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="_system_8hpp_1afdefae26b36bc092ba45b1dda7a27575" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool Bvr::Detail::IsValid</definition>
        <argsstring>(const Option&lt; T &gt; &amp;item) noexcept</argsstring>
        <name>IsValid</name>
        <qualifiedname>Bvr::Detail::IsValid</qualifiedname>
        <param>
          <type>const <ref refid="class_bvr_1_1_option" kindref="compound">Option</ref>&lt; T &gt; &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/System.hpp" line="26" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/System.hpp" bodystart="26" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="_system_8hpp_1ad8af0fab4f750ba5b4ae778eb2871e59" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Bvr::Detail::ExtractToTuple</definition>
        <argsstring>(App &amp;app, CWorld *, T &amp;out) noexcept</argsstring>
        <name>ExtractToTuple</name>
        <qualifiedname>Bvr::Detail::ExtractToTuple</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_app" kindref="compound">App</ref> &amp;</type>
          <declname>app</declname>
        </param>
        <param>
          <type>CWorld *</type>
          <defname>pWorld</defname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/System.hpp" line="39" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/System.hpp" bodystart="39" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="_system_8hpp_1a5b5cc4e870583140fe302ce1af1e0469" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>CompT</declname>
            <defname>CompT</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>ExcludeT</declname>
            <defname>ExcludeT</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Bvr::Detail::ExtractQuery</definition>
        <argsstring>(CWorld &amp;pWorld, Query&lt; With&lt; CompT... &gt;, WithOut&lt; ExcludeT... &gt; &gt; &amp;out) noexcept</argsstring>
        <name>ExtractQuery</name>
        <qualifiedname>Bvr::Detail::ExtractQuery</qualifiedname>
        <param>
          <type>CWorld &amp;</type>
          <declname>pWorld</declname>
        </param>
        <param>
          <type>Query&lt; With&lt; CompT... &gt;, WithOut&lt; ExcludeT... &gt; &gt; &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/System.hpp" line="53" column="5" declfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/System.hpp" declline="53" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="_system_8hpp_1a6d85e989f748f4263d3e3ebaf095b723" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TRes</type>
          </param>
          <param>
            <type>typename TOut</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Bvr::Detail::ExtractWorldResource</definition>
        <argsstring>(CWorld &amp;world, TOut &amp;out) noexcept</argsstring>
        <name>ExtractWorldResource</name>
        <qualifiedname>Bvr::Detail::ExtractWorldResource</qualifiedname>
        <param>
          <type>CWorld &amp;</type>
          <declname>world</declname>
        </param>
        <param>
          <type>TOut &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/System.hpp" line="57" column="10" declfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/System.hpp" declline="57" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="_system_8hpp_1af33f3a9ebe5a8efca9eaaaefa738174b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Stack</type>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>static T &amp; Bvr::Detail::Get</definition>
        <argsstring>(Stack &amp;args)</argsstring>
        <name>Get</name>
        <qualifiedname>Bvr::Detail::Get</qualifiedname>
        <param>
          <type>Stack &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/System.hpp" line="77" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/System.hpp" bodystart="77" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="_system_8hpp_1a46b52ff251c37325cb8305d5f8d5f5b6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
          <param>
            <type>typename Stack</type>
          </param>
        </templateparamlist>
        <type>auto &amp;</type>
        <definition>static auto &amp; Bvr::Detail::Get</definition>
        <argsstring>(Stack &amp;args)</argsstring>
        <name>Get</name>
        <qualifiedname>Bvr::Detail::Get</qualifiedname>
        <param>
          <type>Stack &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/System.hpp" line="84" column="31" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/System.hpp" bodystart="84" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="_system_8hpp_1a6f7498e42aa658138b16e3bbb44f3e62" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t...</type>
            <declname>I</declname>
            <defname>I</defname>
          </param>
          <param>
            <type>typename Stack</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Bvr::Detail::ExtractToTuple</definition>
        <argsstring>(App &amp;app, CWorld *pWorld, Stack &amp;out, std::index_sequence&lt; I... &gt;) noexcept</argsstring>
        <name>ExtractToTuple</name>
        <qualifiedname>Bvr::Detail::ExtractToTuple</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_app" kindref="compound">App</ref> &amp;</type>
          <declname>app</declname>
        </param>
        <param>
          <type>CWorld *</type>
          <declname>pWorld</declname>
        </param>
        <param>
          <type>Stack &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>std::index_sequence&lt; I... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/System.hpp" line="94" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/System.hpp" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="_system_8hpp_1a8102a42725bf924ec694b3d3460f30a3" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Bvr::Detail::ExtractToTuple</definition>
        <argsstring>(App &amp;app, CWorld *pWorld, TSysStack&lt; T... &gt; &amp;out) noexcept</argsstring>
        <name>ExtractToTuple</name>
        <qualifiedname>Bvr::Detail::ExtractToTuple</qualifiedname>
        <param>
          <type><ref refid="struct_bvr_1_1_app" kindref="compound">App</ref> &amp;</type>
          <declname>app</declname>
        </param>
        <param>
          <type>CWorld *</type>
          <declname>pWorld</declname>
        </param>
        <param>
          <type><ref refid="class_bvr_1_1_detail_1_1_t_arg_group" kindref="compound">TSysStack</ref>&lt; T... &gt; &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/System.hpp" line="100" column="10" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/System.hpp" bodystart="100" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="_system_8hpp_1aa387737c27b6ff2730dfa3ee2066cf0b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Tp</declname>
            <defname>Tp</defname>
          </param>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void Bvr::Detail::ApplyDefault</definition>
        <argsstring>(TSysStack&lt; Tp... &gt; &amp;out, const D &amp;def)</argsstring>
        <name>ApplyDefault</name>
        <qualifiedname>Bvr::Detail::ApplyDefault</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_detail_1_1_t_arg_group" kindref="compound">TSysStack</ref>&lt; Tp... &gt; &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const D &amp;</type>
          <declname>def</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/System.hpp" line="107" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/System.hpp" bodystart="107" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="_system_8hpp_1a60cb8f71360b0620290aee521263d836" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Tp</declname>
            <defname>Tp</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>Defaults</declname>
            <defname>Defaults</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void Bvr::Detail::ApplyDefaults</definition>
        <argsstring>(TSysStack&lt; Tp... &gt; &amp;out, const TSysStack&lt; Defaults... &gt; &amp;defaults={})</argsstring>
        <name>ApplyDefaults</name>
        <qualifiedname>Bvr::Detail::ApplyDefaults</qualifiedname>
        <param>
          <type><ref refid="class_bvr_1_1_detail_1_1_t_arg_group" kindref="compound">TSysStack</ref>&lt; Tp... &gt; &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="class_bvr_1_1_detail_1_1_t_arg_group" kindref="compound">TSysStack</ref>&lt; Defaults... &gt; &amp;</type>
          <declname>defaults</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/System.hpp" line="114" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/System.hpp" bodystart="114" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="_system_8hpp_1a026b968db154a39ff5e5672ed88c5b55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Fn</type>
          </param>
          <param>
            <type>typename Stack</type>
          </param>
          <param>
            <type>size_t...</type>
            <declname>I</declname>
            <defname>I</defname>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) Bvr::Detail::Invoke</definition>
        <argsstring>(const Fn &amp;fn, Stack &amp;args, std::index_sequence&lt; I... &gt;)</argsstring>
        <name>Invoke</name>
        <qualifiedname>Bvr::Detail::Invoke</qualifiedname>
        <param>
          <type>const Fn &amp;</type>
          <declname>fn</declname>
        </param>
        <param>
          <type>Stack &amp;</type>
          <declname>args</declname>
        </param>
        <param>
          <type>std::index_sequence&lt; I... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/System.hpp" line="120" column="14" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/System.hpp" bodystart="120" bodyend="123"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrApp/Label.hpp" line="5" column="1"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_raven_1_1_t_component_bind" kind="class" language="C++" prot="public">
    <compoundname>Raven::TComponentBind</compoundname>
    <basecompoundref refid="struct_raven_1_1_i_component_bind" prot="public" virt="non-virtual">Raven::IComponentBind</basecompoundref>
    <includes refid="_components_8hpp" local="no">Components.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename ComponentT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_raven_1_1_t_component_bind_1ae0c37c73ea40e34aaab2380b41079c51" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>constexpr Meta::Type</type>
        <definition>constexpr Meta::Type Raven::TComponentBind&lt; ComponentT &gt;::Type</definition>
        <argsstring>() const final</argsstring>
        <name>Type</name>
        <reimplements refid="struct_raven_1_1_i_component_bind_1a5d9a0b57300ca8d6d827b2008ff495b1">Type</reimplements>
        <briefdescription>
<para>Meta type of the component. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" line="137" column="22" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" bodystart="137" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_t_component_bind_1addf5ca62a466a130729f221180b39f28" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>entt::sparse_set &amp;</type>
        <definition>entt::sparse_set&amp; Raven::TComponentBind&lt; ComponentT &gt;::StorageFor</definition>
        <argsstring>(CWorld *pWorld) const final</argsstring>
        <name>StorageFor</name>
        <reimplements refid="struct_raven_1_1_i_component_bind_1ad77fdc0b7947de64d68e004a57ed5a07">StorageFor</reimplements>
        <param>
          <type><ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> *</type>
          <declname>pWorld</declname>
        </param>
        <briefdescription>
<para>Type errased storage of the component. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" line="141" column="18" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" bodystart="141" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_t_component_bind_1adfc775d34b9d39e9556d90e4d222454f" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool Raven::TComponentBind&lt; ComponentT &gt;::ExistsIn</definition>
        <argsstring>(CWorld *pWorld, const TEntity hEnt) const final</argsstring>
        <name>ExistsIn</name>
        <reimplements refid="struct_raven_1_1_i_component_bind_1a03c8f975f1a7fefa5ee7dd97f0905b21">ExistsIn</reimplements>
        <param>
          <type><ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> *</type>
          <declname>pWorld</declname>
        </param>
        <param>
          <type>const <ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Weather entity has a component <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pWorld</parametername>
</parameternamelist>
<parameterdescription>
<para>world to check </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hEnt</parametername>
</parameternamelist>
<parameterdescription>
<para>entity to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" line="145" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" bodystart="145" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_t_component_bind_1a148236e17cbe00a1a8195519776d6332" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Raven::TComponentBind&lt; ComponentT &gt;::PublishUpdateFor</definition>
        <argsstring>(CWorld *pWorld, const TEntity hEnt) const final</argsstring>
        <name>PublishUpdateFor</name>
        <reimplements refid="struct_raven_1_1_i_component_bind_1aa05a6154b79680af81020380c5c7dd67">PublishUpdateFor</reimplements>
        <param>
          <type><ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> *</type>
          <declname>pWorld</declname>
        </param>
        <param>
          <type>const <ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <briefdescription>
<para>Send update signal for component at entity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" line="148" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" bodystart="148" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_t_component_bind_1a39443b42b6f7bf9d2ed2fa560ab82264" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void *</type>
        <definition>void* Raven::TComponentBind&lt; ComponentT &gt;::CreateComponentIn</definition>
        <argsstring>(CWorld *pWorld, const TEntity hEnt) const final</argsstring>
        <name>CreateComponentIn</name>
        <reimplements refid="struct_raven_1_1_i_component_bind_1a40214ec99c950b10740e93df5080fdfe">CreateComponentIn</reimplements>
        <param>
          <type><ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> *</type>
          <declname>pWorld</declname>
        </param>
        <param>
          <type>const <ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <briefdescription>
<para>Create component for entity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" line="152" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" bodystart="152" bodyend="159"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_raven_1_1_t_component_bind_1a9d70b4ca57412434149e80206ae2fbb7" prot="private" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Raven::TComponentBind&lt; ComponentT &gt;::AttachToWorld</definition>
        <argsstring>(CWorld *pWorld) const final</argsstring>
        <name>AttachToWorld</name>
        <reimplements refid="struct_raven_1_1_i_component_bind_1aa5614ccf45cdeab24c0bfe905b3435a4">AttachToWorld</reimplements>
        <param>
          <type><ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> *</type>
          <declname>pWorld</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" line="162" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" bodystart="162" bodyend="164"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Default implementation for <ref refid="struct_raven_1_1_i_component_bind" kindref="compound">IComponentBind</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Raven::IComponentBind</label>
        <link refid="struct_raven_1_1_i_component_bind"/>
      </node>
      <node id="1">
        <label>Raven::TComponentBind&lt; ComponentT &gt;</label>
        <link refid="class_raven_1_1_t_component_bind"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Raven::IComponentBind</label>
        <link refid="struct_raven_1_1_i_component_bind"/>
      </node>
      <node id="1">
        <label>Raven::TComponentBind&lt; ComponentT &gt;</label>
        <link refid="class_raven_1_1_t_component_bind"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" line="135" column="12" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" bodystart="135" bodyend="165"/>
    <listofallmembers>
      <member refid="class_raven_1_1_t_component_bind_1a9d70b4ca57412434149e80206ae2fbb7" prot="private" virt="virtual"><scope>Raven::TComponentBind</scope><name>AttachToWorld</name></member>
      <member refid="struct_raven_1_1_i_component_bind_1adac024f21307c8ca054ccc313eb2e99f" prot="public" virt="non-virtual"><scope>Raven::TComponentBind</scope><name>CreateComponent</name></member>
      <member refid="class_raven_1_1_t_component_bind_1a39443b42b6f7bf9d2ed2fa560ab82264" prot="public" virt="virtual"><scope>Raven::TComponentBind</scope><name>CreateComponentIn</name></member>
      <member refid="struct_raven_1_1_i_component_bind_1ad61e9a645a65da307be10f7127a7557d" prot="protected" virt="non-virtual"><scope>Raven::TComponentBind</scope><name>CWorld</name></member>
      <member refid="struct_raven_1_1_i_component_bind_1ae51bad9094925614e4afa35b67241fca" prot="public" virt="non-virtual"><scope>Raven::TComponentBind</scope><name>Exists</name></member>
      <member refid="class_raven_1_1_t_component_bind_1adfc775d34b9d39e9556d90e4d222454f" prot="public" virt="virtual"><scope>Raven::TComponentBind</scope><name>ExistsIn</name></member>
      <member refid="struct_raven_1_1_i_component_bind_1ab15541959bfb0580c9e10ddb5f8b50e8" prot="public" virt="non-virtual"><scope>Raven::TComponentBind</scope><name>PublishUpdate</name></member>
      <member refid="class_raven_1_1_t_component_bind_1a148236e17cbe00a1a8195519776d6332" prot="public" virt="virtual"><scope>Raven::TComponentBind</scope><name>PublishUpdateFor</name></member>
      <member refid="class_raven_1_1_t_component_bind_1addf5ca62a466a130729f221180b39f28" prot="public" virt="virtual"><scope>Raven::TComponentBind</scope><name>StorageFor</name></member>
      <member refid="class_raven_1_1_t_component_bind_1ae0c37c73ea40e34aaab2380b41079c51" prot="public" virt="virtual"><scope>Raven::TComponentBind</scope><name>Type</name></member>
      <member refid="struct_raven_1_1_i_component_bind_1a02c9b1064794de98a8eefa9ede9a2dbb" prot="public" virt="virtual"><scope>Raven::TComponentBind</scope><name>~IComponentBind</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_raven_1_1_c_component_registry" kind="class" language="C++" prot="public">
    <compoundname>Raven::CComponentRegistry</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_raven_1_1_c_component_registry_1a3e46f236cdb6439c1b2aaba3f1646ef2" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="struct_raven_1_1_i_component_bind" kindref="compound">IComponentBind</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::unique_ptr&lt;IComponentBind&gt; &gt; Raven::CComponentRegistry::m_componentTypeList</definition>
        <argsstring></argsstring>
        <name>m_componentTypeList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" line="219" column="17" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" bodystart="219" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_raven_1_1_c_component_registry_1ad5ff0e03d20d08436ed59279ab8fd8ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Raven::CComponentRegistry::CComponentRegistry</definition>
        <argsstring>()=default</argsstring>
        <name>CComponentRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" line="181" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_component_registry_1a80d8bded9a45a0e21b3e569861dac2eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Raven::CComponentRegistry::~CComponentRegistry</definition>
        <argsstring>()=default</argsstring>
        <name>~CComponentRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" line="182" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_component_registry_1a89e770c773379bd429f10f5b047a0491" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>const <ref refid="struct_raven_1_1_i_component_bind" kindref="compound">IComponentBind</ref> *</type>
        <definition>const IComponentBind* Raven::CComponentRegistry::For</definition>
        <argsstring>()</argsstring>
        <name>For</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" line="183" column="38" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" bodystart="183" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_component_registry_1af205200acb236b3568f1fd10379d4be6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="struct_raven_1_1_i_component_bind" kindref="compound">IComponentBind</ref> *</type>
        <definition>const IComponentBind* Raven::CComponentRegistry::Register</definition>
        <argsstring>(std::unique_ptr&lt; IComponentBind &gt; &amp;&amp;bind)</argsstring>
        <name>Register</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="struct_raven_1_1_i_component_bind" kindref="compound">IComponentBind</ref> &gt; &amp;&amp;</type>
          <declname>bind</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" line="186" column="26" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" bodystart="186" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_component_registry_1a4854685b4287ceec55948a0a2ba33c5c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="struct_raven_1_1_i_component_bind" kindref="compound">IComponentBind</ref> *</type>
        <definition>const IComponentBind* Raven::CComponentRegistry::FindByTypeName</definition>
        <argsstring>(const std::string_view name)</argsstring>
        <name>FindByTypeName</name>
        <param>
          <type>const std::string_view</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" line="192" column="26" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" bodystart="192" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_component_registry_1ae2a7030e1b08d6407944f396de5d2562" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="struct_raven_1_1_i_component_bind" kindref="compound">IComponentBind</ref> *</type>
        <definition>const IComponentBind* Raven::CComponentRegistry::FindByType</definition>
        <argsstring>(const Meta::Type &amp;t)</argsstring>
        <name>FindByType</name>
        <param>
          <type>const Meta::Type &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" line="201" column="26" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" bodystart="201" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_component_registry_1a694428dd7258231542c4e0cae56728a0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::span&lt; std::unique_ptr&lt; <ref refid="struct_raven_1_1_i_component_bind" kindref="compound">IComponentBind</ref> &gt; const  &gt;</type>
        <definition>std::span&lt;std::unique_ptr&lt;IComponentBind&gt; const&gt; Raven::CComponentRegistry::GetAll</definition>
        <argsstring>() const</argsstring>
        <name>GetAll</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" line="210" column="15" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" bodystart="210" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_component_registry_1aeebd762fedfa1ec105ac29f73cc056ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="struct_raven_1_1_i_component_bind" kindref="compound">IComponentBind</ref> &gt; &gt; &amp;</type>
        <definition>std::vector&lt;std::unique_ptr&lt;IComponentBind&gt; &gt;&amp; Raven::CComponentRegistry::Get</definition>
        <argsstring>()</argsstring>
        <name>Get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" line="214" column="17" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" bodystart="214" bodyend="216"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" line="179" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" bodystart="179" bodyend="220"/>
    <listofallmembers>
      <member refid="class_raven_1_1_c_component_registry_1ad5ff0e03d20d08436ed59279ab8fd8ed" prot="public" virt="non-virtual"><scope>Raven::CComponentRegistry</scope><name>CComponentRegistry</name></member>
      <member refid="class_raven_1_1_c_component_registry_1ae2a7030e1b08d6407944f396de5d2562" prot="public" virt="non-virtual"><scope>Raven::CComponentRegistry</scope><name>FindByType</name></member>
      <member refid="class_raven_1_1_c_component_registry_1a4854685b4287ceec55948a0a2ba33c5c" prot="public" virt="non-virtual"><scope>Raven::CComponentRegistry</scope><name>FindByTypeName</name></member>
      <member refid="class_raven_1_1_c_component_registry_1a89e770c773379bd429f10f5b047a0491" prot="public" virt="non-virtual"><scope>Raven::CComponentRegistry</scope><name>For</name></member>
      <member refid="class_raven_1_1_c_component_registry_1aeebd762fedfa1ec105ac29f73cc056ba" prot="public" virt="non-virtual"><scope>Raven::CComponentRegistry</scope><name>Get</name></member>
      <member refid="class_raven_1_1_c_component_registry_1a694428dd7258231542c4e0cae56728a0" prot="public" virt="non-virtual"><scope>Raven::CComponentRegistry</scope><name>GetAll</name></member>
      <member refid="class_raven_1_1_c_component_registry_1a3e46f236cdb6439c1b2aaba3f1646ef2" prot="private" virt="non-virtual"><scope>Raven::CComponentRegistry</scope><name>m_componentTypeList</name></member>
      <member refid="class_raven_1_1_c_component_registry_1af205200acb236b3568f1fd10379d4be6" prot="public" virt="non-virtual"><scope>Raven::CComponentRegistry</scope><name>Register</name></member>
      <member refid="class_raven_1_1_c_component_registry_1a80d8bded9a45a0e21b3e569861dac2eb" prot="public" virt="non-virtual"><scope>Raven::CComponentRegistry</scope><name>~CComponentRegistry</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

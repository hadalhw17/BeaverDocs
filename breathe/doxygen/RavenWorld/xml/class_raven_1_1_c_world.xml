<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_raven_1_1_c_world" kind="class" language="C++" prot="public">
    <compoundname>Raven::CWorld</compoundname>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_raven_1_1_c_world_1ab58c4e65415f28624147671850542f01" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Raven::CWorld::InPlaceRelease</definition>
        <argsstring></argsstring>
        <name>InPlaceRelease</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="13" column="23" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_raven_1_1_c_world_1aa0dfb083275e3b4cf98e41ab5fd80f2e" prot="private" static="no" mutable="no">
        <type>RWorld::WorldProperties</type>
        <definition>RWorld::WorldProperties Raven::CWorld::m_worldSettings</definition>
        <argsstring></argsstring>
        <name>m_worldSettings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="180" column="25" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_world_1aeb92ff598f619ac0ef7b19f21aebb0f9" prot="private" static="no" mutable="no">
        <type>entt::registry</type>
        <definition>entt::registry Raven::CWorld::m_registry</definition>
        <argsstring></argsstring>
        <name>m_registry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="181" column="25" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_world_1a22f5d726e12764bf6431d79f59fafc61" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Raven::CWorld::m_currentLevelPath</definition>
        <argsstring></argsstring>
        <name>m_currentLevelPath</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="183" column="25" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_world_1ad580ee5d1fc7f1e352cb3ad4e39b689f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Raven::CWorld::m_bSimulating</definition>
        <argsstring></argsstring>
        <name>m_bSimulating</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="186" column="25" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_world_1a30ff1c145c12c0a29e88a259cbfef915" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Raven::CWorld::m_isPaused</definition>
        <argsstring></argsstring>
        <name>m_isPaused</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="188" column="25" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="188" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_raven_1_1_c_world_1abb4842c74462c1747fb275d3e4c42bcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Raven::CWorld::CWorld</definition>
        <argsstring>()</argsstring>
        <name>CWorld</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a16986a2433ccf83c1a6ef8ffd8e56c2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Raven::CWorld::~CWorld</definition>
        <argsstring>()</argsstring>
        <name>~CWorld</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="16" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1abe0140db674d0b6ac0c0c80623901320" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Raven::CWorld::CWorld</definition>
        <argsstring>(const CWorld &amp;rhs)</argsstring>
        <name>CWorld</name>
        <param>
          <type>const <ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a3455c71a4d7c375be2ceda49155aec1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Raven::CWorld::CWorld</definition>
        <argsstring>(CWorld &amp;&amp;rhs)</argsstring>
        <name>CWorld</name>
        <param>
          <type><ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a2424cb86be69e2207183d2717b1206ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> &amp;</type>
        <definition>CWorld&amp; Raven::CWorld::operator=</definition>
        <argsstring>(const CWorld &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="20" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a02cfbf4bec6b6ffd331a8b6ab0fd6b13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> &amp;</type>
        <definition>CWorld&amp; Raven::CWorld::operator=</definition>
        <argsstring>(CWorld &amp;&amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="21" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1adceb4ed9677c2638ac82e7637cccf02c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::CWorld::Init</definition>
        <argsstring>()</argsstring>
        <name>Init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="23" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a766898a8eab210bddc58fae8a4b28a53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CWorld::Tick</definition>
        <argsstring>(const CTimestep timestep)</argsstring>
        <name>Tick</name>
        <param>
          <type>const CTimestep</type>
          <declname>timestep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="24" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1adaaba15b6a2e112b6c7c7661ead5b066" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CWorld::SaveLevel</definition>
        <argsstring>()</argsstring>
        <name>SaveLevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="25" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1afcefcc0df285abc07ba8379f24f65e3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CWorld::SetPath</definition>
        <argsstring>(const char *pPath)</argsstring>
        <name>SetPath</name>
        <param>
          <type>const char *</type>
          <declname>pPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="26" column="13" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a93f1a54fe5db51224b27a5a579ce3a30" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* Raven::CWorld::GetPath</definition>
        <argsstring>() const</argsstring>
        <name>GetPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="27" column="12" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1aaf68e766eb4fca69036be51c23652d42" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const entt::registry &amp;</type>
        <definition>const entt::registry&amp; Raven::CWorld::GetRegistry</definition>
        <argsstring>() const</argsstring>
        <name>GetRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="29" column="31" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a5e865b4172f0773a122138da8a7b4f48" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>entt::registry &amp;</type>
        <definition>entt::registry&amp; Raven::CWorld::GetRegistry</definition>
        <argsstring>()</argsstring>
        <name>GetRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="30" column="31" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a19424ed5802c47706cd5298d54228dd9" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CompT</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Raven::CWorld::Has</definition>
        <argsstring>(const TEntity hEnt) const noexcept</argsstring>
        <name>Has</name>
        <param>
          <type>const <ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="32" column="18" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="32" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a05fc77f7e9fb2e68c1e5f34ae76e572a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CompT</type>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) Raven::CWorld::GetComponent</definition>
        <argsstring>(const TEntity hEnt) const noexcept</argsstring>
        <name>GetComponent</name>
        <param>
          <type>const <ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="36" column="10" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="36" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a97b38432c6181318cec7ae8defed3471" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CompT</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) Raven::CWorld::AddComponent</definition>
        <argsstring>(const TEntity hEnt, Args &amp;&amp;... args) const noexcept</argsstring>
        <name>AddComponent</name>
        <param>
          <type>const <ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="42" column="10" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="42" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1af7a8756a58d95f7cc8b9f9a20f852113" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CompT</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) Raven::CWorld::AddOrReplace</definition>
        <argsstring>(const TEntity hEnt, Args &amp;&amp;... args) const noexcept</argsstring>
        <name>AddOrReplace</name>
        <param>
          <type>const <ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="50" column="10" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a00ca63b26d6deeb81fc36d8b70fd05ba" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CompT</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Raven::CWorld::RemoveComponent</definition>
        <argsstring>(const TEntity hEnt) const noexcept</argsstring>
        <name>RemoveComponent</name>
        <param>
          <type>const <ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="55" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="55" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1aef94129e2fdce3e9d4c207efd58d62cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CWorld::AddChild</definition>
        <argsstring>(TEntity hTo, TEntity hChild)</argsstring>
        <name>AddChild</name>
        <param>
          <type><ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hTo</declname>
        </param>
        <param>
          <type><ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hChild</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="61" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1ad1c05fbb52562611a1ab9d2deec5290d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
        <definition>TEntity Raven::CWorld::CreateChild</definition>
        <argsstring>(const TEntity hTo)</argsstring>
        <name>CreateChild</name>
        <param>
          <type>const <ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hTo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="62" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a69c0bbedcb5758b8feca2c1a4d21a84c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CWorld::RemoveChild</definition>
        <argsstring>(const TEntity hFrom, const TEntity hChild)</argsstring>
        <name>RemoveChild</name>
        <param>
          <type>const <ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hFrom</declname>
        </param>
        <param>
          <type>const <ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hChild</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="63" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a38be4eff66eb2f1623f4785855b5a1cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
        <definition>TEntity Raven::CWorld::CreateEntity</definition>
        <argsstring>(TEntity parent)</argsstring>
        <name>CreateEntity</name>
        <param>
          <type><ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="65" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a36b63fc813ba84b8bf26c2a1a66c8103" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
        <definition>TEntity Raven::CWorld::CreateEntity</definition>
        <argsstring>(const char *pName)</argsstring>
        <name>CreateEntity</name>
        <param>
          <type>const char *</type>
          <declname>pName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="66" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a75f329b5fcdd48574237b5ca35426143" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CWorld::RemoveEntity</definition>
        <argsstring>(const TEntity hEnt)</argsstring>
        <name>RemoveEntity</name>
        <param>
          <type>const <ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="67" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a34bfa28a3eba7537c00e9dce41babe9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
        <definition>TEntity Raven::CWorld::AddModel</definition>
        <argsstring>(const char *path, const TEntity parent)</argsstring>
        <name>AddModel</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="68" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1acb1f788bfc2e1d90350803c674b14807" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
        <definition>TEntity Raven::CWorld::DuplicateEntity</definition>
        <argsstring>(const TEntity &amp;src, CWorld *pDstWorld)</argsstring>
        <name>DuplicateEntity</name>
        <param>
          <type>const <ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> *</type>
          <declname>pDstWorld</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="70" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1ae3d63dd4c4cc50e0edd8bd90934b78cd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CompT</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>ExtraT</declname>
            <defname>ExtraT</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>ExcludeT</declname>
            <defname>ExcludeT</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_raven_1_1_t_query" kindref="compound">TQuery</ref>&lt; entt::entity, entt::get_t&lt; CompT, ExtraT... &gt;, entt::exclude_t&lt; ExcludeT... &gt; &gt;</type>
        <definition>TQuery&lt;entt::entity, entt::get_t&lt;CompT, ExtraT...&gt;, entt::exclude_t&lt;ExcludeT...&gt; &gt; Raven::CWorld::Query</definition>
        <argsstring>(entt::exclude_t&lt; ExcludeT... &gt; exclude={}) const</argsstring>
        <name>Query</name>
        <param>
          <type>entt::exclude_t&lt; ExcludeT... &gt;</type>
          <declname>exclude</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="75" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="75" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1af02ef36a60a05fc7634a3b3fdadaacc4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CompT</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>ExtraT</declname>
            <defname>ExtraT</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>ExcludeT</declname>
            <defname>ExcludeT</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_raven_1_1_t_query" kindref="compound">TQuery</ref>&lt; entt::entity, entt::get_t&lt; CompT, ExtraT... &gt;, entt::exclude_t&lt; ExcludeT... &gt; &gt;</type>
        <definition>TQuery&lt;entt::entity, entt::get_t&lt;CompT, ExtraT...&gt;, entt::exclude_t&lt;ExcludeT...&gt; &gt; Raven::CWorld::Query</definition>
        <argsstring>(entt::exclude_t&lt; ExcludeT... &gt; exclude={})</argsstring>
        <name>Query</name>
        <param>
          <type>entt::exclude_t&lt; ExcludeT... &gt;</type>
          <declname>exclude</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="83" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a8d8602015cb35afef58372e80ffffc1f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CWorld::SetSimulationEnabled</definition>
        <argsstring>(const bool bEnabled)</argsstring>
        <name>SetSimulationEnabled</name>
        <param>
          <type>const bool</type>
          <declname>bEnabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="88" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1ab02c9b4bdf4c0b9ef8c9435f69855c5b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::CWorld::GetSimulationEnabled</definition>
        <argsstring>() const</argsstring>
        <name>GetSimulationEnabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="89" column="7" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1af343339f69a0d3403821f9915f9546cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CWorld::SetIsPaused</definition>
        <argsstring>(const bool isPaused)</argsstring>
        <name>SetIsPaused</name>
        <param>
          <type>const bool</type>
          <declname>isPaused</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="91" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a3cb639df90f4bca0238681b11b570b2a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::CWorld::IsPaused</definition>
        <argsstring>() const</argsstring>
        <name>IsPaused</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="92" column="7" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a47112c101da98630affa48aa560f3aa6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const RWorld::WorldProperties &amp;</type>
        <definition>const RWorld::WorldProperties&amp; Raven::CWorld::GetWorldSettings</definition>
        <argsstring>() const</argsstring>
        <name>GetWorldSettings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="94" column="31" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1aaf189aa528b01dc9464380963bd510ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>RWorld::WorldProperties &amp;</type>
        <definition>RWorld::WorldProperties&amp; Raven::CWorld::GetWorldSettings</definition>
        <argsstring>()</argsstring>
        <name>GetWorldSettings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="97" column="28" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a6ecd5345dcc95a96018b0658827b11b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Fn</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Raven::CWorld::TraverseScene</definition>
        <argsstring>(const Fn &amp;fn)</argsstring>
        <name>TraverseScene</name>
        <param>
          <type>const Fn &amp;</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="99" column="18" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="99" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a56991a358be46515eea8ec44e878ec14" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
        <definition>TEntity Raven::CWorld::GetLastChild</definition>
        <argsstring>(TEntity hFor) const</argsstring>
        <name>GetLastChild</name>
        <param>
          <type><ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hFor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="110" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="110" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1aab58d30fe67a7e739a6e983afb8d9bdf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void *</type>
        <definition>void* Raven::CWorld::CreateComponent</definition>
        <argsstring>(const TEntity hEnt)</argsstring>
        <name>CreateComponent</name>
        <param>
          <type>const <ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="126" column="18" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="126" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a1b8396b84866271feb3b8bb2e6aecebb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Raven::CWorld::PublishUpdate</definition>
        <argsstring>(const TEntity hEnt)</argsstring>
        <name>PublishUpdate</name>
        <param>
          <type>const <ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="130" column="18" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="130" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a68d514246080124afc323561fcd757bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>entt::sparse_set &amp;</type>
        <definition>entt::sparse_set&amp; Raven::CWorld::GetComponentStorage</definition>
        <argsstring>()</argsstring>
        <name>GetComponentStorage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="134" column="30" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="134" bodyend="136"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_raven_1_1_c_world_1a35846b9abed2d8b5b2f198c7a9a7c0fa" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Fn</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Raven::CWorld::TraverseSceneImpl</definition>
        <argsstring>(TEntity parent, TEntity &amp;ent, const Fn &amp;fn) const</argsstring>
        <name>TraverseSceneImpl</name>
        <param>
          <type><ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref> &amp;</type>
          <declname>ent</declname>
        </param>
        <param>
          <type>const Fn &amp;</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="140" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="140" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a9b820d583a36c2577e671ad3785aabb7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref></type>
        <definition>CWorld Raven::CWorld::Clone</definition>
        <argsstring>()</argsstring>
        <name>Clone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="172" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a967e56c04b0450047f94919ecb28efb3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Raven::CWorld::SaveImpl</definition>
        <argsstring>()</argsstring>
        <name>SaveImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="174" column="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_raven_1_1_c_world_1a309fc8d562eb1aa287e993272ed35439" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Raven::CWorld::CloneFrom</definition>
        <argsstring>(const CWorld &amp;from, CWorld &amp;to)</argsstring>
        <name>CloneFrom</name>
        <param>
          <type>const <ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="177" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="11" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="11" bodyend="189"/>
    <listofallmembers>
      <member refid="class_raven_1_1_c_world_1aef94129e2fdce3e9d4c207efd58d62cb" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>AddChild</name></member>
      <member refid="class_raven_1_1_c_world_1a97b38432c6181318cec7ae8defed3471" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>AddComponent</name></member>
      <member refid="class_raven_1_1_c_world_1a34bfa28a3eba7537c00e9dce41babe9a" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>AddModel</name></member>
      <member refid="class_raven_1_1_c_world_1af7a8756a58d95f7cc8b9f9a20f852113" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>AddOrReplace</name></member>
      <member refid="class_raven_1_1_c_world_1a9b820d583a36c2577e671ad3785aabb7" prot="private" virt="non-virtual"><scope>Raven::CWorld</scope><name>Clone</name></member>
      <member refid="class_raven_1_1_c_world_1a309fc8d562eb1aa287e993272ed35439" prot="private" virt="non-virtual"><scope>Raven::CWorld</scope><name>CloneFrom</name></member>
      <member refid="class_raven_1_1_c_world_1ad1c05fbb52562611a1ab9d2deec5290d" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>CreateChild</name></member>
      <member refid="class_raven_1_1_c_world_1aab58d30fe67a7e739a6e983afb8d9bdf" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>CreateComponent</name></member>
      <member refid="class_raven_1_1_c_world_1a38be4eff66eb2f1623f4785855b5a1cc" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>CreateEntity</name></member>
      <member refid="class_raven_1_1_c_world_1a36b63fc813ba84b8bf26c2a1a66c8103" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>CreateEntity</name></member>
      <member refid="class_raven_1_1_c_world_1abb4842c74462c1747fb275d3e4c42bcd" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>CWorld</name></member>
      <member refid="class_raven_1_1_c_world_1abe0140db674d0b6ac0c0c80623901320" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>CWorld</name></member>
      <member refid="class_raven_1_1_c_world_1a3455c71a4d7c375be2ceda49155aec1e" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>CWorld</name></member>
      <member refid="class_raven_1_1_c_world_1acb1f788bfc2e1d90350803c674b14807" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>DuplicateEntity</name></member>
      <member refid="class_raven_1_1_c_world_1a05fc77f7e9fb2e68c1e5f34ae76e572a" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>GetComponent</name></member>
      <member refid="class_raven_1_1_c_world_1a68d514246080124afc323561fcd757bf" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>GetComponentStorage</name></member>
      <member refid="class_raven_1_1_c_world_1a56991a358be46515eea8ec44e878ec14" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>GetLastChild</name></member>
      <member refid="class_raven_1_1_c_world_1a93f1a54fe5db51224b27a5a579ce3a30" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>GetPath</name></member>
      <member refid="class_raven_1_1_c_world_1aaf68e766eb4fca69036be51c23652d42" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>GetRegistry</name></member>
      <member refid="class_raven_1_1_c_world_1a5e865b4172f0773a122138da8a7b4f48" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>GetRegistry</name></member>
      <member refid="class_raven_1_1_c_world_1ab02c9b4bdf4c0b9ef8c9435f69855c5b" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>GetSimulationEnabled</name></member>
      <member refid="class_raven_1_1_c_world_1a47112c101da98630affa48aa560f3aa6" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>GetWorldSettings</name></member>
      <member refid="class_raven_1_1_c_world_1aaf189aa528b01dc9464380963bd510ef" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>GetWorldSettings</name></member>
      <member refid="class_raven_1_1_c_world_1a19424ed5802c47706cd5298d54228dd9" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>Has</name></member>
      <member refid="class_raven_1_1_c_world_1adceb4ed9677c2638ac82e7637cccf02c" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>Init</name></member>
      <member refid="class_raven_1_1_c_world_1ab58c4e65415f28624147671850542f01" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>InPlaceRelease</name></member>
      <member refid="class_raven_1_1_c_world_1a3cb639df90f4bca0238681b11b570b2a" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>IsPaused</name></member>
      <member refid="class_raven_1_1_c_world_1ad580ee5d1fc7f1e352cb3ad4e39b689f" prot="private" virt="non-virtual"><scope>Raven::CWorld</scope><name>m_bSimulating</name></member>
      <member refid="class_raven_1_1_c_world_1a22f5d726e12764bf6431d79f59fafc61" prot="private" virt="non-virtual"><scope>Raven::CWorld</scope><name>m_currentLevelPath</name></member>
      <member refid="class_raven_1_1_c_world_1a30ff1c145c12c0a29e88a259cbfef915" prot="private" virt="non-virtual"><scope>Raven::CWorld</scope><name>m_isPaused</name></member>
      <member refid="class_raven_1_1_c_world_1aeb92ff598f619ac0ef7b19f21aebb0f9" prot="private" virt="non-virtual"><scope>Raven::CWorld</scope><name>m_registry</name></member>
      <member refid="class_raven_1_1_c_world_1aa0dfb083275e3b4cf98e41ab5fd80f2e" prot="private" virt="non-virtual"><scope>Raven::CWorld</scope><name>m_worldSettings</name></member>
      <member refid="class_raven_1_1_c_world_1a2424cb86be69e2207183d2717b1206ec" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>operator=</name></member>
      <member refid="class_raven_1_1_c_world_1a02cfbf4bec6b6ffd331a8b6ab0fd6b13" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>operator=</name></member>
      <member refid="class_raven_1_1_c_world_1a1b8396b84866271feb3b8bb2e6aecebb" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>PublishUpdate</name></member>
      <member refid="class_raven_1_1_c_world_1ae3d63dd4c4cc50e0edd8bd90934b78cd" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>Query</name></member>
      <member refid="class_raven_1_1_c_world_1af02ef36a60a05fc7634a3b3fdadaacc4" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>Query</name></member>
      <member refid="class_raven_1_1_c_world_1a69c0bbedcb5758b8feca2c1a4d21a84c" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>RemoveChild</name></member>
      <member refid="class_raven_1_1_c_world_1a00ca63b26d6deeb81fc36d8b70fd05ba" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>RemoveComponent</name></member>
      <member refid="class_raven_1_1_c_world_1a75f329b5fcdd48574237b5ca35426143" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>RemoveEntity</name></member>
      <member refid="class_raven_1_1_c_world_1a967e56c04b0450047f94919ecb28efb3" prot="private" virt="non-virtual"><scope>Raven::CWorld</scope><name>SaveImpl</name></member>
      <member refid="class_raven_1_1_c_world_1adaaba15b6a2e112b6c7c7661ead5b066" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>SaveLevel</name></member>
      <member refid="class_raven_1_1_c_world_1af343339f69a0d3403821f9915f9546cf" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>SetIsPaused</name></member>
      <member refid="class_raven_1_1_c_world_1afcefcc0df285abc07ba8379f24f65e3e" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>SetPath</name></member>
      <member refid="class_raven_1_1_c_world_1a8d8602015cb35afef58372e80ffffc1f" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>SetSimulationEnabled</name></member>
      <member refid="class_raven_1_1_c_world_1a766898a8eab210bddc58fae8a4b28a53" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>Tick</name></member>
      <member refid="class_raven_1_1_c_world_1a6ecd5345dcc95a96018b0658827b11b8" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>TraverseScene</name></member>
      <member refid="class_raven_1_1_c_world_1a35846b9abed2d8b5b2f198c7a9a7c0fa" prot="private" virt="non-virtual"><scope>Raven::CWorld</scope><name>TraverseSceneImpl</name></member>
      <member refid="class_raven_1_1_c_world_1a16986a2433ccf83c1a6ef8ffd8e56c2f" prot="public" virt="virtual"><scope>Raven::CWorld</scope><name>~CWorld</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

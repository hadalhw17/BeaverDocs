<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_raven_1_1_c_world" kind="class" language="C++" prot="public">
    <compoundname>Raven::CWorld</compoundname>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_raven_1_1_c_world_1ab58c4e65415f28624147671850542f01" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool Raven::CWorld::InPlaceRelease</definition>
        <argsstring></argsstring>
        <name>InPlaceRelease</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="12" column="23" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_raven_1_1_c_world_1abfbdacfa6525f79fcee847cb4c5e12b1" prot="private" static="no" mutable="no">
        <type>Handle&lt; <ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> &gt;</type>
        <definition>Handle&lt;CWorld&gt; Raven::CWorld::m_hSelf</definition>
        <argsstring></argsstring>
        <name>m_hSelf</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="213" column="17" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_world_1aa0dfb083275e3b4cf98e41ab5fd80f2e" prot="private" static="no" mutable="no">
        <type>RWorld::WorldProperties</type>
        <definition>RWorld::WorldProperties Raven::CWorld::m_worldSettings</definition>
        <argsstring></argsstring>
        <name>m_worldSettings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="214" column="25" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_world_1aeb92ff598f619ac0ef7b19f21aebb0f9" prot="private" static="no" mutable="no">
        <type>entt::registry</type>
        <definition>entt::registry Raven::CWorld::m_registry</definition>
        <argsstring></argsstring>
        <name>m_registry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="215" column="25" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_world_1a22f5d726e12764bf6431d79f59fafc61" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Raven::CWorld::m_currentLevelPath</definition>
        <argsstring></argsstring>
        <name>m_currentLevelPath</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="217" column="25" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_world_1ad580ee5d1fc7f1e352cb3ad4e39b689f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Raven::CWorld::m_bSimulating</definition>
        <argsstring></argsstring>
        <name>m_bSimulating</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="220" column="25" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_raven_1_1_c_world_1a30ff1c145c12c0a29e88a259cbfef915" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Raven::CWorld::m_isPaused</definition>
        <argsstring></argsstring>
        <name>m_isPaused</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="222" column="25" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="222" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_raven_1_1_c_world_1a17fe663119739561a2e9f27619887de5" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Raven::CWorld::CWorld</definition>
        <argsstring>() noexcept</argsstring>
        <name>CWorld</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1aab50081740c66df024e21fc09e8b5da5" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Raven::CWorld::~CWorld</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>~CWorld</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1affc0e8b76570253fec099676a77617ca" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Raven::CWorld::CWorld</definition>
        <argsstring>(const CWorld &amp;rhs) noexcept</argsstring>
        <name>CWorld</name>
        <param>
          <type>const <ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1ac42d2750c80fd0057b5e353de1735579" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Raven::CWorld::CWorld</definition>
        <argsstring>(CWorld &amp;&amp;rhs) noexcept</argsstring>
        <name>CWorld</name>
        <param>
          <type><ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a85ee28eebfd14e389ed68d0cbd23318e" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> &amp;</type>
        <definition>CWorld&amp; Raven::CWorld::operator=</definition>
        <argsstring>(const CWorld &amp;rhs) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="19" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a069c0d8475e21027085efc5b4d6884ed" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> &amp;</type>
        <definition>CWorld&amp; Raven::CWorld::operator=</definition>
        <argsstring>(CWorld &amp;&amp;rhs) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="20" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1adceb4ed9677c2638ac82e7637cccf02c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::CWorld::Init</definition>
        <argsstring>()</argsstring>
        <name>Init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="22" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1adaaba15b6a2e112b6c7c7661ead5b066" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CWorld::SaveLevel</definition>
        <argsstring>()</argsstring>
        <name>SaveLevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="23" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1af36aa4ddd1d92661b6414cc6e1c0937a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> &amp;</type>
        <definition>CWorld&amp; Raven::CWorld::SetPath</definition>
        <argsstring>(const std::string_view path)</argsstring>
        <name>SetPath</name>
        <param>
          <type>const std::string_view</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="24" column="12" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="24" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a93f1a54fe5db51224b27a5a579ce3a30" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* Raven::CWorld::GetPath</definition>
        <argsstring>() const</argsstring>
        <name>GetPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="25" column="12" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1aaf68e766eb4fca69036be51c23652d42" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const entt::registry &amp;</type>
        <definition>const entt::registry&amp; Raven::CWorld::GetRegistry</definition>
        <argsstring>() const</argsstring>
        <name>GetRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="27" column="31" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a5e865b4172f0773a122138da8a7b4f48" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>entt::registry &amp;</type>
        <definition>entt::registry&amp; Raven::CWorld::GetRegistry</definition>
        <argsstring>()</argsstring>
        <name>GetRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="28" column="31" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a19424ed5802c47706cd5298d54228dd9" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CompT</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Raven::CWorld::Has</definition>
        <argsstring>(const TEntity hEnt) const noexcept</argsstring>
        <name>Has</name>
        <param>
          <type>const <ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="30" column="18" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="30" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a05fc77f7e9fb2e68c1e5f34ae76e572a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CompT</type>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) Raven::CWorld::GetComponent</definition>
        <argsstring>(const TEntity hEnt) const noexcept</argsstring>
        <name>GetComponent</name>
        <param>
          <type>const <ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="34" column="10" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="34" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a97b38432c6181318cec7ae8defed3471" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CompT</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) Raven::CWorld::AddComponent</definition>
        <argsstring>(const TEntity hEnt, Args &amp;&amp;... args) const noexcept</argsstring>
        <name>AddComponent</name>
        <param>
          <type>const <ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="40" column="10" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="40" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1af7a8756a58d95f7cc8b9f9a20f852113" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CompT</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) Raven::CWorld::AddOrReplace</definition>
        <argsstring>(const TEntity hEnt, Args &amp;&amp;... args) const noexcept</argsstring>
        <name>AddOrReplace</name>
        <param>
          <type>const <ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="48" column="10" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a00ca63b26d6deeb81fc36d8b70fd05ba" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CompT</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Raven::CWorld::RemoveComponent</definition>
        <argsstring>(const TEntity hEnt) const noexcept</argsstring>
        <name>RemoveComponent</name>
        <param>
          <type>const <ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="53" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="53" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a0a4ea89b7319c2a23e6d78d23f209757" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CWorld::SetSelf</definition>
        <argsstring>(const Handle&lt; CWorld &gt; &amp;hWorld)</argsstring>
        <name>SetSelf</name>
        <param>
          <type>const Handle&lt; <ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> &gt; &amp;</type>
          <declname>hWorld</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets a handle to self. The function ensures that the handle is weak to avoid circular dependencies </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="61" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a72a7f84aaeaef4cd1ada7147e2542d37" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Handle&lt; <ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> &gt;</type>
        <definition>Handle&lt;CWorld&gt; Raven::CWorld::GetSelf</definition>
        <argsstring>() const</argsstring>
        <name>GetSelf</name>
        <briefdescription>
<para>Returs a <bold>weak</bold> handle to self. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="66" column="8" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a2e01488ba8fbe510ae92ed16eb1d084e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CWorld::AddChild</definition>
        <argsstring>(TEntity hTo, TEntity hChild) const</argsstring>
        <name>AddChild</name>
        <param>
          <type><ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hTo</declname>
        </param>
        <param>
          <type><ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hChild</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parent one entity to another. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hTo</parametername>
</parameternamelist>
<parameterdescription>
<para>Parent entity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hChild</parametername>
</parameternamelist>
<parameterdescription>
<para>Entity to be attached as to hTo </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="73" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a6855aa75ced4810da641a2a72e171b7b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
        <definition>TEntity Raven::CWorld::CreateChild</definition>
        <argsstring>(const TEntity hTo) const</argsstring>
        <name>CreateChild</name>
        <param>
          <type>const <ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hTo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a child for entity <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hTo</parametername>
</parameternamelist>
<parameterdescription>
<para>Parent entity </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Created entity handle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="77" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a69c0bbedcb5758b8feca2c1a4d21a84c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CWorld::RemoveChild</definition>
        <argsstring>(const TEntity hFrom, const TEntity hChild)</argsstring>
        <name>RemoveChild</name>
        <param>
          <type>const <ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hFrom</declname>
        </param>
        <param>
          <type>const <ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hChild</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Detaches entity from parent. Note that detached entity is not removed from the world. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hFrom</parametername>
</parameternamelist>
<parameterdescription>
<para>Parent entity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hChild</parametername>
</parameternamelist>
<parameterdescription>
<para>Child to be detached </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="82" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a5755a54e1518588df70131d317e543c1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
        <definition>TEntity Raven::CWorld::CreateEntity</definition>
        <argsstring>(TEntity parent) const</argsstring>
        <name>CreateEntity</name>
        <param>
          <type><ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a child for entity if parent is a valid entity <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hTo</parametername>
</parameternamelist>
<parameterdescription>
<para>Parent entity </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Created entity handle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="87" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a78ff6898a208aecde4f48727defb9222" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
        <definition>TEntity Raven::CWorld::CreateEntity</definition>
        <argsstring>(const char *pName) const</argsstring>
        <name>CreateEntity</name>
        <param>
          <type>const char *</type>
          <declname>pName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create entity with name. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of entity to be created </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Created entity handle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="91" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a75f329b5fcdd48574237b5ca35426143" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CWorld::RemoveEntity</definition>
        <argsstring>(const TEntity hEnt)</argsstring>
        <name>RemoveEntity</name>
        <param>
          <type>const <ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete entity from the world <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hEnt</parametername>
</parameternamelist>
<parameterdescription>
<para>entity to be deleted </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="94" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1acb1f788bfc2e1d90350803c674b14807" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
        <definition>TEntity Raven::CWorld::DuplicateEntity</definition>
        <argsstring>(const TEntity &amp;src, CWorld *pDstWorld)</argsstring>
        <name>DuplicateEntity</name>
        <param>
          <type>const <ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> *</type>
          <declname>pDstWorld</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a copy of an entity with all components in a specified world. It is possible to provide itself or nullptr as world to just duplicate entity <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>entity to be copied </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pDstWorld</parametername>
</parameternamelist>
<parameterdescription>
<para>World to whild entity will be copied </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="99" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1af069dbc7a11e939fb05ae07ac632af4a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CompT</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>ExtraT</declname>
            <defname>ExtraT</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>ExcludeT</declname>
            <defname>ExcludeT</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_raven_1_1_t_query" kindref="compound">TQuery</ref>&lt; entt::entity, With&lt; CompT, ExtraT... &gt;, WithOut&lt; ExcludeT... &gt; &gt;</type>
        <definition>TQuery&lt;entt::entity, With&lt;CompT, ExtraT...&gt;, WithOut&lt;ExcludeT...&gt; &gt; Raven::CWorld::Query</definition>
        <argsstring>(WithOut&lt; ExcludeT... &gt; exclude={}) const</argsstring>
        <name>Query</name>
        <param>
          <type>WithOut&lt; ExcludeT... &gt;</type>
          <declname>exclude</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="103" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="103" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a917c2d45d7cbaaca14dbc05406d785db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CompT</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>ExtraT</declname>
            <defname>ExtraT</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>ExcludeT</declname>
            <defname>ExcludeT</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_raven_1_1_t_query" kindref="compound">TQuery</ref>&lt; entt::entity, With&lt; CompT, ExtraT... &gt;, WithOut&lt; ExcludeT... &gt; &gt;</type>
        <definition>TQuery&lt;entt::entity, With&lt;CompT, ExtraT...&gt;, WithOut&lt;ExcludeT...&gt; &gt; Raven::CWorld::Query</definition>
        <argsstring>(WithOut&lt; ExcludeT... &gt; exclude={})</argsstring>
        <name>Query</name>
        <param>
          <type>WithOut&lt; ExcludeT... &gt;</type>
          <declname>exclude</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="110" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="110" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a8d8602015cb35afef58372e80ffffc1f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CWorld::SetSimulationEnabled</definition>
        <argsstring>(const bool bEnabled)</argsstring>
        <name>SetSimulationEnabled</name>
        <param>
          <type>const bool</type>
          <declname>bEnabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="115" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1ab02c9b4bdf4c0b9ef8c9435f69855c5b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::CWorld::GetSimulationEnabled</definition>
        <argsstring>() const</argsstring>
        <name>GetSimulationEnabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="116" column="7" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1af343339f69a0d3403821f9915f9546cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::CWorld::SetIsPaused</definition>
        <argsstring>(const bool isPaused)</argsstring>
        <name>SetIsPaused</name>
        <param>
          <type>const bool</type>
          <declname>isPaused</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="118" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a3cb639df90f4bca0238681b11b570b2a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::CWorld::IsPaused</definition>
        <argsstring>() const</argsstring>
        <name>IsPaused</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="119" column="7" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a47112c101da98630affa48aa560f3aa6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const RWorld::WorldProperties &amp;</type>
        <definition>const RWorld::WorldProperties&amp; Raven::CWorld::GetWorldSettings</definition>
        <argsstring>() const</argsstring>
        <name>GetWorldSettings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="121" column="31" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="121" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1aaf189aa528b01dc9464380963bd510ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>RWorld::WorldProperties &amp;</type>
        <definition>RWorld::WorldProperties&amp; Raven::CWorld::GetWorldSettings</definition>
        <argsstring>()</argsstring>
        <name>GetWorldSettings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="124" column="28" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a6ecd5345dcc95a96018b0658827b11b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Fn</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Raven::CWorld::TraverseScene</definition>
        <argsstring>(const Fn &amp;fn)</argsstring>
        <name>TraverseScene</name>
        <param>
          <type>const Fn &amp;</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="126" column="18" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="126" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a56991a358be46515eea8ec44e878ec14" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
        <definition>TEntity Raven::CWorld::GetLastChild</definition>
        <argsstring>(TEntity hFor) const</argsstring>
        <name>GetLastChild</name>
        <param>
          <type><ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hFor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Iterates over all children and returs last one. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hFor</parametername>
</parameternamelist>
<parameterdescription>
<para>entity to search in </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Entity handle of the last child if present null handle otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="139" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="139" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a1b8396b84866271feb3b8bb2e6aecebb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Raven::CWorld::PublishUpdate</definition>
        <argsstring>(const TEntity hEnt)</argsstring>
        <name>PublishUpdate</name>
        <param>
          <type>const <ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send update singal for component of type &lt;T&gt; <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hEnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Entity owning component &lt;T&gt; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="157" column="18" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="157" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a68d514246080124afc323561fcd757bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>entt::sparse_set &amp;</type>
        <definition>entt::sparse_set&amp; Raven::CWorld::GetComponentStorage</definition>
        <argsstring>()</argsstring>
        <name>GetComponentStorage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get underlying sparse set for componet &lt;T&gt; <simplesect kind="return"><para>Component storage </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="163" column="30" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="163" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a34bfa28a3eba7537c00e9dce41babe9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
        <definition>TEntity Raven::CWorld::AddModel</definition>
        <argsstring>(const char *path, const TEntity parent)</argsstring>
        <name>AddModel</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds GLTF model to the world. <bold>TODO: REMOVE</bold> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="169" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_raven_1_1_c_world_1a35846b9abed2d8b5b2f198c7a9a7c0fa" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Fn</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Raven::CWorld::TraverseSceneImpl</definition>
        <argsstring>(TEntity parent, TEntity &amp;ent, const Fn &amp;fn) const</argsstring>
        <name>TraverseSceneImpl</name>
        <param>
          <type><ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref> &amp;</type>
          <declname>ent</declname>
        </param>
        <param>
          <type>const Fn &amp;</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="172" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="172" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a9b820d583a36c2577e671ad3785aabb7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref></type>
        <definition>CWorld Raven::CWorld::Clone</definition>
        <argsstring>()</argsstring>
        <name>Clone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="204" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a967e56c04b0450047f94919ecb28efb3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Raven::CWorld::SaveImpl</definition>
        <argsstring>()</argsstring>
        <name>SaveImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="206" column="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_raven_1_1_c_world_1a309fc8d562eb1aa287e993272ed35439" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Raven::CWorld::CloneFrom</definition>
        <argsstring>(const CWorld &amp;from, CWorld &amp;to)</argsstring>
        <name>CloneFrom</name>
        <param>
          <type>const <ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="209" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_raven_1_1_c_world_1a9dcd493a692abd01ae4cbf8e2495ce0e" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="class_raven_1_1_c_entity" kindref="compound">CEntity</ref></type>
        <definition>static class CEntity Raven::CWorld::DuplicateEntity</definition>
        <argsstring>(const CEntity &amp;srcEnt, CWorld &amp;dstWorld)</argsstring>
        <name>DuplicateEntity</name>
        <param>
          <type>const <ref refid="class_raven_1_1_c_entity" kindref="compound">CEntity</ref> &amp;</type>
          <declname>srcEnt</declname>
        </param>
        <param>
          <type><ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> &amp;</type>
          <declname>dstWorld</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="209" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" line="10" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/World.hpp" bodystart="10" bodyend="223"/>
    <listofallmembers>
      <member refid="class_raven_1_1_c_world_1a2e01488ba8fbe510ae92ed16eb1d084e" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>AddChild</name></member>
      <member refid="class_raven_1_1_c_world_1a97b38432c6181318cec7ae8defed3471" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>AddComponent</name></member>
      <member refid="class_raven_1_1_c_world_1a34bfa28a3eba7537c00e9dce41babe9a" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>AddModel</name></member>
      <member refid="class_raven_1_1_c_world_1af7a8756a58d95f7cc8b9f9a20f852113" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>AddOrReplace</name></member>
      <member refid="class_raven_1_1_c_world_1a9b820d583a36c2577e671ad3785aabb7" prot="private" virt="non-virtual"><scope>Raven::CWorld</scope><name>Clone</name></member>
      <member refid="class_raven_1_1_c_world_1a309fc8d562eb1aa287e993272ed35439" prot="private" virt="non-virtual"><scope>Raven::CWorld</scope><name>CloneFrom</name></member>
      <member refid="class_raven_1_1_c_world_1a6855aa75ced4810da641a2a72e171b7b" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>CreateChild</name></member>
      <member refid="class_raven_1_1_c_world_1a5755a54e1518588df70131d317e543c1" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>CreateEntity</name></member>
      <member refid="class_raven_1_1_c_world_1a78ff6898a208aecde4f48727defb9222" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>CreateEntity</name></member>
      <member refid="class_raven_1_1_c_world_1a17fe663119739561a2e9f27619887de5" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>CWorld</name></member>
      <member refid="class_raven_1_1_c_world_1affc0e8b76570253fec099676a77617ca" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>CWorld</name></member>
      <member refid="class_raven_1_1_c_world_1ac42d2750c80fd0057b5e353de1735579" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>CWorld</name></member>
      <member refid="class_raven_1_1_c_world_1acb1f788bfc2e1d90350803c674b14807" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>DuplicateEntity</name></member>
      <member refid="class_raven_1_1_c_world_1a9dcd493a692abd01ae4cbf8e2495ce0e" prot="private" virt="non-virtual"><scope>Raven::CWorld</scope><name>DuplicateEntity</name></member>
      <member refid="class_raven_1_1_c_world_1a05fc77f7e9fb2e68c1e5f34ae76e572a" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>GetComponent</name></member>
      <member refid="class_raven_1_1_c_world_1a68d514246080124afc323561fcd757bf" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>GetComponentStorage</name></member>
      <member refid="class_raven_1_1_c_world_1a56991a358be46515eea8ec44e878ec14" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>GetLastChild</name></member>
      <member refid="class_raven_1_1_c_world_1a93f1a54fe5db51224b27a5a579ce3a30" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>GetPath</name></member>
      <member refid="class_raven_1_1_c_world_1aaf68e766eb4fca69036be51c23652d42" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>GetRegistry</name></member>
      <member refid="class_raven_1_1_c_world_1a5e865b4172f0773a122138da8a7b4f48" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>GetRegistry</name></member>
      <member refid="class_raven_1_1_c_world_1a72a7f84aaeaef4cd1ada7147e2542d37" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>GetSelf</name></member>
      <member refid="class_raven_1_1_c_world_1ab02c9b4bdf4c0b9ef8c9435f69855c5b" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>GetSimulationEnabled</name></member>
      <member refid="class_raven_1_1_c_world_1a47112c101da98630affa48aa560f3aa6" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>GetWorldSettings</name></member>
      <member refid="class_raven_1_1_c_world_1aaf189aa528b01dc9464380963bd510ef" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>GetWorldSettings</name></member>
      <member refid="class_raven_1_1_c_world_1a19424ed5802c47706cd5298d54228dd9" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>Has</name></member>
      <member refid="class_raven_1_1_c_world_1adceb4ed9677c2638ac82e7637cccf02c" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>Init</name></member>
      <member refid="class_raven_1_1_c_world_1ab58c4e65415f28624147671850542f01" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>InPlaceRelease</name></member>
      <member refid="class_raven_1_1_c_world_1a3cb639df90f4bca0238681b11b570b2a" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>IsPaused</name></member>
      <member refid="class_raven_1_1_c_world_1ad580ee5d1fc7f1e352cb3ad4e39b689f" prot="private" virt="non-virtual"><scope>Raven::CWorld</scope><name>m_bSimulating</name></member>
      <member refid="class_raven_1_1_c_world_1a22f5d726e12764bf6431d79f59fafc61" prot="private" virt="non-virtual"><scope>Raven::CWorld</scope><name>m_currentLevelPath</name></member>
      <member refid="class_raven_1_1_c_world_1abfbdacfa6525f79fcee847cb4c5e12b1" prot="private" virt="non-virtual"><scope>Raven::CWorld</scope><name>m_hSelf</name></member>
      <member refid="class_raven_1_1_c_world_1a30ff1c145c12c0a29e88a259cbfef915" prot="private" virt="non-virtual"><scope>Raven::CWorld</scope><name>m_isPaused</name></member>
      <member refid="class_raven_1_1_c_world_1aeb92ff598f619ac0ef7b19f21aebb0f9" prot="private" virt="non-virtual"><scope>Raven::CWorld</scope><name>m_registry</name></member>
      <member refid="class_raven_1_1_c_world_1aa0dfb083275e3b4cf98e41ab5fd80f2e" prot="private" virt="non-virtual"><scope>Raven::CWorld</scope><name>m_worldSettings</name></member>
      <member refid="class_raven_1_1_c_world_1a85ee28eebfd14e389ed68d0cbd23318e" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>operator=</name></member>
      <member refid="class_raven_1_1_c_world_1a069c0d8475e21027085efc5b4d6884ed" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>operator=</name></member>
      <member refid="class_raven_1_1_c_world_1a1b8396b84866271feb3b8bb2e6aecebb" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>PublishUpdate</name></member>
      <member refid="class_raven_1_1_c_world_1af069dbc7a11e939fb05ae07ac632af4a" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>Query</name></member>
      <member refid="class_raven_1_1_c_world_1a917c2d45d7cbaaca14dbc05406d785db" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>Query</name></member>
      <member refid="class_raven_1_1_c_world_1a69c0bbedcb5758b8feca2c1a4d21a84c" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>RemoveChild</name></member>
      <member refid="class_raven_1_1_c_world_1a00ca63b26d6deeb81fc36d8b70fd05ba" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>RemoveComponent</name></member>
      <member refid="class_raven_1_1_c_world_1a75f329b5fcdd48574237b5ca35426143" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>RemoveEntity</name></member>
      <member refid="class_raven_1_1_c_world_1a967e56c04b0450047f94919ecb28efb3" prot="private" virt="non-virtual"><scope>Raven::CWorld</scope><name>SaveImpl</name></member>
      <member refid="class_raven_1_1_c_world_1adaaba15b6a2e112b6c7c7661ead5b066" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>SaveLevel</name></member>
      <member refid="class_raven_1_1_c_world_1af343339f69a0d3403821f9915f9546cf" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>SetIsPaused</name></member>
      <member refid="class_raven_1_1_c_world_1af36aa4ddd1d92661b6414cc6e1c0937a" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>SetPath</name></member>
      <member refid="class_raven_1_1_c_world_1a0a4ea89b7319c2a23e6d78d23f209757" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>SetSelf</name></member>
      <member refid="class_raven_1_1_c_world_1a8d8602015cb35afef58372e80ffffc1f" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>SetSimulationEnabled</name></member>
      <member refid="class_raven_1_1_c_world_1a6ecd5345dcc95a96018b0658827b11b8" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>TraverseScene</name></member>
      <member refid="class_raven_1_1_c_world_1a35846b9abed2d8b5b2f198c7a9a7c0fa" prot="private" virt="non-virtual"><scope>Raven::CWorld</scope><name>TraverseSceneImpl</name></member>
      <member refid="class_raven_1_1_c_world_1aab50081740c66df024e21fc09e8b5da5" prot="public" virt="non-virtual"><scope>Raven::CWorld</scope><name>~CWorld</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

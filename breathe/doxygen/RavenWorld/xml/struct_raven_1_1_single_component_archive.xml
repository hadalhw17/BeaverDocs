<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_raven_1_1_single_component_archive" kind="struct" language="C++" prot="public">
    <compoundname>Raven::SingleComponentArchive</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>Archiver</type>
        <declname>Arch</declname>
        <defname>Arch</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_raven_1_1_single_component_archive_1a9137d74ac27be1274e25c937f6387c7f" prot="public" static="no">
        <type>typename T</type>
        <definition>using Raven::SingleComponentArchive&lt; T, Arch &gt;::ComponentT =  typename T</definition>
        <argsstring></argsstring>
        <name>ComponentT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/WorldArchive.hpp" line="13" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/WorldArchive.hpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_raven_1_1_single_component_archive_1af783b6c61fb9b9773a72dd7fd9a847c6" prot="public" static="no">
        <type>std::conditional_t&lt; Arch::IsWriter, Utils::uuid, int &gt;</type>
        <definition>using Raven::SingleComponentArchive&lt; T, Arch &gt;::KeyT =  std::conditional_t&lt;Arch::IsWriter, Utils::uuid, int&gt;</definition>
        <argsstring></argsstring>
        <name>KeyT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/WorldArchive.hpp" line="14" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/WorldArchive.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_raven_1_1_single_component_archive_1a46a30411744882e369a956c957c61071" prot="public" static="no">
        <type>std::conditional_t&lt; Arch::IsWriter, int, ComponentT &gt;</type>
        <definition>using Raven::SingleComponentArchive&lt; T, Arch &gt;::IdT =  std::conditional_t&lt;Arch::IsWriter, int, ComponentT&gt;</definition>
        <argsstring></argsstring>
        <name>IdT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/WorldArchive.hpp" line="15" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/WorldArchive.hpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_raven_1_1_single_component_archive_1a8697f6f6bc3d64149b390967a5525c29" prot="public" static="no">
        <type>std::conditional_t&lt; Arch::IsWriter, std::unordered_map&lt; KeyT, IdT &gt;, std::vector&lt; IdT &gt; &gt;</type>
        <definition>using Raven::SingleComponentArchive&lt; T, Arch &gt;::ContainerT =  std::conditional_t&lt;Arch::IsWriter, std::unordered_map&lt;KeyT, IdT&gt;, std::vector&lt;IdT&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>ContainerT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/WorldArchive.hpp" line="16" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/WorldArchive.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="struct_raven_1_1_single_component_archive_1abb71b172c583b2ce3da51a65aa63e26a" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static bool</type>
        <definition>constexpr static bool Raven::SingleComponentArchive&lt; T, Arch &gt;::IsRuntime</definition>
        <argsstring></argsstring>
        <name>IsRuntime</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/WorldArchive.hpp" line="17" column="23" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/WorldArchive.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_raven_1_1_single_component_archive_1aebaeab8a10b896a748241daa4821b554" prot="private" static="no" mutable="no">
        <type>ContainerT</type>
        <definition>ContainerT Raven::SingleComponentArchive&lt; T, Arch &gt;::m_entityUUIDRemap</definition>
        <argsstring></argsstring>
        <name>m_entityUUIDRemap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/WorldArchive.hpp" line="69" column="12" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/WorldArchive.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_raven_1_1_single_component_archive_1a716e11f8b738bace59db8c39895e1f9e" prot="private" static="no" mutable="no">
        <type><ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> *</type>
        <definition>CWorld* Raven::SingleComponentArchive&lt; T, Arch &gt;::m_pWorld</definition>
        <argsstring></argsstring>
        <name>m_pWorld</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/WorldArchive.hpp" line="71" column="8" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/WorldArchive.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_raven_1_1_single_component_archive_1ae546ad51bcf628812fc76e6a0028046f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Raven::SingleComponentArchive&lt; T, Arch &gt;::SingleComponentArchive</definition>
        <argsstring>(CWorld *pWorld)</argsstring>
        <name>SingleComponentArchive</name>
        <param>
          <type><ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> *</type>
          <declname>pWorld</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/WorldArchive.hpp" line="19" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/WorldArchive.hpp" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_single_component_archive_1a5bb4d94177c2ddc5dc9aae0e8b768f97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::SingleComponentArchive&lt; T, Arch &gt;::Write</definition>
        <argsstring>(Arch &amp;arch, const std::unordered_set&lt; TEntity &gt; &amp;entToSerialise)</argsstring>
        <name>Write</name>
        <param>
          <type>Arch &amp;</type>
          <declname>arch</declname>
        </param>
        <param>
          <type>const std::unordered_set&lt; <ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref> &gt; &amp;</type>
          <declname>entToSerialise</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/WorldArchive.hpp" line="21" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/WorldArchive.hpp" bodystart="21" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_single_component_archive_1a0ab3bee976652568a611dd2945d9a8a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::SingleComponentArchive&lt; T, Arch &gt;::Read</definition>
        <argsstring>(Arch &amp;arch)</argsstring>
        <name>Read</name>
        <param>
          <type>Arch &amp;</type>
          <declname>arch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/WorldArchive.hpp" line="38" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/WorldArchive.hpp" bodystart="38" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_single_component_archive_1afdf85931cacd47cec9a77c268238d015" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>IdT</type>
        <definition>IdT Raven::SingleComponentArchive&lt; T, Arch &gt;::GetComponentId</definition>
        <argsstring>(const KeyT &amp;key) const</argsstring>
        <name>GetComponentId</name>
        <param>
          <type>const KeyT &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/WorldArchive.hpp" line="55" column="5" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/WorldArchive.hpp" bodystart="55" bodyend="67"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/WorldArchive.hpp" line="11" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/WorldArchive.hpp" bodystart="12" bodyend="72"/>
    <listofallmembers>
      <member refid="struct_raven_1_1_single_component_archive_1a9137d74ac27be1274e25c937f6387c7f" prot="public" virt="non-virtual"><scope>Raven::SingleComponentArchive</scope><name>ComponentT</name></member>
      <member refid="struct_raven_1_1_single_component_archive_1a8697f6f6bc3d64149b390967a5525c29" prot="public" virt="non-virtual"><scope>Raven::SingleComponentArchive</scope><name>ContainerT</name></member>
      <member refid="struct_raven_1_1_single_component_archive_1afdf85931cacd47cec9a77c268238d015" prot="public" virt="non-virtual"><scope>Raven::SingleComponentArchive</scope><name>GetComponentId</name></member>
      <member refid="struct_raven_1_1_single_component_archive_1a46a30411744882e369a956c957c61071" prot="public" virt="non-virtual"><scope>Raven::SingleComponentArchive</scope><name>IdT</name></member>
      <member refid="struct_raven_1_1_single_component_archive_1abb71b172c583b2ce3da51a65aa63e26a" prot="public" virt="non-virtual"><scope>Raven::SingleComponentArchive</scope><name>IsRuntime</name></member>
      <member refid="struct_raven_1_1_single_component_archive_1af783b6c61fb9b9773a72dd7fd9a847c6" prot="public" virt="non-virtual"><scope>Raven::SingleComponentArchive</scope><name>KeyT</name></member>
      <member refid="struct_raven_1_1_single_component_archive_1aebaeab8a10b896a748241daa4821b554" prot="private" virt="non-virtual"><scope>Raven::SingleComponentArchive</scope><name>m_entityUUIDRemap</name></member>
      <member refid="struct_raven_1_1_single_component_archive_1a716e11f8b738bace59db8c39895e1f9e" prot="private" virt="non-virtual"><scope>Raven::SingleComponentArchive</scope><name>m_pWorld</name></member>
      <member refid="struct_raven_1_1_single_component_archive_1a0ab3bee976652568a611dd2945d9a8a3" prot="public" virt="non-virtual"><scope>Raven::SingleComponentArchive</scope><name>Read</name></member>
      <member refid="struct_raven_1_1_single_component_archive_1ae546ad51bcf628812fc76e6a0028046f" prot="public" virt="non-virtual"><scope>Raven::SingleComponentArchive</scope><name>SingleComponentArchive</name></member>
      <member refid="struct_raven_1_1_single_component_archive_1a5bb4d94177c2ddc5dc9aae0e8b768f97" prot="public" virt="non-virtual"><scope>Raven::SingleComponentArchive</scope><name>Write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

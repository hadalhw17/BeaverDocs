<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespace_raven_1_1_detail" kind="namespace" language="C++">
    <compoundname>Raven::Detail</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_components_8hpp_1af7f2233791bbb1891c96844537ded9d6" prot="public" static="no" mutable="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>concept</type>
        <definition>concept Raven::Detail::IsTagComponent</definition>
        <argsstring></argsstring>
        <name>IsTagComponent</name>
        <initializer>= requires(<ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref>&amp; w) {
		{w.GetComponent&lt;T&gt;(<ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref>{})} -&gt; std::same_as&lt;void&gt;;
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" line="8" column="9" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" bodystart="8" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" line="6" column="1"/>
  </compounddef>
</doxygen>

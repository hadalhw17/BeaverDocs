<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_raven_1_1_i_component_bind" kind="struct" language="C++" prot="public" abstract="yes">
    <compoundname>Raven::IComponentBind</compoundname>
    <derivedcompoundref refid="class_raven_1_1_t_component_bind" prot="public" virt="non-virtual">Raven::TComponentBind&lt; ComponentT &gt;</derivedcompoundref>
    <includes refid="_components_8hpp" local="no">Components.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="struct_raven_1_1_i_component_bind_1ad61e9a645a65da307be10f7127a7557d" prot="protected" static="no" mutable="no">
        <type>friend</type>
        <definition>friend Raven::IComponentBind::CWorld</definition>
        <argsstring></argsstring>
        <name>CWorld</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" line="130" column="8" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" bodystart="130" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_raven_1_1_i_component_bind_1a02c9b1064794de98a8eefa9ede9a2dbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Raven::IComponentBind::~IComponentBind</definition>
        <argsstring>()=default</argsstring>
        <name>~IComponentBind</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" line="99" column="9"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_i_component_bind_1a5d9a0b57300ca8d6d827b2008ff495b1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>Meta::Type</type>
        <definition>virtual Meta::Type Raven::IComponentBind::Type</definition>
        <argsstring>() const =0</argsstring>
        <name>Type</name>
        <reimplementedby refid="class_raven_1_1_t_component_bind_1a6de023ccf2fd23ac3d9c2bf27edbc0bd">Type</reimplementedby>
        <briefdescription>
<para>Meta type of the component. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" line="102" column="27"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_i_component_bind_1ad77fdc0b7947de64d68e004a57ed5a07" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>entt::sparse_set &amp;</type>
        <definition>virtual entt::sparse_set&amp; Raven::IComponentBind::StorageFor</definition>
        <argsstring>(CWorld *pWorld) const =0</argsstring>
        <name>StorageFor</name>
        <reimplementedby refid="class_raven_1_1_t_component_bind_1addf5ca62a466a130729f221180b39f28">StorageFor</reimplementedby>
        <param>
          <type><ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> *</type>
          <declname>pWorld</declname>
        </param>
        <briefdescription>
<para>Type errased storage of the component. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" line="104" column="26"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_i_component_bind_1a03c8f975f1a7fefa5ee7dd97f0905b21" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool Raven::IComponentBind::ExistsIn</definition>
        <argsstring>(CWorld *pWorld, const TEntity hEnt) const =0</argsstring>
        <name>ExistsIn</name>
        <reimplementedby refid="class_raven_1_1_t_component_bind_1adfc775d34b9d39e9556d90e4d222454f">ExistsIn</reimplementedby>
        <param>
          <type><ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> *</type>
          <declname>pWorld</declname>
        </param>
        <param>
          <type>const <ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Weather entity has a component <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pWorld</parametername>
</parameternamelist>
<parameterdescription>
<para>world to check </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hEnt</parametername>
</parameternamelist>
<parameterdescription>
<para>entity to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" line="108" column="14"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_i_component_bind_1aa05a6154b79680af81020380c5c7dd67" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Raven::IComponentBind::PublishUpdateFor</definition>
        <argsstring>(CWorld *pWorld, const TEntity hEnt) const =0</argsstring>
        <name>PublishUpdateFor</name>
        <reimplementedby refid="class_raven_1_1_t_component_bind_1a148236e17cbe00a1a8195519776d6332">PublishUpdateFor</reimplementedby>
        <param>
          <type><ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> *</type>
          <declname>pWorld</declname>
        </param>
        <param>
          <type>const <ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <briefdescription>
<para>Send update signal for component at entity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" line="110" column="14"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_i_component_bind_1a40214ec99c950b10740e93df5080fdfe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void *</type>
        <definition>virtual void* Raven::IComponentBind::CreateComponentIn</definition>
        <argsstring>(CWorld *pWorld, const TEntity hEnt) const =0</argsstring>
        <name>CreateComponentIn</name>
        <reimplementedby refid="class_raven_1_1_t_component_bind_1a39443b42b6f7bf9d2ed2fa560ab82264">CreateComponentIn</reimplementedby>
        <param>
          <type><ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> *</type>
          <declname>pWorld</declname>
        </param>
        <param>
          <type>const <ref refid="class_raven_1_1_t_entity" kindref="compound">TEntity</ref></type>
          <declname>hEnt</declname>
        </param>
        <briefdescription>
<para>Create component for entity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" line="112" column="14"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_i_component_bind_1ae51bad9094925614e4afa35b67241fca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Raven::IComponentBind::Exists</definition>
        <argsstring>(const CEntity &amp;ent) const</argsstring>
        <name>Exists</name>
        <param>
          <type>const <ref refid="class_raven_1_1_c_entity" kindref="compound">CEntity</ref> &amp;</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" line="116" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" bodystart="116" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_i_component_bind_1ab15541959bfb0580c9e10ddb5f8b50e8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Raven::IComponentBind::PublishUpdate</definition>
        <argsstring>(const CEntity &amp;ent) const</argsstring>
        <name>PublishUpdate</name>
        <param>
          <type>const <ref refid="class_raven_1_1_c_entity" kindref="compound">CEntity</ref> &amp;</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" line="120" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="struct_raven_1_1_i_component_bind_1adac024f21307c8ca054ccc313eb2e99f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void* Raven::IComponentBind::CreateComponent</definition>
        <argsstring>(const CEntity &amp;ent) const</argsstring>
        <name>CreateComponent</name>
        <param>
          <type>const <ref refid="class_raven_1_1_c_entity" kindref="compound">CEntity</ref> &amp;</type>
          <declname>ent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" line="124" column="6" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" bodystart="124" bodyend="127"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="struct_raven_1_1_i_component_bind_1aa5614ccf45cdeab24c0bfe905b3435a4" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Raven::IComponentBind::AttachToWorld</definition>
        <argsstring>(CWorld *pWorld) const =0</argsstring>
        <name>AttachToWorld</name>
        <reimplementedby refid="class_raven_1_1_t_component_bind_1a9d70b4ca57412434149e80206ae2fbb7">AttachToWorld</reimplementedby>
        <param>
          <type><ref refid="class_raven_1_1_c_world" kindref="compound">CWorld</ref> *</type>
          <declname>pWorld</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" line="131" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Type errased interface to interact with component registry. Needed for things like serialisation/editor </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Raven::IComponentBind</label>
        <link refid="struct_raven_1_1_i_component_bind"/>
      </node>
      <node id="2">
        <label>Raven::TComponentBind&lt; ComponentT &gt;</label>
        <link refid="class_raven_1_1_t_component_bind"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" line="98" column="1" bodyfile="/home/runner/work/RavenEngine/RavenEngine/Raven/Code/RavenWorld/Components.hpp" bodystart="98" bodyend="132"/>
    <listofallmembers>
      <member refid="struct_raven_1_1_i_component_bind_1aa5614ccf45cdeab24c0bfe905b3435a4" prot="protected" virt="pure-virtual"><scope>Raven::IComponentBind</scope><name>AttachToWorld</name></member>
      <member refid="struct_raven_1_1_i_component_bind_1adac024f21307c8ca054ccc313eb2e99f" prot="public" virt="non-virtual"><scope>Raven::IComponentBind</scope><name>CreateComponent</name></member>
      <member refid="struct_raven_1_1_i_component_bind_1a40214ec99c950b10740e93df5080fdfe" prot="public" virt="pure-virtual"><scope>Raven::IComponentBind</scope><name>CreateComponentIn</name></member>
      <member refid="struct_raven_1_1_i_component_bind_1ad61e9a645a65da307be10f7127a7557d" prot="protected" virt="non-virtual"><scope>Raven::IComponentBind</scope><name>CWorld</name></member>
      <member refid="struct_raven_1_1_i_component_bind_1ae51bad9094925614e4afa35b67241fca" prot="public" virt="non-virtual"><scope>Raven::IComponentBind</scope><name>Exists</name></member>
      <member refid="struct_raven_1_1_i_component_bind_1a03c8f975f1a7fefa5ee7dd97f0905b21" prot="public" virt="pure-virtual"><scope>Raven::IComponentBind</scope><name>ExistsIn</name></member>
      <member refid="struct_raven_1_1_i_component_bind_1ab15541959bfb0580c9e10ddb5f8b50e8" prot="public" virt="non-virtual"><scope>Raven::IComponentBind</scope><name>PublishUpdate</name></member>
      <member refid="struct_raven_1_1_i_component_bind_1aa05a6154b79680af81020380c5c7dd67" prot="public" virt="pure-virtual"><scope>Raven::IComponentBind</scope><name>PublishUpdateFor</name></member>
      <member refid="struct_raven_1_1_i_component_bind_1ad77fdc0b7947de64d68e004a57ed5a07" prot="public" virt="pure-virtual"><scope>Raven::IComponentBind</scope><name>StorageFor</name></member>
      <member refid="struct_raven_1_1_i_component_bind_1a5d9a0b57300ca8d6d827b2008ff495b1" prot="public" virt="pure-virtual"><scope>Raven::IComponentBind</scope><name>Type</name></member>
      <member refid="struct_raven_1_1_i_component_bind_1a02c9b1064794de98a8eefa9ede9a2dbb" prot="public" virt="virtual"><scope>Raven::IComponentBind</scope><name>~IComponentBind</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespace_bvr_1_1_n_math" kind="namespace" language="C++">
    <compoundname>Bvr::NMath</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_bvr_math_8hpp_1ade9d771b97378de5d9c95a88e8725d8a" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr float</type>
        <definition>constexpr float Bvr::NMath::max_float</definition>
        <argsstring></argsstring>
        <name>max_float</name>
        <initializer>= std::numeric_limits&lt;float&gt;::max()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="147" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_bvr_math_8hpp_1a7d56d3ca2e87bcf501ce4368840ba547" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>typename VectorType</type>
          </param>
        </templateparamlist>
        <type>constexpr VectorType::value_type</type>
        <definition>constexpr VectorType::value_type Bvr::NMath::max_vec</definition>
        <argsstring></argsstring>
        <name>max_vec</name>
        <initializer>=
        std::numeric_limits&lt;typename VectorType::value_type&gt;::max()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="149" column="47" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_bvr_math_8hpp_1a978f23622ccc42c45ff7bc63bee5fc31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float3</type>
        <definition>float3 Bvr::NMath::PolarToCartesian</definition>
        <argsstring>(const float3 polar)</argsstring>
        <name>PolarToCartesian</name>
        <param>
          <type>const float3</type>
          <declname>polar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="325" column="12" declfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" declline="325" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="_bvr_math_8hpp_1aff69de269b814147ab8ed19461c08fb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float2</type>
        <definition>float2 Bvr::NMath::CartesianToPolar</definition>
        <argsstring>(const float3 cartesian)</argsstring>
        <name>CartesianToPolar</name>
        <param>
          <type>const float3</type>
          <declname>cartesian</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="326" column="12" declfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" declline="326" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="_bvr_math_8hpp_1ab93c5e5979f71eb4be00e0ba875d28a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::NMath::IsInf</definition>
        <argsstring>(const float4 item)</argsstring>
        <name>IsInf</name>
        <param>
          <type>const float4</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="328" column="12" declfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" declline="328" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="_bvr_math_8hpp_1acd90621cc35feeb20b43c019b0d8261c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::NMath::IsInf</definition>
        <argsstring>(const float3 item)</argsstring>
        <name>IsInf</name>
        <param>
          <type>const float3</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="329" column="12" declfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" declline="329" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="_bvr_math_8hpp_1a877eeae44758581303d2c3584e15c561" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::NMath::IsInf</definition>
        <argsstring>(const float2 item)</argsstring>
        <name>IsInf</name>
        <param>
          <type>const float2</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="330" column="12" declfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" declline="330" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="_bvr_math_8hpp_1a9b4ebfc77e2d67e73dbc8776d302d526" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::NMath::IsInf</definition>
        <argsstring>(const float item)</argsstring>
        <name>IsInf</name>
        <param>
          <type>const float</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="331" column="12" declfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" declline="331" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="_bvr_math_8hpp_1a76fd3fe1d6ba19e90fa936c74dd3827c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Bvr::NMath::SmoothDampAngle</definition>
        <argsstring>(float current, float target, float &amp;currentVelocity, float smoothTime, float maxSpeed, float deltaTime)</argsstring>
        <name>SmoothDampAngle</name>
        <param>
          <type>float</type>
          <declname>current</declname>
        </param>
        <param>
          <type>float</type>
          <declname>target</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>currentVelocity</declname>
        </param>
        <param>
          <type>float</type>
          <declname>smoothTime</declname>
        </param>
        <param>
          <type>float</type>
          <declname>maxSpeed</declname>
        </param>
        <param>
          <type>float</type>
          <declname>deltaTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="333" column="12" declfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" declline="333" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="_bvr_math_8hpp_1ad70ae254f529f6e60387d35eb6e340ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Bvr::NMath::SmoothDamp</definition>
        <argsstring>(float current, float target, float &amp;currentVelocity, float smoothTime, float maxSpeed, float deltaTime)</argsstring>
        <name>SmoothDamp</name>
        <param>
          <type>float</type>
          <declname>current</declname>
        </param>
        <param>
          <type>float</type>
          <declname>target</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>currentVelocity</declname>
        </param>
        <param>
          <type>float</type>
          <declname>smoothTime</declname>
        </param>
        <param>
          <type>float</type>
          <declname>maxSpeed</declname>
        </param>
        <param>
          <type>float</type>
          <declname>deltaTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="335" column="12" declfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" declline="335" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="_bvr_math_8hpp_1ab7de26b77ffe158893d0a26bb139dc8b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>static T Bvr::NMath::CubicSplineInterp</definition>
        <argsstring>(float t, T p0, T m0, T p1, T m1)</argsstring>
        <name>CubicSplineInterp</name>
        <param>
          <type>float</type>
          <declname>t</declname>
        </param>
        <param>
          <type>T</type>
          <declname>p0</declname>
        </param>
        <param>
          <type>T</type>
          <declname>m0</declname>
        </param>
        <param>
          <type>T</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>T</type>
          <declname>m1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="340" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="340" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="_bvr_math_8hpp_1a1bd5c550ed3417479aee5e36fc4cdb44" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr T</type>
        <definition>constexpr T Bvr::NMath::Rcp</definition>
        <argsstring>(const T val)</argsstring>
        <name>Rcp</name>
        <param>
          <type>const T</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="348" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="348" bodyend="350"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="146" column="1"/>
  </compounddef>
</doxygen>

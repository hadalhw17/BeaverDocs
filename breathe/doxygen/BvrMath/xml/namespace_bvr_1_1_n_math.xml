<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespace_bvr_1_1_n_math" kind="namespace" language="C++">
    <compoundname>Bvr::NMath</compoundname>
    <innerclass refid="struct_bvr_1_1_n_math_1_1_component_type" prot="public">Bvr::NMath::ComponentType</innerclass>
    <innerclass refid="struct_bvr_1_1_n_math_1_1_component_type_3_01glm_1_1vec_3_01_n_00_01_t_00_01_q_01_4_01_4" prot="public">Bvr::NMath::ComponentType&lt; glm::vec&lt; N, T, Q &gt; &gt;</innerclass>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_bvr_math_8hpp_1af9f451fcbcacf68b4c0d9a87037c72c2" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_bvr_1_1_n_math_1_1_component_type" kindref="compound">ComponentType</ref>&lt; T &gt;::Type</type>
        <definition>using Bvr::NMath::TComponentType = typedef typename ComponentType&lt;T&gt;::Type</definition>
        <argsstring></argsstring>
        <name>TComponentType</name>
        <qualifiedname>Bvr::NMath::TComponentType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="123" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="_bvr_math_8hpp_1ade9d771b97378de5d9c95a88e8725d8a" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr float</type>
        <definition>constexpr float Bvr::NMath::max_float</definition>
        <argsstring></argsstring>
        <name>max_float</name>
        <qualifiedname>Bvr::NMath::max_float</qualifiedname>
        <initializer>= std::numeric_limits&lt;float&gt;::max()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="109" column="21" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_bvr_math_8hpp_1a7d56d3ca2e87bcf501ce4368840ba547" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>typename VectorType</type>
          </param>
        </templateparamlist>
        <type>constexpr VectorType::value_type</type>
        <definition>constexpr VectorType::value_type Bvr::NMath::max_vec</definition>
        <argsstring></argsstring>
        <name>max_vec</name>
        <qualifiedname>Bvr::NMath::max_vec</qualifiedname>
        <initializer>=
        std::numeric_limits&lt;typename VectorType::value_type&gt;::max()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="111" column="47" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="_bvr_math_8hpp_1a978f23622ccc42c45ff7bc63bee5fc31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float3</type>
        <definition>float3 Bvr::NMath::PolarToCartesian</definition>
        <argsstring>(const float3 polar)</argsstring>
        <name>PolarToCartesian</name>
        <qualifiedname>Bvr::NMath::PolarToCartesian</qualifiedname>
        <param>
          <type>const float3</type>
          <declname>polar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="331" column="12" declfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" declline="331" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="_bvr_math_8hpp_1aff69de269b814147ab8ed19461c08fb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float2</type>
        <definition>float2 Bvr::NMath::CartesianToPolar</definition>
        <argsstring>(const float3 cartesian)</argsstring>
        <name>CartesianToPolar</name>
        <qualifiedname>Bvr::NMath::CartesianToPolar</qualifiedname>
        <param>
          <type>const float3</type>
          <declname>cartesian</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="332" column="12" declfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" declline="332" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="_bvr_math_8hpp_1ab93c5e5979f71eb4be00e0ba875d28a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::NMath::IsInf</definition>
        <argsstring>(const float4 item)</argsstring>
        <name>IsInf</name>
        <qualifiedname>Bvr::NMath::IsInf</qualifiedname>
        <param>
          <type>const float4</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="334" column="12" declfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" declline="334" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="_bvr_math_8hpp_1acd90621cc35feeb20b43c019b0d8261c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::NMath::IsInf</definition>
        <argsstring>(const float3 item)</argsstring>
        <name>IsInf</name>
        <qualifiedname>Bvr::NMath::IsInf</qualifiedname>
        <param>
          <type>const float3</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="335" column="12" declfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" declline="335" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="_bvr_math_8hpp_1a877eeae44758581303d2c3584e15c561" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::NMath::IsInf</definition>
        <argsstring>(const float2 item)</argsstring>
        <name>IsInf</name>
        <qualifiedname>Bvr::NMath::IsInf</qualifiedname>
        <param>
          <type>const float2</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="336" column="12" declfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" declline="336" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="_bvr_math_8hpp_1a9b4ebfc77e2d67e73dbc8776d302d526" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bvr::NMath::IsInf</definition>
        <argsstring>(const float item)</argsstring>
        <name>IsInf</name>
        <qualifiedname>Bvr::NMath::IsInf</qualifiedname>
        <param>
          <type>const float</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="337" column="12" declfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" declline="337" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="_bvr_math_8hpp_1a76fd3fe1d6ba19e90fa936c74dd3827c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Bvr::NMath::SmoothDampAngle</definition>
        <argsstring>(float current, float target, float &amp;currentVelocity, float smoothTime, float maxSpeed, float deltaTime)</argsstring>
        <name>SmoothDampAngle</name>
        <qualifiedname>Bvr::NMath::SmoothDampAngle</qualifiedname>
        <param>
          <type>float</type>
          <declname>current</declname>
        </param>
        <param>
          <type>float</type>
          <declname>target</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>currentVelocity</declname>
        </param>
        <param>
          <type>float</type>
          <declname>smoothTime</declname>
        </param>
        <param>
          <type>float</type>
          <declname>maxSpeed</declname>
        </param>
        <param>
          <type>float</type>
          <declname>deltaTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="339" column="12" declfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" declline="339" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="_bvr_math_8hpp_1ad70ae254f529f6e60387d35eb6e340ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Bvr::NMath::SmoothDamp</definition>
        <argsstring>(float current, float target, float &amp;currentVelocity, float smoothTime, float maxSpeed, float deltaTime)</argsstring>
        <name>SmoothDamp</name>
        <qualifiedname>Bvr::NMath::SmoothDamp</qualifiedname>
        <param>
          <type>float</type>
          <declname>current</declname>
        </param>
        <param>
          <type>float</type>
          <declname>target</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>currentVelocity</declname>
        </param>
        <param>
          <type>float</type>
          <declname>smoothTime</declname>
        </param>
        <param>
          <type>float</type>
          <declname>maxSpeed</declname>
        </param>
        <param>
          <type>float</type>
          <declname>deltaTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="341" column="12" declfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" declline="341" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="_bvr_math_8hpp_1afb06aa13f529cf8965f4902b50e2ef1b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TVal</type>
          </param>
        </templateparamlist>
        <type>TVal</type>
        <definition>static TVal Bvr::NMath::CubicSplineInterp</definition>
        <argsstring>(float t, TVal p0, TVal m0, TVal p1, TVal m1)</argsstring>
        <name>CubicSplineInterp</name>
        <qualifiedname>Bvr::NMath::CubicSplineInterp</qualifiedname>
        <param>
          <type>float</type>
          <declname>t</declname>
        </param>
        <param>
          <type>TVal</type>
          <declname>p0</declname>
        </param>
        <param>
          <type>TVal</type>
          <declname>m0</declname>
        </param>
        <param>
          <type>TVal</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>TVal</type>
          <declname>m1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="346" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="346" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="_bvr_math_8hpp_1a1bd5c550ed3417479aee5e36fc4cdb44" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr T</type>
        <definition>constexpr T Bvr::NMath::Rcp</definition>
        <argsstring>(const T val)</argsstring>
        <name>Rcp</name>
        <qualifiedname>Bvr::NMath::Rcp</qualifiedname>
        <param>
          <type>const T</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="357" column="24" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="357" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="_bvr_math_8hpp_1af2f07bafe204681c9c846b3cc17998d0" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr T</type>
        <definition>constexpr T Bvr::NMath::ToRad</definition>
        <argsstring>(const T deg)</argsstring>
        <name>ToRad</name>
        <qualifiedname>Bvr::NMath::ToRad</qualifiedname>
        <param>
          <type>const T</type>
          <declname>deg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="361" column="36" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="361" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="_bvr_math_8hpp_1a0c48c4d0830bdc4f3fdcb911bebe6456" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr T</type>
        <definition>constexpr T Bvr::NMath::ToDeg</definition>
        <argsstring>(const T rad)</argsstring>
        <name>ToDeg</name>
        <qualifiedname>Bvr::NMath::ToDeg</qualifiedname>
        <param>
          <type>const T</type>
          <declname>rad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="365" column="36" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="365" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="_bvr_math_8hpp_1aa11ffa5d5618830a84881ecf98c3b2c0" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr T</type>
        <definition>constexpr T Bvr::NMath::GetLuminanceRel</definition>
        <argsstring>(glm::vec&lt; 3, T &gt; linRGB)</argsstring>
        <name>GetLuminanceRel</name>
        <qualifiedname>Bvr::NMath::GetLuminanceRel</qualifiedname>
        <param>
          <type>glm::vec&lt; 3, T &gt;</type>
          <declname>linRGB</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="371" column="29" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="371" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="_bvr_math_8hpp_1a6995bef40da7b63ab2c1d9526ae02cf0" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr T</type>
        <definition>constexpr T Bvr::NMath::GetLuminancePer</definition>
        <argsstring>(glm::vec&lt; 3, T &gt; linRGB)</argsstring>
        <name>GetLuminancePer</name>
        <qualifiedname>Bvr::NMath::GetLuminancePer</qualifiedname>
        <param>
          <type>glm::vec&lt; 3, T &gt;</type>
          <declname>linRGB</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="379" column="29" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="379" bodyend="383"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="108" column="1"/>
  </compounddef>
</doxygen>

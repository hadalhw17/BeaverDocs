<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="struct_bvr_1_1_colour_1_1_convert_from_3_01_linear_r_g_ba_01_4" kind="struct" language="C++" prot="public">
    <compoundname>Bvr::Colour::ConvertFrom&lt; LinearRGBa &gt;</compoundname>
    <templateparamlist>
    </templateparamlist>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_bvr_1_1_colour_1_1_convert_from_3_01_linear_r_g_ba_01_4_1adfe29755815564d930564878f5d8e597" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Colour::ConvertFrom&lt; LinearRGBa &gt;::To</definition>
        <argsstring>(const LinearRGBa &amp;from, SRGBa &amp;to)</argsstring>
        <name>To</name>
        <qualifiedname>Bvr::Colour::ConvertFrom&lt; LinearRGBa &gt;::To</qualifiedname>
        <param>
          <type>const <ref refid="struct_bvr_1_1_colour_1_1_linear_r_g_ba" kindref="compound">LinearRGBa</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_colour_1_1_s_r_g_ba" kindref="compound">SRGBa</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/Colour.hpp" line="624" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/Colour.hpp" bodystart="624" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_colour_1_1_convert_from_3_01_linear_r_g_ba_01_4_1abf5f8b3d98e1af2598a8ca371cb8902e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Colour::ConvertFrom&lt; LinearRGBa &gt;::To</definition>
        <argsstring>(const LinearRGBa &amp;from, HSVa &amp;to)</argsstring>
        <name>To</name>
        <qualifiedname>Bvr::Colour::ConvertFrom&lt; LinearRGBa &gt;::To</qualifiedname>
        <param>
          <type>const <ref refid="struct_bvr_1_1_colour_1_1_linear_r_g_ba" kindref="compound">LinearRGBa</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_colour_1_1_h_s_va" kindref="compound">HSVa</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/Colour.hpp" line="629" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/Colour.hpp" bodystart="629" bodyend="632"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_colour_1_1_convert_from_3_01_linear_r_g_ba_01_4_1a610dc4c6b03235ed8adf99853d85e336" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Bvr::Colour::ConvertFrom&lt; LinearRGBa &gt;::To</definition>
        <argsstring>(const LinearRGBa &amp;from, HSLa &amp;to)</argsstring>
        <name>To</name>
        <qualifiedname>Bvr::Colour::ConvertFrom&lt; LinearRGBa &gt;::To</qualifiedname>
        <param>
          <type>const <ref refid="struct_bvr_1_1_colour_1_1_linear_r_g_ba" kindref="compound">LinearRGBa</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="struct_bvr_1_1_colour_1_1_h_s_la" kindref="compound">HSLa</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/Colour.hpp" line="634" column="17" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/Colour.hpp" bodystart="634" bodyend="637"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/Colour.hpp" line="623" column="11" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/Colour.hpp" bodystart="623" bodyend="638"/>
    <listofallmembers>
      <member refid="struct_bvr_1_1_colour_1_1_convert_from_3_01_linear_r_g_ba_01_4_1adfe29755815564d930564878f5d8e597" prot="public" virt="non-virtual"><scope>Bvr::Colour::ConvertFrom&lt; LinearRGBa &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_colour_1_1_convert_from_3_01_linear_r_g_ba_01_4_1abf5f8b3d98e1af2598a8ca371cb8902e" prot="public" virt="non-virtual"><scope>Bvr::Colour::ConvertFrom&lt; LinearRGBa &gt;</scope><name>To</name></member>
      <member refid="struct_bvr_1_1_colour_1_1_convert_from_3_01_linear_r_g_ba_01_4_1a610dc4c6b03235ed8adf99853d85e336" prot="public" virt="non-virtual"><scope>Bvr::Colour::ConvertFrom&lt; LinearRGBa &gt;</scope><name>To</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

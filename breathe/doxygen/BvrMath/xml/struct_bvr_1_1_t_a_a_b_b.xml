<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="struct_bvr_1_1_t_a_a_b_b" kind="struct" language="C++" prot="public">
    <compoundname>Bvr::TAABB</compoundname>
    <templateparamlist>
      <param>
        <type>typename VectorType</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_bvr_1_1_t_a_a_b_b_1a0a228b7b6b3d78e0f27af3068b152601" prot="public" static="no">
        <type>typename VectorType::value_type</type>
        <definition>using Bvr::TAABB&lt; VectorType &gt;::PrimitiveType =  typename VectorType::value_type</definition>
        <argsstring></argsstring>
        <name>PrimitiveType</name>
        <qualifiedname>Bvr::TAABB::PrimitiveType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="137" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_t_a_a_b_b_1a55b35cb1692d05fcead89ba95f8d0899" prot="public" static="no">
        <type>glm::vec&lt; VectorLen+1, PrimitiveType &gt;</type>
        <definition>using Bvr::TAABB&lt; VectorType &gt;::TVecMulType =  glm::vec&lt;VectorLen + 1, PrimitiveType&gt;</definition>
        <argsstring></argsstring>
        <name>TVecMulType</name>
        <qualifiedname>Bvr::TAABB::TVecMulType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="138" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_bvr_1_1_t_a_a_b_b_1a44faf37bc69a6b6cdbc11c5e289dc83a" prot="public" static="no">
        <type>glm::mat&lt; VectorLen+1, VectorLen+1, PrimitiveType &gt;</type>
        <definition>using Bvr::TAABB&lt; VectorType &gt;::TMatMulType =  glm::mat&lt;VectorLen + 1, VectorLen + 1, PrimitiveType&gt;</definition>
        <argsstring></argsstring>
        <name>TMatMulType</name>
        <qualifiedname>Bvr::TAABB::TMatMulType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="139" column="5" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="struct_bvr_1_1_t_a_a_b_b_1af98e4e8454f6aef0575e816508258f11" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto Bvr::TAABB&lt; VectorType &gt;::VectorLen</definition>
        <argsstring></argsstring>
        <name>VectorLen</name>
        <qualifiedname>Bvr::TAABB::VectorLen</qualifiedname>
        <initializer>= VectorType::length()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="136" column="27" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_bvr_1_1_t_a_a_b_b_1ac9d76b97bd4b06b4ad0748cbac751c73" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr PrimitiveType</type>
        <definition>constexpr PrimitiveType Bvr::TAABB&lt; VectorType &gt;::max_bound_v</definition>
        <argsstring></argsstring>
        <name>max_bound_v</name>
        <qualifiedname>Bvr::TAABB::max_bound_v</qualifiedname>
        <initializer>= NMath::max_vec&lt;VectorType&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="140" column="36" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_bvr_1_1_t_a_a_b_b_1a74d0b2ba91a20114de6b9c47cccc9ed8" prot="public" static="no" mutable="no">
        <type>VectorType</type>
        <definition>VectorType Bvr::TAABB&lt; VectorType &gt;::min</definition>
        <argsstring></argsstring>
        <name>min</name>
        <qualifiedname>Bvr::TAABB::min</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="164" column="27" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_bvr_1_1_t_a_a_b_b_1ac5d805202a7e68f4eab1d2799ea63b64" prot="public" static="no" mutable="no">
        <type>VectorType</type>
        <definition>VectorType Bvr::TAABB&lt; VectorType &gt;::max</definition>
        <argsstring></argsstring>
        <name>max</name>
        <qualifiedname>Bvr::TAABB::max</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="165" column="27" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="165" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_bvr_1_1_t_a_a_b_b_1a5ebd35eb0d66e94c41072745228545ea" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr Bvr::TAABB&lt; VectorType &gt;::TAABB</definition>
        <argsstring>()</argsstring>
        <name>TAABB</name>
        <qualifiedname>Bvr::TAABB::TAABB</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="142" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="142" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_t_a_a_b_b_1a1b2fd9e597d17fb9dca53d6ab2e7566c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr Bvr::TAABB&lt; VectorType &gt;::TAABB</definition>
        <argsstring>(const VectorType &amp;origin, const VectorType &amp;halfExtend)</argsstring>
        <name>TAABB</name>
        <qualifiedname>Bvr::TAABB::TAABB</qualifiedname>
        <param>
          <type>const VectorType &amp;</type>
          <declname>origin</declname>
        </param>
        <param>
          <type>const VectorType &amp;</type>
          <declname>halfExtend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="144" column="15" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="144" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_t_a_a_b_b_1a6d8857b07565527fec6c9b70a06fe533" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void Bvr::TAABB&lt; VectorType &gt;::Reset</definition>
        <argsstring>()</argsstring>
        <name>Reset</name>
        <qualifiedname>Bvr::TAABB::Reset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="167" column="27" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="167" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_t_a_a_b_b_1aed2b8b374102fcd6d5cd8e33b42bc2cf" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool Bvr::TAABB&lt; VectorType &gt;::IsReset</definition>
        <argsstring>() const</argsstring>
        <name>IsReset</name>
        <qualifiedname>Bvr::TAABB::IsReset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="172" column="27" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="172" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_t_a_a_b_b_1ae97d7d1d9b8653ceb2bc817e435bde99" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool Bvr::TAABB&lt; VectorType &gt;::IsZeroArea</definition>
        <argsstring>() const</argsstring>
        <name>IsZeroArea</name>
        <qualifiedname>Bvr::TAABB::IsZeroArea</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="177" column="29" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="177" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_t_a_a_b_b_1ad9acb605ed106b924a0984d72444a6bb" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_bvr_1_1_t_a_a_b_b" kindref="compound">TAABB</ref> &amp;</type>
        <definition>constexpr TAABB &amp; Bvr::TAABB&lt; VectorType &gt;::Add</definition>
        <argsstring>(const VectorType &amp;rhs)</argsstring>
        <name>Add</name>
        <qualifiedname>Bvr::TAABB::Add</qualifiedname>
        <param>
          <type>const VectorType &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="179" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="179" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_t_a_a_b_b_1ae1c0622d1a5e7600e6b757c7c3c610c2" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_bvr_1_1_t_a_a_b_b" kindref="compound">TAABB</ref> &amp;</type>
        <definition>constexpr TAABB &amp; Bvr::TAABB&lt; VectorType &gt;::Add</definition>
        <argsstring>(const TAABB &amp;rhs)</argsstring>
        <name>Add</name>
        <qualifiedname>Bvr::TAABB::Add</qualifiedname>
        <param>
          <type>const <ref refid="struct_bvr_1_1_t_a_a_b_b" kindref="compound">TAABB</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="186" column="28" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="186" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_t_a_a_b_b_1a960d778338e558f7e61096d2c392e4fe" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr VectorType</type>
        <definition>constexpr VectorType Bvr::TAABB&lt; VectorType &gt;::GetOrigin</definition>
        <argsstring>() const</argsstring>
        <name>GetOrigin</name>
        <qualifiedname>Bvr::TAABB::GetOrigin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="193" column="33" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="193" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_t_a_a_b_b_1a600d9187444331a035b5061e250b74b6" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr VectorType</type>
        <definition>constexpr VectorType Bvr::TAABB&lt; VectorType &gt;::GetExtend</definition>
        <argsstring>() const</argsstring>
        <name>GetExtend</name>
        <qualifiedname>Bvr::TAABB::GetExtend</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="195" column="33" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="195" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_t_a_a_b_b_1a9f7dd1215cf1a00dfa790c01747026aa" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr VectorType</type>
        <definition>constexpr VectorType Bvr::TAABB&lt; VectorType &gt;::GetSize</definition>
        <argsstring>() const</argsstring>
        <name>GetSize</name>
        <qualifiedname>Bvr::TAABB::GetSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="199" column="33" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="199" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_t_a_a_b_b_1a1a2c7031522e15c3758adb8a1b6deebb" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_bvr_1_1_t_a_a_b_b" kindref="compound">TAABB</ref></type>
        <definition>constexpr TAABB Bvr::TAABB&lt; VectorType &gt;::Transform</definition>
        <argsstring>(const TMatMulType &amp;M) const</argsstring>
        <name>Transform</name>
        <qualifiedname>Bvr::TAABB::Transform</qualifiedname>
        <param>
          <type>const TMatMulType &amp;</type>
          <declname>M</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="201" column="29" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="201" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_t_a_a_b_b_1aa518e58937da205e2e2288718dbb6930" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_bvr_1_1_t_a_a_b_b" kindref="compound">TAABB</ref></type>
        <definition>constexpr TAABB Bvr::TAABB&lt; VectorType &gt;::Translate</definition>
        <argsstring>(const VectorType &amp;t) const</argsstring>
        <name>Translate</name>
        <qualifiedname>Bvr::TAABB::Translate</qualifiedname>
        <param>
          <type>const VectorType &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="211" column="29" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="211" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_t_a_a_b_b_1ae1a128ab03e2e263c15d1b3e603c0e3b" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr EVisibilityResult</type>
        <definition>constexpr EVisibilityResult Bvr::TAABB&lt; VectorType &gt;::Intersects</definition>
        <argsstring>(const TAABB &amp;rhs) const</argsstring>
        <name>Intersects</name>
        <qualifiedname>Bvr::TAABB::Intersects</qualifiedname>
        <param>
          <type>const <ref refid="struct_bvr_1_1_t_a_a_b_b" kindref="compound">TAABB</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="218" column="40" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="218" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_t_a_a_b_b_1aeea75d8dbd1a0cecc06a43baffdd7def" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool Bvr::TAABB&lt; VectorType &gt;::IsPointInside</definition>
        <argsstring>(const VectorType &amp;point) const</argsstring>
        <name>IsPointInside</name>
        <qualifiedname>Bvr::TAABB::IsPointInside</qualifiedname>
        <param>
          <type>const VectorType &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="235" column="27" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="235" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_t_a_a_b_b_1a5e25e89f0faf78dd9922fc0ca1316ce5" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool Bvr::TAABB&lt; VectorType &gt;::operator==</definition>
        <argsstring>(const TAABB &amp;rhs) const</argsstring>
        <name>operator==</name>
        <qualifiedname>Bvr::TAABB::operator==</qualifiedname>
        <param>
          <type>const <ref refid="struct_bvr_1_1_t_a_a_b_b" kindref="compound">TAABB</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="244" column="20" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="244" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_t_a_a_b_b_1a9db3eb925d8ed96d5273ebd6cd890034" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto Bvr::TAABB&lt; VectorType &gt;::GetVertices</definition>
        <argsstring>() const</argsstring>
        <name>GetVertices</name>
        <qualifiedname>Bvr::TAABB::GetVertices</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="248" column="27" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="248" bodyend="254"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_bvr_1_1_t_a_a_b_b_1a229eca2ceb105cc28756e9c206675d99" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_bvr_1_1_t_a_a_b_b" kindref="compound">TAABB</ref></type>
        <definition>static constexpr TAABB Bvr::TAABB&lt; VectorType &gt;::Zero</definition>
        <argsstring>()</argsstring>
        <name>Zero</name>
        <qualifiedname>Bvr::TAABB::Zero</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="149" column="35" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="149" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_t_a_a_b_b_1a0a428b4d235ef2657aef8ada69cd1d59" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_bvr_1_1_t_a_a_b_b" kindref="compound">TAABB</ref></type>
        <definition>static constexpr TAABB Bvr::TAABB&lt; VectorType &gt;::FromMinMax</definition>
        <argsstring>(const VectorType &amp;mi, const VectorType &amp;ma)</argsstring>
        <name>FromMinMax</name>
        <qualifiedname>Bvr::TAABB::FromMinMax</qualifiedname>
        <param>
          <type>const VectorType &amp;</type>
          <declname>mi</declname>
        </param>
        <param>
          <type>const VectorType &amp;</type>
          <declname>ma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="156" column="35" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="156" bodyend="162"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="struct_bvr_1_1_t_a_a_b_b_1aff9b04ac40286bb7431df519e521c058" prot="private" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto Bvr::TAABB&lt; VectorType &gt;::GetCorners2D</definition>
        <argsstring>() const</argsstring>
        <name>GetCorners2D</name>
        <qualifiedname>Bvr::TAABB::GetCorners2D</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="257" column="27" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="257" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="struct_bvr_1_1_t_a_a_b_b_1ac0d5e366116306726899926c6bd3175d" prot="private" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto Bvr::TAABB&lt; VectorType &gt;::GetCorners3D</definition>
        <argsstring>() const</argsstring>
        <name>GetCorners3D</name>
        <qualifiedname>Bvr::TAABB::GetCorners3D</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="267" column="27" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="267" bodyend="282"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" line="135" column="12" bodyfile="/home/runner/work/BeaverEngine/BeaverEngine/Beaver/Code/BvrMath/BvrMath.hpp" bodystart="135" bodyend="283"/>
    <listofallmembers>
      <member refid="struct_bvr_1_1_t_a_a_b_b_1ad9acb605ed106b924a0984d72444a6bb" prot="public" virt="non-virtual"><scope>Bvr::TAABB</scope><name>Add</name></member>
      <member refid="struct_bvr_1_1_t_a_a_b_b_1ae1c0622d1a5e7600e6b757c7c3c610c2" prot="public" virt="non-virtual"><scope>Bvr::TAABB</scope><name>Add</name></member>
      <member refid="struct_bvr_1_1_t_a_a_b_b_1a0a428b4d235ef2657aef8ada69cd1d59" prot="public" virt="non-virtual"><scope>Bvr::TAABB</scope><name>FromMinMax</name></member>
      <member refid="struct_bvr_1_1_t_a_a_b_b_1aff9b04ac40286bb7431df519e521c058" prot="private" virt="non-virtual"><scope>Bvr::TAABB</scope><name>GetCorners2D</name></member>
      <member refid="struct_bvr_1_1_t_a_a_b_b_1ac0d5e366116306726899926c6bd3175d" prot="private" virt="non-virtual"><scope>Bvr::TAABB</scope><name>GetCorners3D</name></member>
      <member refid="struct_bvr_1_1_t_a_a_b_b_1a600d9187444331a035b5061e250b74b6" prot="public" virt="non-virtual"><scope>Bvr::TAABB</scope><name>GetExtend</name></member>
      <member refid="struct_bvr_1_1_t_a_a_b_b_1a960d778338e558f7e61096d2c392e4fe" prot="public" virt="non-virtual"><scope>Bvr::TAABB</scope><name>GetOrigin</name></member>
      <member refid="struct_bvr_1_1_t_a_a_b_b_1a9f7dd1215cf1a00dfa790c01747026aa" prot="public" virt="non-virtual"><scope>Bvr::TAABB</scope><name>GetSize</name></member>
      <member refid="struct_bvr_1_1_t_a_a_b_b_1a9db3eb925d8ed96d5273ebd6cd890034" prot="public" virt="non-virtual"><scope>Bvr::TAABB</scope><name>GetVertices</name></member>
      <member refid="struct_bvr_1_1_t_a_a_b_b_1ae1a128ab03e2e263c15d1b3e603c0e3b" prot="public" virt="non-virtual"><scope>Bvr::TAABB</scope><name>Intersects</name></member>
      <member refid="struct_bvr_1_1_t_a_a_b_b_1aeea75d8dbd1a0cecc06a43baffdd7def" prot="public" virt="non-virtual"><scope>Bvr::TAABB</scope><name>IsPointInside</name></member>
      <member refid="struct_bvr_1_1_t_a_a_b_b_1aed2b8b374102fcd6d5cd8e33b42bc2cf" prot="public" virt="non-virtual"><scope>Bvr::TAABB</scope><name>IsReset</name></member>
      <member refid="struct_bvr_1_1_t_a_a_b_b_1ae97d7d1d9b8653ceb2bc817e435bde99" prot="public" virt="non-virtual"><scope>Bvr::TAABB</scope><name>IsZeroArea</name></member>
      <member refid="struct_bvr_1_1_t_a_a_b_b_1ac5d805202a7e68f4eab1d2799ea63b64" prot="public" virt="non-virtual"><scope>Bvr::TAABB</scope><name>max</name></member>
      <member refid="struct_bvr_1_1_t_a_a_b_b_1ac9d76b97bd4b06b4ad0748cbac751c73" prot="public" virt="non-virtual"><scope>Bvr::TAABB</scope><name>max_bound_v</name></member>
      <member refid="struct_bvr_1_1_t_a_a_b_b_1a74d0b2ba91a20114de6b9c47cccc9ed8" prot="public" virt="non-virtual"><scope>Bvr::TAABB</scope><name>min</name></member>
      <member refid="struct_bvr_1_1_t_a_a_b_b_1a5e25e89f0faf78dd9922fc0ca1316ce5" prot="public" virt="non-virtual"><scope>Bvr::TAABB</scope><name>operator==</name></member>
      <member refid="struct_bvr_1_1_t_a_a_b_b_1a0a228b7b6b3d78e0f27af3068b152601" prot="public" virt="non-virtual"><scope>Bvr::TAABB</scope><name>PrimitiveType</name></member>
      <member refid="struct_bvr_1_1_t_a_a_b_b_1a6d8857b07565527fec6c9b70a06fe533" prot="public" virt="non-virtual"><scope>Bvr::TAABB</scope><name>Reset</name></member>
      <member refid="struct_bvr_1_1_t_a_a_b_b_1a5ebd35eb0d66e94c41072745228545ea" prot="public" virt="non-virtual"><scope>Bvr::TAABB</scope><name>TAABB</name></member>
      <member refid="struct_bvr_1_1_t_a_a_b_b_1a1b2fd9e597d17fb9dca53d6ab2e7566c" prot="public" virt="non-virtual"><scope>Bvr::TAABB</scope><name>TAABB</name></member>
      <member refid="struct_bvr_1_1_t_a_a_b_b_1a44faf37bc69a6b6cdbc11c5e289dc83a" prot="public" virt="non-virtual"><scope>Bvr::TAABB</scope><name>TMatMulType</name></member>
      <member refid="struct_bvr_1_1_t_a_a_b_b_1a1a2c7031522e15c3758adb8a1b6deebb" prot="public" virt="non-virtual"><scope>Bvr::TAABB</scope><name>Transform</name></member>
      <member refid="struct_bvr_1_1_t_a_a_b_b_1aa518e58937da205e2e2288718dbb6930" prot="public" virt="non-virtual"><scope>Bvr::TAABB</scope><name>Translate</name></member>
      <member refid="struct_bvr_1_1_t_a_a_b_b_1a55b35cb1692d05fcead89ba95f8d0899" prot="public" virt="non-virtual"><scope>Bvr::TAABB</scope><name>TVecMulType</name></member>
      <member refid="struct_bvr_1_1_t_a_a_b_b_1af98e4e8454f6aef0575e816508258f11" prot="public" virt="non-virtual"><scope>Bvr::TAABB</scope><name>VectorLen</name></member>
      <member refid="struct_bvr_1_1_t_a_a_b_b_1a229eca2ceb105cc28756e9c206675d99" prot="public" virt="non-virtual"><scope>Bvr::TAABB</scope><name>Zero</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
